        break;
              $async$next.push(7);
              // goto finally
              $async$goto = 6;
              break;
            case 5:
              // uncaught
              $async$next = [2];
            case 6:
              // finally
              $async$handler = 2;
              $async$self._async_environment$_inSemiGlobalScope = wasInSemiGlobalScope;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 7:
              // after finally
            case 4:
              // join
              semiGlobal = semiGlobal && $async$self._async_environment$_inSemiGlobalScope;
              wasInSemiGlobalScope0 = $async$self._async_environment$_inSemiGlobalScope;
              $async$self._async_environment$_inSemiGlobalScope = semiGlobal;
              t1 = $async$self._async_environment$_variables;
              t2 = type$.legacy_String;
              C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value));
              t3 = $async$self._async_environment$_variableNodes;
              if (t3 != null)
                C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode));
              t3 = $async$self._async_environment$_functions;
              t4 = type$.legacy_AsyncCallable;
              C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
              t5 = $async$self._async_environment$_mixins;
              C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
              t4 = $async$self._async_environment$_nestedForwardedModules;
              if (t4 != null)
                C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable));
              $async$handler = 9;
              $async$goto = 12;
              return P._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);
            case 12:
              // returning from await.
              t2 = $async$result;
              $async$returnValue = t2;
              $async$next = [1];
              // goto finally
              $async$goto = 10;
              break;
              $async$next.push(11);
              // goto finally
              $async$goto = 10;
              break;
            case 9:
              // uncaught
              $async$next = [2];
            case 10:
              // finally
              $async$handler = 2;
              $async$self._async_environment$_inSemiGlobalScope = wasInSemiGlobalScope0;
              $async$self._async_environment$_lastVariableIndex = $async$self._async_environment$_lastVariableName = null;
              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = $async$self._async_environment$_variableIndices; t1.moveNext$0();) {
                $name = t1.get$current(t1);
                t2.remove$1(0, $name);
              }
              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = $async$self._async_environment$_functionIndices; t1.moveNext$0();) {
                name0 = t1.get$current(t1);
                t2.remove$1(0, name0);
              }
              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = $async$self._async_environment$_mixinIndices; t1.moveNext$0();) {
                name1 = t1.get$current(t1);
                t2.remove$1(0, name1);
              }
              t1 = $async$self._async_environment$_nestedForwardedModules;
              if (t1 != null)
                C.JSArray_methods.removeLast$0(t1);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 11:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$scope$1$3$semiGlobal$when, $async$completer);
    },
    toImplicitConfiguration$0: function() {
      var t2, t3, t4, t5, i, values, nodes, t6, t7,
        t1 = type$.legacy_String,
        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue);
      for (t2 = this._async_environment$_variables, t3 = this._async_environment$_variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode, i = 0; i < t2.length; ++i) {
        values = t2[i];
        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];
        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {
          t7 = t6.get$current(t6);
          configuration.$indexSet(0, t7, new Z.ConfiguredValue(values.$index(0, t7), null, nodes.$index(0, t7)));
        }
      }
      return new A.Configuration(configuration, null, true);
    },
    _async_environment$_getModule$1: function(namespace) {
      var module = this._async_environment$_modules.$index(0, namespace);
      if (module != null)
        return module;
      throw H.wrapException(E.SassScriptException$('There is no module with the namespace "' + namespace + '".'));
    },
    _async_environment$_fromOneModule$1$3: function($name, type, callback) {
      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,
        t1 = this._async_environment$_nestedForwardedModules;
      if (t1 != null)
        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
          cur = t1.__internal$_current;
          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
            cur = t2.__internal$_current;
            value = callback.call$1(cur);
            if (value != null)
              return value;
          }
        }
      for (t1 = this._async_environment$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_AsyncCallable, value = null, identity = null; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        valueInModule = callback.call$1(t3);
        if (valueInModule == null)
          continue;
        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);
        if (identityFromModule.$eq(0, identity))
          continue;
        if (value != null) {
          t1 = "This " + type + string$.x20is_av;
          t2 = type + " use";
          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
          for (t4 = this._async_environment$_globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
            t5 = t4.get$current(t4);
            if (callback.call$1(t5.key) != null)
              t3.$indexSet(0, t5.value.get$span(), "includes " + type);
          }
          throw H.wrapException(E.MultiSpanSassScriptException$(t1, t2, t3));
        }
        identity = identityFromModule;
        value = valueInModule;
      }
      return value;
    },
    _async_environment$_fromOneModule$3: function($name, type, callback) {
      return this._async_environment$_fromOneModule$1$3($name, type, callback, type$.dynamic);
    }
  };
  Q.AsyncEnvironment_importForwards_closure.prototype = {
    call$1: function(module) {
      var t1 = module.get$variables();
      return t1.get$keys(t1);
    },
    $signature: 88
  };
  Q.AsyncEnvironment_importForwards_closure0.prototype = {
    call$1: function(module) {
      var t1 = module.get$functions(module);
      return t1.get$keys(t1);
    },
    $signature: 88
  };
  Q.AsyncEnvironment_importForwards_closure1.prototype = {
    call$1: function(module) {
      var t1 = module.get$mixins();
      return t1.get$keys(t1);
    },
    $signature: 88
  };
  Q.AsyncEnvironment_importForwards_closure2.prototype = {
    call$1: function(_) {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable);
    },
    $signature: 424
  };
  Q.AsyncEnvironment__getVariableFromGlobalModule_closure.prototype = {
    call$1: function(module) {
      return module.get$variables().$index(0, this.name);
    },
    $signature: 423
  };
  Q.AsyncEnvironment_setVariable_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._async_environment$_lastVariableName = this.name;
      return t1._async_environment$_lastVariableIndex = 0;
    },
    $signature: 11
  };
  Q.AsyncEnvironment_setVariable_closure0.prototype = {
    call$1: function(module) {
      return module.get$variables().containsKey$1(this.name) ? module : null;
    },
    $signature: 140
  };
  Q.AsyncEnvironment_setVariable_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._async_environment$_variableIndex$1(this.name);
      return t2 == null ? t1._async_environment$_variables.length - 1 : t2;
    },
    $signature: 11
  };
  Q.AsyncEnvironment__getFunctionFromGlobalModule_closure.prototype = {
    call$1: function(module) {
      return module.get$functions(module).$index(0, this.name);
    },
    $signature: 145
  };
  Q.AsyncEnvironment__getMixinFromGlobalModule_closure.prototype = {
    call$1: function(module) {
      return module.get$mixins().$index(0, this.name);
    },
    $signature: 145
  };
  Q._EnvironmentModule0.prototype = {
    get$url: function() {
      return this.css.get$span().file.url;
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      var t1, t2,
        module = this._async_environment$_modulesByVariable.$index(0, $name);
      if (module != null) {
        module.setVariable$3($name, value, nodeWithSpan);
        return;
      }
      t1 = this._async_environment$_environment;
      t2 = t1._async_environment$_variables;
      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))
        throw H.wrapException(E.SassScriptException$("Undefined variable."));
      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);
      t1 = t1._async_environment$_variableNodes;
      if (t1 != null)
        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);
      return;
    },
    variableIdentity$1: function($name) {
      var module = this._async_environment$_modulesByVariable.$index(0, $name);
      return module == null ? this : module.variableIdentity$1($name);
    },
    cloneCss$0: function() {
      var newCssAndExtender, _this = this,
        t1 = _this.css;
      if (J.get$isEmpty$asx(t1.get$children(t1)))
        return _this;
      newCssAndExtender = V.cloneCssStylesheet(t1, _this.extender);
      return Q._EnvironmentModule$_0(_this._async_environment$_environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._async_environment$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);
    },
    toString$0: function(_) {
      var t1 = this.css;
      if (t1.get$span().file.url == null)
        t1 = "<unknown url>";
      else {
        t1 = t1.get$span().file;
        t1 = $.$get$context().prettyUri$1(t1.url);
      }
      return t1;
    },
    $isModule: 1,
    get$upstream: function() {
      return this.upstream;
    },
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    },
    get$extender: function() {
      return this.extender;
    },
    get$css: function(receiver) {
      return this.css;
    },
    get$transitivelyContainsCss: function() {
      return this.transitivelyContainsCss;
    },
    get$transitivelyContainsExtensions: function() {
      return this.transitivelyContainsExtensions;
    }
  };
  Q._EnvironmentModule__EnvironmentModule_closure5.prototype = {
    call$1: function(module) {
      return module.get$variables();
    },
    $signature: 418
  };
  Q._EnvironmentModule__EnvironmentModule_closure6.prototype = {
    call$1: function(module) {
      return module.get$variableNodes();
    },
    $signature: 410
  };
  Q._EnvironmentModule__EnvironmentModule_closure7.prototype = {
    call$1: function(module) {
      return module.get$functions(module);
    },
    $signature: 159
  };
  Q._EnvironmentModule__EnvironmentModule_closure8.prototype = {
    call$1: function(module) {
      return module.get$mixins();
    },
    $signature: 159
  };
  Q._EnvironmentModule__EnvironmentModule_closure9.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 94
  };
  Q._EnvironmentModule__EnvironmentModule_closure10.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsExtensions();
    },
    $signature: 94
  };
  O.AsyncImportCache.prototype = {
    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      return this.canonicalize$body$AsyncImportCache(url, baseImporter, baseUrl, forImport);
    },
    canonicalize$body$AsyncImportCache: function(url, baseImporter, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2),
        $async$returnValue, $async$self = this, resolvedUrl, canonicalUrl;
      var $async$canonicalize$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = baseImporter != null ? 3 : 4;
              break;
            case 3:
              // then
              resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;
              $async$goto = 5;
              return P._asyncAwait($async$self._async_import_cache$_canonicalize$3(baseImporter, resolvedUrl, forImport), $async$canonicalize$4$baseImporter$baseUrl$forImport);
            case 5:
              // returning from await.
              canonicalUrl = $async$result;
              if (canonicalUrl != null) {
                $async$returnValue = new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri);
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // join
              $async$goto = 6;
              return P._asyncAwait(B.putIfAbsentAsync($async$self._async_import_cache$_canonicalizeCache, new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new O.AsyncImportCache_canonicalize_closure($async$self, url, forImport), type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2), $async$canonicalize$4$baseImporter$baseUrl$forImport);
            case 6:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$canonicalize$4$baseImporter$baseUrl$forImport, $async$completer);
    },
    _async_import_cache$_canonicalize$3: function(importer, url, forImport) {
      return this._canonicalize$body$AsyncImportCache(importer, url, forImport);
    },
    _canonicalize$body$AsyncImportCache: function(importer, url, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Uri),
        $async$returnValue, $async$self = this, result;
      var $async$_async_import_cache$_canonicalize$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(forImport ? B.inImportRule(new O.AsyncImportCache__canonicalize_closure(importer, url)) : importer.canonicalize$1(url), $async$_async_import_cache$_canonicalize$3);
            case 3:
              // returning from await.
              result = $async$result;
              if ((result == null ? null : result.get$scheme()) === "")
                $async$self._async_import_cache$_logger.warn$2$deprecation(0, "Importer " + H.S(importer) + " canonicalized " + url.toString$0(0) + " to " + H.S(result) + string$.x2e_Rela, true);
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_import_cache$_canonicalize$3, $async$completer);
    },
    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      return this.import$body$AsyncImportCache(url, baseImporter, baseUrl, forImport);
    },
    import$body$AsyncImportCache: function(url, baseImporter, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet),
        $async$returnValue, $async$self = this, t1, stylesheet, tuple;
      var $async$import$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport), $async$import$4$baseImporter$baseUrl$forImport);
            case 3:
              // returning from await.
              tuple = $async$result;
              if (tuple == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = tuple.item1;
              $async$goto = 4;
              return P._asyncAwait($async$self.importCanonical$3(t1, tuple.item2, tuple.item3), $async$import$4$baseImporter$baseUrl$forImport);
            case 4:
              // returning from await.
              stylesheet = $async$result;
              if (stylesheet == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$import$4$baseImporter$baseUrl$forImport, $async$completer);
    },
    importCanonical$3: function(importer, canonicalUrl, originalUrl) {
      return this.importCanonical$body$AsyncImportCache(importer, canonicalUrl, originalUrl);
    },
    importCanonical$body$AsyncImportCache: function(importer, canonicalUrl, originalUrl) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet_2),
        $async$returnValue, $async$self = this;
      var $async$importCanonical$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(B.putIfAbsentAsync($async$self._async_import_cache$_importCache, canonicalUrl, new O.AsyncImportCache_importCanonical_closure($async$self, importer, canonicalUrl, originalUrl), type$.legacy_Uri, type$.legacy_Stylesheet_2), $async$importCanonical$3);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$importCanonical$3, $async$completer);
    },
    humanize$1: function(canonicalUrl) {
      var t2, url,
        t1 = this._async_import_cache$_canonicalizeCache;
      t1 = t1.get$values(t1);
      t2 = H._instanceType(t1);
      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new O.AsyncImportCache_humanize_closure(canonicalUrl), t2._eval$1("WhereIterable<Iterable.E>")), new O.AsyncImportCache_humanize_closure0(), t2._eval$1("MappedIterable<Iterable.E,Uri*>")), new O.AsyncImportCache_humanize_closure1(), type$.legacy_Uri, type$.dynamic);
      if (url == null)
        return canonicalUrl;
      t1 = $.$get$url();
      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());
    }
  };
  O.AsyncImportCache_canonicalize_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, t5, _i, importer, canonicalUrl;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this, t2 = t1._async_import_cache$_importers, t3 = t2.length, t4 = $async$self.url, t5 = $async$self.forImport, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              importer = t2[_i];
              $async$goto = 6;
              return P._asyncAwait(t1._async_import_cache$_canonicalize$3(importer, t4, t5), $async$call$0);
            case 6:
              // returning from await.
              canonicalUrl = $async$result;
              if (canonicalUrl != null) {
                $async$returnValue = new S.Tuple3(importer, canonicalUrl, t4, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri);
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 404
  };
  O.AsyncImportCache__canonicalize_closure.prototype = {
    call$0: function() {
      return this.importer.canonicalize$1(this.url);
    },
    $signature: 175
  };
  O.AsyncImportCache_importCanonical_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet_2),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, t1, result;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.canonicalUrl;
              $async$goto = 3;
              return P._asyncAwait($async$self.importer.load$1(0, t1), $async$call$0);
            case 3:
              // returning from await.
              result = $async$result;
              if (result == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = $async$self.$this;
              t2._async_import_cache$_resultsCache.$indexSet(0, t1, result);
              t3 = result.contents;
              t4 = result.syntax;
              t5 = $async$self.originalUrl;
              t1 = t5 == null ? t1 : t5.resolveUri$1(t1);
              $async$returnValue = V.Stylesheet_Stylesheet$parse(t3, t4, t2._async_import_cache$_logger, t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 402
  };
  O.AsyncImportCache_humanize_closure.prototype = {
    call$1: function(tuple) {
      var t1 = tuple == null ? null : tuple.item2;
      return J.$eq$(t1, this.canonicalUrl);
    },
    $signature: 390
  };
  O.AsyncImportCache_humanize_closure0.prototype = {
    call$1: function(tuple) {
      return tuple.item3;
    },
    $signature: 387
  };
  O.AsyncImportCache_humanize_closure1.prototype = {
    call$1: function(url) {
      return J.get$length$asx(J.get$path$x(url));
    },
    $signature: 43
  };
  S.AsyncBuiltInCallable.prototype = {
    callbackFor$2: function(positional, names) {
      return new S.Tuple2(this._async_built_in$_arguments, this._async_built_in$_callback, type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_FutureOr_legacy_Value_Function_legacy_List_legacy_Value);
    },
    $isAsyncCallable: 1,
    get$name: function(receiver) {
      return this.name;
    }
  };
  S.AsyncBuiltInCallable$mixin_closure.prototype = {
    call$1: function($arguments) {
      return this.$call$body$AsyncBuiltInCallable$mixin_closure($arguments);
    },
    $call$body$AsyncBuiltInCallable$mixin_closure: function($arguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.callback.call$1($arguments), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 126
  };
  Q.BuiltInCallable.prototype = {
    callbackFor$2: function(positional, names) {
      var t1, t2, fuzzyMatch, minMismatchDistance, _i, overload, t3, mismatchDistance, t4;
      for (t1 = this._overloads, t2 = t1.length, fuzzyMatch = null, minMismatchDistance = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        overload = t1[_i];
        t3 = overload.item1;
        if (t3.matches$2(positional, names))
          return overload;
        mismatchDistance = t3.$arguments.length - positional;
        if (minMismatchDistance != null) {
          t3 = Math.abs(mismatchDistance);
          t4 = Math.abs(minMismatchDistance);
          if (t3 > t4)
            continue;
          if (t3 === t4 && mismatchDistance < 0)
            continue;
        }
        minMismatchDistance = mismatchDistance;
        fuzzyMatch = overload;
      }
      return fuzzyMatch;
    },
    withName$1: function($name) {
      return new Q.BuiltInCallable($name, this._overloads);
    },
    $isCallable: 1,
    $isAsyncCallable: 1,
    $isAsyncBuiltInCallable: 1,
    get$name: function(receiver) {
      return this.name;
    }
  };
  Q.BuiltInCallable$mixin_closure.prototype = {
    call$1: function($arguments) {
      this.callback.call$1($arguments);
      return null;
    },
    $signature: 103
  };
  L.PlainCssCallable.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof L.PlainCssCallable && this.name == other.name;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.name);
    },
    $isCallable: 1,
    $isAsyncCallable: 1,
    get$name: function(receiver) {
      return this.name;
    }
  };
  E.UserDefinedCallable.prototype = {
    get$name: function(_) {
      return this.declaration.name;
    },
    $isCallable: 1,
    $isAsyncCallable: 1
  };
  U._compileStylesheet_closure.prototype = {
    call$1: function(url) {
      var t1, t2, _null = null;
      if (url === "")
        t1 = P.Uri_Uri$dataFromString(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, _null), 0, _null), C.C_Utf8Codec, _null).get$_text();
      else {
        t1 = P.Uri_parse(url);
        t2 = this.importCache._resultsCache.$index(0, t1);
        t2 = t2 == null ? _null : t2.get$sourceMapUrl();
        t1 = (t2 == null ? t1 : t2).toString$0(0);
      }
      return t1;
    },
    $signature: 4
  };
  A.Configuration.prototype = {
    throughForward$1: function($forward) {
      var t1, t2,
        newValues = this._values;
      if (newValues.get$isEmpty(newValues))
        return C.Configuration_Map_empty_null_true;
      t1 = $forward.prefix;
      if (t1 != null)
        newValues = new R.UnprefixedMapView(newValues, t1, type$.UnprefixedMapView_legacy_ConfiguredValue);
      t1 = $forward.shownVariables;
      if (t1 != null)
        newValues = new K.LimitedMapView(newValues, t1._base.intersection$1(new M.MapKeySet(newValues, type$.MapKeySet_legacy_Object)), type$.LimitedMapView_of_legacy_String_and_legacy_ConfiguredValue);
      else {
        t1 = $forward.hiddenVariables;
        if (t1 == null)
          t2 = null;
        else {
          t2 = t1._base;
          t2 = t2.get$isNotEmpty(t2);
        }
        if (t2 === true)
          newValues = K.LimitedMapView$blocklist(newValues, t1, type$.legacy_String, type$.legacy_ConfiguredValue);
      }
      return this.isImplicit ? new A.Configuration(newValues, null, true) : new A.Configuration(newValues, this.nodeWithSpan, false);
    }
  };
  Z.ConfiguredValue.prototype = {};
  O.Environment.prototype = {
    closure$0: function() {
      var t5, t6, t7, _this = this,
        t1 = _this._forwardedModules,
        t2 = _this._forwardedModuleNodes,
        t3 = _this._nestedForwardedModules,
        t4 = _this._variables;
      t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));
      t5 = _this._variableNodes;
      if (t5 == null)
        t5 = null;
      else
        t5 = H.setRuntimeTypeInfo(t5.slice(0), H._arrayInstanceType(t5));
      t6 = _this._functions;
      t6 = H.setRuntimeTypeInfo(t6.slice(0), H._arrayInstanceType(t6));
      t7 = _this._mixins;
      t7 = H.setRuntimeTypeInfo(t7.slice(0), H._arrayInstanceType(t7));
      return O.Environment$_(_this._environment$_modules, _this._namespaceNodes, _this._globalModules, _this._globalModuleNodes, t1, t2, t3, _this._allModules, t4, t5, t6, t7, _this._content);
    },
    addModule$3$namespace: function(module, nodeWithSpan, namespace) {
      var t1, t2, _this = this;
      if (namespace == null) {
        _this._globalModules.add$1(0, module);
        _this._globalModuleNodes.$indexSet(0, module, nodeWithSpan);
        _this._allModules.push(module);
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.get$first(_this._variables))); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          if (module.get$variables().containsKey$1(t2))
            throw H.wrapException(E.SassScriptException$(string$.This_ma + H.S(t2) + '".'));
        }
      } else {
        t1 = _this._environment$_modules;
        if (t1.containsKey$1(namespace))
          throw H.wrapException(E.MultiSpanSassScriptException$(string$.There_ + namespace + '".', "new @use", P.LinkedHashMap_LinkedHashMap$_literal([_this._namespaceNodes.$index(0, namespace).get$span(), "original @use"], type$.legacy_FileSpan, type$.legacy_String)));
        t1.$indexSet(0, namespace, module);
        _this._namespaceNodes.$indexSet(0, namespace, nodeWithSpan);
        _this._allModules.push(module);
      }
    },
    forwardModule$2: function(module, rule) {
      var view, t1, t2, _this = this;
      if (_this._forwardedModules == null)
        _this._forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable);
      if (_this._forwardedModuleNodes == null)
        _this._forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable, type$.legacy_AstNode);
      view = R.ForwardedModuleView_ifNecessary(module, rule, type$.legacy_Callable);
      for (t1 = _this._forwardedModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {
        t2 = t1._collection$_current;
        _this._assertNoConflicts$6(view.get$variables(), t2.get$variables(), view, t2, "variable", rule);
        _this._assertNoConflicts$6(view.get$functions(view), t2.get$functions(t2), view, t2, "function", rule);
        _this._assertNoConflicts$6(view.get$mixins(), t2.get$mixins(), view, t2, "mixin", rule);
      }
      _this._allModules.push(module);
      _this._forwardedModules.add$1(0, view);
      _this._forwardedModuleNodes.$indexSet(0, view, rule);
    },
    _assertNoConflicts$6: function(newMembers, oldMembers, newModule, oldModule, type, newModuleNodeWithSpan) {
      var larger, smaller, t1, t2, $name;
      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {
        larger = oldMembers;
        smaller = newMembers;
      } else {
        larger = newMembers;
        smaller = oldMembers;
      }
      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === "variable"; t1.moveNext$0();) {
        $name = t1.get$current(t1);
        if (!larger.containsKey$1($name))
          continue;
        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))
          continue;
        if (t2)
          $name = "$" + H.S($name);
        throw H.wrapException(E.MultiSpanSassScriptException$("Two forwarded modules both define a " + type + " named " + H.S($name) + ".", "new @forward", P.LinkedHashMap_LinkedHashMap$_literal([this._forwardedModuleNodes.$index(0, oldModule).get$span(), "original @forward"], type$.legacy_FileSpan, type$.legacy_String)));
      }
    },
    importForwards$1: function(module) {
      var t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, t6, t7, _i, shadowed, t8, _this = this,
        t1 = module._environment,
        forwarded = t1._forwardedModules;
      if (forwarded == null)
        return;
      if (_this._forwardedModules != null) {
        t2 = P.LinkedHashSet_LinkedHashSet(type$.legacy_Module_legacy_Callable);
        for (t3 = P._LinkedHashSetIterator$(forwarded, forwarded._collection$_modifications), t4 = _this._globalModules; t3.moveNext$0();) {
          t5 = t3._collection$_current;
          if (!_this._forwardedModules.contains$1(0, t5) || !t4.contains$1(0, t5))
            t2.add$1(0, t5);
        }
        forwarded = t2;
      }
      if (_this._forwardedModules == null)
        _this._forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable);
      if (_this._forwardedModuleNodes == null)
        _this._forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable, type$.legacy_AstNode);
      t2 = H._instanceType(forwarded)._eval$1("ExpandIterable<1,String*>");
      t3 = t2._eval$1("Iterable.E");
      forwardedVariableNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure(), t2), t3);
      forwardedFunctionNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure0(), t2), t3);
      forwardedMixinNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure1(), t2), t3);
      t2 = _this._variables;
      t3 = t2.length;
      if (t3 === 1) {
        for (t3 = _this._globalModules, t4 = P.List_List$from(t3, true, H._instanceType(t3)._precomputed1), t5 = t4.length, t6 = type$.legacy_Callable, t7 = _this._globalModuleNodes, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
          module = t4[_i];
          shadowed = B.ShadowedModuleView_ifNecessary(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);
          if (shadowed != null) {
            t3.remove$1(0, module);
            t8 = shadowed.variables;
            if (t8.get$isEmpty(t8)) {
              t8 = shadowed.functions;
              if (t8.get$isEmpty(t8)) {
                t8 = shadowed.mixins;
                if (t8.get$isEmpty(t8)) {
                  t8 = shadowed._shadowed_view$_inner;
                  t8 = t8.get$css(t8);
                  t8 = J.get$isEmpty$asx(t8.get$children(t8));
                } else
                  t8 = false;
              } else
                t8 = false;
            } else
              t8 = false;
            if (!t8) {
              t3.add$1(0, shadowed);
              t7.$indexSet(0, shadowed, t7.remove$1(0, module));
            }
          }
        }
        t4 = _this._forwardedModules;
        t4.toString;
        t4 = P.List_List$from(t4, true, H._instanceType(t4)._precomputed1);
        t5 = t4.length;
        _i = 0;
        for (; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
          module = t4[_i];
          shadowed = B.ShadowedModuleView_ifNecessary(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);
          if (shadowed != null) {
            _this._forwardedModules.remove$1(0, module);
            t8 = shadowed.variables;
            if (t8.get$isEmpty(t8)) {
              t8 = shadowed.functions;
              if (t8.get$isEmpty(t8)) {
                t8 = shadowed.mixins;
                if (t8.get$isEmpty(t8)) {
                  t8 = shadowed._shadowed_view$_inner;
                  t8 = t8.get$css(t8);
                  t8 = J.get$isEmpty$asx(t8.get$children(t8));
                } else
                  t8 = false;
              } else
                t8 = false;
            } else
              t8 = false;
            if (!t8) {
              _this._forwardedModules.add$1(0, shadowed);
              t8 = _this._forwardedModuleNodes;
              t8.$indexSet(0, shadowed, t8.remove$1(0, module));
            }
          }
        }
        t3.addAll$1(0, forwarded);
        t7.addAll$1(0, t1._forwardedModuleNodes);
        _this._forwardedModules.addAll$1(0, forwarded);
        _this._forwardedModuleNodes.addAll$1(0, t1._forwardedModuleNodes);
      } else {
        t1 = _this._nestedForwardedModules;
        J.addAll$1$ax(C.JSArray_methods.get$last(t1 == null ? _this._nestedForwardedModules = P.List_List$generate(t3 - 1, new O.Environment_importForwards_closure2(), true, type$.legacy_List_legacy_Module_legacy_Callable) : t1), forwarded);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._variableNodes, t4 = t3 != null, t5 = _this._variableIndices; t1.moveNext$0();) {
        t6 = t1._collection$_current;
        t5.remove$1(0, t6);
        J.remove$1$ax(C.JSArray_methods.get$last(t2), t6);
        if (t4)
          J.remove$1$ax(C.JSArray_methods.get$last(t3), t6);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._functionIndices, t3 = _this._functions; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        t2.remove$1(0, t4);
        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._mixinIndices, t3 = _this._mixins; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        t2.remove$1(0, t4);
        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);
      }
    },
    getVariable$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._getModule$1(namespace).get$variables().$index(0, $name);
      if (_this._lastVariableName === $name) {
        t1 = J.$index$asx(_this._variables[_this._lastVariableIndex], $name);
        return t1 == null ? _this._getVariableFromGlobalModule$1($name) : t1;
      }
      t1 = _this._variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._lastVariableName = $name;
        _this._lastVariableIndex = index;
        t1 = J.$index$asx(_this._variables[index], $name);
        return t1 == null ? _this._getVariableFromGlobalModule$1($name) : t1;
      }
      index = _this._variableIndex$1($name);
      if (index == null)
        return _this._getVariableFromGlobalModule$1($name);
      _this._lastVariableName = $name;
      _this._lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._variables[index], $name);
      return t1 == null ? _this._getVariableFromGlobalModule$1($name) : t1;
    },
    getVariable$1: function($name) {
      return this.getVariable$2$namespace($name, null);
    },
    _getVariableFromGlobalModule$1: function($name) {
      return this._fromOneModule$3($name, "variable", new O.Environment__getVariableFromGlobalModule_closure($name));
    },
    getVariableNode$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._getModule$1(namespace).get$variableNodes().$index(0, $name);
      if (_this._lastVariableName === $name) {
        t1 = J.$index$asx(_this._variableNodes[_this._lastVariableIndex], $name);
        return t1 == null ? _this._getVariableNodeFromGlobalModule$1($name) : t1;
      }
      t1 = _this._variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._lastVariableName = $name;
        _this._lastVariableIndex = index;
        t1 = J.$index$asx(_this._variableNodes[index], $name);
        return t1 == null ? _this._getVariableNodeFromGlobalModule$1($name) : t1;
      }
      index = _this._variableIndex$1($name);
      if (index == null)
        return _this._getVariableNodeFromGlobalModule$1($name);
      _this._lastVariableName = $name;
      _this._lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._variableNodes[index], $name);
      return t1 == null ? _this._getVariableNodeFromGlobalModule$1($name) : t1;
    },
    _getVariableNodeFromGlobalModule$1: function($name) {
      var t1, value;
      for (t1 = this._globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {
        value = t1._collection$_current.get$variableNodes().$index(0, $name);
        if (value != null)
          return value;
      }
      return null;
    },
    globalVariableExists$2$namespace: function($name, namespace) {
      if (namespace != null)
        return this._getModule$1(namespace).get$variables().containsKey$1($name);
      if (C.JSArray_methods.get$first(this._variables).containsKey$1($name))
        return true;
      return this._getVariableFromGlobalModule$1($name) != null;
    },
    globalVariableExists$1: function($name) {
      return this.globalVariableExists$2$namespace($name, null);
    },
    _variableIndex$1: function($name) {
      var t1, i;
      for (t1 = this._variables, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    setVariable$5$global$namespace: function($name, value, nodeWithSpan, global, namespace) {
      var t1, moduleWithName, cur, t2, index, _this = this;
      if (namespace != null) {
        _this._getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);
        return;
      }
      if (global || _this._variables.length === 1) {
        _this._variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure(_this, $name));
        t1 = _this._variables;
        if (!C.JSArray_methods.get$first(t1).containsKey$1($name)) {
          moduleWithName = _this._fromOneModule$3($name, "variable", new O.Environment_setVariable_closure0($name));
          if (moduleWithName != null) {
            moduleWithName.setVariable$3($name, value, nodeWithSpan);
            return;
          }
        }
        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, value);
        t1 = _this._variableNodes;
        if (t1 != null)
          J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);
        return;
      }
      if (_this._nestedForwardedModules != null && !_this._variableIndices.containsKey$1($name) && _this._variableIndex$1($name) == null) {
        t1 = _this._nestedForwardedModules;
        t1.toString;
        t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
        t1 = new H.ListIterator(t1, t1.get$length(t1));
        for (; t1.moveNext$0();) {
          cur = t1.__internal$_current;
          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
            cur = t2.__internal$_current;
            if (cur.get$variables().containsKey$1($name)) {
              cur.setVariable$3($name, value, nodeWithSpan);
              return;
            }
          }
        }
      }
      index = _this._lastVariableName === $name ? _this._lastVariableIndex : _this._variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure1(_this, $name));
      if (!_this._inSemiGlobalScope && index === 0) {
        index = _this._variables.length - 1;
        _this._variableIndices.$indexSet(0, $name, index);
      }
      _this._lastVariableName = $name;
      _this._lastVariableIndex = index;
      J.$indexSet$ax(_this._variables[index], $name, value);
      t1 = _this._variableNodes;
      if (t1 != null)
        J.$indexSet$ax(t1[index], $name, nodeWithSpan);
    },
    setVariable$4$global: function($name, value, nodeWithSpan, global) {
      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);
    },
    setLocalVariable$3: function($name, value, nodeWithSpan) {
      var index, _this = this,
        t1 = _this._variables,
        t2 = t1.length;
      _this._lastVariableName = $name;
      index = _this._lastVariableIndex = t2 - 1;
      _this._variableIndices.$indexSet(0, $name, index);
      J.$indexSet$ax(t1[index], $name, value);
      t1 = _this._variableNodes;
      if (t1 != null)
        J.$indexSet$ax(t1[index], $name, nodeWithSpan);
    },
    getFunction$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null) {
        t1 = _this._getModule$1(namespace);
        return t1.get$functions(t1).$index(0, $name);
      }
      t1 = _this._functionIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._functions[index], $name);
        return t1 == null ? _this._getFunctionFromGlobalModule$1($name) : t1;
      }
      index = _this._functionIndex$1($name);
      if (index == null)
        return _this._getFunctionFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._functions[index], $name);
      return t1 == null ? _this._getFunctionFromGlobalModule$1($name) : t1;
    },
    _getFunctionFromGlobalModule$1: function($name) {
      return this._fromOneModule$3($name, "function", new O.Environment__getFunctionFromGlobalModule_closure($name));
    },
    _functionIndex$1: function($name) {
      var t1, i;
      for (t1 = this._functions, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    getMixin$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._getModule$1(namespace).get$mixins().$index(0, $name);
      t1 = _this._mixinIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._mixins[index], $name);
        return t1 == null ? _this._getMixinFromGlobalModule$1($name) : t1;
      }
      index = _this._mixinIndex$1($name);
      if (index == null)
        return _this._getMixinFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._mixins[index], $name);
      return t1 == null ? _this._getMixinFromGlobalModule$1($name) : t1;
    },
    _getMixinFromGlobalModule$1: function($name) {
      return this._fromOneModule$3($name, "mixin", new O.Environment__getMixinFromGlobalModule_closure($name));
    },
    _mixinIndex$1: function($name) {
      var t1, i;
      for (t1 = this._mixins, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    scope$1$3$semiGlobal$when: function(callback, semiGlobal, when) {
      var wasInSemiGlobalScope, wasInSemiGlobalScope0, $name, name0, name1, t1, t2, t3, t4, t5, _this = this;
      if (!when) {
        wasInSemiGlobalScope = _this._inSemiGlobalScope;
        _this._inSemiGlobalScope = semiGlobal;
        try {
          t1 = callback.call$0();
          return t1;
        } finally {
          _this._inSemiGlobalScope = wasInSemiGlobalScope;
        }
      }
      semiGlobal = semiGlobal && _this._inSemiGlobalScope;
      wasInSemiGlobalScope0 = _this._inSemiGlobalScope;
      _this._inSemiGlobalScope = semiGlobal;
      t1 = _this._variables;
      t2 = type$.legacy_String;
      C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value));
      t3 = _this._variableNodes;
      if (t3 != null)
        C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode));
      t3 = _this._functions;
      t4 = type$.legacy_Callable;
      C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
      t5 = _this._mixins;
      C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
      t4 = _this._nestedForwardedModules;
      if (t4 != null)
        C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable));
      try {
        t2 = callback.call$0();
        return t2;
      } finally {
        _this._inSemiGlobalScope = wasInSemiGlobalScope0;
        _this._lastVariableIndex = _this._lastVariableName = null;
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = _this._variableIndices; t1.moveNext$0();) {
          $name = t1.get$current(t1);
          t2.remove$1(0, $name);
        }
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = _this._functionIndices; t1.moveNext$0();) {
          name0 = t1.get$current(t1);
          t2.remove$1(0, name0);
        }
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = _this._mixinIndices; t1.moveNext$0();) {
          name1 = t1.get$current(t1);
          t2.remove$1(0, name1);
        }
        t1 = _this._nestedForwardedModules;
        if (t1 != null)
          C.JSArray_methods.removeLast$0(t1);
      }
    },
    scope$1$1: function(callback, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);
    },
    scope$1$2$when: function(callback, when, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);
    },
    scope$1$2$semiGlobal: function(callback, semiGlobal, $T) {
      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);
    },
    toImplicitConfiguration$0: function() {
      var t2, t3, t4, t5, i, values, nodes, t6, t7,
        t1 = type$.legacy_String,
        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue);
      for (t2 = this._variables, t3 = this._variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode, i = 0; i < t2.length; ++i) {
        values = t2[i];
        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];
        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {
          t7 = t6.get$current(t6);
          configuration.$indexSet(0, t7, new Z.ConfiguredValue(values.$index(0, t7), null, nodes.$index(0, t7)));
        }
      }
      return new A.Configuration(configuration, null, true);
    },
    _getModule$1: function(namespace) {
      var module = this._environment$_modules.$index(0, namespace);
      if (module != null)
        return module;
      throw H.wrapException(E.SassScriptException$('There is no module with the namespace "' + namespace + '".'));
    },
    _fromOneModule$1$3: function($name, type, callback) {
      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,
        t1 = this._nestedForwardedModules;
      if (t1 != null)
        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
          cur = t1.__internal$_current;
          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
            cur = t2.__internal$_current;
            value = callback.call$1(cur);
            if (value != null)
              return value;
          }
        }
      for (t1 = this._globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_Callable, value = null, identity = null; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        valueInModule = callback.call$1(t3);
        if (valueInModule == null)
          continue;
        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);
        if (identityFromModule.$eq(0, identity))
          continue;
        if (value != null) {
          t1 = "This " + type + string$.x20is_av;
          t2 = type + " use";
          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
          for (t4 = this._globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
            t5 = t4.get$current(t4);
            if (callback.call$1(t5.key) != null)
              t3.$indexSet(0, t5.value.get$span(), "includes " + type);
          }
          throw H.wrapException(E.MultiSpanSassScriptException$(t1, t2, t3));
        }
        identity = identityFromModule;
        value = valueInModule;
      }
      return value;
    },
    _fromOneModule$3: function($name, type, callback) {
      return this._fromOneModule$1$3($name, type, callback, type$.dynamic);
    }
  };
  O.Environment_importForwards_closure.prototype = {
    call$1: function(module) {
      var t1 = module.get$variables();
      return t1.get$keys(t1);
    },
    $signature: 119
  };
  O.Environment_importForwards_closure0.prototype = {
    call$1: function(module) {
      var t1 = module.get$functions(module);
      return t1.get$keys(t1);
    },
    $signature: 119
  };
  O.Environment_importForwards_closure1.prototype = {
    call$1: function(module) {
      var t1 = module.get$mixins();
      return t1.get$keys(t1);
    },
    $signature: 119
  };
  O.Environment_importForwards_closure2.prototype = {
    call$1: function(_) {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable);
    },
    $signature: 386
  };
  O.Environment__getVariableFromGlobalModule_closure.prototype = {
    call$1: function(module) {
      return module.get$variables().$index(0, this.name);
    },
    $signature: 377
  };
  O.Environment_setVariable_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._lastVariableName = this.name;
      return t1._lastVariableIndex = 0;
    },
    $signature: 11
  };
  O.Environment_setVariable_closure0.prototype = {
    call$1: function(module) {
      return module.get$variables().containsKey$1(this.name) ? module : null;
    },
    $signature: 127
  };
  O.Environment_setVariable_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._variableIndex$1(this.name);
      return t2 == null ? t1._variables.length - 1 : t2;
    },
    $signature: 11
  };
  O.Environment__getFunctionFromGlobalModule_closure.prototype = {
    call$1: function(module) {
      return module.get$functions(module).$index(0, this.name);
    },
    $signature: 128
  };
  O.Environment__getMixinFromGlobalModule_closure.prototype = {
    call$1: function(module) {
      return module.get$mixins().$index(0, this.name);
    },
    $signature: 128
  };
  O._EnvironmentModule.prototype = {
    get$url: function() {
      return this.css.get$span().file.url;
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      var t1, t2,
        module = this._modulesByVariable.$index(0, $name);
      if (module != null) {
        module.setVariable$3($name, value, nodeWithSpan);
        return;
      }
      t1 = this._environment;
      t2 = t1._variables;
      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))
        throw H.wrapException(E.SassScriptException$("Undefined variable."));
      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);
      t1 = t1._variableNodes;
      if (t1 != null)
        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);
      return;
    },
    variableIdentity$1: function($name) {
      var module = this._modulesByVariable.$index(0, $name);
      return module == null ? this : module.variableIdentity$1($name);
    },
    cloneCss$0: function() {
      var newCssAndExtender, _this = this,
        t1 = _this.css;
      if (J.get$isEmpty$asx(t1.get$children(t1)))
        return _this;
      newCssAndExtender = V.cloneCssStylesheet(t1, _this.extender);
      return O._EnvironmentModule$_(_this._environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);
    },
    toString$0: function(_) {
      var t1 = this.css;
      if (t1.get$span().file.url == null)
        t1 = "<unknown url>";
      else {
        t1 = t1.get$span().file;
        t1 = $.$get$context().prettyUri$1(t1.url);
      }
      return t1;
    },
    $isModule: 1,
    get$upstream: function() {
      return this.upstream;
    },
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    },
    get$extender: function() {
      return this.extender;
    },
    get$css: function(receiver) {
      return this.css;
    },
    get$transitivelyContainsCss: function() {
      return this.transitivelyContainsCss;
    },
    get$transitivelyContainsExtensions: function() {
      return this.transitivelyContainsExtensions;
    }
  };
  O._EnvironmentModule__EnvironmentModule_closure.prototype = {
    call$1: function(module) {
      return module.get$variables();
    },
    $signature: 375
  };
  O._EnvironmentModule__EnvironmentModule_closure0.prototype = {
    call$1: function(module) {
      return module.get$variableNodes();
    },
    $signature: 374
  };
  O._EnvironmentModule__EnvironmentModule_closure1.prototype = {
    call$1: function(module) {
      return module.get$functions(module);
    },
    $signature: 137
  };
  O._EnvironmentModule__EnvironmentModule_closure2.prototype = {
    call$1: function(module) {
      return module.get$mixins();
    },
    $signature: 137
  };
  O._EnvironmentModule__EnvironmentModule_closure3.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 122
  };
  O._EnvironmentModule__EnvironmentModule_closure4.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsExtensions();
    },
    $signature: 122
  };
  E.SassException.prototype = {
    get$trace: function(_) {
      return new Y.Trace(P.List_List$unmodifiable(H.setRuntimeTypeInfo([B.frameForSpan(G.SourceSpanException.prototype.get$span.call(this), "root stylesheet", null)], type$.JSArray_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));
    },
    get$span: function() {
      return G.SourceSpanException.prototype.get$span.call(this);
    },
    toString$1$color: function(_, color) {
      var t2, _i, frame, t3, _this = this,
        buffer = new P.StringBuffer(""),
        t1 = "Error: " + H.S(_this._span_exception$_message) + "\n";
      buffer._contents = t1;
      buffer._contents = t1 + G.SourceSpanException.prototype.get$span.call(_this).highlight$1$color(color);
      for (t1 = _this.get$trace(_this).toString$0(0).split("\n"), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        frame = t1[_i];
        frame.toString;
        if (J.get$length$asx(frame) === 0)
          continue;
        t3 = buffer._contents += "\n";
        buffer._contents = t3 + ("  " + H.S(frame));
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toString$0: function($receiver) {
      return this.toString$1$color($receiver, null);
    },
    toCssString$0: function() {
      var stringMessage, rune,
        t1 = $._glyphs,
        t2 = $._glyphs = C.C_AsciiGlyphSet,
        t3 = this.toString$1$color(0, false),
        commentMessage = H.stringReplaceAllUnchecked(t3, "*/", "*\u2215");
      $._glyphs = t1 === C.C_AsciiGlyphSet ? t2 : C.C_UnicodeGlyphSet;
      stringMessage = new P.StringBuffer("");
      for (t1 = P.RuneIterator$(N.serializeValue0(new D.SassString(this.toString$1$color(0, false), true), true, true)); t1.moveNext$0();) {
        rune = t1._currentCodePoint;
        if (rune > 255) {
          stringMessage._contents += H.Primitives_stringFromCharCode(92);
          stringMessage._contents += C.JSInt_methods.toRadixString$1(rune, 16);
          t2 = stringMessage._contents += H.Primitives_stringFromCharCode(32);
        } else
          t2 = stringMessage._contents += H.Primitives_stringFromCharCode(rune);
      }
      return "/* " + C.JSArray_methods.join$1(H.setRuntimeTypeInfo(commentMessage.split("\n"), type$.JSArray_String), "\n * ") + ' */\n\nbody::before {\n  font-family: "Source Code Pro", "SF Mono", Monaco, Inconsolata, "Fira Mono",\n      "Droid Sans Mono", monospace, monospace;\n  white-space: pre;\n  display: block;\n  padding: 1em;\n  margin-bottom: 1em;\n  border-bottom: 2px solid black;\n  content: ' + stringMessage.toString$0(0) + ";\n}";
    }
  };
  E.MultiSpanSassException.prototype = {
    toString$1$color: function(_, color) {
      var t2, _i, frame, t3, _this = this,
        useColor = color === true && true,
        buffer = new P.StringBuffer(""),
        t1 = "Error: " + H.S(_this._span_exception$_message) + "\n";
      buffer._contents = t1;
      buffer._contents = t1 + U.Highlighter$multiple(G.SourceSpanException.prototype.get$span.call(_this), _this.primaryLabel, _this.secondarySpans, useColor, null, null).highlight$0();
      for (t1 = _this.get$trace(_this).toString$0(0).split("\n"), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        frame = t1[_i];
        frame.toString;
        if (J.get$length$asx(frame) === 0)
          continue;
        t3 = buffer._contents += "\n";
        buffer._contents = t3 + ("  " + H.S(frame));
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toString$0: function($receiver) {
      return this.toString$1$color($receiver, null);
    }
  };
  E.SassRuntimeException.prototype = {
    get$trace: function(receiver) {
      return this.trace;
    }
  };
  E.MultiSpanSassRuntimeException.prototype = {$isSassRuntimeException: 1,
    get$trace: function(receiver) {
      return this.trace;
    }
  };
  E.SassFormatException.prototype = {
    get$source: function() {
      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(this).file._decodedChars, 0, null), 0, null);
    },
    $isFormatException: 1,
    $isSourceSpanFormatException: 1
  };
  E.SassScriptException.prototype = {
    toString$0: function(_) {
      return this.message + string$.x0a_BUG_;
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  E.MultiSpanSassScriptException.prototype = {};
  D._writeSourceMap_closure.prototype = {
    call$1: function(url) {
      return this.options.sourceMapUrl$2(P.Uri_parse(url), this.destination).toString$0(0);
    },
    $signature: 4
  };
  B.ExecutableOptions.prototype = {
    get$interactive: function() {
      var t2, invalidOptions, _i, option,
        t1 = this._interactive;
      if (t1 != null)
        return t1;
      t1 = this._options;
      t2 = H._asBoolS(t1.$index(0, "interactive"));
      this._interactive = t2;
      if (!t2)
        return false;
      invalidOptions = ["stdin", "indented", "style", "source-map", "source-map-urls", "embed-sources", "embed-source-map", "update", "watch"];
      for (t2 = t1._parser.options._collection$_map, _i = 0; _i < 9; ++_i) {
        option = invalidOptions[_i];
        if (t2.$index(0, option) == null)
          H.throwExpression(P.ArgumentError$('Could not find an option named "' + option + '".'));
        if (t1._parsed.containsKey$1(option))
          throw H.wrapException(B.UsageException$("--" + option + " isn't allowed with --interactive."));
      }
      return true;
    },
    get$color: function() {
      var t1 = this._options;
      return t1.wasParsed$1("color") ? H._asBoolS(t1.$index(0, "color")) : B.hasTerminal();
    },
    get$emitErrorCss: function() {
      var t1 = H._asBoolS(this._options.$index(0, "error-css"));
      if (t1 == null) {
        this._ensureSources$0();
        t1 = this._sourcesToDestinations;
        t1 = t1.get$values(t1).any$1(0, new B.ExecutableOptions_emitErrorCss_closure());
      }
      return t1;
    },
    _ensureSources$0: function() {
      var t1, stdin, t2, t3, $directories, t4, colonArgs, positionalArgs, cur, t5, t6, message, target, source, destination, seen, i, t7, _this = this, _null = null,
        _s18_ = 'Duplicate source "';
      if (_this._sourcesToDestinations != null)
        return;
      t1 = _this._options;
      stdin = H._asBoolS(t1.$index(0, "stdin"));
      t2 = t1.rest;
      if (t2.get$length(t2) === 0 && !stdin)
        B.ExecutableOptions__fail("Compile Sass to CSS.");
      t3 = type$.legacy_String;
      $directories = P.LinkedHashSet_LinkedHashSet$_empty(t3);
      for (t4 = new H.ListIterator(t2, t2.get$length(t2)), colonArgs = false, positionalArgs = false; t4.moveNext$0();) {
        cur = t4.__internal$_current;
        t5 = cur.length;
        if (t5 === 0)
          B.ExecutableOptions__fail('Invalid argument "".');
        if (H.stringContainsUnchecked(cur, ":", 0)) {
          if (t5 > 2) {
            t6 = C.JSString_methods._codeUnitAt$1(cur, 0);
            if (!(t6 >= 97 && t6 <= 122))
              t6 = t6 >= 65 && t6 <= 90;
            else
              t6 = true;
            t6 = t6 && C.JSString_methods._codeUnitAt$1(cur, 1) === 58;
          } else
            t6 = false;
          if (t6) {
            if (2 > t5)
              H.throwExpression(P.RangeError$range(2, 0, t5, _null, _null));
            t5 = H.stringContainsUnchecked(cur, ":", 2);
          } else
            t5 = true;
        } else
          t5 = false;
        if (t5)
          colonArgs = true;
        else if (B.dirExists(cur))
          $directories.add$1(0, cur);
        else
          positionalArgs = true;
      }
      if (positionalArgs || t2.get$length(t2) === 0) {
        if (colonArgs)
          B.ExecutableOptions__fail('Positional and ":" arguments may not both be used.');
        else if (stdin) {
          if (J.get$length$asx(t2._collection$_source) > 1)
            B.ExecutableOptions__fail("Only one argument is allowed with --stdin.");
          else if (H._asBoolS(t1.$index(0, "update")))
            B.ExecutableOptions__fail("--update is not allowed with --stdin.");
          else if (H._asBoolS(t1.$index(0, "watch")))
            B.ExecutableOptions__fail("--watch is not allowed with --stdin.");
          t1 = t2.get$length(t2) === 0 ? _null : t2.get$first(t2);
          t2 = type$.dynamic;
          _this._sourcesToDestinations = H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_literal([null, t1], t2, t2), t3, t3);
        } else {
          t4 = t2._collection$_source;
          t5 = J.getInterceptor$asx(t4);
          if (t5.get$length(t4) > 2)
            B.ExecutableOptions__fail("Only two positional args may be passed.");
          else if ($directories._collection$_length !== 0) {
            message = 'Directory "' + H.S($directories.get$first($directories)) + '" may not be a positional arg.';
            target = t2.get$last(t2);
            B.ExecutableOptions__fail(J.$eq$($directories.get$first($directories), t2.get$first(t2)) && !B.fileExists(target) ? message + ('\nTo compile all CSS in "' + H.S($directories.get$first($directories)) + '" to "' + H.S(target) + '", use `sass ' + H.S($directories.get$first($directories)) + ":" + H.S(target) + "`.") : message);
          } else {
            source = J.$eq$(t2.get$first(t2), "-") ? _null : t2.get$first(t2);
            destination = t5.get$length(t4) === 1 ? _null : t2.get$last(t2);
            if (destination == null)
              if (H._asBoolS(t1.$index(0, "update")))
                B.ExecutableOptions__fail("--update is not allowed when printing to stdout.");
              else if (H._asBoolS(t1.$index(0, "watch")))
                B.ExecutableOptions__fail("--watch is not allowed when printing to stdout.");
            t1 = P.LinkedHashMap_LinkedHashMap$_literal([source, destination], t3, t3);
            t3 = K.PathMap__create(_null, t3);
            t3.addAll$1(0, t1);
            _this._sourcesToDestinations = new P.UnmodifiableMapView(new K.PathMap(t3, type$.PathMap_legacy_String), type$.UnmodifiableMapView_of_legacy_String_and_legacy_String);
          }
        }
        _this._sourceDirectoriesToDestinations = C.Map_empty5;
        return;
      }
      if (stdin)
        B.ExecutableOptions__fail('--stdin may not be used with ":" arguments.');
      seen = P.LinkedHashSet_LinkedHashSet$_empty(t3);
      t1 = K.PathMap__create(_null, t3);
      t4 = type$.PathMap_legacy_String;
      t3 = K.PathMap__create(_null, t3);
      for (t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        if ($directories.contains$1(0, cur)) {
          if (!seen.add$1(0, cur))
            B.ExecutableOptions__fail(_s18_ + H.S(cur) + '".');
          t3.$indexSet(0, cur, cur);
          t1.addAll$1(0, _this._listSourceDirectory$2(cur, cur));
          continue;
        }
        for (t5 = cur.length, destination = _null, source = destination, i = 0; i < t5; ++i) {
          if (i === 1) {
            t6 = i - 1;
            if (t5 > t6 + 2) {
              t7 = C.JSString_methods.codeUnitAt$1(cur, t6);
              if (!(t7 >= 97 && t7 <= 122))
                t7 = t7 >= 65 && t7 <= 90;
              else
                t7 = true;
              t6 = t7 && C.JSString_methods.codeUnitAt$1(cur, t6 + 1) === 58;
            } else
              t6 = false;
          } else
            t6 = false;
          if (t6)
            continue;
          if (C.JSString_methods._codeUnitAt$1(cur, i) === 58)
            if (source == null) {
              source = C.JSString_methods.substring$2(cur, 0, i);
              destination = C.JSString_methods.substring$1(cur, i + 1);
            } else {
              if (i === source.length + 2) {
                t6 = i - 1;
                if (t5 > t6 + 2) {
                  t7 = C.JSString_methods.codeUnitAt$1(cur, t6);
                  if (!(t7 >= 97 && t7 <= 122))
                    t7 = t7 >= 65 && t7 <= 90;
                  else
                    t7 = true;
                  t6 = t7 && C.JSString_methods.codeUnitAt$1(cur, t6 + 1) === 58;
                } else
                  t6 = false;
                t6 = !t6;
              } else
                t6 = true;
              if (t6)
                B.ExecutableOptions__fail('"' + cur + '" may only contain one ":".');
            }
        }
        if (!seen.add$1(0, source))
          B.ExecutableOptions__fail(_s18_ + H.S(source) + '".');
        if (source === "-")
          t1.$indexSet(0, _null, destination);
        else if (B.dirExists(source)) {
          t3.$indexSet(0, source, destination);
          t1.addAll$1(0, _this._listSourceDirectory$2(source, destination));
        } else
          t1.$indexSet(0, source, destination);
      }
      t2 = type$.UnmodifiableMapView_of_legacy_String_and_legacy_String;
      _this._sourcesToDestinations = new P.UnmodifiableMapView(new K.PathMap(t1, t4), t2);
      _this._sourceDirectoriesToDestinations = new P.UnmodifiableMapView(new K.PathMap(t3, t4), t2);
    },
    _listSourceDirectory$2: function(source, destination) {
      var t2, t3, t4, t5, _null = null,
        t1 = type$.legacy_String;
      t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t2 = J.get$iterator$ax(B.listDir(source, true)), t3 = source == destination; t2.moveNext$0();) {
        t4 = t2.get$current(t2);
        if (this._isEntrypoint$1(t4))
          t5 = !(t3 && X.ParsedPath_ParsedPath$parse(t4, $.$get$context().style)._splitExtension$1(1)[1] === ".css");
        else
          t5 = false;
        if (t5) {
          t5 = $.$get$context();
          t1.$indexSet(0, t4, t5.join$8(0, destination, t5.withoutExtension$1(t5.relative$2$from(t4, source)) + ".css", _null, _null, _null, _null, _null, _null));
        }
      }
      return t1;
    },
    _isEntrypoint$1: function(path) {
      var extension,
        t1 = $.$get$context().style;
      if (J.startsWith$1$s(X.ParsedPath_ParsedPath$parse(path, t1).get$basename(), "_"))
        return false;
      extension = X.ParsedPath_ParsedPath$parse(path, t1)._splitExtension$1(1)[1];
      return extension === ".scss" || extension === ".sass" || extension === ".css";
    },
    get$_writeToStdout: function() {
      var t1, _this = this;
      _this._ensureSources$0();
      t1 = _this._sourcesToDestinations;
      if (t1.get$length(t1) === 1) {
        _this._ensureSources$0();
        t1 = _this._sourcesToDestinations;
        t1 = t1.get$values(t1);
        t1 = t1.get$single(t1) == null;
      } else
        t1 = false;
      return t1;
    },
    get$emitSourceMap: function() {
      var _this = this,
        _s10_ = "source-map",
        _s15_ = "source-map-urls",
        _s13_ = "embed-sources",
        _s16_ = "embed-source-map",
        t1 = _this._options;
      if (!H._asBoolS(t1.$index(0, _s10_)))
        if (t1.wasParsed$1(_s15_))
          B.ExecutableOptions__fail("--source-map-urls isn't allowed with --no-source-map.");
        else if (t1.wasParsed$1(_s13_))
          B.ExecutableOptions__fail("--embed-sources isn't allowed with --no-source-map.");
        else if (t1.wasParsed$1(_s16_))
          B.ExecutableOptions__fail("--embed-source-map isn't allowed with --no-source-map.");
      if (!_this.get$_writeToStdout())
        return H._asBoolS(t1.$index(0, _s10_));
      if (J.$eq$(_this._ifParsed$1(_s15_), "relative"))
        B.ExecutableOptions__fail("--source-map-urls=relative isn't allowed when printing to stdout.");
      if (H._asBoolS(t1.$index(0, _s16_)))
        return H._asBoolS(t1.$index(0, _s10_));
      else if (J.$eq$(_this._ifParsed$1(_s10_), true))
        B.ExecutableOptions__fail("When printing to stdout, --source-map requires --embed-source-map.");
      else if (t1.wasParsed$1(_s15_))
        B.ExecutableOptions__fail("When printing to stdout, --source-map-urls requires --embed-source-map.");
      else if (H._asBoolS(t1.$index(0, _s13_)))
        B.ExecutableOptions__fail("When printing to stdout, --embed-sources requires --embed-source-map.");
      else
        return false;
    },
    sourceMapUrl$2: function(url, destination) {
      var t1, path;
      if (url.get$scheme().length !== 0 && url.get$scheme() !== "file")
        return url;
      t1 = $.$get$context();
      path = t1.style.pathFromUri$1(M._parseUri(url));
      return t1.toUri$1(J.$eq$(this._options.$index(0, "source-map-urls"), "relative") && !this.get$_writeToStdout() ? t1.relative$2$from(path, t1.dirname$1(destination)) : D.absolute(path));
    },
    _ifParsed$1: function($name) {
      var t1 = this._options;
      return t1.wasParsed$1($name) ? t1.$index(0, $name) : null;
    }
  };
  B.ExecutableOptions_closure.prototype = {
    call$0: function() {
      var t1 = type$.legacy_String,
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Option),
        t3 = [],
        parser = new N.ArgParser(t2, new P.UnmodifiableMapView(t2, type$.UnmodifiableMapView_of_legacy_String_and_legacy_Option), new P.UnmodifiableMapView(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ArgParser), type$.UnmodifiableMapView_of_legacy_String_and_legacy_ArgParser), t3, true, null);
      parser.addOption$2$hide("precision", true);
      parser.addFlag$2$hide("async", true);
      t3.push(B.ExecutableOptions__separator("Input and Output"));
      parser.addFlag$2$help("stdin", "Read the stylesheet from stdin.");
      parser.addFlag$2$help("indented", "Use the indented syntax for input from stdin.");
      parser.addMultiOption$5$abbr$help$splitCommas$valueHelp("load-path", "I", "A path to use when resolving imports.\nMay be passed multiple times.", false, "PATH");
      t1 = type$.JSArray_legacy_String;
      parser.addOption$6$abbr$allowed$defaultsTo$help$valueHelp("style", "s", H.setRuntimeTypeInfo(["expanded", "compressed"], t1), "expanded", "Output style.", "NAME");
      parser.addFlag$3$defaultsTo$help("charset", true, "Emit a @charset or BOM for CSS with non-ASCII characters.");
      parser.addFlag$3$defaultsTo$help("error-css", null, "When an error occurs, emit a stylesheet describing it.\nDefaults to true when compiling to a file.");
      parser.addFlag$3$help$negatable("update", "Only compile out-of-date stylesheets.", false);
      t3.push(B.ExecutableOptions__separator("Source Maps"));
      parser.addFlag$3$defaultsTo$help("source-map", true, "Whether to generate source maps.");
      parser.addOption$4$allowed$defaultsTo$help("source-map-urls", H.setRuntimeTypeInfo(["relative", "absolute"], t1), "relative", "How to link from source maps to source files.");
      parser.addFlag$3$defaultsTo$help("embed-sources", false, "Embed source file contents in source maps.");
      parser.addFlag$3$defaultsTo$help("embed-source-map", false, "Embed source map contents in CSS.");
      t3.push(B.ExecutableOptions__separator("Other"));
      parser.addFlag$3$help$negatable("watch", "Watch stylesheets and recompile when they change.", false);
      parser.addFlag$2$help("poll", "Manually check for changes rather than using a native watcher.\nOnly valid with --watch.");
      parser.addFlag$2$help("stop-on-error", "Don't compile more files once an error is encountered.");
      parser.addFlag$4$abbr$help$negatable("interactive", "i", "Run an interactive SassScript shell.", false);
      parser.addFlag$3$abbr$help("color", "c", "Whether to use terminal colors for messages.");
      parser.addFlag$2$help("unicode", "Whether to use Unicode characters for messages.");
      parser.addFlag$3$abbr$help("quiet", "q", "Don't print warnings.");
      parser.addFlag$2$help("trace", "Print full Dart stack traces for exceptions.");
      parser.addFlag$4$abbr$help$negatable("help", "h", "Print this usage information.", false);
      parser.addFlag$3$help$negatable("version", "Print the version of Dart Sass.", false);
      return parser;
    },
    $signature: 368
  };
  B.ExecutableOptions_emitErrorCss_closure.prototype = {
    call$1: function(destination) {
      return destination != null;
    },
    $signature: 6
  };
  B.UsageException.prototype = {$isException: 1,
    get$message: function(receiver) {
      return this.message;
    }
  };
  A.watch_closure.prototype = {
    call$1: function(dir) {
      for (; !B.dirExists(dir);)
        dir = $.$get$context().dirname$1(dir);
      return this.dirWatcher.watch$1(0, dir);
    },
    $signature: 365
  };
  A._Watcher.prototype = {
    compile$3$ifModified: function(source, destination, ifModified) {
      return this.compile$body$_Watcher(source, destination, ifModified);
    },
    compile$2: function(source, destination) {
      return this.compile$3$ifModified(source, destination, false);
    },
    compile$body$_Watcher: function(source, destination, ifModified) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, stackTrace, error0, stackTrace0, exception, t1, $async$exception;
      var $async$compile$3$ifModified = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(D.compileStylesheet($async$self._watch$_options, $async$self._graph, source, destination, ifModified), $async$compile$3$ifModified);
            case 7:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof E.SassException) {
                error = t1;
                stackTrace = H.getTraceFromException($async$exception);
                t1 = $async$self._watch$_options;
                if (!t1.get$emitErrorCss())
                  $async$self._delete$1(destination);
                $async$self._printError$2(J.toString$1$color$(error, t1.get$color()), stackTrace);
                J.set$exitCode$x(self.process, 65);
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              } else if (t1 instanceof B.FileSystemException) {
                error0 = t1;
                stackTrace0 = H.getTraceFromException($async$exception);
                t1 = error0.path;
                $async$self._printError$2("Error reading " + H.S($.$get$context().relative$2$from(t1, null)) + ": " + error0.message + ".", stackTrace0);
                J.set$exitCode$x(self.process, 66);
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$compile$3$ifModified, $async$completer);
    },
    _delete$1: function(path) {
      var buffer, t1, exception;
      try {
        B.deleteFile(path);
        buffer = new P.StringBuffer("");
        t1 = this._watch$_options;
        if (t1.get$color())
          buffer._contents += "\x1b[33m";
        buffer._contents += "Deleted " + H.S(path) + ".";
        if (t1.get$color())
          buffer._contents += "\x1b[0m";
        P.print(buffer);
      } catch (exception) {
        if (!(H.unwrapException(exception) instanceof B.FileSystemException))
          throw exception;
      }
    },
    _printError$2: function(message, stackTrace) {
      var t2,
        t1 = $.$get$stderr();
      t1.writeln$1(message);
      t2 = this._watch$_options._options;
      if (H._asBoolS(t2.$index(0, "trace"))) {
        t1.writeln$0();
        t1.writeln$1(C.JSString_methods.trimRight$0(Y.Trace_Trace$from(stackTrace).get$terse().toString$0(0)));
      }
      if (!H._asBoolS(t2.$index(0, "stop-on-error")))
        t1.writeln$0();
    },
    watch$1: function(_, watcher) {
      return this.watch$body$_Watcher(_, watcher);
    },
    watch$body$_Watcher: function(_, watcher) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, $event, extension, success, success0, success1, t2, t1;
      var $async$watch$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = watcher._group._controller;
              t1.toString;
              t1 = $async$self._debounceEvents$1(new P._ControllerStream(t1, H._instanceType(t1)._eval$1("_ControllerStream<1>")));
              t2 = new P._StreamIterator(t1);
              P.ArgumentError_checkNotNull(t1, "stream");
              $async$handler = 3;
              t1 = $async$self._watch$_options._options;
            case 6:
              // for condition
              $async$goto = 8;
              return P._asyncAwait(t2.moveNext$0(), $async$watch$1);
            case 8:
              // returning from await.
              if (!$async$result) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $event = t2.get$current(t2);
              extension = X.ParsedPath_ParsedPath$parse($event.path, $.$get$context().style)._splitExtension$1(1)[1];
              if (!J.$eq$(extension, ".sass") && !J.$eq$(extension, ".scss") && !J.$eq$(extension, ".css")) {
                // goto for condition
                $async$goto = 6;
                break;
              }
            case 9:
              // switch
              switch ($event.type) {
                case C.ChangeType_modify:
                  // goto case
                  $async$goto = 11;
                  break;
                case C.ChangeType_add:
                  // goto case
                  $async$goto = 12;
                  break;
                case C.ChangeType_remove:
                  // goto case
                  $async$goto = 13;
                  break;
                default:
                  // goto after switch
                  $async$goto = 10;
                  break;
              }
              break;
            case 11:
              // case
              $async$goto = 14;
              return P._asyncAwait($async$self._handleModify$1($event.path), $async$watch$1);
            case 14:
              // returning from await.
              success = $async$result;
              if (!success && H._asBoolS(t1.$index(0, "stop-on-error"))) {
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              // goto after switch
              $async$goto = 10;
              break;
            case 12:
              // case
              $async$goto = 15;
              return P._asyncAwait($async$self._handleAdd$1($event.path), $async$watch$1);
            case 15:
              // returning from await.
              success0 = $async$result;
              if (!success0 && H._asBoolS(t1.$index(0, "stop-on-error"))) {
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              // goto after switch
              $async$goto = 10;
              break;
            case 13:
              // case
              $async$goto = 16;
              return P._asyncAwait($async$self._handleRemove$1($event.path), $async$watch$1);
            case 16:
              // returning from await.
              success1 = $async$result;
              if (!success1 && H._asBoolS(t1.$index(0, "stop-on-error"))) {
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              // goto after switch
              $async$goto = 10;
              break;
            case 10:
              // after switch
              // goto for condition
              $async$goto = 6;
              break;
            case 7:
              // after for
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              $async$goto = 17;
              return P._asyncAwait(t2.cancel$0(), $async$watch$1);
            case 17:
              // returning from await.
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$watch$1, $async$completer);
    },
    _handleModify$1: function(path) {
      return this._handleModify$body$_Watcher(path);
    },
    _handleModify$body$_Watcher: function(path) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),
        $async$returnValue, $async$self = this, t1, t2, t0, url, node;
      var $async$_handleModify$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (J.$eq$(J.get$platform$x(self.process), "win32") || J.$eq$(J.get$platform$x(self.process), "darwin")) {
                t1 = $.$get$context();
                t2 = F._realCasePath(D.absolute(t1.normalize$1(path)));
                t0 = t2;
                t2 = t1;
                t1 = t0;
              } else {
                t1 = $.$get$context();
                t2 = t1.canonicalize$1(path);
                t0 = t2;
                t2 = t1;
                t1 = t0;
              }
              url = t2.toUri$1(t1);
              t1 = $async$self._graph;
              t2 = t1._nodes;
              if (!t2.containsKey$1(url)) {
                $async$returnValue = $async$self._handleAdd$1(path);
                // goto return
                $async$goto = 1;
                break;
              }
              node = t2.$index(0, url);
              t1.reload$1(url);
              $async$goto = 3;
              return P._asyncAwait($async$self._recompileDownstream$1(H.setRuntimeTypeInfo([node], type$.JSArray_legacy_StylesheetNode)), $async$_handleModify$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleModify$1, $async$completer);
    },
    _handleAdd$1: function(path) {
      return this._handleAdd$body$_Watcher(path);
    },
    _handleAdd$body$_Watcher: function(path) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),
        $async$returnValue, $async$self = this, t2, t3, t0, destination, success, t1, $async$temp1;
      var $async$_handleAdd$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              destination = $async$self._destinationFor$1(path);
              $async$temp1 = destination == null;
              if ($async$temp1)
                $async$result = $async$temp1;
              else {
                // goto then
                $async$goto = 3;
                break;
              }
              // goto join
              $async$goto = 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return P._asyncAwait($async$self.compile$2(path, destination), $async$_handleAdd$1);
            case 5:
              // returning from await.
            case 4:
              // join
              success = $async$result;
              t1 = D.absolute(".");
              if (J.$eq$(J.get$platform$x(self.process), "win32") || J.$eq$(J.get$platform$x(self.process), "darwin")) {
                t2 = $.$get$context();
                t3 = F._realCasePath(D.absolute(t2.normalize$1(path)));
                t0 = t3;
                t3 = t2;
                t2 = t0;
              } else {
                t2 = $.$get$context();
                t3 = t2.canonicalize$1(path);
                t0 = t3;
                t3 = t2;
                t2 = t0;
              }
              $async$goto = 6;
              return P._asyncAwait($async$self._recompileDownstream$1($async$self._graph.addCanonical$3(new F.FilesystemImporter(t1), t3.toUri$1(t2), t3.toUri$1(path))), $async$_handleAdd$1);
            case 6:
              // returning from await.
              $async$returnValue = $async$result && success;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleAdd$1, $async$completer);
    },
    _handleRemove$1: function(path) {
      return this._handleRemove$body$_Watcher(path);
    },
    _handleRemove$body$_Watcher: function(path) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),
        $async$returnValue, $async$self = this, t1, t2, t0, url, destination, t3, node, toRecompile;
      var $async$_handleRemove$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (J.$eq$(J.get$platform$x(self.process), "win32") || J.$eq$(J.get$platform$x(self.process), "darwin")) {
                t1 = $.$get$context();
                t2 = F._realCasePath(D.absolute(t1.normalize$1(path)));
                t0 = t2;
                t2 = t1;
                t1 = t0;
              } else {
                t1 = $.$get$context();
                t2 = t1.canonicalize$1(path);
                t0 = t2;
                t2 = t1;
                t1 = t0;
              }
              url = t2.toUri$1(t1);
              t1 = $async$self._graph;
              t2 = t1._nodes;
              if (t2.containsKey$1(url)) {
                destination = $async$self._destinationFor$1(path);
                if (destination != null)
                  $async$self._delete$1(destination);
              }
              t3 = D.absolute(".");
              node = t2.remove$1(0, url);
              t2 = node != null;
              if (t2) {
                t1._transitiveModificationTimes.clear$0(0);
                t1.importCache.clearImport$1(url);
                node._stylesheet_graph$_remove$0();
              }
              toRecompile = t1._recanonicalizeImports$2(new F.FilesystemImporter(t3), url);
              if (t2)
                toRecompile.addAll$1(0, node._downstream);
              $async$goto = 3;
              return P._asyncAwait($async$self._recompileDownstream$1(toRecompile), $async$_handleRemove$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleRemove$1, $async$completer);
    },
    _debounceEvents$1: function(events) {
      var t1 = type$.legacy_WatchEvent;
      t1 = R._debounceAggregate(P.Duration$(25), H.instantiate1(R.rate_limit___collectToList$closure(), t1), false, true, t1, type$.legacy_List_legacy_WatchEvent).bind$1(events);
      return new P._ExpandStream(new A._Watcher__debounceEvents_closure(), t1, H._instanceType(t1)._eval$1("_ExpandStream<Stream.T,WatchEvent*>"));
    },
    _recompileDownstream$1: function(nodes) {
      return this._recompileDownstream$body$_Watcher(nodes);
    },
    _recompileDownstream$body$_Watcher: function(nodes) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),
        $async$returnValue, $async$self = this, t2, allSucceeded, node, success, t1, seen, toRecompile;
      var $async$_recompileDownstream$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.legacy_StylesheetNode;
              seen = P.LinkedHashSet_LinkedHashSet$_empty(t1);
              toRecompile = P.ListQueue_ListQueue$of(nodes, t1);
              t1 = type$.UnmodifiableSetView_legacy_StylesheetNode, t2 = $async$self._watch$_options._options, allSucceeded = true;
            case 3:
              // for condition
              if (!!toRecompile.get$isEmpty(toRecompile)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              node = toRecompile.removeFirst$0();
              if (!seen.add$1(0, node)) {
                // goto for condition
                $async$goto = 3;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait($async$self._compileIfEntrypoint$1(node.canonicalUrl), $async$_recompileDownstream$1);
            case 5:
              // returning from await.
              success = $async$result;
              allSucceeded = allSucceeded && success;
              if (!success && H._asBoolS(t2.$index(0, "stop-on-error"))) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              toRecompile.addAll$1(0, new L.UnmodifiableSetView(node._downstream, t1));
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              $async$returnValue = allSucceeded;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_recompileDownstream$1, $async$completer);
    },
    _compileIfEntrypoint$1: function(url) {
      return this._compileIfEntrypoint$body$_Watcher(url);
    },
    _compileIfEntrypoint$body$_Watcher: function(url) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),
        $async$returnValue, $async$self = this, source, destination;
      var $async$_compileIfEntrypoint$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (url.get$scheme() !== "file") {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
              source = $.$get$context().style.pathFromUri$1(M._parseUri(url));
              destination = $async$self._destinationFor$1(source);
              if (destination == null) {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return P._asyncAwait($async$self.compile$2(source, destination), $async$_compileIfEntrypoint$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_compileIfEntrypoint$1, $async$completer);
    },
    _destinationFor$1: function(source) {
      var destination, t2, t3, t4, _null = null,
        t1 = this._watch$_options;
      t1._ensureSources$0();
      destination = t1._sourcesToDestinations.$index(0, source);
      if (destination != null)
        return destination;
      t2 = $.$get$context();
      if (J.startsWith$1$s(X.ParsedPath_ParsedPath$parse(source, t2.style).get$basename(), "_"))
        return _null;
      for (t1._ensureSources$0(), t3 = t1._sourceDirectoriesToDestinations, t3 = J.get$iterator$ax(t3.get$keys(t3)); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        if (t2._isWithinOrEquals$2(t4, source) !== C._PathRelation_within)
          continue;
        t1._ensureSources$0();
        destination = t2.join$8(0, t1._sourceDirectoriesToDestinations.$index(0, t4), t2.withoutExtension$1(t2.relative$2$from(source, t4)) + ".css", _null, _null, _null, _null, _null, _null);
        if (t2._isWithinOrEquals$2(destination, source) !== C._PathRelation_equal)
          return destination;
      }
      return _null;
    }
  };
  A._Watcher__debounceEvents_closure.prototype = {
    call$1: function(buffer) {
      var t2, t3, t4, oldType,
        t1 = K.PathMap__create(null, type$.legacy_ChangeType);
      for (t2 = J.get$iterator$ax(buffer); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t3.path;
        oldType = t1.$index(0, t4);
        if (oldType == null)
          t1.$indexSet(0, t4, t3.type);
        else if (t3.type === C.ChangeType_remove)
          t1.$indexSet(0, t4, C.ChangeType_remove);
        else if (oldType !== C.ChangeType_add)
          t1.$indexSet(0, t4, C.ChangeType_modify);
      }
      return t1.get$keys(t1).map$1$1(0, new A._Watcher__debounceEvents__closure(new K.PathMap(t1, type$.PathMap_legacy_ChangeType)), type$.legacy_WatchEvent);
    },
    $signature: 354
  };
  A._Watcher__debounceEvents__closure.prototype = {
    call$1: function(path) {
      return new E.WatchEvent(this.typeForPath._collection$_map.$index(0, path), path);
    },
    $signature: 350
  };
  T.EmptyExtender.prototype = {
    get$isEmpty: function(_) {
      return true;
    },
    get$simpleSelectors: function() {
      return C.C_EmptyUnmodifiableSet;
    },
    extensionsWhereTarget$1: function(callback) {
      return C.List_empty2;
    },
    addExtensions$1: function(extenders) {
      throw H.wrapException(P.UnsupportedError$(string$.addExt));
    },
    clone$0: function() {
      return C.Tuple2_EmptyExtender_Map_empty;
    },
    $isExtender: 1
  };
  F.Extender.prototype = {
    get$isEmpty: function(_) {
      var t1 = this._extensions;
      return t1.get$isEmpty(t1);
    },
    get$simpleSelectors: function() {
      return new M.MapKeySet(this._selectors, type$.MapKeySet_legacy_SimpleSelector);
    },
    extensionsWhereTarget$1: function($async$callback) {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var callback = $async$callback;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4;
        return function $async$extensionsWhereTarget$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._extensions, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2);
              case 2:
                // for condition
                if (!t2.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                t3 = t2.get$current(t2);
                if (!callback.call$1(t3)) {
                  // goto for condition
                  $async$goto = 2;
                  break;
                }
                t3 = J.get$values$z(t1.$index(0, t3)), t3 = t3.get$iterator(t3);
              case 4:
                // for condition
                if (!t3.moveNext$0()) {
                  // goto after for
                  $async$goto = 5;
                  break;
                }
                t4 = t3.get$current(t3);
                $async$goto = t4 instanceof A.MergedExtension ? 6 : 8;
                break;
              case 6:
                // then
                t4 = t4.unmerge$0();
                $async$goto = 9;
                return P._IterationMarker_yieldStar(new H.WhereIterable(t4, new F.Extender_extensionsWhereTarget_closure(), t4.$ti._eval$1("WhereIterable<Iterable.E>")));
              case 9:
                // after yield
                // goto join
                $async$goto = 7;
                break;
              case 8:
                // else
                $async$goto = !t4.isOptional ? 10 : 11;
                break;
              case 10:
                // then
                $async$goto = 12;
                return t4;
              case 12:
                // after yield
              case 11:
                // join
              case 7:
                // join
                // goto for condition
                $async$goto = 4;
                break;
              case 5:
                // after for
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.legacy_Extension);
    },
    addSelector$3: function(selector, span, mediaContext) {
      var originalSelector, error, t1, t2, t3, _i, exception, modifiableSelector, _this = this;
      selector = selector;
      originalSelector = selector;
      if (!originalSelector.get$isInvisible())
        for (t1 = originalSelector.components, t2 = t1.length, t3 = _this._originals, _i = 0; _i < t2; ++_i)
          t3.add$1(0, t1[_i]);
      t1 = _this._extensions;
      if (t1.get$isNotEmpty(t1))
        try {
          selector = _this._extendList$3(originalSelector, t1, mediaContext);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.SassException) {
            error = t1;
            throw H.wrapException(E.SassException$("From " + error.get$span().message$1(0, "") + "\n" + H.S(error._span_exception$_message), span));
          } else
            throw exception;
        }
      modifiableSelector = new F.ModifiableCssValue(selector, span, type$.ModifiableCssValue_legacy_SelectorList);
      if (mediaContext != null)
        _this._mediaContexts.$indexSet(0, modifiableSelector, mediaContext);
      _this._registerSelector$2(selector, modifiableSelector);
      return modifiableSelector;
    },
    _registerSelector$2: function(list, selector) {
      var t1, t2, t3, _i, t4, t5, _i0, component, t6, t7, _i1, simple;
      for (t1 = list.components, t2 = t1.length, t3 = this._selectors, _i = 0; _i < t2; ++_i)
        for (t4 = t1[_i].components, t5 = t4.length, _i0 = 0; _i0 < t5; ++_i0) {
          component = t4[_i0];
          if (component instanceof X.CompoundSelector)
            for (t6 = component.components, t7 = t6.length, _i1 = 0; _i1 < t7; ++_i1) {
              simple = t6[_i1];
              J.add$1$ax(t3.putIfAbsent$2(simple, new F.Extender__registerSelector_closure()), selector);
              if (simple instanceof D.PseudoSelector && simple.selector != null)
                this._registerSelector$2(simple.selector, selector);
            }
        }
    },
    addExtension$4: function(extender, target, extend, mediaContext) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, newExtensions, _i, complex, t12, state, existingState, t13, _i0, component, t14, t15, _i1, simple, newExtensionsByTarget, additionalExtensions, _this = this,
        selectors = _this._selectors.$index(0, target),
        t1 = _this._extensionsByExtender,
        existingExtensions = t1.$index(0, target),
        sources = _this._extensions.putIfAbsent$2(target, new F.Extender_addExtension_closure());
      for (t2 = extender.value.components, t3 = t2.length, t4 = selectors == null, t5 = _this._sourceSpecificity, t6 = extender.span, t7 = extend.span, t8 = extend.isOptional, t9 = existingExtensions != null, t10 = type$.legacy_ComplexSelector, t11 = type$.legacy_Extension, newExtensions = null, _i = 0; _i < t3; ++_i) {
        complex = t2[_i];
        if (complex._maxSpecificity == null)
          complex._computeSpecificity$0();
        t12 = complex._maxSpecificity;
        state = new S.Extension(complex, target, t12, t8, false, mediaContext, t6, t7);
        existingState = sources.$index(0, complex);
        if (existingState != null) {
          sources.$indexSet(0, complex, A.MergedExtension_merge(existingState, state));
          continue;
        }
        sources.$indexSet(0, complex, state);
        for (t12 = complex.components, t13 = t12.length, _i0 = 0; _i0 < t13; ++_i0) {
          component = t12[_i0];
          if (component instanceof X.CompoundSelector)
            for (t14 = component.components, t15 = t14.length, _i1 = 0; _i1 < t15; ++_i1) {
              simple = t14[_i1];
              J.add$1$ax(t1.putIfAbsent$2(simple, new F.Extender_addExtension_closure0()), state);
              t5.putIfAbsent$2(simple, new F.Extender_addExtension_closure1(complex));
            }
        }
        if (!t4 || t9) {
          if (newExtensions == null)
            newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t10, t11);
          newExtensions.$indexSet(0, complex, state);
        }
      }
      if (newExtensions == null)
        return;
      t1 = type$.legacy_SimpleSelector;
      newExtensionsByTarget = P.LinkedHashMap_LinkedHashMap$_literal([target, newExtensions], t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension);
      if (t9) {
        additionalExtensions = _this._extendExistingExtensions$2(existingExtensions, newExtensionsByTarget);
        if (additionalExtensions != null)
          B.mapAddAll2(newExtensionsByTarget, additionalExtensions, t1, t10, t11);
      }
      if (!t4)
        _this._extendExistingSelectors$2(selectors, newExtensionsByTarget);
    },
    _extendExistingExtensions$2: function(extensions, newExtensions) {
      var extension, selectors, error, t1, t2, t3, t4, t5, t6, additionalExtensions, _i, sources, exception, containsExtension, t7, t8, first, _i0, complex, t9, t10, t11, t12, t13, t14, withExtender, existingExtension, _i1, component, _i2;
      for (t1 = J.toList$0$ax(extensions), t2 = t1.length, t3 = this._extensionsByExtender, t4 = type$.legacy_SimpleSelector, t5 = type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension, t6 = this._extensions, additionalExtensions = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        extension = t1[_i];
        sources = t6.$index(0, extension.target);
        selectors = null;
        try {
          selectors = this._extendComplex$3(extension.extender, newExtensions, extension.mediaContext);
          if (selectors == null)
            continue;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.SassException) {
            error = t1;
            throw H.wrapException(E.SassException$("From " + extension.extenderSpan.message$1(0, "") + "\n" + H.S(error._span_exception$_message), error.get$span()));
          } else
            throw exception;
        }
        containsExtension = J.$eq$(J.get$first$ax(selectors), extension.extender);
        for (t7 = selectors, t8 = t7.length, first = false, _i0 = 0; _i0 < t7.length; t7.length === t8 || (0, H.throwConcurrentModificationError)(t7), ++_i0) {
          complex = t7[_i0];
          if (containsExtension && first) {
            first = false;
            continue;
          }
          t9 = extension;
          t10 = t9.target;
          t11 = t9.extenderSpan;
          t12 = t9.span;
          t13 = t9.mediaContext;
          t14 = t9.specificity;
          t9 = t9.isOptional;
          if (t14 == null) {
            if (complex._maxSpecificity == null)
              complex._computeSpecificity$0();
            t14 = complex._maxSpecificity;
          }
          withExtender = new S.Extension(complex, t10, t14, t9, false, t13, t11, t12);
          existingExtension = sources.$index(0, complex);
          if (existingExtension != null)
            sources.$indexSet(0, complex, A.MergedExtension_merge(existingExtension, withExtender));
          else {
            sources.$indexSet(0, complex, withExtender);
            for (t9 = complex.components, t10 = t9.length, _i1 = 0; _i1 < t10; ++_i1) {
              component = t9[_i1];
              if (component instanceof X.CompoundSelector)
                for (t11 = component.components, t12 = t11.length, _i2 = 0; _i2 < t12; ++_i2)
                  J.add$1$ax(t3.putIfAbsent$2(t11[_i2], new F.Extender__extendExistingExtensions_closure()), withExtender);
            }
            if (newExtensions.containsKey$1(extension.target)) {
              if (additionalExtensions == null)
                additionalExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);
              additionalExtensions.putIfAbsent$2(extension.target, new F.Extender__extendExistingExtensions_closure0()).$indexSet(0, complex, withExtender);
            }
          }
        }
        if (!containsExtension)
          sources.remove$1(0, extension.extender);
      }
      return additionalExtensions;
    },
    _extendExistingSelectors$2: function(selectors, newExtensions) {
      var selector, error, t1, t2, oldValue, exception;
      for (t1 = selectors.get$iterator(selectors), t2 = this._mediaContexts; t1.moveNext$0();) {
        selector = t1.get$current(t1);
        oldValue = selector.value;
        try {
          selector.value = this._extendList$3(selector.value, newExtensions, t2.$index(0, selector));
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.SassException) {
            error = t1;
            throw H.wrapException(E.SassException$("From " + selector.span.message$1(0, "") + "\n" + H.S(error._span_exception$_message), error.get$span()));
          } else
            throw exception;
        }
        if (oldValue == selector.value)
          continue;
        this._registerSelector$2(selector.value, selector);
      }
    },
    addExtensions$1: function(extenders) {
      var t1, t2, t3, _this = this, _box_0 = {};
      _box_0.newExtensions = _box_0.selectorsToExtend = _box_0.extensionsToExtend = null;
      for (t1 = J.get$iterator$ax(extenders), t2 = _this._sourceSpecificity; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        if (t3.get$isEmpty(t3))
          continue;
        t2.addAll$1(0, t3.get$_sourceSpecificity());
        t3.get$_extensions().forEach$1(0, new F.Extender_addExtensions_closure(_box_0, _this, t3));
      }
      t1 = _box_0.newExtensions;
      if (t1 == null)
        return;
      t2 = _box_0.extensionsToExtend;
      if (t2 != null)
        _this._extendExistingExtensions$2(t2, t1);
      t1 = _box_0.selectorsToExtend;
      if (t1 != null)
        _this._extendExistingSelectors$2(t1, _box_0.newExtensions);
    },
    _extendList$3: function(list, extensions, mediaQueryContext) {
      var t1, t2, t3, extended, i, complex, result, t4;
      for (t1 = list.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector, extended = null, i = 0; i < t2; ++i) {
        complex = t1[i];
        result = this._extendComplex$3(complex, extensions, mediaQueryContext);
        if (result == null) {
          if (extended != null)
            extended.push(complex);
        } else {
          if (extended == null)
            if (i === 0)
              extended = H.setRuntimeTypeInfo([], t3);
            else {
              t4 = C.JSArray_methods.sublist$2(t1, 0, i);
              extended = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4)._eval$1("JSArray<1>"));
            }
          C.JSArray_methods.addAll$1(extended, result);
        }
      }
      if (extended == null)
        return list;
      t1 = this._originals;
      return D.SelectorList$(J.where$1$ax(this._trim$2(extended, t1.get$contains(t1)), new F.Extender__extendList_closure()));
    },
    _extendComplex$3: function(complex, extensions, mediaQueryContext) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, extendedNotExpanded, i, component, extended, result, t10,
        _s28_ = "components may not be empty.",
        _box_0 = {},
        isOriginal = this._originals.contains$1(0, complex);
      for (t1 = complex.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector, t4 = type$.JSArray_legacy_ComplexSelectorComponent, t5 = type$.legacy_ComplexSelectorComponent, t6 = H._arrayInstanceType(t1), t7 = t6._precomputed1, t6 = t6._eval$1("SubListIterable<1>"), t8 = t6._eval$1("MappedListIterable<ListIterable.E,List<ComplexSelector*>*>"), t9 = t8._eval$1("ListIterable.E"), extendedNotExpanded = null, i = 0; i < t2; ++i) {
        component = t1[i];
        if (component instanceof X.CompoundSelector) {
          extended = this._extendCompound$4$inOriginal(component, extensions, mediaQueryContext, isOriginal);
          if (extended == null) {
            if (extendedNotExpanded != null) {
              result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t10 = result;
              if (t10.length === 0)
                H.throwExpression(P.ArgumentError$(_s28_));
              C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector(t10, false)], t3));
            }
          } else {
            if (extendedNotExpanded == null) {
              t10 = new H.SubListIterable(t1, 0, i, t6);
              t10.SubListIterable$3(t1, 0, i, t7);
              extendedNotExpanded = P.List_List$from(new H.MappedListIterable(t10, new F.Extender__extendComplex_closure(complex), t8), true, t9);
            }
            C.JSArray_methods.add$1(extendedNotExpanded, extended);
          }
        } else if (extendedNotExpanded != null) {
          result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);
          result.fixed$length = Array;
          result.immutable$list = Array;
          t10 = result;
          if (t10.length === 0)
            H.throwExpression(P.ArgumentError$(_s28_));
          C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector(t10, false)], t3));
        }
      }
      if (extendedNotExpanded == null)
        return null;
      _box_0.first = true;
      t1 = type$.legacy_ComplexSelector;
      t1 = J.expand$1$1$ax(Y.paths(extendedNotExpanded, t1), new F.Extender__extendComplex_closure0(_box_0, this, complex), t1);
      return P.List_List$from(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    _extendCompound$4$inOriginal: function(compound, extensions, mediaQueryContext, inOriginal) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, options, i, simple, extended, result, t13, t14, unifiedPaths, isOriginal, _this = this, _null = null,
        _s28_ = "components may not be empty.",
        _box_1 = {},
        t1 = _this._mode,
        targetsUsed = t1 === C.ExtendMode_normal || extensions.get$length(extensions) < 2 ? _null : P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_SimpleSelector);
      for (t2 = compound.components, t3 = t2.length, t4 = type$.JSArray_legacy_List_legacy_Extension, t5 = type$.JSArray_legacy_Extension, t6 = type$.JSArray_legacy_ComplexSelectorComponent, t7 = type$.legacy_ComplexSelectorComponent, t8 = H._arrayInstanceType(t2), t9 = t8._precomputed1, t8 = t8._eval$1("SubListIterable<1>"), t10 = type$.legacy_SimpleSelector, t11 = _this._sourceSpecificity, t12 = type$.JSArray_legacy_SimpleSelector, options = _null, i = 0; i < t3; ++i) {
        simple = t2[i];
        extended = _this._extendSimple$4(simple, extensions, mediaQueryContext, targetsUsed);
        if (extended == null) {
          if (options != null) {
            result = P.List_List$from(H.setRuntimeTypeInfo([simple], t12), false, t10);
            result.fixed$length = Array;
            result.immutable$list = Array;
            t13 = result;
            if (t13.length === 0)
              H.throwExpression(P.ArgumentError$(_s28_));
            result = P.List_List$from(H.setRuntimeTypeInfo([new X.CompoundSelector(t13)], t6), false, t7);
            result.fixed$length = Array;
            result.immutable$list = Array;
            t13 = result;
            if (t13.length === 0)
              H.throwExpression(P.ArgumentError$(_s28_));
            t14 = t11.$index(0, simple);
            if (t14 == null)
              t14 = 0;
            options.push(H.setRuntimeTypeInfo([new S.Extension(new S.ComplexSelector(t13, false), _null, t14, true, true, _null, _null, _null)], t5));
          }
        } else {
          if (options == null) {
            options = H.setRuntimeTypeInfo([], t4);
            if (i !== 0) {
              t13 = new H.SubListIterable(t2, 0, i, t8);
              t13.SubListIterable$3(t2, 0, i, t9);
              result = P.List_List$from(t13, false, t10);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t13 = result;
              compound = new X.CompoundSelector(t13);
              if (t13.length === 0)
                H.throwExpression(P.ArgumentError$(_s28_));
              result = P.List_List$from(H.setRuntimeTypeInfo([compound], t6), false, t7);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t13 = result;
              if (t13.length === 0)
                H.throwExpression(P.ArgumentError$(_s28_));
              t14 = _this._sourceSpecificityFor$1(compound);
              options.push(H.setRuntimeTypeInfo([new S.Extension(new S.ComplexSelector(t13, false), _null, t14, true, true, _null, _null, _null)], t5));
            }
          }
          C.JSArray_methods.addAll$1(options, extended);
        }
      }
      if (options == null)
        return _null;
      if (targetsUsed != null && targetsUsed._collection$_length !== extensions.get$length(extensions))
        return _null;
      if (options.length === 1)
        return J.map$1$1$ax(C.JSArray_methods.get$first(options), new F.Extender__extendCompound_closure(mediaQueryContext), type$.legacy_ComplexSelector).toList$0(0);
      t1 = _box_1.first = t1 !== C.ExtendMode_replace;
      unifiedPaths = J.map$1$1$ax(Y.paths(options, type$.legacy_Extension), new F.Extender__extendCompound_closure0(_box_1, mediaQueryContext), type$.legacy_List_legacy_ComplexSelector);
      isOriginal = new F.Extender__extendCompound_closure1();
      if (inOriginal && t1)
        isOriginal = new F.Extender__extendCompound_closure2(J.get$first$ax(unifiedPaths.get$first(unifiedPaths)));
      t1 = unifiedPaths.where$1(0, new F.Extender__extendCompound_closure3());
      t2 = t1.$ti._eval$1("ExpandIterable<Iterable.E,ComplexSelector*>");
      return _this._trim$2(P.List_List$from(new H.ExpandIterable(t1, new F.Extender__extendCompound_closure4(), t2), true, t2._eval$1("Iterable.E")), isOriginal);
    },
    _extendSimple$4: function(simple, extensions, mediaQueryContext, targetsUsed) {
      var extended, result,
        t1 = new F.Extender__extendSimple_withoutPseudo(this, extensions, targetsUsed);
      if (simple instanceof D.PseudoSelector && simple.selector != null) {
        extended = this._extendPseudo$3(simple, extensions, mediaQueryContext);
        if (extended != null)
          return new H.MappedListIterable(extended, new F.Extender__extendSimple_closure(this, t1), H._arrayInstanceType(extended)._eval$1("MappedListIterable<1,List<Extension*>*>"));
      }
      result = t1.call$1(simple);
      return result == null ? null : H.setRuntimeTypeInfo([result], type$.JSArray_legacy_List_legacy_Extension);
    },
    _extensionForSimple$1: function(simple) {
      var t1 = S.ComplexSelector$(H.setRuntimeTypeInfo([X.CompoundSelector$(H.setRuntimeTypeInfo([simple], type$.JSArray_legacy_SimpleSelector))], type$.JSArray_legacy_ComplexSelectorComponent), false),
        t2 = this._sourceSpecificity.$index(0, simple);
      return S.Extension$oneOff(t1, true, t2 == null ? 0 : t2);
    },
    _extendPseudo$3: function(pseudo, extensions, mediaQueryContext) {
      var complexes, t2, result,
        t1 = pseudo.selector,
        extended = this._extendList$3(t1, extensions, mediaQueryContext);
      if (extended == t1)
        return null;
      complexes = extended.components;
      t2 = pseudo.normalizedName === "not";
      if (t2 && !C.JSArray_methods.any$1(t1.components, new F.Extender__extendPseudo_closure()) && C.JSArray_methods.any$1(complexes, new F.Extender__extendPseudo_closure0()))
        complexes = new H.WhereIterable(complexes, new F.Extender__extendPseudo_closure1(), H._arrayInstanceType(complexes)._eval$1("WhereIterable<1>"));
      complexes = J.expand$1$1$ax(complexes, new F.Extender__extendPseudo_closure2(pseudo), type$.legacy_ComplexSelector);
      if (t2 && t1.components.length === 1) {
        t1 = H.MappedIterable_MappedIterable(complexes, new F.Extender__extendPseudo_closure3(pseudo), complexes.$ti._eval$1("Iterable.E"), type$.legacy_PseudoSelector);
        result = P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
        return result.length === 0 ? null : result;
      } else
        return H.setRuntimeTypeInfo([D.PseudoSelector$(pseudo.name, pseudo.argument, !pseudo.isClass, D.SelectorList$(complexes))], type$.JSArray_legacy_PseudoSelector);
    },
    _trim$2: function(selectors, isOriginal) {
      var result, i, t1, t2, numOriginals, _box_0, complex1, j, t3, t4, _i, component;
      if (selectors.length > 100)
        return selectors;
      result = Q.QueueList$(null, type$.legacy_ComplexSelector);
      $label0$0:
        for (i = selectors.length - 1, t1 = H._arrayInstanceType(selectors), t2 = t1._precomputed1, t1 = t1._eval$1("SubListIterable<1>"), numOriginals = 0; i >= 0; --i) {
          _box_0 = {};
          complex1 = selectors[i];
          if (isOriginal.call$1(complex1)) {
            for (j = 0; j < numOriginals; ++j)
              if (J.$eq$(result.$index(0, j), complex1)) {
                B.rotateSlice(result, 0, j + 1);
                continue $label0$0;
              }
            ++numOriginals;
            result.addFirst$1(complex1);
            continue $label0$0;
          }
          _box_0.maxSpecificity = 0;
          for (t3 = complex1.components, t4 = t3.length, _i = 0; _i < t4; ++_i) {
            component = t3[_i];
            if (component instanceof X.CompoundSelector)
              _box_0.maxSpecificity = Math.max(_box_0.maxSpecificity, this._sourceSpecificityFor$1(component));
          }
          if (result.any$1(result, new F.Extender__trim_closure(_box_0, complex1)))
            continue $label0$0;
          t3 = new H.SubListIterable(selectors, 0, i, t1);
          t3.SubListIterable$3(selectors, 0, i, t2);
          if (t3.any$1(0, new F.Extender__trim_closure0(_box_0, complex1)))
            continue $label0$0;
          result.addFirst$1(complex1);
        }
      return result;
    },
    _sourceSpecificityFor$1: function(compound) {
      var t1, t2, t3, specificity, _i, t4;
      for (t1 = compound.components, t2 = t1.length, t3 = this._sourceSpecificity, specificity = 0, _i = 0; _i < t2; ++_i) {
        t4 = t3.$index(0, t1[_i]);
        specificity = Math.max(specificity, H.checkNum(t4 == null ? 0 : t4));
      }
      return specificity;
    },
    clone$0: function() {
      var t3, t4, _this = this,
        t1 = type$.legacy_SimpleSelector,
        newSelectors = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList),
        t2 = type$.legacy_ModifiableCssValue_legacy_SelectorList,
        newMediaContexts = P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_List_legacy_CssMediaQuery),
        oldToNewSelectors = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_CssValue_legacy_SelectorList, t2);
      _this._selectors.forEach$1(0, new F.Extender_clone_closure(_this, newSelectors, oldToNewSelectors, newMediaContexts));
      t2 = type$.legacy_Extension;
      t3 = B.copyMapOfMap(_this._extensions, t1, type$.legacy_ComplexSelector, t2);
      t2 = B.copyMapOfList(_this._extensionsByExtender, t1, t2);
      t1 = P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int);
      t1.addAll$1(0, _this._sourceSpecificity);
      t4 = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector);
      t4.addAll$1(0, _this._originals);
      return new S.Tuple2(new F.Extender(newSelectors, t3, t2, newMediaContexts, t1, t4, C.ExtendMode_normal), oldToNewSelectors, type$.Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList);
    },
    get$_extensions: function() {
      return this._extensions;
    },
    get$_sourceSpecificity: function() {
      return this._sourceSpecificity;
    }
  };
  F.Extender_extensionsWhereTarget_closure.prototype = {
    call$1: function(extension) {
      return !extension.isOptional;
    },
    $signature: 346
  };
  F.Extender__registerSelector_closure.prototype = {
    call$0: function() {
      return P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList);
    },
    $signature: 345
  };
  F.Extender_addExtension_closure.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector, type$.legacy_Extension);
    },
    $signature: 86
  };
  F.Extender_addExtension_closure0.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension);
    },
    $signature: 163
  };
  F.Extender_addExtension_closure1.prototype = {
    call$0: function() {
      return this.complex.get$maxSpecificity();
    },
    $signature: 11
  };
  F.Extender__extendExistingExtensions_closure.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension);
    },
    $signature: 163
  };
  F.Extender__extendExistingExtensions_closure0.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector, type$.legacy_Extension);
    },
    $signature: 86
  };
  F.Extender_addExtensions_closure.prototype = {
    call$2: function(target, newSources) {
      var t1, extensionsForTarget, t2, t3, t4, selectorsForTarget, t5, existingSources, _this = this;
      if (target instanceof N.PlaceholderSelector && T.isPrivate(target.name))
        return;
      t1 = _this.$this;
      extensionsForTarget = t1._extensionsByExtender.$index(0, target);
      t2 = extensionsForTarget == null;
      if (!t2) {
        t3 = _this._box_0;
        t4 = t3.extensionsToExtend;
        C.JSArray_methods.addAll$1(t4 == null ? t3.extensionsToExtend = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension) : t4, extensionsForTarget);
      }
      selectorsForTarget = t1._selectors.$index(0, target);
      t3 = selectorsForTarget != null;
      if (t3) {
        t4 = _this._box_0;
        t5 = t4.selectorsToExtend;
        (t5 == null ? t4.selectorsToExtend = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList) : t5).addAll$1(0, selectorsForTarget);
      }
      t1 = t1._extensions;
      existingSources = t1.$index(0, target);
      if (existingSources == null) {
        t4 = _this.extender;
        t1.$indexSet(0, target, t4.get$_extensions().$index(0, target));
        if (!t2 || t3) {
          t1 = _this._box_0;
          t2 = t1.newExtensions;
          t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension) : t2;
          t1.$indexSet(0, target, t4.get$_extensions().$index(0, target));
        }
      } else
        newSources.forEach$1(0, new F.Extender_addExtensions__closure(_this._box_0, existingSources, extensionsForTarget, selectorsForTarget, target));
    },
    $signature: 341
  };
  F.Extender_addExtensions__closure.prototype = {
    call$2: function(extender, extension) {
      var t2, _this = this,
        t1 = _this.existingSources;
      if (t1.containsKey$1(extender))
        return;
      t1.$indexSet(0, extender, extension);
      if (_this.extensionsForTarget != null || _this.selectorsForTarget != null) {
        t1 = _this._box_0;
        t2 = t1.newExtensions;
        t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension) : t2;
        t1.putIfAbsent$2(_this.target, new F.Extender_addExtensions___closure()).putIfAbsent$2(extender, new F.Extender_addExtensions___closure0(extension));
      }
    },
    $signature: 340
  };
  F.Extender_addExtensions___closure.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector, type$.legacy_Extension);
    },
    $signature: 86
  };
  F.Extender_addExtensions___closure0.prototype = {
    call$0: function() {
      return this.extension;
    },
    $signature: 339
  };
  F.Extender__extendList_closure.prototype = {
    call$1: function(complex) {
      return complex != null;
    },
    $signature: 15
  };
  F.Extender__extendComplex_closure.prototype = {
    call$1: function(component) {
      return H.setRuntimeTypeInfo([S.ComplexSelector$(H.setRuntimeTypeInfo([component], type$.JSArray_legacy_ComplexSelectorComponent), this.complex.lineBreak)], type$.JSArray_legacy_ComplexSelector);
    },
    $signature: 338
  };
  F.Extender__extendComplex_closure0.prototype = {
    call$1: function(path) {
      var t1 = Y.weave(J.map$1$1$ax(path, new F.Extender__extendComplex__closure(), type$.legacy_List_legacy_ComplexSelectorComponent).toList$0(0));
      return new H.MappedListIterable(t1, new F.Extender__extendComplex__closure0(this._box_0, this.$this, this.complex, path), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector*>"));
    },
    $signature: 336
  };
  F.Extender__extendComplex__closure.prototype = {
    call$1: function(complex) {
      return complex.components;
    },
    $signature: 335
  };
  F.Extender__extendComplex__closure0.prototype = {
    call$1: function(components) {
      var _this = this,
        t1 = _this.complex,
        outputComplex = S.ComplexSelector$(components, t1.lineBreak || J.any$1$ax(_this.path, new F.Extender__extendComplex___closure())),
        t2 = _this._box_0;
      if (t2.first && _this.$this._originals.contains$1(0, t1))
        _this.$this._originals.add$1(0, outputComplex);
      t2.first = false;
      return outputComplex;
    },
    $signature: 62
  };
  F.Extender__extendComplex___closure.prototype = {
    call$1: function(inputComplex) {
      return inputComplex.lineBreak;
    },
    $signature: 15
  };
  F.Extender__extendCompound_closure.prototype = {
    call$1: function(state) {
      state.assertCompatibleMediaContext$1(this.mediaQueryContext);
      return state.extender;
    },
    $signature: 334
  };
  F.Extender__extendCompound_closure0.prototype = {
    call$1: function(path) {
      var complexes, toUnify, t2, t3, originals, t4, _box_0 = {},
        t1 = this._box_1;
      if (t1.first) {
        t1.first = false;
        complexes = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([X.CompoundSelector$(J.expand$1$1$ax(path, new F.Extender__extendCompound__closure(), type$.legacy_SimpleSelector))], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent);
      } else {
        toUnify = Q.QueueList$(null, type$.legacy_List_legacy_ComplexSelectorComponent);
        for (t1 = J.get$iterator$ax(path), t2 = type$.legacy_CompoundSelector, t3 = type$.JSArray_legacy_SimpleSelector, originals = null; t1.moveNext$0();) {
          t4 = t1.get$current(t1);
          if (t4.isOriginal) {
            if (originals == null)
              originals = H.setRuntimeTypeInfo([], t3);
            C.JSArray_methods.addAll$1(originals, t2._as(C.JSArray_methods.get$last(t4.extender.components)).components);
          } else
            toUnify._queue_list$_add$1(t4.extender.components);
        }
        if (originals != null)
          toUnify.addFirst$1(H.setRuntimeTypeInfo([X.CompoundSelector$(originals)], type$.JSArray_legacy_ComplexSelectorComponent));
        complexes = Y.unifyComplex(toUnify);
        if (complexes == null)
          return null;
      }
      _box_0.lineBreak = false;
      for (t1 = J.get$iterator$ax(path), t2 = this.mediaQueryContext; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        t3.assertCompatibleMediaContext$1(t2);
        _box_0.lineBreak = _box_0.lineBreak || t3.extender.lineBreak;
      }
      t1 = J.map$1$1$ax(complexes, new F.Extender__extendCompound__closure0(_box_0), type$.legacy_ComplexSelector);
      return P.List_List$from(t1, true, t1.$ti._eval$1("ListIterable.E"));
    },
    $signature: 333
  };
  F.Extender__extendCompound__closure.prototype = {
    call$1: function(state) {
      return type$.legacy_CompoundSelector._as(C.JSArray_methods.get$last(state.extender.components)).components;
    },
    $signature: 330
  };
  F.Extender__extendCompound__closure0.prototype = {
    call$1: function(components) {
      return S.ComplexSelector$(components, this._box_0.lineBreak);
    },
    $signature: 62
  };
  F.Extender__extendCompound_closure1.prototype = {
    call$1: function(_) {
      return false;
    },
    $signature: 15
  };
  F.Extender__extendCompound_closure2.prototype = {
    call$1: function(complex) {
      return J.$eq$(complex, this.original);
    },
    $signature: 15
  };
  F.Extender__extendCompound_closure3.prototype = {
    call$1: function(complexes) {
      return complexes != null;
    },
    $signature: 329
  };
  F.Extender__extendCompound_closure4.prototype = {
    call$1: function(l) {
      return l;
    },
    $signature: 326
  };
  F.Extender__extendSimple_withoutPseudo.prototype = {
    call$1: function(simple) {
      var t1, t2,
        extenders = this.extensions.$index(0, simple);
      if (extenders == null)
        return null;
      t1 = this.targetsUsed;
      if (t1 != null)
        t1.add$1(0, simple);
      t1 = this.$this;
      if (t1._mode === C.ExtendMode_replace) {
        t1 = extenders.get$values(extenders);
        return P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
      }
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension);
      t2.push(t1._extensionForSimple$1(simple));
      for (t1 = extenders.get$values(extenders), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t2.push(t1.get$current(t1));
      return t2;
    },
    $signature: 324
  };
  F.Extender__extendSimple_closure.prototype = {
    call$1: function(pseudo) {
      var t1 = this.withoutPseudo.call$1(pseudo);
      return t1 == null ? H.setRuntimeTypeInfo([this.$this._extensionForSimple$1(pseudo)], type$.JSArray_legacy_Extension) : t1;
    },
    $signature: 322
  };
  F.Extender__extendPseudo_closure.prototype = {
    call$1: function(complex) {
      return complex.components.length > 1;
    },
    $signature: 15
  };
  F.Extender__extendPseudo_closure0.prototype = {
    call$1: function(complex) {
      return complex.components.length === 1;
    },
    $signature: 15
  };
  F.Extender__extendPseudo_closure1.prototype = {
    call$1: function(complex) {
      return complex.components.length <= 1;
    },
    $signature: 15
  };
  F.Extender__extendPseudo_closure2.prototype = {
    call$1: function(complex) {
      var innerPseudo, t2,
        t1 = complex.components;
      if (t1.length !== 1)
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);
      if (!(C.JSArray_methods.get$first(t1) instanceof X.CompoundSelector))
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);
      t1 = type$.legacy_CompoundSelector._as(C.JSArray_methods.get$first(t1)).components;
      if (t1.length !== 1)
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);
      if (!(C.JSArray_methods.get$first(t1) instanceof D.PseudoSelector))
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);
      innerPseudo = type$.legacy_PseudoSelector._as(C.JSArray_methods.get$first(t1));
      t1 = innerPseudo.selector;
      if (t1 == null)
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);
      t2 = this.pseudo;
      switch (t2.normalizedName) {
        case "not":
          if (innerPseudo.normalizedName !== "matches")
            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);
          return t1.components;
        case "matches":
        case "any":
        case "current":
        case "nth-child":
        case "nth-last-child":
          if (innerPseudo.name !== t2.name)
            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);
          if (innerPseudo.argument != t2.argument)
            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);
          return t1.components;
        case "has":
        case "host":
        case "host-context":
        case "slotted":
          return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);
        default:
          return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);
      }
    },
    $signature: 320
  };
  F.Extender__extendPseudo_closure3.prototype = {
    call$1: function(complex) {
      var t1 = this.pseudo;
      return D.PseudoSelector$(t1.name, t1.argument, !t1.isClass, D.SelectorList$(H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector)));
    },
    $signature: 317
  };
  F.Extender__trim_closure.prototype = {
    call$1: function(complex2) {
      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector(complex2.components, this.complex1.components);
    },
    $signature: 15
  };
  F.Extender__trim_closure0.prototype = {
    call$1: function(complex2) {
      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector(complex2.components, this.complex1.components);
    },
    $signature: 15
  };
  F.Extender_clone_closure.prototype = {
    call$2: function(simple, selectors) {
      var t1, t2, t3, t4, t5, t6, newSelector, mediaContext, _this = this,
        newSelectorSet = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList);
      _this.newSelectors.$indexSet(0, simple, newSelectorSet);
      for (t1 = selectors.get$iterator(selectors), t2 = type$.ModifiableCssValue_legacy_SelectorList, t3 = _this.oldToNewSelectors, t4 = _this.$this._mediaContexts, t5 = _this.newMediaContexts; t1.moveNext$0();) {
        t6 = t1.get$current(t1);
        newSelector = new F.ModifiableCssValue(t6.value, t6.span, t2);
        newSelectorSet.add$1(0, newSelector);
        t3.$indexSet(0, t6, newSelector);
        mediaContext = t4.$index(0, t6);
        if (mediaContext != null)
          t5.$indexSet(0, newSelector, mediaContext);
      }
    },
    $signature: 314
  };
  S.Extension.prototype = {
    assertCompatibleMediaContext$1: function(mediaContext) {
      var t1 = this.mediaContext;
      if (t1 == null)
        return;
      if (mediaContext != null && C.C_ListEquality.equals$2(0, t1, mediaContext))
        return;
      throw H.wrapException(E.SassException$(string$.You_ma, this.span));
    },
    toString$0: function(_) {
      var t1 = H.S(this.extender) + " {@extend " + H.S(this.target);
      return t1 + (this.isOptional ? " !optional" : "") + "}";
    },
    get$target: function() {
      return this.target;
    },
    get$span: function() {
      return this.span;
    }
  };
  Y.unifyComplex_closure.prototype = {
    call$1: function(complex) {
      var t1 = J.getInterceptor$asx(complex);
      return t1.sublist$2(complex, 0, t1.get$length(complex) - 1);
    },
    $signature: 97
  };
  Y._weaveParents_closure.prototype = {
    call$2: function(group1, group2) {
      var unified, t1, _null = null;
      if (C.C_ListEquality.equals$2(0, group1, group2))
        return group1;
      if (!(J.get$first$ax(group1) instanceof X.CompoundSelector) || !(J.get$first$ax(group2) instanceof X.CompoundSelector))
        return _null;
      if (Y.complexIsParentSuperselector(group1, group2))
        return group2;
      if (Y.complexIsParentSuperselector(group2, group1))
        return group1;
      if (!Y._mustUnify(group1, group2))
        return _null;
      unified = Y.unifyComplex(H.setRuntimeTypeInfo([group1, group2], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));
      if (unified == null)
        return _null;
      t1 = J.getInterceptor$asx(unified);
      if (t1.get$length(unified) > 1)
        return _null;
      return t1.get$first(unified);
    },
    $signature: 312
  };
  Y._weaveParents_closure0.prototype = {
    call$1: function(sequence) {
      return Y.complexIsParentSuperselector(sequence.get$first(sequence), this.group);
    },
    $signature: 311
  };
  Y._weaveParents_closure1.prototype = {
    call$1: function(chunk) {
      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure1(), type$.legacy_ComplexSelectorComponent);
    },
    $signature: 130
  };
  Y._weaveParents__closure1.prototype = {
    call$1: function(group) {
      return group;
    },
    $signature: 97
  };
  Y._weaveParents_closure2.prototype = {
    call$1: function(sequence) {
      return sequence.get$length(sequence) === 0;
    },
    $signature: 131
  };
  Y._weaveParents_closure3.prototype = {
    call$1: function(chunk) {
      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure0(), type$.legacy_ComplexSelectorComponent);
    },
    $signature: 130
  };
  Y._weaveParents__closure0.prototype = {
    call$1: function(group) {
      return group;
    },
    $signature: 97
  };
  Y._weaveParents_closure4.prototype = {
    call$1: function(choice) {
      return J.get$isNotEmpty$asx(choice);
    },
    $signature: 306
  };
  Y._weaveParents_closure5.prototype = {
    call$1: function(path) {
      var t1 = J.expand$1$1$ax(path, new Y._weaveParents__closure(), type$.legacy_ComplexSelectorComponent);
      return P.List_List$from(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    $signature: 305
  };
  Y._weaveParents__closure.prototype = {
    call$1: function(group) {
      return group;
    },
    $signature: 304
  };
  Y._mustUnify_closure.prototype = {
    call$1: function(component) {
      return component instanceof X.CompoundSelector && C.JSArray_methods.any$1(component.components, new Y._mustUnify__closure(this.uniqueSelectors));
    },
    $signature: 91
  };
  Y._mustUnify__closure.prototype = {
    call$1: function(simple) {
      var t1;
      if (!(simple instanceof N.IDSelector))
        t1 = simple instanceof D.PseudoSelector && !simple.isClass;
      else
        t1 = true;
      return t1 && this.uniqueSelectors.contains$1(0, simple);
    },
    $signature: 18
  };
  Y.paths_closure.prototype = {
    call$2: function(paths, choice) {
      var t1 = this.T;
      t1 = J.expand$1$1$ax(choice, new Y.paths__closure(paths, t1), t1._eval$1("List<0*>*"));
      return P.List_List$from(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    $signature: function() {
      return this.T._eval$1("List<List<0*>*>*(List<List<0*>*>*,List<0*>*)");
    }
  };
  Y.paths__closure.prototype = {
    call$1: function(option) {
      var t1 = this.T;
      return J.map$1$1$ax(this.paths, new Y.paths___closure(option, t1), t1._eval$1("List<0*>*"));
    },
    $signature: function() {
      return this.T._eval$1("Iterable<List<0*>*>*(0*)");
    }
  };
  Y.paths___closure.prototype = {
    call$1: function(path) {
      var t2,
        t1 = H.setRuntimeTypeInfo([], this.T._eval$1("JSArray<0*>"));
      for (t2 = J.get$iterator$ax(path); t2.moveNext$0();)
        t1.push(t2.get$current(t2));
      t1.push(this.option);
      return t1;
    },
    $signature: function() {
      return this.T._eval$1("List<0*>*(List<0*>*)");
    }
  };
  Y._hasRoot_closure.prototype = {
    call$1: function(simple) {
      return simple instanceof D.PseudoSelector && simple.isClass && simple.normalizedName === "root";
    },
    $signature: 18
  };
  Y.listIsSuperselector_closure.prototype = {
    call$1: function(complex1) {
      return C.JSArray_methods.any$1(this.list1, new Y.listIsSuperselector__closure(complex1));
    },
    $signature: 15
  };
  Y.listIsSuperselector__closure.prototype = {
    call$1: function(complex2) {
      return Y.complexIsSuperselector(complex2.components, this.complex1.components);
    },
    $signature: 15
  };
  Y._simpleIsSuperselectorOfCompound_closure.prototype = {
    call$1: function(theirSimple) {
      var t1 = this.simple;
      if (J.$eq$(t1, theirSimple))
        return true;
      if (theirSimple instanceof D.PseudoSelector && theirSimple.selector != null && $._subselectorPseudos.contains$1(0, theirSimple.normalizedName))
        return C.JSArray_methods.every$1(theirSimple.selector.components, new Y._simpleIsSuperselectorOfCompound__closure(t1));
      else
        return false;
    },
    $signature: 18
  };
  Y._simpleIsSuperselectorOfCompound__closure.prototype = {
    call$1: function(complex) {
      var t1 = complex.components;
      if (t1.length !== 1)
        return false;
      return C.JSArray_methods.contains$1(type$.legacy_CompoundSelector._as(C.JSArray_methods.get$single(t1)).components, this.simple);
    },
    $signature: 15
  };
  Y._selectorPseudoIsSuperselector_closure.prototype = {
    call$1: function(pseudo2) {
      var t1 = pseudo2.selector;
      return Y.listIsSuperselector(this.pseudo1.selector.components, t1.components);
    },
    $signature: 51
  };
  Y._selectorPseudoIsSuperselector_closure0.prototype = {
    call$1: function(complex1) {
      var t1 = complex1.components,
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent),
        t3 = this.parents;
      if (t3 != null)
        for (t3 = t3.get$iterator(t3); t3.moveNext$0();)
          t2.push(t3.get$current(t3));
      t2.push(this.compound2);
      return Y.complexIsSuperselector(t1, t2);
    },
    $signature: 15
  };
  Y._selectorPseudoIsSuperselector_closure1.prototype = {
    call$1: function(pseudo2) {
      var t1 = pseudo2.selector;
      return Y.listIsSuperselector(this.pseudo1.selector.components, t1.components);
    },
    $signature: 51
  };
  Y._selectorPseudoIsSuperselector_closure2.prototype = {
    call$1: function(pseudo2) {
      var t1 = pseudo2.selector;
      return Y.listIsSuperselector(this.pseudo1.selector.components, t1.components);
    },
    $signature: 51
  };
  Y._selectorPseudoIsSuperselector_closure3.prototype = {
    call$1: function(complex) {
      return C.JSArray_methods.any$1(this.compound2.components, new Y._selectorPseudoIsSuperselector__closure(complex, this.pseudo1));
    },
    $signature: 15
  };
  Y._selectorPseudoIsSuperselector__closure.prototype = {
    call$1: function(simple2) {
      var compound1, _this = this;
      if (simple2 instanceof F.TypeSelector) {
        compound1 = C.JSArray_methods.get$last(_this.complex.components);
        return compound1 instanceof X.CompoundSelector && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure(simple2));
      } else if (simple2 instanceof N.IDSelector) {
        compound1 = C.JSArray_methods.get$last(_this.complex.components);
        return compound1 instanceof X.CompoundSelector && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure0(simple2));
      } else if (simple2 instanceof D.PseudoSelector && simple2.name === _this.pseudo1.name && simple2.selector != null)
        return Y.listIsSuperselector(simple2.selector.components, H.setRuntimeTypeInfo([_this.complex], type$.JSArray_legacy_ComplexSelector));
      else
        return false;
    },
    $signature: 18
  };
  Y._selectorPseudoIsSuperselector___closure.prototype = {
    call$1: function(simple1) {
      var t1;
      if (simple1 instanceof F.TypeSelector) {
        t1 = this.simple2.name.$eq(0, simple1.name);
        t1 = !t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 18
  };
  Y._selectorPseudoIsSuperselector___closure0.prototype = {
    call$1: function(simple1) {
      var t1;
      if (simple1 instanceof N.IDSelector) {
        t1 = simple1.name;
        t1 = this.simple2.name !== t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 18
  };
  Y._selectorPseudoIsSuperselector_closure4.prototype = {
    call$1: function(pseudo2) {
      return J.$eq$(this.pseudo1.selector, pseudo2.selector);
    },
    $signature: 51
  };
  Y._selectorPseudoIsSuperselector_closure5.prototype = {
    call$1: function(pseudo2) {
      var t1, t2;
      if (pseudo2 instanceof D.PseudoSelector) {
        t1 = this.pseudo1;
        if (pseudo2.name === t1.name)
          if (pseudo2.argument == t1.argument) {
            t2 = pseudo2.selector;
            t2 = Y.listIsSuperselector(t1.selector.components, t2.components);
            t1 = t2;
          } else
            t1 = false;
        else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    $signature: 18
  };
  Y._selectorPseudosNamed_closure.prototype = {
    call$1: function(pseudo) {
      return pseudo.isClass === this.isClass && pseudo.selector != null && pseudo.name === this.name;
    },
    $signature: 51
  };
  A.MergedExtension.prototype = {
    unmerge$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$unmerge$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.left;
                $async$goto = t1 instanceof A.MergedExtension ? 2 : 4;
                break;
              case 2:
                // then
                $async$goto = 5;
                return P._IterationMarker_yieldStar(t1.unmerge$0());
              case 5:
                // after yield
                // goto join
                $async$goto = 3;
                break;
              case 4:
                // else
                $async$goto = 6;
                return t1;
              case 6:
                // after yield
              case 3:
                // join
                $async$goto = 7;
                return $async$self.right;
              case 7:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.legacy_Extension);
    }
  };
  L.ExtendMode.prototype = {
    toString$0: function(_) {
      return this.name;
    }
  };
  Y.closure.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return t1.$index($arguments, 0).get$isTruthy() ? t1.$index($arguments, 1) : t1.$index($arguments, 2);
    },
    $signature: 5
  };
  K.closure44.prototype = {
    call$1: function($arguments) {
      return K._rgb("rgb", $arguments);
    },
    $signature: 5
  };
  K.closure45.prototype = {
    call$1: function($arguments) {
      return K._rgb("rgb", $arguments);
    },
    $signature: 5
  };
  K.closure46.prototype = {
    call$1: function($arguments) {
      return K._rgbTwoArg("rgb", $arguments);
    },
    $signature: 5
  };
  K.closure47.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels("rgb", H.setRuntimeTypeInfo(["$red", "$green", "$blue"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString ? parsed : K._rgb("rgb", type$.legacy_List_legacy_Value._as(parsed));
    },
    $signature: 5
  };
  K.closure48.prototype = {
    call$1: function($arguments) {
      return K._rgb("rgba", $arguments);
    },
    $signature: 5
  };
  K.closure49.prototype = {
    call$1: function($arguments) {
      return K._rgb("rgba", $arguments);
    },
    $signature: 5
  };
  K.closure50.prototype = {
    call$1: function($arguments) {
      return K._rgbTwoArg("rgba", $arguments);
    },
    $signature: 5
  };
  K.closure51.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels("rgba", H.setRuntimeTypeInfo(["$red", "$green", "$blue"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString ? parsed : K._rgb("rgba", type$.legacy_List_legacy_Value._as(parsed));
    },
    $signature: 5
  };
  K.closure52.prototype = {
    call$1: function($arguments) {
      var color, t2,
        t1 = J.getInterceptor$asx($arguments),
        weight = t1.$index($arguments, 1).assertNumber$1("weight");
      if (t1.$index($arguments, 0) instanceof T.SassNumber) {
        if (weight.value !== 100 || !weight.hasUnit$1("%"))
          throw H.wrapException(string$.Only_oa);
        return K._functionString("invert", t1.take$1($arguments, 1));
      }
      color = t1.$index($arguments, 0).assertColor$1("color");
      t1 = color.get$red();
      t2 = color.get$green();
      return K._mixColors(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);
    },
    $signature: 5
  };
  K.closure53.prototype = {
    call$1: function($arguments) {
      return K._hsl("hsl", $arguments);
    },
    $signature: 5
  };
  K.closure54.prototype = {
    call$1: function($arguments) {
      return K._hsl("hsl", $arguments);
    },
    $signature: 5
  };
  K.closure55.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())
        return K._functionString("hsl", $arguments);
      else
        throw H.wrapException(E.SassScriptException$("Missing argument $lightness."));
    },
    $signature: 16
  };
  K.closure56.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels("hsl", H.setRuntimeTypeInfo(["$hue", "$saturation", "$lightness"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString ? parsed : K._hsl("hsl", type$.legacy_List_legacy_Value._as(parsed));
    },
    $signature: 5
  };
  K.closure57.prototype = {
    call$1: function($arguments) {
      return K._hsl("hsla", $arguments);
    },
    $signature: 5
  };
  K.closure58.prototype = {
    call$1: function($arguments) {
      return K._hsl("hsla", $arguments);
    },
    $signature: 5
  };
  K.closure59.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())
        return K._functionString("hsla", $arguments);
      else
        throw H.wrapException(E.SassScriptException$("Missing argument $lightness."));
    },
    $signature: 16
  };
  K.closure60.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels("hsla", H.setRuntimeTypeInfo(["$hue", "$saturation", "$lightness"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString ? parsed : K._hsl("hsla", type$.legacy_List_legacy_Value._as(parsed));
    },
    $signature: 5
  };
  K.closure61.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber)
        return K._functionString("grayscale", $arguments);
      return t1.$index($arguments, 0).assertColor$1("color").changeHsl$1$saturation(0);
    },
    $signature: 5
  };
  K.closure62.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        degrees = t1.$index($arguments, 1).assertNumber$1("degrees");
      K._checkAngle(degrees, null);
      return color.changeHsl$1$hue(color.get$hue() + degrees.value);
    },
    $signature: 25
  };
  K.closure63.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() + amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 25
  };
  K.closure64.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() - amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 25
  };
  K.closure65.prototype = {
    call$1: function($arguments) {
      return new D.SassString("saturate(" + N.serializeValue0(J.$index$asx($arguments, 0).assertNumber$1("amount"), false, true) + ")", false);
    },
    $signature: 16
  };
  K.closure66.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() + amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 25
  };
  K.closure67.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() - amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 25
  };
  K.closure68.prototype = {
    call$1: function($arguments) {
      var color,
        argument = J.$index$asx($arguments, 0);
      if (argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart()))
        return K._functionString("alpha", $arguments);
      color = argument.assertColor$1("color");
      return new N.UnitlessSassNumber(color.alpha, null);
    },
    $signature: 5
  };
  K.closure69.prototype = {
    call$1: function($arguments) {
      var t1,
        argList = J.$index$asx($arguments, 0).get$asList();
      if (argList.length !== 0 && C.JSArray_methods.every$1(argList, new K._closure8()))
        return K._functionString("alpha", $arguments);
      t1 = argList.length;
      if (t1 === 0)
        throw H.wrapException(E.SassScriptException$("Missing argument $color."));
      else
        throw H.wrapException(E.SassScriptException$("Only 1 argument allowed, but " + t1 + " were passed."));
    },
    $signature: 16
  };
  K._closure8.prototype = {
    call$1: function(argument) {
      return argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart());
    },
    $signature: 53
  };
  K.closure70.prototype = {
    call$1: function($arguments) {
      var color,
        t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber)
        return K._functionString("opacity", $arguments);
      color = t1.$index($arguments, 0).assertColor$1("color");
      return new N.UnitlessSassNumber(color.alpha, null);
    },
    $signature: 5
  };
  K.closure99.prototype = {
    call$1: function($arguments) {
      var result, color, t2,
        t1 = J.getInterceptor$asx($arguments),
        weight = t1.$index($arguments, 1).assertNumber$1("weight");
      if (t1.$index($arguments, 0) instanceof T.SassNumber) {
        if (weight.value !== 100 || !weight.hasUnit$1("%"))
          throw H.wrapException(string$.Only_oa);
        result = K._functionString("invert", t1.take$1($arguments, 1));
        N.warn("Passing a number (" + H.S(t1.$index($arguments, 0)) + string$.x29x20to_ci + result.toString$0(0), true);
        return result;
      }
      color = t1.$index($arguments, 0).assertColor$1("color");
      t1 = color.get$red();
      t2 = color.get$green();
      return K._mixColors(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);
    },
    $signature: 5
  };
  K.closure100.prototype = {
    call$1: function($arguments) {
      var result,
        t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber) {
        result = K._functionString("grayscale", t1.take$1($arguments, 1));
        N.warn("Passing a number (" + H.S(t1.$index($arguments, 0)) + string$.x29x20to_cg + result.toString$0(0), true);
        return result;
      }
      return t1.$index($arguments, 0).assertColor$1("color").changeHsl$1$saturation(0);
    },
    $signature: 5
  };
  K.closure101.prototype = {
    call$1: function($arguments) {
      return K._hwb($arguments);
    },
    $signature: 5
  };
  K.closure102.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels("hwb", H.setRuntimeTypeInfo(["$hue", "$whiteness", "$blackness"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      if (parsed instanceof D.SassString)
        throw H.wrapException(E.SassScriptException$('Expected numeric channels, got "' + parsed.toString$0(0) + '".'));
      else
        return K._hwb(type$.legacy_List_legacy_Value._as(parsed));
    },
    $signature: 5
  };
  K.closure103.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$whiteness();
      return new L.SingleUnitSassNumber("%", t1, null);
    },
    $signature: 9
  };
  K.closure104.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$blackness();
      return new L.SingleUnitSassNumber("%", t1, null);
    },
    $signature: 9
  };
  K.closure105.prototype = {
    call$1: function($arguments) {
      var result, color,
        argument = J.$index$asx($arguments, 0);
      if (argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart())) {
        result = K._functionString("alpha", $arguments);
        N.warn(string$.Using_ + result.toString$0(0), true);
        return result;
      }
      color = argument.assertColor$1("color");
      return new N.UnitlessSassNumber(color.alpha, null);
    },
    $signature: 5
  };
  K.closure106.prototype = {
    call$1: function($arguments) {
      var result,
        t1 = J.getInterceptor$asx($arguments);
      if (C.JSArray_methods.every$1(t1.$index($arguments, 0).get$asList(), new K._closure13())) {
        result = K._functionString("alpha", $arguments);
        N.warn(string$.Using_ + result.toString$0(0), true);
        return result;
      }
      throw H.wrapException(E.SassScriptException$("Only 1 argument allowed, but " + t1.get$length($arguments) + " were passed."));
    },
    $signature: 16
  };
  K._closure13.prototype = {
    call$1: function(argument) {
      return argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart());
    },
    $signature: 53
  };
  K.closure107.prototype = {
    call$1: function($arguments) {
      var result, color,
        t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber) {
        result = K._functionString("opacity", $arguments);
        N.warn("Passing a number (" + H.S(t1.$index($arguments, 0)) + string$.x20to_co + result.toString$0(0), true);
        return result;
      }
      color = t1.$index($arguments, 0).assertColor$1("color");
      return new N.UnitlessSassNumber(color.alpha, null);
    },
    $signature: 5
  };
  K.closure82.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$red();
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  K.closure81.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$green();
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  K.closure80.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$blue();
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  K.closure79.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return K._mixColors(t1.$index($arguments, 0).assertColor$1("color1"), t1.$index($arguments, 1).assertColor$1("color2"), t1.$index($arguments, 2).assertNumber$1("weight"));
    },
    $signature: 25
  };
  K.closure78.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$hue();
      return new L.SingleUnitSassNumber("deg", t1, null);
    },
    $signature: 9
  };
  K.closure77.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$saturation();
      return new L.SingleUnitSassNumber("%", t1, null);
    },
    $signature: 9
  };
  K.closure76.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$lightness();
      return new L.SingleUnitSassNumber("%", t1, null);
    },
    $signature: 9
  };
  K.closure75.prototype = {
    call$1: function($arguments) {
      var color = J.$index$asx($arguments, 0).assertColor$1("color");
      return color.changeHsl$1$hue(color.get$hue() + 180);
    },
    $signature: 25
  };
  K.closure73.prototype = {
    call$1: function($arguments) {
      return K._updateComponents($arguments, true, false, false);
    },
    $signature: 25
  };
  K.closure72.prototype = {
    call$1: function($arguments) {
      return K._updateComponents($arguments, false, false, true);
    },
    $signature: 25
  };
  K.closure71.prototype = {
    call$1: function($arguments) {
      return K._updateComponents($arguments, false, true, false);
    },
    $signature: 25
  };
  K.closure74.prototype = {
    call$1: function($arguments) {
      var color = J.$index$asx($arguments, 0).assertColor$1("color"),
        t1 = new K.closure_hexString();
      return new D.SassString("#" + H.S(t1.call$1(T.fuzzyRound(color.alpha * 255))) + H.S(t1.call$1(color.get$red())) + H.S(t1.call$1(color.get$green())) + H.S(t1.call$1(color.get$blue())), false);
    },
    $signature: 16
  };
  K.closure_hexString.prototype = {
    call$1: function(component) {
      return C.JSString_methods.padLeft$2(J.toRadixString$1$n(component, 16), 2, "0").toUpperCase();
    },
    $signature: 84
  };
  K._updateComponents_getParam.prototype = {
    call$4$assertPercent$checkPercent: function($name, max, assertPercent, checkPercent) {
      var t2,
        t1 = this.keywords.remove$1(0, $name),
        number = t1 == null ? null : t1.assertNumber$1($name);
      if (number == null)
        return null;
      t1 = this.scale;
      t2 = !t1;
      if (t2 && checkPercent)
        K._checkPercent(number, $name);
      if (!t2 || assertPercent)
        number.assertUnit$2("%", $name);
      if (t1)
        max = 100;
      return number.valueInRange$3(this.change ? 0 : -max, max, $name);
    },
    call$2: function($name, max) {
      return this.call$4$assertPercent$checkPercent($name, max, false, false);
    },
    call$3$checkPercent: function($name, max, checkPercent) {
      return this.call$4$assertPercent$checkPercent($name, max, false, checkPercent);
    },
    call$3$assertPercent: function($name, max, assertPercent) {
      return this.call$4$assertPercent$checkPercent($name, max, assertPercent, false);
    },
    $signature: 141
  };
  K._updateComponents_closure.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  K._updateComponents_updateValue.prototype = {
    call$3: function(current, param, max) {
      var t1;
      if (param == null)
        return current;
      if (this.change)
        return param;
      if (this.adjust)
        return C.JSNumber_methods.clamp$2(current + param, 0, max);
      t1 = param > 0 ? max - current : current;
      return current + t1 * (param / 100);
    },
    $signature: 142
  };
  K._updateComponents_updateRgb.prototype = {
    call$2: function(current, param) {
      return T.fuzzyRound(this.updateValue.call$3(current, param, 255));
    },
    $signature: 143
  };
  K._functionString_closure.prototype = {
    call$1: function(argument) {
      argument.toString;
      return N.serializeValue0(argument, false, true);
    },
    $signature: 292
  };
  K._removedColorFunction_closure.prototype = {
    call$1: function($arguments) {
      var t1 = this.name,
        t2 = J.getInterceptor$asx($arguments),
        t3 = "The function " + t1 + string$.x28__isn + H.S(t2.$index($arguments, 0)) + ", $" + this.argument + ": ";
      throw H.wrapException(E.SassScriptException$(t3 + (this.negative ? "-" : "") + H.S(t2.$index($arguments, 1)) + string$.x29x0a_Mor + t1));
    },
    $signature: 103
  };
  K._removeUnits_closure.prototype = {
    call$1: function(unit) {
      return " * 1" + H.S(unit);
    },
    $signature: 4
  };
  K._removeUnits_closure0.prototype = {
    call$1: function(unit) {
      return " / 1" + H.S(unit);
    },
    $signature: 4
  };
  K._parseChannels_closure.prototype = {
    call$1: function(value) {
      return value.get$isVar();
    },
    $signature: 53
  };
  D.closure43.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).get$asList().length;
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  D.closure42.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        index = t1.$index($arguments, 1);
      return list.get$asList()[list.sassIndexToListIndex$2(index, "n")];
    },
    $signature: 5
  };
  D.closure41.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        index = t1.$index($arguments, 1),
        value = t1.$index($arguments, 2),
        t2 = list.get$asList(),
        newList = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2));
      newList[list.sassIndexToListIndex$2(index, "n")] = value;
      return t1.$index($arguments, 0).changeListContents$1(newList);
    },
    $signature: 28
  };
  D.closure40.prototype = {
    call$1: function($arguments) {
      var separator, bracketed, t2, t3, _i,
        t1 = J.getInterceptor$asx($arguments),
        list1 = t1.$index($arguments, 0),
        list2 = t1.$index($arguments, 1),
        separatorParam = t1.$index($arguments, 2).assertString$1("separator"),
        bracketedParam = t1.$index($arguments, 3);
      t1 = separatorParam.text;
      if (t1 === "auto")
        if (list1.get$separator() !== C.ListSeparator_undecided)
          separator = list1.get$separator();
        else
          separator = list2.get$separator() !== C.ListSeparator_undecided ? list2.get$separator() : C.ListSeparator_space;
      else if (t1 === "space")
        separator = C.ListSeparator_space;
      else {
        if (t1 !== "comma")
          throw H.wrapException(E.SassScriptException$(string$.x24separ));
        separator = C.ListSeparator_comma;
      }
      bracketed = bracketedParam instanceof D.SassString && bracketedParam.text === "auto" ? list1.get$hasBrackets() : bracketedParam.get$isTruthy();
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      for (t2 = list1.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      for (t2 = list2.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      return D.SassList$(t1, separator, bracketed);
    },
    $signature: 28
  };
  D.closure39.prototype = {
    call$1: function($arguments) {
      var separator, t2, t3, _i,
        t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        value = t1.$index($arguments, 1);
      t1 = t1.$index($arguments, 2).assertString$1("separator").text;
      if (t1 === "auto")
        separator = list.get$separator() === C.ListSeparator_undecided ? C.ListSeparator_space : list.get$separator();
      else if (t1 === "space")
        separator = C.ListSeparator_space;
      else {
        if (t1 !== "comma")
          throw H.wrapException(E.SassScriptException$(string$.x24separ));
        separator = C.ListSeparator_comma;
      }
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      for (t2 = list.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      t1.push(value);
      return list.changeListContents$2$separator(t1, separator);
    },
    $signature: 28
  };
  D.closure38.prototype = {
    call$1: function($arguments) {
      var results, result, _box_0 = {},
        t1 = J.$index$asx($arguments, 0).get$asList(),
        t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,List<Value*>*>"),
        lists = P.List_List$from(new H.MappedListIterable(t1, new D._closure5(), t2), true, t2._eval$1("ListIterable.E"));
      if (lists.length === 0)
        return C.SassList_lmy;
      _box_0.i = 0;
      results = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SassList);
      for (t1 = H._arrayInstanceType(lists)._eval$1("MappedListIterable<1,Value*>"), t2 = type$.legacy_Value; C.JSArray_methods.every$1(lists, new D._closure6(_box_0));) {
        result = P.List_List$from(new H.MappedListIterable(lists, new D._closure7(_box_0), t1), false, t2);
        result.fixed$length = Array;
        result.immutable$list = Array;
        results.push(new D.SassList(result, C.ListSeparator_space, false));
        ++_box_0.i;
      }
      return D.SassList$(results, C.ListSeparator_comma, false);
    },
    $signature: 28
  };
  D._closure5.prototype = {
    call$1: function(list) {
      return list.get$asList();
    },
    $signature: 291
  };
  D._closure6.prototype = {
    call$1: function(list) {
      return this._box_0.i !== J.get$length$asx(list);
    },
    $signature: 290
  };
  D._closure7.prototype = {
    call$1: function(list) {
      return J.$index$asx(list, this._box_0.i);
    },
    $signature: 5
  };
  D.closure37.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        index = C.JSArray_methods.indexOf$1(t1.$index($arguments, 0).get$asList(), t1.$index($arguments, 1));
      if (index === -1)
        t1 = C.C_SassNull0;
      else
        t1 = new N.UnitlessSassNumber(index + 1, null);
      return t1;
    },
    $signature: 5
  };
  D.closure35.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).get$separator() === C.ListSeparator_comma ? new D.SassString("comma", false) : new D.SassString("space", false);
    },
    $signature: 16
  };
  D.closure36.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).get$hasBrackets() ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  A.closure34.prototype = {
    call$1: function($arguments) {
      var t3, _i, cur, value,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {
        cur = t1.__internal$_current;
        value = map.contents.$index(0, cur);
        if (!(value instanceof A.SassMap))
          return C.C_SassNull0;
      }
      t1 = map.contents.$index(0, C.JSArray_methods.get$last(t2));
      return t1 == null ? C.C_SassNull0 : t1;
    },
    $signature: 5
  };
  A.closure97.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return A._modify(t1.$index($arguments, 0).assertMap$1("map"), H.setRuntimeTypeInfo([t1.$index($arguments, 1)], type$.JSArray_legacy_Value), new A._closure12($arguments));
    },
    $signature: 5
  };
  A._closure12.prototype = {
    call$1: function(_) {
      return J.$index$asx(this.$arguments, 2);
    },
    $signature: 64
  };
  A.closure98.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        args = t1.$index($arguments, 1).get$asList();
      t1 = args.length;
      if (t1 === 0)
        throw H.wrapException(E.SassScriptException$("Expected $args to contain a key."));
      else if (t1 === 1)
        throw H.wrapException(E.SassScriptException$("Expected $args to contain a value."));
      return A._modify(map, C.JSArray_methods.sublist$2(args, 0, t1 - 1), new A._closure11(args));
    },
    $signature: 5
  };
  A._closure11.prototype = {
    call$1: function(_) {
      return C.JSArray_methods.get$last(this.args);
    },
    $signature: 64
  };
  A.closure32.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.getInterceptor$asx($arguments),
        map1 = t1.$index($arguments, 0).assertMap$1("map1"),
        map2 = t1.$index($arguments, 1).assertMap$1("map2");
      t1 = type$.legacy_Value;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = map1.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      for (t3 = map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 36
  };
  A.closure33.prototype = {
    call$1: function($arguments) {
      var map2,
        t1 = J.getInterceptor$asx($arguments),
        map1 = t1.$index($arguments, 0).assertMap$1("map1"),
        args = t1.$index($arguments, 1).get$asList();
      t1 = args.length;
      if (t1 === 0)
        throw H.wrapException(E.SassScriptException$("Expected $args to contain a key."));
      else if (t1 === 1)
        throw H.wrapException(E.SassScriptException$("Expected $args to contain a map."));
      map2 = C.JSArray_methods.get$last(args).assertMap$1("map2");
      return A._modify(map1, H.SubListIterable$(args, 0, args.length - 1, H._arrayInstanceType(args)._precomputed1), new A._closure4(map2));
    },
    $signature: 5
  };
  A._closure4.prototype = {
    call$1: function(oldValue) {
      var t1, t2, t3, t4,
        nestedMap = oldValue == null ? null : oldValue.tryMap$0();
      if (nestedMap == null)
        return this.map2;
      t1 = type$.legacy_Value;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = nestedMap.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      for (t3 = this.map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 288
  };
  A.closure96.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return A._deepMergeImpl(t1.$index($arguments, 0).assertMap$1("map1"), t1.$index($arguments, 1).assertMap$1("map2"));
    },
    $signature: 36
  };
  A.closure95.prototype = {
    call$1: function($arguments) {
      var t3, _i,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      return A._modify(map, H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value), new A._closure10(t2));
    },
    $signature: 5
  };
  A._closure10.prototype = {
    call$1: function(value) {
      var t2,
        nestedMap = value == null ? null : value.tryMap$0(),
        t1 = nestedMap == null ? null : nestedMap.contents;
      t1 = t1 == null ? null : t1.containsKey$1(C.JSArray_methods.get$last(this.keys));
      if (t1 === true) {
        t1 = type$.legacy_Value;
        t2 = P.LinkedHashMap_LinkedHashMap$of(nestedMap.contents, t1, t1);
        t2.remove$1(0, C.JSArray_methods.get$last(this.keys));
        return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
      }
      return value;
    },
    $signature: 64
  };
  A.closure30.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).assertMap$1("map");
    },
    $signature: 36
  };
  A.closure31.prototype = {
    call$1: function($arguments) {
      var t3, _i, mutableMap,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      t1 = type$.legacy_Value;
      mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1);
      for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        mutableMap.remove$1(0, t2[_i]);
      return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
    },
    $signature: 36
  };
  A.closure29.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertMap$1("map").contents;
      return D.SassList$(t1.get$keys(t1), C.ListSeparator_comma, false);
    },
    $signature: 28
  };
  A.closure28.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertMap$1("map").contents;
      return D.SassList$(t1.get$values(t1), C.ListSeparator_comma, false);
    },
    $signature: 28
  };
  A.closure27.prototype = {
    call$1: function($arguments) {
      var t3, _i, cur, value,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {
        cur = t1.__internal$_current;
        value = map.contents.$index(0, cur);
        if (!(value instanceof A.SassMap))
          return C.SassBoolean_false0;
      }
      return map.contents.containsKey$1(C.JSArray_methods.get$last(t2)) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  A._modify__modifyNestedMap.prototype = {
    call$2: function(map, newValue) {
      var nestedMap, _this = this,
        t1 = type$.legacy_Value,
        mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1),
        t2 = _this.keyIterator,
        key = t2.get$current(t2);
      if (!t2.moveNext$0()) {
        mutableMap.$indexSet(0, key, newValue == null ? _this.modify.call$1(mutableMap.$index(0, key)) : newValue);
        return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
      }
      t2 = mutableMap.$index(0, key);
      nestedMap = t2 == null ? null : t2.tryMap$0();
      t2 = nestedMap == null;
      if (t2) {
        newValue = _this.modify.call$1(null);
        if (newValue == null)
          return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
      }
      mutableMap.$indexSet(0, key, _this.call$2(t2 ? C.SassMap_Map_empty : nestedMap, newValue));
      return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
    },
    call$1: function(map) {
      return this.call$2(map, null);
    },
    $signature: 286
  };
  A._deepMergeImpl__ensureMutable.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_0;
      if (t1.mutable)
        return;
      t1.mutable = true;
      t2 = type$.legacy_Value;
      t1.result = P.LinkedHashMap_LinkedHashMap$of(t1.result, t2, t2);
    },
    $signature: 1
  };
  A._deepMergeImpl_closure.prototype = {
    call$2: function(key, value) {
      var resultMap, valueMap, merged,
        t1 = this._box_0,
        resultValue = t1.result.$index(0, key);
      if (resultValue == null) {
        this._ensureMutable.call$0();
        t1.result.$indexSet(0, key, value);
      } else {
        resultMap = resultValue.tryMap$0();
        valueMap = value.tryMap$0();
        if (resultMap != null && valueMap != null) {
          merged = A._deepMergeImpl(valueMap, resultMap);
          if (merged === resultMap)
            return;
          this._ensureMutable.call$0();
          t1.result.$indexSet(0, key, merged);
        }
      }
    },
    $signature: 46
  };
  K.closure25.prototype = {
    call$1: function(value) {
      return J.ceil$0$n(value);
    },
    $signature: 39
  };
  K.closure90.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        min = t1.$index($arguments, 0).assertNumber$1("min"),
        number = t1.$index($arguments, 1).assertNumber$1("number"),
        max = t1.$index($arguments, 2).assertNumber$1("max");
      number.convertValueToMatch$3(min, "number", "min");
      max.convertValueToMatch$3(min, "max", "min");
      if (min.greaterThanOrEquals$1(max).value)
        return min;
      if (min.greaterThanOrEquals$1(number).value)
        return min;
      if (number.greaterThanOrEquals$1(max).value)
        return max;
      return number;
    },
    $signature: 9
  };
  K.closure24.prototype = {
    call$1: function(value) {
      return J.floor$0$n(value);
    },
    $signature: 39
  };
  K.closure23.prototype = {
    call$1: function($arguments) {
      var t1, t2, max, _i, number;
      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, max = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        number = t1[_i].assertNumber$0();
        if (max == null || max.lessThan$1(number).value)
          max = number;
      }
      if (max != null)
        return max;
      throw H.wrapException(E.SassScriptException$("At least one argument must be passed."));
    },
    $signature: 9
  };
  K.closure22.prototype = {
    call$1: function($arguments) {
      var t1, t2, min, _i, number;
      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, min = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        number = t1[_i].assertNumber$0();
        if (min == null || min.greaterThan$1(number).value)
          min = number;
      }
      if (min != null)
        return min;
      throw H.wrapException(E.SassScriptException$("At least one argument must be passed."));
    },
    $signature: 9
  };
  K.closure26.prototype = {
    call$1: function(value) {
      return Math.abs(value);
    },
    $signature: 155
  };
  K.closure88.prototype = {
    call$1: function($arguments) {
      var subtotal, i, i0, value,
        t1 = J.$index$asx($arguments, 0).get$asList(),
        t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,SassNumber*>"),
        numbers = P.List_List$from(new H.MappedListIterable(t1, new K._closure9(), t2), true, t2._eval$1("ListIterable.E"));
      if (numbers.length === 0)
        throw H.wrapException(E.SassScriptException$("At least one argument must be passed."));
      for (subtotal = 0, i = 0; i < numbers.length; i = i0) {
        i0 = i + 1;
        value = numbers[i].convertValueToMatch$3(numbers[0], "numbers[" + i0 + "]", "numbers[1]");
        H.checkNum(value);
        subtotal += Math.pow(value, 2);
      }
      t1 = Math.sqrt(subtotal);
      t2 = numbers[0].get$numeratorUnits();
      return T.SassNumber_SassNumber$withUnits(t1, numbers[0].get$denominatorUnits(), t2);
    },
    $signature: 9
  };
  K._closure9.prototype = {
    call$1: function(argument) {
      return argument.assertNumber$0();
    },
    $signature: 284
  };
  K.closure87.prototype = {
    call$1: function($arguments) {
      var numberValue, base, baseValue, t2,
        _s18_ = " to have no units.",
        t1 = J.getInterceptor$asx($arguments),
        number = t1.$index($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$number: Expected " + number.toString$0(0) + _s18_));
      numberValue = K._fuzzyRoundIfZero(number.value);
      if (J.$eq$(t1.$index($arguments, 1), C.C_SassNull0)) {
        t1 = Math.log(H.checkNum(numberValue));
        return new N.UnitlessSassNumber(t1, null);
      }
      base = t1.$index($arguments, 1).assertNumber$1("base");
      if (base.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$base: Expected " + base.toString$0(0) + _s18_));
      t1 = base.value;
      baseValue = Math.abs(t1 - 1) < $.$get$epsilon() ? T.fuzzyRound(t1) : K._fuzzyRoundIfZero(t1);
      t1 = Math.log(H.checkNum(numberValue));
      t2 = Math.log(H.checkNum(baseValue));
      return new N.UnitlessSassNumber(t1 / t2, null);
    },
    $signature: 9
  };
  K.closure86.prototype = {
    call$1: function($arguments) {
      var baseValue, exponentValue, t2, t3,
        _s18_ = " to have no units.",
        _null = null,
        t1 = J.getInterceptor$asx($arguments),
        base = t1.$index($arguments, 0).assertNumber$1("base"),
        exponent = t1.$index($arguments, 1).assertNumber$1("exponent");
      if (base.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$base: Expected " + base.toString$0(0) + _s18_));
      else if (exponent.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$exponent: Expected " + exponent.toString$0(0) + _s18_));
      baseValue = K._fuzzyRoundIfZero(base.value);
      exponentValue = K._fuzzyRoundIfZero(exponent.value);
      t1 = $.$get$epsilon();
      if (Math.abs(Math.abs(baseValue) - 1) < t1) {
        exponentValue.toString;
        t2 = exponentValue == 1 / 0 || exponentValue == -1 / 0;
      } else
        t2 = false;
      if (t2)
        return new N.UnitlessSassNumber(0 / 0, _null);
      else {
        t2 = Math.abs(baseValue - 0);
        if (t2 < t1) {
          exponentValue.toString;
          if (isFinite(exponentValue))
            if (T.fuzzyIsInt(exponentValue))
              t1 = C.JSInt_methods.$mod(T.fuzzyIsInt(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;
            else
              t1 = false;
          else
            t1 = false;
          if (t1)
            exponentValue = T.fuzzyRound(exponentValue);
        } else {
          if (isFinite(baseValue))
            if (baseValue < 0 && !(t2 < t1)) {
              exponentValue.toString;
              t3 = isFinite(exponentValue) && T.fuzzyIsInt(exponentValue);
            } else
              t3 = false;
          else
            t3 = false;
          if (t3)
            exponentValue = T.fuzzyRound(exponentValue);
          else {
            if (baseValue == 1 / 0 || baseValue == -1 / 0)
              if (baseValue < 0 && !(t2 < t1)) {
                exponentValue.toString;
                if (isFinite(exponentValue))
                  if (T.fuzzyIsInt(exponentValue))
                    t1 = C.JSInt_methods.$mod(T.fuzzyIsInt(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;
                  else
                    t1 = false;
                else
                  t1 = false;
              } else
                t1 = false;
            else
              t1 = false;
            if (t1)
              exponentValue = T.fuzzyRound(exponentValue);
          }
        }
      }
      H.checkNum(exponentValue);
      t1 = Math.pow(baseValue, exponentValue);
      return new N.UnitlessSassNumber(t1, _null);
    },
    $signature: 9
  };
  K.closure84.prototype = {
    call$1: function($arguments) {
      var t1,
        number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$number: Expected " + number.toString$0(0) + " to have no units."));
      t1 = Math.sqrt(H.checkNum(K._fuzzyRoundIfZero(number.value)));
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  K.closure94.prototype = {
    call$1: function($arguments) {
      var numberValue,
        number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$number: Expected " + number.toString$0(0) + " to have no units."));
      numberValue = number.value;
      if (Math.abs(Math.abs(numberValue) - 1) < $.$get$epsilon())
        numberValue = T.fuzzyRound(numberValue);
      return T.SassNumber_SassNumber$withUnits(Math.acos(numberValue) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 9
  };
  K.closure93.prototype = {
    call$1: function($arguments) {
      var t1,
        number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$number: Expected " + number.toString$0(0) + " to have no units."));
      t1 = number.value;
      return T.SassNumber_SassNumber$withUnits(Math.asin(H.checkNum(Math.abs(Math.abs(t1) - 1) < $.$get$epsilon() ? T.fuzzyRound(t1) : K._fuzzyRoundIfZero(t1))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 9
  };
  K.closure92.prototype = {
    call$1: function($arguments) {
      var number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$("$number: Expected " + number.toString$0(0) + " to have no units."));
      return T.SassNumber_SassNumber$withUnits(Math.atan(H.checkNum(K._fuzzyRoundIfZero(number.value))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 9
  };
  K.closure91.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        y = t1.$index($arguments, 0).assertNumber$1("y"),
        xValue = K._fuzzyRoundIfZero(t1.$index($arguments, 1).assertNumber$1("x").convertValueToMatch$3(y, "x", "y"));
      return T.SassNumber_SassNumber$withUnits(Math.atan2(H.checkNum(K._fuzzyRoundIfZero(y.value)), H.checkNum(xValue)) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 9
  };
  K.closure89.prototype = {
    call$1: function($arguments) {
      var t1 = Math.cos(H.checkNum(J.$index$asx($arguments, 0).assertNumber$1("number").coerceValueToUnit$2("rad", "number")));
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  K.closure85.prototype = {
    call$1: function($arguments) {
      var t1 = Math.sin(H.checkNum(K._fuzzyRoundIfZero(J.$index$asx($arguments, 0).assertNumber$1("number").coerceValueToUnit$2("rad", "number"))));
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  K.closure83.prototype = {
    call$1: function($arguments) {
      var value = J.$index$asx($arguments, 0).assertNumber$1("number").coerceValueToUnit$2("rad", "number"),
        t1 = C.JSNumber_methods.$mod(value - 1.5707963267948966, 6.283185307179586),
        t2 = $.$get$epsilon();
      if (Math.abs(t1 - 0) < t2)
        return new N.UnitlessSassNumber(1 / 0, null);
      else if (Math.abs(C.JSNumber_methods.$mod(value + 1.5707963267948966, 6.283185307179586) - 0) < t2)
        return new N.UnitlessSassNumber(-1 / 0, null);
      else {
        t1 = Math.tan(H.checkNum(K._fuzzyRoundIfZero(value)));
        return new N.UnitlessSassNumber(t1, null);
      }
    },
    $signature: 9
  };
  K.closure18.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return t1.$index($arguments, 0).assertNumber$1("number1").isComparableTo$1(t1.$index($arguments, 1).assertNumber$1("number2")) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  K.closure17.prototype = {
    call$1: function($arguments) {
      return !J.$index$asx($arguments, 0).assertNumber$1("number").get$hasUnits() ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  K.closure19.prototype = {
    call$1: function($arguments) {
      return new D.SassString(J.$index$asx($arguments, 0).assertNumber$1("number").get$unitString(), true);
    },
    $signature: 16
  };
  K.closure21.prototype = {
    call$1: function($arguments) {
      var number = J.$index$asx($arguments, 0).assertNumber$1("number");
      number.assertNoUnits$1("number");
      return new L.SingleUnitSassNumber("%", number.value * 100, null);
    },
    $signature: 9
  };
  K.closure20.prototype = {
    call$1: function($arguments) {
      var limit,
        t1 = J.getInterceptor$asx($arguments);
      if (J.$eq$(t1.$index($arguments, 0), C.C_SassNull0)) {
        t1 = $.$get$_random0().nextDouble$0();
        return new N.UnitlessSassNumber(t1, null);
      }
      limit = t1.$index($arguments, 0).assertNumber$1("limit").assertInt$1("limit");
      if (limit < 1)
        throw H.wrapException(E.SassScriptException$("$limit: Must be greater than 0, was " + limit + "."));
      t1 = $.$get$_random0().nextInt$1(limit);
      return new N.UnitlessSassNumber(t1 + 1, null);
    },
    $signature: 9
  };
  K._numberFunction_closure.prototype = {
    call$1: function($arguments) {
      var number = J.$index$asx($arguments, 0).assertNumber$1("number"),
        t1 = this.transform.call$1(number.value),
        t2 = number.get$numeratorUnits();
      return T.SassNumber_SassNumber$withUnits(t1, number.get$denominatorUnits(), t2);
    },
    $signature: 9
  };
  Q.closure108.prototype = {
    call$1: function($arguments) {
      return $._features.contains$1(0, J.$index$asx($arguments, 0).assertString$1("feature").text) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  Q.closure109.prototype = {
    call$1: function($arguments) {
      return new D.SassString(J.toString$0$(J.get$first$ax($arguments)), false);
    },
    $signature: 16
  };
  Q.closure110.prototype = {
    call$1: function($arguments) {
      var value = J.$index$asx($arguments, 0);
      if (value instanceof D.SassArgumentList)
        return new D.SassString("arglist", false);
      if (value instanceof Z.SassBoolean)
        return new D.SassString("bool", false);
      if (value instanceof K.SassColor)
        return new D.SassString("color", false);
      if (value instanceof D.SassList)
        return new D.SassString("list", false);
      if (value instanceof A.SassMap)
        return new D.SassString("map", false);
      if (value instanceof O.SassNull)
        return new D.SassString("null", false);
      if (value instanceof T.SassNumber)
        return new D.SassString("number", false);
      if (value instanceof F.SassFunction)
        return new D.SassString("function", false);
      return new D.SassString("string", false);
    },
    $signature: 16
  };
  Q.closure111.prototype = {
    call$1: function($arguments) {
      var t1, t2, t3, t4,
        argumentList = J.$index$asx($arguments, 0);
      if (argumentList instanceof D.SassArgumentList) {
        t1 = type$.legacy_Value;
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        for (argumentList._wereKeywordsAccessed = true, t3 = argumentList._keywords, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t4 = t3.get$current(t3);
          t2.$indexSet(0, new D.SassString(t4.key, false), t4.value);
        }
        return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
      } else
        throw H.wrapException("$args: " + H.S(argumentList) + " is not an argument list.");
    },
    $signature: 36
  };
  T.closure13.prototype = {
    call$1: function($arguments) {
      var t1 = {},
        selectors = J.$index$asx($arguments, 0).get$asList();
      if (selectors.length === 0)
        throw H.wrapException(E.SassScriptException$(string$.x24selec));
      t1.first = true;
      return new H.MappedListIterable(selectors, new T._closure1(t1), H._arrayInstanceType(selectors)._eval$1("MappedListIterable<1,SelectorList*>")).reduce$1(0, new T._closure2()).get$asSassList();
    },
    $signature: 28
  };
  T._closure1.prototype = {
    call$1: function(selector) {
      var t1 = this._box_0,
        result = selector.assertSelector$1$allowParent(!t1.first);
      t1.first = false;
      return result;
    },
    $signature: 157
  };
  T._closure2.prototype = {
    call$2: function($parent, child) {
      return child.resolveParentSelectors$1($parent);
    },
    $signature: 158
  };
  T.closure12.prototype = {
    call$1: function($arguments) {
      var selectors = J.$index$asx($arguments, 0).get$asList();
      if (selectors.length === 0)
        throw H.wrapException(E.SassScriptException$(string$.x24selec));
      return new H.MappedListIterable(selectors, new T._closure(), H._arrayInstanceType(selectors)._eval$1("MappedListIterable<1,SelectorList*>")).reduce$1(0, new T._closure0()).get$asSassList();
    },
    $signature: 28
  };
  T._closure.prototype = {
    call$1: function(selector) {
      return selector.assertSelector$0();
    },
    $signature: 157
  };
  T._closure0.prototype = {
    call$2: function($parent, child) {
      var t1 = child.components;
      return D.SelectorList$(new H.MappedListIterable(t1, new T.__closure($parent), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector*>"))).resolveParentSelectors$1($parent);
    },
    $signature: 158
  };
  T.__closure.prototype = {
    call$1: function(complex) {
      var newCompound, t2, cur,
        t1 = complex.components,
        compound = C.JSArray_methods.get$first(t1);
      if (compound instanceof X.CompoundSelector) {
        newCompound = T._prependParent(compound);
        if (newCompound == null)
          throw H.wrapException(E.SassScriptException$("Can't append " + complex.toString$0(0) + " to " + H.S(this.parent) + "."));
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent);
        t2.push(newCompound);
        for (t1 = H.SubListIterable$(t1, 1, null, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
          cur = t1.__internal$_current;
          t2.push(cur);
        }
        return S.ComplexSelector$(t2, false);
      } else
        throw H.wrapException(E.SassScriptException$("Can't append " + complex.toString$0(0) + " to " + H.S(this.parent) + "."));
    },
    $signature: 83
  };
  T.closure11.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        selector = t1.$index($arguments, 0).assertSelector$1$name("selector"),
        target = t1.$index($arguments, 1).assertSelector$1$name("extendee");
      return F.Extender__extendOrReplace(selector, t1.$index($arguments, 2).assertSelector$1$name("extender"), target, C.ExtendMode_allTargets).get$asSassList();
    },
    $signature: 28
  };
  T.closure10.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        selector = t1.$index($arguments, 0).assertSelector$1$name("selector"),
        target = t1.$index($arguments, 1).assertSelector$1$name("original");
      return F.Extender__extendOrReplace(selector, t1.$index($arguments, 2).assertSelector$1$name("replacement"), target, C.ExtendMode_replace).get$asSassList();
    },
    $signature: 28
  };
  T.closure9.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        result = t1.$index($arguments, 0).assertSelector$1$name("selector1").unify$1(t1.$index($arguments, 1).assertSelector$1$name("selector2"));
      return result == null ? C.C_SassNull0 : result.get$asSassList();
    },
    $signature: 5
  };
  T.closure16.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        selector1 = t1.$index($arguments, 0).assertSelector$1$name("super"),
        selector2 = t1.$index($arguments, 1).assertSelector$1$name("sub");
      return Y.listIsSuperselector(selector1.components, selector2.components) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  T.closure15.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertCompoundSelector$1$name("selector").components;
      return D.SassList$(new H.MappedListIterable(t1, new T._closure3(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value*>")), C.ListSeparator_comma, false);
    },
    $signature: 28
  };
  T._closure3.prototype = {
    call$1: function(simple) {
      return new D.SassString(J.toString$0$(simple), false);
    },
    $signature: 239
  };
  T.closure14.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).assertSelector$1$name("selector").get$asSassList();
    },
    $signature: 28
  };
  D.closure8.prototype = {
    call$1: function($arguments) {
      var string = J.$index$asx($arguments, 0).assertString$1("string");
      if (!string.hasQuotes)
        return string;
      return new D.SassString(string.text, false);
    },
    $signature: 16
  };
  D.closure7.prototype = {
    call$1: function($arguments) {
      var string = J.$index$asx($arguments, 0).assertString$1("string");
      if (string.hasQuotes)
        return string;
      return new D.SassString(string.text, true);
    },
    $signature: 16
  };
  D.closure3.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertString$1("string").get$sassLength();
      return new N.UnitlessSassNumber(t1, null);
    },
    $signature: 9
  };
  D.closure2.prototype = {
    call$1: function($arguments) {
      var indexInt, codeUnitIndex, _s5_ = "index",
        t1 = J.getInterceptor$asx($arguments),
        string = t1.$index($arguments, 0).assertString$1("string"),
        insert = t1.$index($arguments, 1).assertString$1("insert"),
        index = t1.$index($arguments, 2).assertNumber$1(_s5_);
      index.assertNoUnits$1(_s5_);
      indexInt = index.assertInt$1(_s5_);
      if (indexInt < 0)
        indexInt = string.get$sassLength() + indexInt + 2;
      t1 = string.text;
      codeUnitIndex = B.codepointIndexToCodeUnitIndex(t1, D._codepointForIndex(indexInt, string.get$sassLength(), false));
      return new D.SassString(J.replaceRange$3$asx(t1, codeUnitIndex, codeUnitIndex, insert.text), string.hasQuotes);
    },
    $signature: 16
  };
  D.closure1.prototype = {
    call$1: function($arguments) {
      var codepointIndex,
        t1 = J.getInterceptor$asx($arguments),
        t2 = t1.$index($arguments, 0).assertString$1("string").text,
        codeUnitIndex = J.indexOf$1$asx(t2, t1.$index($arguments, 1).assertString$1("substring").text);
      if (codeUnitIndex === -1)
        return C.C_SassNull0;
      codepointIndex = B.codeUnitIndexToCodepointIndex(t2, codeUnitIndex);
      return new N.UnitlessSassNumber(codepointIndex + 1, null);
    },
    $signature: 5
  };
  D.closure0.prototype = {
    call$1: function($arguments) {
      var lengthInCodepoints, endInt, startCodepoint, endCodepoint,
        t1 = J.getInterceptor$asx($arguments),
        string = t1.$index($arguments, 0).assertString$1("string"),
        start = t1.$index($arguments, 1).assertNumber$1("start-at"),
        end = t1.$index($arguments, 2).assertNumber$1("end-at");
      start.assertNoUnits$1("start");
      end.assertNoUnits$1("end");
      lengthInCodepoints = string.get$sassLength();
      endInt = end.assertInt$0();
      if (endInt === 0)
        return string.hasQuotes ? $.$get$_emptyQuoted() : $.$get$_emptyUnquoted();
      startCodepoint = D._codepointForIndex(start.assertInt$0(), lengthInCodepoints, false);
      endCodepoint = D._codepointForIndex(endInt, lengthInCodepoints, true);
      if (endCodepoint === lengthInCodepoints)
        --endCodepoint;
      if (endCodepoint < startCodepoint)
        return string.hasQuotes ? $.$get$_emptyQuoted() : $.$get$_emptyUnquoted();
      t1 = string.text;
      return new D.SassString(J.substring$2$s(t1, B.codepointIndexToCodeUnitIndex(t1, startCodepoint), B.codepointIndexToCodeUnitIndex(t1, endCodepoint + 1)), string.hasQuotes);
    },
    $signature: 16
  };
  D.closure6.prototype = {
    call$1: function($arguments) {
      var t1, t2, t3, i, t4, t5,
        string = J.$index$asx($arguments, 0).assertString$1("string");
      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = ""; i < t2; ++i) {
        t5 = t3._codeUnitAt$1(t1, i);
        t4 += H.Primitives_stringFromCharCode(t5 >= 97 && t5 <= 122 ? t5 & 4294967263 : t5);
      }
      return new D.SassString(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);
    },
    $signature: 16
  };
  D.closure5.prototype = {
    call$1: function($arguments) {
      var t1, t2, t3, i, t4, t5,
        string = J.$index$asx($arguments, 0).assertString$1("string");
      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = ""; i < t2; ++i) {
        t5 = t3._codeUnitAt$1(t1, i);
        t4 += H.Primitives_stringFromCharCode(t5 >= 65 && t5 <= 90 ? t5 | 32 : t5);
      }
      return new D.SassString(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);
    },
    $signature: 16
  };
  D.closure4.prototype = {
    call$1: function($arguments) {
      var t1 = $.$get$_previousUniqueId() + ($.$get$_random().nextInt$1(36) + 1);
      $._previousUniqueId = t1;
      if (t1 > Math.pow(36, 6))
        $._previousUniqueId = C.JSInt_methods.$mod($.$get$_previousUniqueId(), H._asIntS(Math.pow(36, 6)));
      return new D.SassString("u" + C.JSString_methods.padLeft$2(J.toRadixString$1$n($.$get$_previousUniqueId(), 36), 6, "0"), false);
    },
    $signature: 16
  };
  R.ImportCache.prototype = {
    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      var resolvedUrl, canonicalUrl;
      if (baseImporter != null) {
        resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;
        canonicalUrl = this._canonicalize$3(baseImporter, resolvedUrl, forImport);
        if (canonicalUrl != null)
          return new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri);
      }
      return this._canonicalizeCache.putIfAbsent$2(new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new R.ImportCache_canonicalize_closure(this, url, forImport));
    },
    canonicalize$3$baseImporter$baseUrl: function(url, baseImporter, baseUrl) {
      return this.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, false);
    },
    _canonicalize$3: function(importer, url, forImport) {
      var result = forImport ? B.inImportRule(new R.ImportCache__canonicalize_closure(importer, url)) : importer.canonicalize$1(url);
      if ((result == null ? null : result.get$scheme()) === "")
        this._logger.warn$2$deprecation(0, "Importer " + H.S(importer) + " canonicalized " + H.S(url) + " to " + H.S(result) + string$.x2e_Rela, true);
      return result;
    },
    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      var t1, stylesheet,
        tuple = this.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport);
      if (tuple == null)
        return null;
      t1 = tuple.item1;
      stylesheet = this.importCanonical$3(t1, tuple.item2, tuple.item3);
      if (stylesheet == null)
        return null;
      return new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_Importer_and_legacy_Stylesheet);
    },
    importCanonical$3: function(importer, canonicalUrl, originalUrl) {
      return this._importCache.putIfAbsent$2(canonicalUrl, new R.ImportCache_importCanonical_closure(this, importer, canonicalUrl, originalUrl));
    },
    importCanonical$2: function(importer, canonicalUrl) {
      return this.importCanonical$3(importer, canonicalUrl, null);
    },
    humanize$1: function(canonicalUrl) {
      var t2, url,
        t1 = this._canonicalizeCache;
      t1 = t1.get$values(t1);
      t2 = H._instanceType(t1);
      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new R.ImportCache_humanize_closure(canonicalUrl), t2._eval$1("WhereIterable<Iterable.E>")), new R.ImportCache_humanize_closure0(), t2._eval$1("MappedIterable<Iterable.E,Uri*>")), new R.ImportCache_humanize_closure1(), type$.legacy_Uri, type$.dynamic);
      if (url == null)
        return canonicalUrl;
      t1 = $.$get$url();
      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());
    },
    clearImport$1: function(canonicalUrl) {
      this._resultsCache.remove$1(0, canonicalUrl);
      this._importCache.remove$1(0, canonicalUrl);
    }
  };
  R.ImportCache_canonicalize_closure.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, t5, _i, importer, canonicalUrl;
      for (t1 = this.$this, t2 = t1._importers, t3 = t2.length, t4 = this.url, t5 = this.forImport, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        importer = t2[_i];
        canonicalUrl = t1._canonicalize$3(importer, t4, t5);
        if (canonicalUrl != null)
          return new S.Tuple3(importer, canonicalUrl, t4, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri);
      }
      return null;
    },
    $signature: 109
  };
  R.ImportCache__canonicalize_closure.prototype = {
    call$0: function() {
      return this.importer.canonicalize$1(this.url);
    },
    $signature: 161
  };
  R.ImportCache_importCanonical_closure.prototype = {
    call$0: function() {
      var t3, _this = this,
        t1 = _this.canonicalUrl,
        result = _this.importer.load$1(0, t1),
        t2 = _this.$this;
      t2._resultsCache.$indexSet(0, t1, result);
      t3 = _this.originalUrl;
      t1 = t3 == null ? t1 : t3.resolveUri$1(t1);
      return V.Stylesheet_Stylesheet$parse(result.contents, result.syntax, t2._logger, t1);
    },
    $signature: 59
  };
  R.ImportCache_humanize_closure.prototype = {
    call$1: function(tuple) {
      var t1 = tuple == null ? null : tuple.item2;
      return J.$eq$(t1, this.canonicalUrl);
    },
    $signature: 281
  };
  R.ImportCache_humanize_closure0.prototype = {
    call$1: function(tuple) {
      return tuple.item3;
    },
    $signature: 279
  };
  R.ImportCache_humanize_closure1.prototype = {
    call$1: function(url) {
      return J.get$length$asx(J.get$path$x(url));
    },
    $signature: 43
  };
  M.Importer.prototype = {
    modificationTime$1: function(url) {
      return new P.DateTime(Date.now(), false);
    },
    couldCanonicalize$2: function(url, canonicalUrl) {
      return true;
    }
  };
  B.AsyncImporter.prototype = {};
  F.FilesystemImporter.prototype = {
    canonicalize$1: function(url) {
      var t1, resolved;
      if (url.get$scheme() !== "file" && url.get$scheme() !== "")
        return null;
      t1 = $.$get$context();
      resolved = B.resolveImportPath(D.join(this._loadPath, t1.style.pathFromUri$1(M._parseUri(url)), null));
      if (resolved == null)
        t1 = null;
      else
        t1 = t1.toUri$1(J.$eq$(J.get$platform$x(self.process), "win32") || J.$eq$(J.get$platform$x(self.process), "darwin") ? F._realCasePath(D.absolute(t1.normalize$1(resolved))) : t1.canonicalize$1(resolved));
      return t1;
    },
    load$1: function(_, url) {
      var path = $.$get$context().style.pathFromUri$1(M._parseUri(url)),
        t1 = B.readFile(path),
        t2 = M.Syntax_forPath(path),
        t3 = url.get$scheme();
      if (t3 === "")
        H.throwExpression(P.ArgumentError$value(url, "sourceMapUrl", "must be absolute"));
      return new E.ImporterResult(t1, url, t2);
    },
    modificationTime$1: function(url) {
      return B.modificationTime($.$get$context().style.pathFromUri$1(M._parseUri(url)));
    },
    couldCanonicalize$2: function(url, canonicalUrl) {
      var t1, t2, t3, basename, canonicalBasename;
      if (url.get$scheme() !== "file" && url.get$scheme() !== "")
        return false;
      if (canonicalUrl.get$scheme() !== "file")
        return false;
      t1 = $.$get$url();
      t2 = url.get$path(url);
      t3 = t1.style;
      basename = X.ParsedPath_ParsedPath$parse(t2, t3).get$basename();
      canonicalBasename = X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t3).get$basename();
      if (!J.startsWith$1$s(basename, "_") && J.startsWith$1$s(canonicalBasename, "_"))
        canonicalBasename = J.substring$1$s(canonicalBasename, 1);
      return basename === canonicalBasename || basename === t1.withoutExtension$1(canonicalBasename);
    },
    toString$0: function(_) {
      return this._loadPath;
    }
  };
  E.ImporterResult.prototype = {
    get$sourceMapUrl: function() {
      return this._sourceMapUrl;
    }
  };
  B.resolveImportPath_closure.prototype = {
    call$0: function() {
      return B._exactlyOne(B._tryPath($.$get$context().withoutExtension$1(this.path) + ".import" + this.extension));
    },
    $signature: 12
  };
  B.resolveImportPath_closure0.prototype = {
    call$0: function() {
      return B._exactlyOne(B._tryPathWithExtensions(this.path + ".import"));
    },
    $signature: 12
  };
  B._tryPathAsDirectory_closure.prototype = {
    call$0: function() {
      return B._exactlyOne(B._tryPathWithExtensions(D.join(this.path, "index.import", null)));
    },
    $signature: 12
  };
  B._exactlyOne_closure.prototype = {
    call$1: function(path) {
      var t1 = $.$get$context();
      return C.JSString_methods.$add("  ", t1.prettyUri$1(t1.toUri$1(path)));
    },
    $signature: 4
  };
  Z.InterpolationBuffer.prototype = {
    add$1: function(_, expression) {
      this._flushText$0();
      this._interpolation_buffer$_contents.push(expression);
    },
    addInterpolation$1: function(interpolation) {
      var first, t1, _this = this,
        toAdd = interpolation.contents;
      if (toAdd.length === 0)
        return;
      first = C.JSArray_methods.get$first(toAdd);
      if (typeof first == "string") {
        _this._interpolation_buffer$_text._contents += first;
        toAdd = H.SubListIterable$(toAdd, 1, null, H._arrayInstanceType(toAdd)._precomputed1);
      }
      _this._flushText$0();
      t1 = _this._interpolation_buffer$_contents;
      C.JSArray_methods.addAll$1(t1, toAdd);
      if (typeof C.JSArray_methods.get$last(t1) == "string")
        _this._interpolation_buffer$_text._contents += H.S(t1.pop());
    },
    _flushText$0: function() {
      var t1 = this._interpolation_buffer$_text,
        t2 = t1._contents;
      if (t2.length === 0)
        return;
      this._interpolation_buffer$_contents.push(t2.charCodeAt(0) == 0 ? t2 : t2);
      t1._contents = "";
    },
    interpolation$1: function(span) {
      var t2, t3, _i,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);
      for (t2 = this._interpolation_buffer$_contents, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      t2 = this._interpolation_buffer$_text._contents;
      if (t2.length !== 0)
        t1.push(t2.charCodeAt(0) == 0 ? t2 : t2);
      return X.Interpolation$(t1, span);
    },
    toString$0: function(_) {
      var t1, t2, _i, t3, element;
      for (t1 = this._interpolation_buffer$_contents, t2 = t1.length, _i = 0, t3 = ""; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        element = t1[_i];
        t3 = typeof element == "string" ? t3 + element : t3 + "#{" + H.S(element) + H.Primitives_stringFromCharCode(125);
      }
      t1 = t3 + this._interpolation_buffer$_text.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  F._realCasePath_helper.prototype = {
    call$1: function(path) {
      var dirname = $.$get$context().dirname$1(path);
      if (dirname === path)
        return path;
      return $._realCaseCache.putIfAbsent$2(path, new F._realCasePath_helper_closure(this, dirname, path));
    },
    $signature: 4
  };
  F._realCasePath_helper_closure.prototype = {
    call$0: function() {
      var matches, t2, exception,
        realDirname = this.helper.call$1(this.dirname),
        t1 = this.path,
        basename = X.ParsedPath_ParsedPath$parse(t1, $.$get$context().style).get$basename();
      try {
        matches = J.where$1$ax(B.listDir(realDirname, false), new F._realCasePath_helper__closure(basename)).toList$0(0);
        t2 = J.get$length$asx(matches) !== 1 ? D.join(realDirname, basename, null) : J.$index$asx(matches, 0);
        return t2;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof B.FileSystemException)
          return t1;
        else
          throw exception;
      }
    },
    $signature: 12
  };
  F._realCasePath_helper__closure.prototype = {
    call$1: function(realPath) {
      return B.equalsIgnoreCase(X.ParsedPath_ParsedPath$parse(realPath, $.$get$context().style).get$basename(), this.basename);
    },
    $signature: 6
  };
  B.FileSystemException.prototype = {
    toString$0: function(_) {
      var t1 = $.$get$context();
      return H.S(t1.prettyUri$1(t1.toUri$1(this.path))) + ": " + this.message;
    },
    get$message: function(receiver) {
      return this.message;
    },
    get$path: function(receiver) {
      return this.path;
    }
  };
  B.Stderr.prototype = {
    writeln$1: function(object) {
      J.write$1$x(this._stderr, H.S(object == null ? "" : object) + "\n");
    },
    writeln$0: function() {
      return this.writeln$1(null);
    }
  };
  B._readFile_closure.prototype = {
    call$0: function() {
      return J.readFileSync$2$x(D.fs(), this.path, this.encoding);
    },
    $signature: 66
  };
  B.writeFile_closure.prototype = {
    call$0: function() {
      return J.writeFileSync$2$x(D.fs(), this.path, this.contents);
    },
    $signature: 1
  };
  B.deleteFile_closure.prototype = {
    call$0: function() {
      return J.unlinkSync$1$x(D.fs(), this.path);
    },
    $signature: 1
  };
  B.readStdin_closure.prototype = {
    call$1: function(result) {
      this._box_0.contents = result;
      this.completer.complete$1(result);
    },
    $signature: 275
  };
  B.readStdin_closure0.prototype = {
    call$1: function(chunk) {
      this.sink.add$1(0, type$.legacy_List_legacy_int._as(chunk));
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 65
  };
  B.readStdin_closure1.prototype = {
    call$1: function(_) {
      this.sink.close$0(0);
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 65
  };
  B.readStdin_closure2.prototype = {
    call$1: function(e) {
      var t1 = $.$get$stderr();
      t1.writeln$1("Failed to read from stdin");
      t1.writeln$1(e);
      this.completer.completeError$1(e);
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 65
  };
  B.fileExists_closure.prototype = {
    call$0: function() {
      var error, systemError, exception,
        t1 = this.path;
      if (!J.existsSync$1$x(D.fs(), t1))
        return false;
      try {
        t1 = J.isFile$0$x(J.statSync$1$x(D.fs(), t1));
        return t1;
      } catch (exception) {
        error = H.unwrapException(exception);
        systemError = type$.legacy_JsSystemError._as(error);
        if (J.$eq$(J.get$code$x(systemError), "ENOENT"))
          return false;
        throw exception;
      }
    },
    $signature: 35
  };
  B.dirExists_closure.prototype = {
    call$0: function() {
      var error, systemError, exception,
        t1 = this.path;
      if (!J.existsSync$1$x(D.fs(), t1))
        return false;
      try {
        t1 = J.isDirectory$0$x(J.statSync$1$x(D.fs(), t1));
        return t1;
      } catch (exception) {
        error = H.unwrapException(exception);
        systemError = type$.legacy_JsSystemError._as(error);
        if (J.$eq$(J.get$code$x(systemError), "ENOENT"))
          return false;
        throw exception;
      }
    },
    $signature: 35
  };
  B.ensureDir_closure.prototype = {
    call$0: function() {
      var error, systemError, exception, t1;
      try {
        J.mkdirSync$1$x(D.fs(), this.path);
      } catch (exception) {
        error = H.unwrapException(exception);
        systemError = type$.legacy_JsSystemError._as(error);
        if (J.$eq$(J.get$code$x(systemError), "EEXIST"))
          return;
        if (!J.$eq$(J.get$code$x(systemError), "ENOENT"))
          throw exception;
        t1 = this.path;
        B.ensureDir($.$get$context().dirname$1(t1));
        J.mkdirSync$1$x(D.fs(), t1);
      }
    },
    $signature: 0
  };
  B.listDir_closure.prototype = {
    call$0: function() {
      var t1 = this.path;
      if (!this.recursive)
        return J.map$1$1$ax(J.readdirSync$1$x(D.fs(), t1), new B.listDir__closure(t1), type$.legacy_String).where$1(0, new B.listDir__closure0());
      else
        return new B.listDir_closure_list().call$1(t1);
    },
    $signature: 169
  };
  B.listDir__closure.prototype = {
    call$1: function(child) {
      return D.join(this.path, H._asStringS(child), null);
    },
    $signature: 107
  };
  B.listDir__closure0.prototype = {
    call$1: function(child) {
      return !B.dirExists(child);
    },
    $signature: 6
  };
  B.listDir_closure_list.prototype = {
    call$1: function($parent) {
      return J.expand$1$1$ax(J.readdirSync$1$x(D.fs(), $parent), new B.listDir__list_closure($parent, this), type$.legacy_String);
    },
    $signature: 170
  };
  B.listDir__list_closure.prototype = {
    call$1: function(child) {
      var path = D.join(this.parent, H._asStringS(child), null);
      return B.dirExists(path) ? this.list.call$1(path) : H.setRuntimeTypeInfo([path], type$.JSArray_legacy_String);
    },
    $signature: 171
  };
  B.modificationTime_closure.prototype = {
    call$0: function() {
      var t2,
        t1 = J.getTime$0$x(J.get$mtime$x(J.statSync$1$x(D.fs(), this.path)));
      if (Math.abs(t1) <= 864e13)
        t2 = false;
      else
        t2 = true;
      if (t2)
        H.throwExpression(P.ArgumentError$("DateTime is outside valid range: " + H.S(t1)));
      P.ArgumentError_checkNotNull(false, "isUtc");
      return new P.DateTime(t1, false);
    },
    $signature: 172
  };
  B.watchDir_closure.prototype = {
    call$2: function(path, _) {
      var t1 = this._box_0.controller;
      return t1 == null ? null : t1.add$1(0, new E.WatchEvent(C.ChangeType_add, path));
    },
    call$1: function(path) {
      return this.call$2(path, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 173
  };
  B.watchDir_closure0.prototype = {
    call$2: function(path, _) {
      var t1 = this._box_0.controller;
      return t1 == null ? null : t1.add$1(0, new E.WatchEvent(C.ChangeType_modify, path));
    },
    call$1: function(path) {
      return this.call$2(path, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 173
  };
  B.watchDir_closure1.prototype = {
    call$1: function(path) {
      var t1 = this._box_0.controller;
      return t1 == null ? null : t1.add$1(0, new E.WatchEvent(C.ChangeType_remove, path));
    },
    $signature: 271
  };
  B.watchDir_closure2.prototype = {
    call$1: function(error) {
      var t1 = this._box_0.controller;
      return t1 == null ? null : t1.addError$1(error);
    },
    $signature: 49
  };
  B.watchDir_closure3.prototype = {
    call$0: function() {
      var controller = P.StreamController_StreamController(new B.watchDir__closure(this.watcher), null, null, null, false, type$.legacy_WatchEvent);
      this._box_0.controller = controller;
      this.completer.complete$1(new P._ControllerStream(controller, H._instanceType(controller)._eval$1("_ControllerStream<1>")));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  B.watchDir__closure.prototype = {
    call$0: function() {
      J.close$0$x(this.watcher);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  F._QuietLogger.prototype = {
    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {
    },
    warn$2$span: function($receiver, message, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);
    },
    warn$2$deprecation: function($receiver, message, deprecation) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);
    },
    warn$3$deprecation$span: function($receiver, message, deprecation, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);
    },
    warn$2$trace: function($receiver, message, trace) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);
    },
    debug$2: function(_, message, span) {
    }
  };
  S.StderrLogger.prototype = {
    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {
      var t2, t3,
        t1 = this.color;
      if (t1) {
        t2 = $.$get$stderr();
        t3 = t2._stderr;
        J.write$1$x(t3, "\x1b[33m\x1b[1m");
        if (deprecation)
          J.write$1$x(t3, "Deprecation ");
        J.write$1$x(t3, "Warning\x1b[0m");
      } else {
        if (deprecation)
          J.write$1$x($.$get$stderr()._stderr, "DEPRECATION ");
        t2 = $.$get$stderr();
        J.write$1$x(t2._stderr, "WARNING");
      }
      if (span == null)
        t2.writeln$1(": " + H.S(message));
      else if (trace != null)
        t2.writeln$1(": " + H.S(message) + "\n\n" + span.highlight$1$color(t1));
      else
        t2.writeln$1(" on " + span.message$2$color(0, C.JSString_methods.$add("\n", message), t1));
      if (trace != null)
        t2.writeln$1(B.indent(C.JSString_methods.trimRight$0(trace.toString$0(0)), 4));
      t2.writeln$0();
    },
    warn$2$span: function($receiver, message, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);
    },
    warn$2$deprecation: function($receiver, message, deprecation) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);
    },
    warn$3$deprecation$span: function($receiver, message, deprecation, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);
    },
    warn$2$trace: function($receiver, message, trace) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);
    },
    debug$2: function(_, message, span) {
      var url, t3, t4,
        t1 = span.file,
        t2 = span._file$_start;
      if (Y.FileLocation$_(t1, t2).file.url == null)
        url = "-";
      else {
        t3 = Y.FileLocation$_(t1, t2);
        url = $.$get$context().prettyUri$1(t3.file.url);
      }
      t3 = $.$get$stderr();
      t4 = H.S(url) + ":";
      t2 = Y.FileLocation$_(t1, t2);
      t2 = t4 + (t2.file.getLine$1(t2.offset) + 1) + " ";
      t4 = t3._stderr;
      J.write$1$x(t4, t2);
      J.write$1$x(t4, this.color ? "\x1b[1mDebug\x1b[0m" : "DEBUG");
      t3.writeln$1(": " + H.S(message));
    }
  };
  T.TrackingLogger.prototype = {
    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {
      this._emittedWarning = true;
      this._tracking$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, trace);
    },
    warn$2$span: function($receiver, message, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);
    },
    warn$2$deprecation: function($receiver, message, deprecation) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);
    },
    warn$3$deprecation$span: function($receiver, message, deprecation, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);
    },
    warn$2$trace: function($receiver, message, trace) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);
    },
    debug$2: function(_, message, span) {
      this._emittedDebug = true;
      this._tracking$_logger.debug$2(0, message, span);
    }
  };
  Q.BuiltInModule.prototype = {
    get$upstream: function() {
      return C.List_empty3;
    },
    get$variableNodes: function() {
      return C.Map_empty1;
    },
    get$extender: function() {
      return C.C_EmptyExtender;
    },
    get$css: function(_) {
      return new V.CssStylesheet(C.List_empty0, Y.SourceFile$decoded(C.List_empty1, this.url).span$2(0, 0));
    },
    get$transitivelyContainsCss: function() {
      return false;
    },
    get$transitivelyContainsExtensions: function() {
      return false;
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      if (!this.variables.containsKey$1($name))
        throw H.wrapException(E.SassScriptException$("Undefined variable."));
      throw H.wrapException(E.SassScriptException$("Cannot modify built-in variable."));
    },
    variableIdentity$1: function($name) {
      return this;
    },
    cloneCss$0: function() {
      return this;
    },
    $isModule: 1,
    get$url: function() {
      return this.url;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    },
    get$variables: function() {
      return this.variables;
    }
  };
  R.ForwardedModuleView.prototype = {
    get$url: function() {
      return this._forwarded_view$_inner.get$url();
    },
    get$upstream: function() {
      return this._forwarded_view$_inner.get$upstream();
    },
    get$extender: function() {
      return this._forwarded_view$_inner.get$extender();
    },
    get$css: function(_) {
      var t1 = this._forwarded_view$_inner;
      return t1.get$css(t1);
    },
    get$transitivelyContainsCss: function() {
      return this._forwarded_view$_inner.get$transitivelyContainsCss();
    },
    get$transitivelyContainsExtensions: function() {
      return this._forwarded_view$_inner.get$transitivelyContainsExtensions();
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      var _s19_ = "Undefined variable.",
        t1 = this._rule,
        t2 = t1.shownVariables;
      if (t2 != null && !t2._base.contains$1(0, $name))
        throw H.wrapException(E.SassScriptException$(_s19_));
      else {
        t2 = t1.hiddenVariables;
        if (t2 != null && t2._base.contains$1(0, $name))
          throw H.wrapException(E.SassScriptException$(_s19_));
      }
      t1 = t1.prefix;
      if (t1 != null) {
        if (!C.JSString_methods.startsWith$1($name, t1))
          throw H.wrapException(E.SassScriptException$(_s19_));
        $name = C.JSString_methods.substring$1($name, t1.length);
      }
      return this._forwarded_view$_inner.setVariable$3($name, value, nodeWithSpan);
    },
    variableIdentity$1: function($name) {
      var t1 = this._rule.prefix;
      if (t1 != null)
        $name = J.substring$1$s($name, t1.length);
      return this._forwarded_view$_inner.variableIdentity$1($name);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof R.ForwardedModuleView && J.$eq$(this._forwarded_view$_inner, other._forwarded_view$_inner) && this._rule === other._rule;
    },
    get$hashCode: function(_) {
      return (J.get$hashCode$(this._forwarded_view$_inner) ^ H.Primitives_objectHashCode(this._rule)) >>> 0;
    },
    cloneCss$0: function() {
      return R.ForwardedModuleView$(this._forwarded_view$_inner.cloneCss$0(), this._rule, this.$ti._eval$1("1*"));
    },
    toString$0: function(_) {
      return "forwarded " + H.S(this._forwarded_view$_inner);
    },
    $isModule: 1,
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    }
  };
  B.ShadowedModuleView.prototype = {
    get$url: function() {
      return this._shadowed_view$_inner.get$url();
    },
    get$upstream: function() {
      return this._shadowed_view$_inner.get$upstream();
    },
    get$extender: function() {
      return this._shadowed_view$_inner.get$extender();
    },
    get$css: function(_) {
      var t1 = this._shadowed_view$_inner;
      return t1.get$css(t1);
    },
    get$transitivelyContainsCss: function() {
      return this._shadowed_view$_inner.get$transitivelyContainsCss();
    },
    get$transitivelyContainsExtensions: function() {
      return this._shadowed_view$_inner.get$transitivelyContainsExtensions();
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      if (!this.variables.containsKey$1($name))
        throw H.wrapException(E.SassScriptException$("Undefined variable."));
      else
        return this._shadowed_view$_inner.setVariable$3($name, value, nodeWithSpan);
    },
    variableIdentity$1: function($name) {
      return this._shadowed_view$_inner.variableIdentity$1($name);
    },
    $eq: function(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (other instanceof B.ShadowedModuleView)
        if (_this._shadowed_view$_inner.$eq(0, other._shadowed_view$_inner)) {
          t1 = _this.variables;
          t1 = t1.get$keys(t1);
          t2 = other.variables;
          if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {
            t1 = _this.functions;
            t1 = t1.get$keys(t1);
            t2 = other.functions;
            if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {
              t1 = _this.mixins;
              t1 = t1.get$keys(t1);
              t2 = other.mixins;
              t2 = C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2));
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1 = this._shadowed_view$_inner;
      return t1.get$hashCode(t1);
    },
    cloneCss$0: function() {
      var _this = this;
      return new B.ShadowedModuleView(_this._shadowed_view$_inner.cloneCss$0(), _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.$ti._eval$1("ShadowedModuleView<1*>"));
    },
    toString$0: function(_) {
      return "shadowed " + this._shadowed_view$_inner.toString$0(0);
    },
    $isModule: 1,
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    }
  };
  Y.Chokidar.prototype = {};
  Y.ChokidarOptions.prototype = {};
  Y.ChokidarWatcher.prototype = {};
  F.JSFunction.prototype = {};
  F.NodeImporterResult.prototype = {};
  B._PropertyDescriptor.prototype = {};
  V.AtRootQueryParser.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new V.AtRootQueryParser_parse_closure(this));
    }
  };
  V.AtRootQueryParser_parse_closure.prototype = {
    call$0: function() {
      var include, atRules,
        t1 = this.$this,
        t2 = t1.scanner;
      t2.expectChar$1(40);
      t1.whitespace$0();
      include = t1.scanIdentifier$1("with");
      if (!include)
        t1.expectIdentifier$2$name("without", '"with" or "without"');
      t1.whitespace$0();
      t2.expectChar$1(58);
      t1.whitespace$0();
      atRules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);
      do {
        atRules.add$1(0, t1.identifier$0().toLowerCase());
        t1.whitespace$0();
      } while (t1.lookingAtIdentifier$0());
      t2.expectChar$1(41);
      t2.expectDone$0();
      return new V.AtRootQuery(include, atRules, atRules.contains$1(0, "all"), atRules.contains$1(0, "rule"));
    },
    $signature: 113
  };
  Q.closure112.prototype = {
    call$1: function($function) {
      return $function.name;
    },
    $signature: 270
  };
  Q.CssParser.prototype = {
    get$plainCss: function() {
      return true;
    },
    silentComment$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      this.super$Parser$silentComment();
      this.error$2(0, string$.Silent, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    atRule$2$root: function(child, root) {
      var $name, urlStart, next, url, urlSpan, queries, t2, t3, t4, t5, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$1(64);
      $name = _this.interpolatedIdentifier$0();
      _this.whitespace$0();
      switch ($name.get$asPlain()) {
        case "at-root":
        case "content":
        case "debug":
        case "each":
        case "error":
        case "extend":
        case "for":
        case "function":
        case "if":
        case "include":
        case "mixin":
        case "return":
        case "warn":
        case "while":
          _this.almostAnyValue$0();
          _this.error$2(0, "This at-rule isn't allowed in plain CSS.", t1.spanFrom$1(start));
          break;
        case "charset":
          _this.string$0();
          if (!root)
            _this.error$2(0, "This at-rule is not allowed here.", t1.spanFrom$1(start));
          return null;
        case "import":
          urlStart = new S._SpanScannerState(t1, t1._string_scanner$_position);
          next = t1.peekChar$0();
          url = next === 117 || next === 85 ? _this.dynamicUrl$0() : new D.StringExpression(_this.interpolatedString$0().asInterpolation$1$static(true), false);
          urlSpan = t1.spanFrom$1(urlStart);
          _this.whitespace$0();
          queries = _this.tryImportQueries$0();
          _this.expectStatementSeparator$1("@import rule");
          t2 = X.Interpolation$(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), urlSpan);
          t3 = t1.spanFrom$1(urlStart);
          t4 = queries == null;
          t5 = t4 ? null : queries.item1;
          t2 = H.setRuntimeTypeInfo([new Q.StaticImport(t2, t5, t4 ? null : queries.item2, t3)], type$.JSArray_legacy_Import);
          t1 = t1.spanFrom$1(start);
          return new B.ImportRule(P.List_List$unmodifiable(t2, type$.legacy_Import), t1);
        case "media":
          return _this.mediaRule$1(start);
        case "-moz-document":
          return _this.mozDocumentRule$2(start, $name);
        case "supports":
          return _this.supportsRule$1(start);
        default:
          return _this.unknownAtRule$2(start, $name);
      }
    },
    identifierLike$0: function() {
      var t2, $arguments, t3, t4, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        identifier = _this.interpolatedIdentifier$0(),
        plain = identifier.get$asPlain(),
        specialFunction = _this.trySpecialFunction$2(plain.toLowerCase(), start);
      if (specialFunction != null)
        return specialFunction;
      t2 = t1._string_scanner$_position;
      if (!t1.scanChar$1(40))
        return new D.StringExpression(identifier, false);
      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);
      if (!t1.scanChar$1(41)) {
        do {
          _this.whitespace$0();
          $arguments.push(_this.expression$1$singleEquals(true));
          _this.whitespace$0();
        } while (t1.scanChar$1(44));
        t1.expectChar$1(41);
      }
      if ($.$get$_disallowedFunctionNames().contains$1(0, plain))
        _this.error$2(0, string$.This_f, t1.spanFrom$1(start));
      t3 = X.Interpolation$(H.setRuntimeTypeInfo([new D.StringExpression(identifier, false)], type$.JSArray_legacy_Object), identifier.span);
      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      t4 = type$.legacy_Expression;
      return new F.FunctionExpression(null, t3, new X.ArgumentInvocation(P.List_List$unmodifiable($arguments, t4), H.ConstantMap_ConstantMap$from(C.Map_empty3, type$.legacy_String, t4), null, null, t2), t1.spanFrom$1(start));
    }
  };
  E.KeyframeSelectorParser.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new E.KeyframeSelectorParser_parse_closure(this));
    },
    _percentage$0: function() {
      var t3, next,
        t1 = this.scanner,
        t2 = t1.scanChar$1(43) ? H.Primitives_stringFromCharCode(43) : "",
        second = t1.peekChar$0();
      if (!T.isDigit(second) && second !== 46)
        t1.error$1(0, "Expected number.");
      while (true) {
        t3 = t1.peekChar$0();
        if (!(t3 != null && t3 >= 48 && t3 <= 57))
          break;
        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      if (t1.peekChar$0() === 46) {
        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        }
      }
      if (this.scanIdentifier$1("e")) {
        t2 += t1.readChar$0();
        next = t1.peekChar$0();
        if (next === 43 || next === 45)
          t2 += t1.readChar$0();
        if (!T.isDigit(t1.peekChar$0()))
          t1.error$1(0, "Expected digit.");
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        }
      }
      t1.expectChar$1(37);
      t2 += H.Primitives_stringFromCharCode(37);
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    }
  };
  E.KeyframeSelectorParser_parse_closure.prototype = {
    call$0: function() {
      var selectors = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String),
        t1 = this.$this,
        t2 = t1.scanner;
      do {
        t1.whitespace$0();
        if (t1.lookingAtIdentifier$0())
          if (t1.scanIdentifier$1("from"))
            selectors.push("from");
          else {
            t1.expectIdentifier$2$name("to", '"to" or "from"');
            selectors.push("to");
          }
        else
          selectors.push(t1._percentage$0());
        t1.whitespace$0();
      } while (t2.scanChar$1(44));
      t2.expectDone$0();
      return selectors;
    },
    $signature: 40
  };
  F.MediaQueryParser.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new F.MediaQueryParser_parse_closure(this));
    },
    _mediaQuery$0: function() {
      var identifier1, identifier2, type, modifier, features, _this = this, _null = null,
        t1 = _this.scanner;
      if (t1.peekChar$0() !== 40) {
        identifier1 = _this.identifier$0();
        _this.whitespace$0();
        if (!_this.lookingAtIdentifier$0())
          return new F.CssMediaQuery(_null, identifier1, C.List_empty);
        identifier2 = _this.identifier$0();
        _this.whitespace$0();
        if (B.equalsIgnoreCase(identifier2, "and")) {
          type = identifier1;
          modifier = _null;
        } else {
          if (_this.scanIdentifier$1("and"))
            _this.whitespace$0();
          else
            return new F.CssMediaQuery(identifier1, identifier2, C.List_empty);
          type = identifier2;
          modifier = identifier1;
        }
      } else {
        type = _null;
        modifier = type;
      }
      features = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      do {
        _this.whitespace$0();
        t1.expectChar$1(40);
        features.push("(" + _this.declarationValue$0() + ")");
        t1.expectChar$1(41);
        _this.whitespace$0();
      } while (_this.scanIdentifier$1("and"));
      if (type == null)
        return new F.CssMediaQuery(_null, _null, P.List_List$unmodifiable(features, type$.legacy_String));
      else {
        t1 = P.List_List$unmodifiable(features, type$.legacy_String);
        return new F.CssMediaQuery(modifier, type, t1);
      }
    }
  };
  F.MediaQueryParser_parse_closure.prototype = {
    call$0: function() {
      var queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery),
        t1 = this.$this,
        t2 = t1.scanner;
      do {
        t1.whitespace$0();
        queries.push(t1._mediaQuery$0());
      } while (t2.scanChar$1(44));
      t2.expectDone$0();
      return queries;
    },
    $signature: 114
  };
  G.Parser.prototype = {
    _parseIdentifier$0: function() {
      return this.wrapSpanFormatException$1(new G.Parser__parseIdentifier_closure(this));
    },
    _isVariableDeclarationLike$0: function() {
      var _this = this,
        t1 = _this.scanner;
      if (!t1.scanChar$1(36))
        return false;
      if (!_this.lookingAtIdentifier$0())
        return false;
      _this.identifier$0();
      _this.whitespace$0();
      return t1.scanChar$1(58);
    },
    whitespace$0: function() {
      do
        this.whitespaceWithoutComments$0();
      while (this.scanComment$0());
    },
    whitespaceWithoutComments$0: function() {
      var t3,
        t1 = this.scanner,
        t2 = t1.string.length;
      while (true) {
        if (t1._string_scanner$_position !== t2) {
          t3 = t1.peekChar$0();
          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;
        } else
          t3 = false;
        if (!t3)
          break;
        t1.readChar$0();
      }
    },
    spaces$0: function() {
      var t3,
        t1 = this.scanner,
        t2 = t1.string.length;
      while (true) {
        if (t1._string_scanner$_position !== t2) {
          t3 = t1.peekChar$0();
          t3 = t3 === 32 || t3 === 9;
        } else
          t3 = false;
        if (!t3)
          break;
        t1.readChar$0();
      }
    },
    scanComment$0: function() {
      var next,
        t1 = this.scanner;
      if (t1.peekChar$0() !== 47)
        return false;
      next = t1.peekChar$1(1);
      if (next === 47) {
        this.silentComment$0();
        return true;
      } else if (next === 42) {
        this.loudComment$0();
        return true;
      } else
        return false;
    },
    silentComment$0: function() {
      var t2, t3,
        t1 = this.scanner;
      t1.expect$1("//");
      t2 = t1.string.length;
      while (true) {
        if (t1._string_scanner$_position !== t2) {
          t3 = t1.peekChar$0();
          t3 = !(t3 === 10 || t3 === 13 || t3 === 12);
        } else
          t3 = false;
        if (!t3)
          break;
        t1.readChar$0();
      }
    },
    loudComment$0: function() {
      var next,
        t1 = this.scanner;
      t1.expect$1("/*");
      for (; true;) {
        if (t1.readChar$0() !== 42)
          continue;
        do
          next = t1.readChar$0();
        while (next === 42);
        if (next === 47)
          break;
      }
    },
    identifier$2$normalize$unit: function(normalize, unit) {
      var t2, first, _this = this,
        _s20_ = "Expected identifier.",
        text = new P.StringBuffer(""),
        t1 = _this.scanner;
      if (t1.scanChar$1(45)) {
        t2 = text._contents = H.Primitives_stringFromCharCode(45);
        if (t1.scanChar$1(45)) {
          text._contents = t2 + H.Primitives_stringFromCharCode(45);
          _this._identifierBody$3$normalize$unit(text, normalize, unit);
          t1 = text._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }
      } else
        t2 = "";
      first = t1.peekChar$0();
      if (first == null)
        t1.error$1(0, _s20_);
      else if (normalize && first === 95) {
        t1.readChar$0();
        text._contents = t2 + H.Primitives_stringFromCharCode(45);
      } else if (first === 95 || T.isAlphabetic0(first) || first >= 128)
        text._contents = t2 + H.Primitives_stringFromCharCode(t1.readChar$0());
      else if (first === 92)
        text._contents = t2 + H.S(_this.escape$1$identifierStart(true));
      else
        t1.error$1(0, _s20_);
      _this._identifierBody$3$normalize$unit(text, normalize, unit);
      t1 = text._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    identifier$0: function() {
      return this.identifier$2$normalize$unit(false, false);
    },
    identifier$1$normalize: function(normalize) {
      return this.identifier$2$normalize$unit(normalize, false);
    },
    identifier$1$unit: function(unit) {
      return this.identifier$2$normalize$unit(false, unit);
    },
    _identifierBody$3$normalize$unit: function(text, normalize, unit) {
      var t1, next, second, t2;
      for (t1 = this.scanner; true;) {
        next = t1.peekChar$0();
        if (next == null)
          break;
        else if (unit && next === 45) {
          second = t1.peekChar$1(1);
          if (second != null)
            if (second !== 46)
              t2 = second >= 48 && second <= 57;
            else
              t2 = true;
          else
            t2 = false;
          if (t2)
            break;
          text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
        } else if (normalize && next === 95) {
          t1.readChar$0();
          text._contents += H.Primitives_stringFromCharCode(45);
        } else {
          if (next !== 95) {
            if (!(next >= 97 && next <= 122))
              t2 = next >= 65 && next <= 90;
            else
              t2 = true;
            t2 = t2 || next >= 128;
          } else
            t2 = true;
          if (!t2) {
            t2 = next >= 48 && next <= 57;
            t2 = t2 || next === 45;
          } else
            t2 = true;
          if (t2)
            text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 92)
            text._contents += H.S(this.escape$0());
          else
            break;
        }
      }
    },
    _identifierBody$1: function(text) {
      return this._identifierBody$3$normalize$unit(text, false, false);
    },
    string$0: function() {
      var t2, buffer, next,
        t1 = this.scanner,
        quote = t1.readChar$0();
      if (quote !== 39 && quote !== 34) {
        t2 = t1._string_scanner$_position;
        t1.error$2$position(0, "Expected string.", t2 - 1);
      }
      buffer = new P.StringBuffer("");
      for (; true;) {
        next = t1.peekChar$0();
        if (next === quote) {
          t1.readChar$0();
          break;
        } else if (next == null || next === 10 || next === 13 || next === 12)
          t1.error$1(0, "Expected " + H.Primitives_stringFromCharCode(quote) + ".");
        else if (next === 92) {
          t2 = t1.peekChar$1(1);
          if (t2 === 10 || t2 === 13 || t2 === 12) {
            t1.readChar$0();
            t1.readChar$0();
          } else
            buffer._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());
        } else
          buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    naturalNumber$0: function() {
      var number, t2,
        t1 = this.scanner,
        first = t1.readChar$0();
      if (!T.isDigit(first))
        t1.error$2$position(0, "Expected digit.", t1._string_scanner$_position - 1);
      number = first - 48;
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 != null && t2 >= 48 && t2 <= 57))
          break;
        number = number * 10 + (t1.readChar$0() - 48);
      }
      return number;
    },
    declarationValue$1$allowEmpty: function(allowEmpty) {
      var t1, t2, wroteNewline, next, start, end, t3, url, _this = this,
        buffer = new P.StringBuffer(""),
        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);
      $label0$1:
        for (t1 = _this.scanner, t2 = _this.get$string(), wroteNewline = false; true;) {
          next = t1.peekChar$0();
          switch (next) {
            case 92:
              buffer._contents += H.S(_this.escape$1$identifierStart(true));
              wroteNewline = false;
              break;
            case 34:
            case 39:
              start = t1._string_scanner$_position;
              t2.call$0();
              end = t1._string_scanner$_position;
              buffer._contents += J.substring$2$s(t1.string, start, end);
              wroteNewline = false;
              break;
            case 47:
              if (t1.peekChar$1(1) === 42) {
                t3 = _this.get$loudComment();
                start = t1._string_scanner$_position;
                t3.call$0();
                end = t1._string_scanner$_position;
                buffer._contents += J.substring$2$s(t1.string, start, end);
              } else
                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 32:
            case 9:
              if (!wroteNewline) {
                t3 = t1.peekChar$1(1);
                t3 = !(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12);
              } else
                t3 = true;
              if (t3)
                buffer._contents += H.Primitives_stringFromCharCode(32);
              t1.readChar$0();
              break;
            case 10:
            case 13:
            case 12:
              t3 = t1.peekChar$1(-1);
              if (!(t3 === 10 || t3 === 13 || t3 === 12))
                buffer._contents += "\n";
              t1.readChar$0();
              wroteNewline = true;
              break;
            case 40:
            case 123:
            case 91:
              buffer._contents += H.Primitives_stringFromCharCode(next);
              brackets.push(T.opposite(t1.readChar$0()));
              wroteNewline = false;
              break;
            case 41:
            case 125:
            case 93:
              if (brackets.length === 0)
                break $label0$1;
              buffer._contents += H.Primitives_stringFromCharCode(next);
              t1.expectChar$1(brackets.pop());
              wroteNewline = false;
              break;
            case 59:
              if (brackets.length === 0)
                break $label0$1;
              buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 117:
            case 85:
              url = _this.tryUrl$0();
              if (url != null)
                buffer._contents += url;
              else
                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            default:
              if (next == null)
                break $label0$1;
              if (_this.lookingAtIdentifier$0())
                buffer._contents += _this.identifier$0();
              else
                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
          }
        }
      if (brackets.length !== 0)
        t1.expectChar$1(C.JSArray_methods.get$last(brackets));
      if (!allowEmpty && buffer._contents.length === 0)
        t1.error$1(0, "Expected token.");
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    declarationValue$0: function() {
      return this.declarationValue$1$allowEmpty(false);
    },
    tryUrl$0: function() {
      var buffer, next, t2, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      if (!_this.scanIdentifier$1("url"))
        return null;
      if (!t1.scanChar$1(40)) {
        t1.set$state(start);
        return null;
      }
      _this.whitespace$0();
      buffer = new P.StringBuffer("");
      buffer._contents = "url(";
      for (; true;) {
        next = t1.peekChar$0();
        if (next == null)
          break;
        else {
          if (next !== 37)
            if (next !== 38)
              if (next !== 35)
                t2 = next >= 42 && next <= 126 || next >= 128;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
          if (t2)
            buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 92)
            buffer._contents += H.S(_this.escape$0());
          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {
            _this.whitespace$0();
            if (t1.peekChar$0() !== 41)
              break;
          } else if (next === 41) {
            t2 = buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            return t2.charCodeAt(0) == 0 ? t2 : t2;
          } else
            break;
        }
      }
      t1.set$state(start);
      return null;
    },
    variableName$0: function() {
      this.scanner.expectChar$1(36);
      return this.identifier$1$normalize(true);
    },
    escape$1$identifierStart: function(identifierStart) {
      var value, first, i, next, t2, exception,
        t1 = this.scanner,
        start = t1._string_scanner$_position;
      t1.expectChar$1(92);
      value = 0;
      first = t1.peekChar$0();
      if (first == null)
        return "";
      else if (T.isNewline(first))
        t1.error$1(0, "Expected escape sequence.");
      else if (T.isHex(first)) {
        for (i = 0; i < 6; ++i) {
          next = t1.peekChar$0();
          if (next == null || !T.isHex(next))
            break;
          value *= 16;
          value += T.asHex(t1.readChar$0());
        }
        this.scanCharIf$1(T.character__isWhitespace$closure());
      } else
        value = t1.readChar$0();
      if (identifierStart) {
        t2 = value;
        t2 = t2 === 95 || T.isAlphabetic0(t2) || t2 >= 128;
      } else {
        t2 = value;
        t2 = t2 === 95 || T.isAlphabetic0(t2) || t2 >= 128 || T.isDigit(t2) || t2 === 45;
      }
      if (t2)
        try {
          t2 = H.Primitives_stringFromCharCode(value);
          return t2;
        } catch (exception) {
          if (type$.legacy_RangeError._is(H.unwrapException(exception)))
            t1.error$3$length$position(0, "Invalid Unicode code point.", t1._string_scanner$_position - start, start);
          else
            throw exception;
        }
      else {
        if (!(value <= 31))
          if (!J.$eq$(value, 127))
            t1 = identifierStart && T.isDigit(value);
          else
            t1 = true;
        else
          t1 = true;
        if (t1) {
          t1 = H.Primitives_stringFromCharCode(92);
          if (value > 15)
            t1 += H.Primitives_stringFromCharCode(T.hexCharFor(C.JSNumber_methods._shrOtherPositive$1(value, 4)));
          t1 = t1 + H.Primitives_stringFromCharCode(T.hexCharFor(value & 15)) + H.Primitives_stringFromCharCode(32);
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        } else
          return P.String_String$fromCharCodes(H.setRuntimeTypeInfo([92, value], type$.JSArray_legacy_int), 0, null);
      }
    },
    escape$0: function() {
      return this.escape$1$identifierStart(false);
    },
    escapeCharacter$0: function() {
      var first, value, i, next, t2,
        t1 = this.scanner;
      t1.expectChar$1(92);
      first = t1.peekChar$0();
      if (first == null)
        return 65533;
      else if (T.isNewline(first))
        t1.error$1(0, "Expected escape sequence.");
      else if (T.isHex(first)) {
        for (value = 0, i = 0; i < 6; ++i) {
          next = t1.peekChar$0();
          if (next == null || !T.isHex(next))
            break;
          value = (value << 4 >>> 0) + T.asHex(t1.readChar$0());
        }
        t2 = t1.peekChar$0();
        if (t2 === 32 || t2 === 9 || T.isNewline(t2))
          t1.readChar$0();
        if (value !== 0)
          t1 = value >= 55296 && value <= 57343 || value >= 1114111;
        else
          t1 = true;
        if (t1)
          return 65533;
        else
          return value;
      } else
        return t1.readChar$0();
    },
    scanCharIf$1: function(condition) {
      var t1 = this.scanner;
      if (!condition.call$1(t1.peekChar$0()))
        return false;
      t1.readChar$0();
      return true;
    },
    scanIdentChar$2$caseSensitive: function(char, caseSensitive) {
      var t3,
        t1 = new G.Parser_scanIdentChar_matches(caseSensitive, char),
        t2 = this.scanner,
        next = t2.peekChar$0();
      if (next != null && t1.call$1(next)) {
        t2.readChar$0();
        return true;
      } else if (next === 92) {
        t3 = t2._string_scanner$_position;
        if (t1.call$1(this.escapeCharacter$0()))
          return true;
        t2.set$state(new S._SpanScannerState(t2, t3));
      }
      return false;
    },
    scanIdentChar$1: function(char) {
      return this.scanIdentChar$2$caseSensitive(char, false);
    },
    expectIdentChar$1: function(letter) {
      var t1;
      if (this.scanIdentChar$2$caseSensitive(letter, false))
        return;
      t1 = this.scanner;
      t1.error$2$position(0, 'Expected "' + H.Primitives_stringFromCharCode(letter) + '".', t1._string_scanner$_position);
    },
    lookingAtNumber$0: function() {
      var second, third,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (T.isDigit(first))
        return true;
      if (first === 46) {
        second = t1.peekChar$1(1);
        return second != null && T.isDigit(second);
      } else if (first === 43 || first === 45) {
        second = t1.peekChar$1(1);
        if (second == null)
          return false;
        if (T.isDigit(second))
          return true;
        if (second !== 46)
          return false;
        third = t1.peekChar$1(2);
        return third != null && T.isDigit(third);
      } else
        return false;
    },
    lookingAtIdentifier$1: function($forward) {
      var t1, first, second;
      if ($forward == null)
        $forward = 0;
      t1 = this.scanner;
      first = t1.peekChar$1($forward);
      if (first == null)
        return false;
      if (first === 95 || T.isAlphabetic0(first) || first >= 128 || first === 92)
        return true;
      if (first !== 45)
        return false;
      second = t1.peekChar$1($forward + 1);
      if (second == null)
        return false;
      return second === 95 || T.isAlphabetic0(second) || second >= 128 || second === 92 || second === 45;
    },
    lookingAtIdentifier$0: function() {
      return this.lookingAtIdentifier$1(null);
    },
    lookingAtIdentifierBody$0: function() {
      var t1,
        next = this.scanner.peekChar$0();
      if (next != null)
        t1 = next === 95 || T.isAlphabetic0(next) || next >= 128 || T.isDigit(next) || next === 45 || next === 92;
      else
        t1 = false;
      return t1;
    },
    scanIdentifier$2$caseSensitive: function(text, caseSensitive) {
      var t1, start, t2, cur, _this = this;
      if (!_this.lookingAtIdentifier$0())
        return false;
      t1 = _this.scanner;
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        if (_this.scanIdentChar$2$caseSensitive(cur, caseSensitive))
          continue;
        if (start._scanner !== t1)
          H.throwExpression(P.ArgumentError$(string$.The_gi));
        t2 = start.position;
        if (t2 < 0 || t2 > t1.string.length)
          H.throwExpression(P.ArgumentError$("Invalid position " + t2));
        t1._string_scanner$_position = t2;
        t1._lastMatch = null;
        return false;
      }
      if (!_this.lookingAtIdentifierBody$0())
        return true;
      t1.set$state(start);
      return false;
    },
    scanIdentifier$1: function(text) {
      return this.scanIdentifier$2$caseSensitive(text, false);
    },
    expectIdentifier$2$name: function(text, $name) {
      var t1, start, t2, cur;
      if ($name == null)
        $name = '"' + text + '"';
      t1 = this.scanner;
      start = t1._string_scanner$_position;
      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        if (this.scanIdentChar$2$caseSensitive(cur, false))
          continue;
        t1.error$2$position(0, "Expected " + $name + ".", start);
      }
      if (!this.lookingAtIdentifierBody$0())
        return;
      t1.error$2$position(0, "Expected " + $name, start);
    },
    expectIdentifier$1: function(text) {
      return this.expectIdentifier$2$name(text, null);
    },
    rawText$1: function(consumer) {
      var t1 = this.scanner,
        start = t1._string_scanner$_position;
      consumer.call$0();
      return t1.substring$1(0, start);
    },
    error$2: function(_, message, span) {
      return H.throwExpression(E.StringScannerException$(message, span, this.scanner.string));
    },
    withErrorMessage$1$2: function(message, callback) {
      var error, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SourceSpanFormatException._is(t1)) {
          error = t1;
          throw H.wrapException(G.SourceSpanFormatException$(message, error.get$span(), error.get$source()));
        } else
          throw exception;
      }
    },
    withErrorMessage$2: function(message, callback) {
      return this.withErrorMessage$1$2(message, callback, type$.dynamic);
    },
    wrapSpanFormatException$1$1: function(callback) {
      var error, span, startPosition, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SourceSpanFormatException._is(t1)) {
          error = t1;
          span = error.get$span();
          if (B.startsWithIgnoreCase(error._span_exception$_message, "expected")) {
            t1 = span;
            t1 = t1._end - t1._file$_start === 0;
          } else
            t1 = false;
          if (t1) {
            t1 = span;
            startPosition = this._firstNewlineBefore$1(Y.FileLocation$_(t1.file, t1._file$_start).offset);
            t1 = span;
            if (!J.$eq$(startPosition, Y.FileLocation$_(t1.file, t1._file$_start).offset))
              span = span.file.span$2(startPosition, startPosition);
          }
          throw H.wrapException(E.SassFormatException$(error._span_exception$_message, span));
        } else
          throw exception;
      }
    },
    wrapSpanFormatException$1: function(callback) {
      return this.wrapSpanFormatException$1$1(callback, type$.dynamic);
    },
    _firstNewlineBefore$1: function(position) {
      var t1, t2, lastNewline, codeUnit,
        index = position - 1;
      for (t1 = this.scanner.string, t2 = J.getInterceptor$s(t1), lastNewline = null; index >= 0;) {
        codeUnit = t2.codeUnitAt$1(t1, index);
        if (!(codeUnit === 32 || codeUnit === 9 || codeUnit === 10 || codeUnit === 13 || codeUnit === 12))
          return lastNewline == null ? position : lastNewline;
        if (codeUnit === 10 || codeUnit === 13 || codeUnit === 12)
          lastNewline = index;
        --index;
      }
      return position;
    }
  };
  G.Parser__parseIdentifier_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        result = t1.identifier$0();
      t1.scanner.expectDone$0();
      return result;
    },
    $signature: 12
  };
  G.Parser_scanIdentChar_matches.prototype = {
    call$1: function(actual) {
      var t1 = this.char;
      return this.caseSensitive ? actual === t1 : T.characterEqualsIgnoreCase(t1, actual);
    },
    $signature: 24
  };
  U.SassParser.prototype = {
    get$currentIndentation: function() {
      return this._currentIndentation;
    },
    get$indented: function() {
      return true;
    },
    styleRuleSelector$0: function() {
      var t4,
        t1 = this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer(t3, []);
      do {
        buffer.addInterpolation$1(this.almostAnyValue$1$omitComments(true));
        t4 = t3._contents += H.Primitives_stringFromCharCode(10);
      } while (C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), ",") && this.scanCharIf$1(T.character__isNewline$closure()));
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    expectStatementSeparator$1: function($name) {
      var _this = this;
      if (!_this.atEndOfStatement$0())
        _this._expectNewline$0();
      if (_this._peekIndentation$0() <= _this._currentIndentation)
        return;
      _this.scanner.error$2$position(0, "Nothing may be indented " + ($name == null ? "here" : "beneath a " + $name) + ".", _this._nextIndentationEnd.position);
    },
    expectStatementSeparator$0: function() {
      return this.expectStatementSeparator$1(null);
    },
    atEndOfStatement$0: function() {
      var next = this.scanner.peekChar$0();
      return next == null || T.isNewline(next);
    },
    lookingAtChildren$0: function() {
      return this.atEndOfStatement$0() && this._peekIndentation$0() > this._currentIndentation;
    },
    importArgument$0: function() {
      var url, span, innerError, start, next, t2, exception, _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 117:
        case 85:
          start = new S._SpanScannerState(t1, t1._string_scanner$_position);
          if (_this.scanIdentifier$1("url"))
            if (t1.scanChar$1(40)) {
              t1.set$state(start);
              return _this.super$StylesheetParser$importArgument();
            } else
              t1.set$state(start);
          break;
        case 39:
        case 34:
          return _this.super$StylesheetParser$importArgument();
      }
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      next = t1.peekChar$0();
      while (true) {
        if (next != null)
          if (next !== 44)
            if (next !== 59)
              t2 = !(next === 10 || next === 13 || next === 12);
            else
              t2 = false;
          else
            t2 = false;
        else
          t2 = false;
        if (!t2)
          break;
        t1.readChar$0();
        next = t1.peekChar$0();
      }
      url = t1.substring$1(0, start.position);
      span = t1.spanFrom$1(start);
      if (_this.isPlainImportUrl$1(url))
        return new Q.StaticImport(X.Interpolation$(H.setRuntimeTypeInfo([N.serializeValue0(new D.SassString(url, true), true, true)], type$.JSArray_legacy_Object), span), null, null, span);
      else
        try {
          t1 = _this.parseImportUrl$1(url);
          return new B.DynamicImport(t1, span);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (type$.legacy_FormatException._is(t1)) {
            innerError = t1;
            _this.error$2(0, "Invalid URL: " + H.S(J.get$message$x(innerError)), span);
          } else
            throw exception;
        }
    },
    scanElse$1: function(ifIndentation) {
      var t1, t2, startIndentation, startNextIndentation, startNextIndentationEnd, _this = this;
      if (_this._peekIndentation$0() != ifIndentation)
        return false;
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      startIndentation = _this._currentIndentation;
      startNextIndentation = _this._nextIndentation;
      startNextIndentationEnd = _this._nextIndentationEnd;
      _this._readIndentation$0();
      if (t1.scanChar$1(64) && _this.scanIdentifier$1("else"))
        return true;
      t1.set$state(new S._SpanScannerState(t1, t2));
      _this._currentIndentation = startIndentation;
      _this._nextIndentation = startNextIndentation;
      _this._nextIndentationEnd = startNextIndentationEnd;
      return false;
    },
    children$1: function(_, child) {
      var children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);
      this._whileIndentedLower$1(new U.SassParser_children_closure(this, children, child));
      return children;
    },
    statements$1: function(statement) {
      var statements, t2, child,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first === 9 || first === 32)
        t1.error$3$length$position(0, string$.Indent, t1._string_scanner$_position, 0);
      statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);
      for (t2 = t1.string.length; t1._string_scanner$_position !== t2;) {
        child = this._child$1(statement);
        if (child != null)
          statements.push(child);
        this._readIndentation$0();
      }
      return statements;
    },
    _child$1: function(child) {
      var _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 13:
        case 10:
        case 12:
          return null;
        case 36:
          return _this.variableDeclarationWithoutNamespace$0();
        case 47:
          switch (t1.peekChar$1(1)) {
            case 47:
              return _this._silentComment$0();
            case 42:
              return _this._loudComment$0();
            default:
              return child.call$0();
          }
        default:
          return child.call$0();
      }
    },
    _silentComment$0: function() {
      var buffer, parentIndentation, t3, commentPrefix, i, t4, i0, t5, t6, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("//");
      buffer = new P.StringBuffer("");
      parentIndentation = _this._currentIndentation;
      t3 = t1.string;
      $label0$0:
        do {
          commentPrefix = t1.scanChar$1(47) ? "///" : "//";
          for (i = commentPrefix.length; true;) {
            t4 = buffer._contents += commentPrefix;
            for (i0 = i; i0 < _this._currentIndentation - parentIndentation; ++i0) {
              t4 += H.Primitives_stringFromCharCode(32);
              buffer._contents = t4;
            }
            t5 = t3.length;
            while (true) {
              if (t1._string_scanner$_position !== t5) {
                t6 = t1.peekChar$0();
                t6 = !(t6 === 10 || t6 === 13 || t6 === 12);
              } else
                t6 = false;
              if (!t6)
                break;
              t4 += H.Primitives_stringFromCharCode(t1.readChar$0());
              buffer._contents = t4;
            }
            buffer._contents = t4 + "\n";
            if (_this._peekIndentation$0() < parentIndentation)
              break $label0$0;
            if (_this._peekIndentation$0() === parentIndentation) {
              if (t1.peekChar$1(1 + parentIndentation) === 47 && t1.peekChar$1(2 + parentIndentation) === 47)
                _this._readIndentation$0();
              break;
            }
            _this._readIndentation$0();
          }
        } while (t1.scan$1("//"));
      t3 = buffer._contents;
      return _this.lastSilentComment = new B.SilentComment(t3.charCodeAt(0) == 0 ? t3 : t3, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _loudComment$0: function() {
      var t3, t4, buffer, parentIndentation, t5, first, beginningOfComment, t6, end, i, t7, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("/*");
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer(t3, t4);
      t3._contents = "/*";
      parentIndentation = _this._currentIndentation;
      for (t5 = t1.string, first = true; true; first = false) {
        if (first) {
          beginningOfComment = t1._string_scanner$_position;
          _this.spaces$0();
          t6 = t1.peekChar$0();
          if (t6 === 10 || t6 === 13 || t6 === 12) {
            _this._readIndentation$0();
            t3._contents += H.Primitives_stringFromCharCode(32);
          } else {
            end = t1._string_scanner$_position;
            t3._contents += J.substring$2$s(t5, beginningOfComment, end);
          }
        } else {
          t6 = t3._contents += "\n";
          t3._contents = t6 + " * ";
        }
        for (i = 3; i < _this._currentIndentation - parentIndentation; ++i)
          t3._contents += H.Primitives_stringFromCharCode(32);
        $label0$1:
          for (t6 = t5.length; t1._string_scanner$_position !== t6;)
            switch (t1.peekChar$0()) {
              case 10:
              case 13:
              case 12:
                break $label0$1;
              case 35:
                if (t1.peekChar$1(1) === 123) {
                  t7 = _this.singleInterpolation$0();
                  buffer._flushText$0();
                  t4.push(t7);
                } else
                  t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                break;
              default:
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                break;
            }
        if (_this._peekIndentation$0() <= parentIndentation)
          break;
        for (; _this._lookingAtDoubleNewline$0();) {
          _this._expectNewline$0();
          t6 = t3._contents += "\n";
          t3._contents = t6 + " *";
        }
        _this._readIndentation$0();
      }
      t4 = t3._contents;
      if (!C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), "*/"))
        t3._contents += " */";
      return new L.LoudComment(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))));
    },
    whitespaceWithoutComments$0: function() {
      var t1, t2, next;
      for (t1 = this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;) {
        next = t1.peekChar$0();
        if (next !== 9 && next !== 32)
          break;
        t1.readChar$0();
      }
    },
    loudComment$0: function() {
      var next,
        t1 = this.scanner;
      t1.expect$1("/*");
      for (; true;) {
        next = t1.readChar$0();
        if (next === 10 || next === 13 || next === 12)
          t1.error$1(0, "expected */.");
        if (next !== 42)
          continue;
        do
          next = t1.readChar$0();
        while (next === 42);
        if (next === 47)
          break;
      }
    },
    _expectNewline$0: function() {
      var t1 = this.scanner;
      switch (t1.peekChar$0()) {
        case 59:
          t1.error$1(0, string$.semico);
          break;
        case 13:
          t1.readChar$0();
          if (t1.peekChar$0() === 10)
            t1.readChar$0();
          return;
        case 10:
        case 12:
          t1.readChar$0();
          return;
        default:
          t1.error$1(0, "expected newline.");
      }
    },
    _lookingAtDoubleNewline$0: function() {
      var nextChar,
        t1 = this.scanner;
      switch (t1.peekChar$0()) {
        case 13:
          nextChar = t1.peekChar$1(1);
          if (nextChar === 10)
            return T.isNewline(t1.peekChar$1(2));
          return nextChar === 13 || nextChar === 12;
        case 10:
        case 12:
          return T.isNewline(t1.peekChar$1(1));
        default:
          return false;
      }
    },
    _whileIndentedLower$1: function(body) {
      var t1, t2, childIndentation, indentation, t3, t4, t5, _this = this,
        parentIndentation = _this._currentIndentation;
      for (t1 = _this.scanner, t2 = t1._sourceFile, childIndentation = null; _this._peekIndentation$0() > parentIndentation;) {
        indentation = _this._readIndentation$0();
        if (childIndentation == null)
          childIndentation = indentation;
        if (childIndentation != indentation) {
          t3 = "Inconsistent indentation, expected " + H.S(childIndentation) + " spaces.";
          t4 = t1._string_scanner$_position;
          t5 = t2.getColumn$1(t4);
          t1.error$3$length$position(0, t3, t2.getColumn$1(t1._string_scanner$_position), t4 - t5);
        }
        body.call$0();
      }
    },
    _readIndentation$0: function() {
      var _this = this;
      if (_this._nextIndentation == null)
        _this._peekIndentation$0();
      _this._currentIndentation = _this._nextIndentation;
      _this.scanner.set$state(_this._nextIndentationEnd);
      _this._nextIndentationEnd = _this._nextIndentation = null;
      return _this._currentIndentation;
    },
    _peekIndentation$0: function() {
      var t2, t3, start, containsTab, containsSpace, next, t4, _this = this,
        t1 = _this._nextIndentation;
      if (t1 != null)
        return t1;
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      t3 = t1.string.length;
      if (t2 === t3) {
        _this._nextIndentation = 0;
        _this._nextIndentationEnd = new S._SpanScannerState(t1, t2);
        return 0;
      }
      start = new S._SpanScannerState(t1, t2);
      if (!_this.scanCharIf$1(T.character__isNewline$closure()))
        t1.error$2$position(0, "Expected newline.", t1._string_scanner$_position);
      do {
        _this._nextIndentation = 0;
        for (containsTab = false, containsSpace = false; true;) {
          next = t1.peekChar$0();
          if (next === 32)
            containsSpace = true;
          else {
            if (next !== 9)
              break;
            containsTab = true;
          }
          _this._nextIndentation = _this._nextIndentation + 1;
          t1.readChar$0();
        }
        t2 = t1._string_scanner$_position;
        if (t2 === t3) {
          _this._nextIndentation = 0;
          _this._nextIndentationEnd = new S._SpanScannerState(t1, t2);
          t1.set$state(start);
          return 0;
        }
      } while (_this.scanCharIf$1(T.character__isNewline$closure()));
      if (containsTab) {
        if (containsSpace) {
          t2 = t1._string_scanner$_position;
          t3 = t1._sourceFile;
          t4 = t3.getColumn$1(t2);
          t1.error$3$length$position(0, "Tabs and spaces may not be mixed.", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);
        } else if (_this._spaces === true) {
          t2 = t1._string_scanner$_position;
          t3 = t1._sourceFile;
          t4 = t3.getColumn$1(t2);
          t1.error$3$length$position(0, "Expected spaces, was tabs.", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);
        }
      } else if (containsSpace && _this._spaces === false) {
        t2 = t1._string_scanner$_position;
        t3 = t1._sourceFile;
        t4 = t3.getColumn$1(t2);
        t1.error$3$length$position(0, "Expected tabs, was spaces.", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);
      }
      if (_this._nextIndentation > 0)
        if (_this._spaces == null)
          _this._spaces = containsSpace;
      _this._nextIndentationEnd = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.set$state(start);
      return _this._nextIndentation;
    }
  };
  U.SassParser_children_closure.prototype = {
    call$0: function() {
      this.children.push(this.$this._child$1(this.child));
    },
    $signature: 0
  };
  L.ScssParser.prototype = {
    get$indented: function() {
      return false;
    },
    get$currentIndentation: function() {
      return null;
    },
    styleRuleSelector$0: function() {
      return this.almostAnyValue$0();
    },
    expectStatementSeparator$1: function($name) {
      var t1, next;
      this.whitespaceWithoutComments$0();
      t1 = this.scanner;
      if (t1._string_scanner$_position === t1.string.length)
        return;
      next = t1.peekChar$0();
      if (next === 59 || next === 125)
        return;
      t1.expectChar$1(59);
    },
    expectStatementSeparator$0: function() {
      return this.expectStatementSeparator$1(null);
    },
    atEndOfStatement$0: function() {
      var next = this.scanner.peekChar$0();
      return next == null || next === 59 || next === 125 || next === 123;
    },
    lookingAtChildren$0: function() {
      return this.scanner.peekChar$0() === 123;
    },
    scanElse$1: function(_) {
      var t3, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      _this.whitespace$0();
      t3 = t1._string_scanner$_position;
      if (t1.scanChar$1(64)) {
        if (_this.scanIdentifier$2$caseSensitive("else", true))
          return true;
        if (_this.scanIdentifier$2$caseSensitive("elseif", true)) {
          _this.logger.warn$3$deprecation$span(0, string$.x40elsei, true, t1.spanFrom$1(new S._SpanScannerState(t1, t3)));
          t1.set$position(t1._string_scanner$_position - 2);
          return true;
        }
      }
      t1.set$state(new S._SpanScannerState(t1, t2));
      return false;
    },
    children$1: function(_, child) {
      var children, _this = this,
        t1 = _this.scanner;
      t1.expectChar$1(123);
      _this.whitespaceWithoutComments$0();
      children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);
      for (; true;)
        switch (t1.peekChar$0()) {
          case 36:
            children.push(_this.variableDeclarationWithoutNamespace$0());
            break;
          case 47:
            switch (t1.peekChar$1(1)) {
              case 47:
                children.push(_this._scss$_silentComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              case 42:
                children.push(_this._scss$_loudComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              default:
                children.push(child.call$0());
                break;
            }
            break;
          case 59:
            t1.readChar$0();
            _this.whitespaceWithoutComments$0();
            break;
          case 125:
            t1.expectChar$1(125);
            return children;
          default:
            children.push(child.call$0());
            break;
        }
    },
    statements$1: function(statement) {
      var t1, t2, child, _this = this,
        statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);
      _this.whitespaceWithoutComments$0();
      for (t1 = _this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;)
        switch (t1.peekChar$0()) {
          case 36:
            statements.push(_this.variableDeclarationWithoutNamespace$0());
            break;
          case 47:
            switch (t1.peekChar$1(1)) {
              case 47:
                statements.push(_this._scss$_silentComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              case 42:
                statements.push(_this._scss$_loudComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              default:
                child = statement.call$0();
                if (child != null)
                  statements.push(child);
                break;
            }
            break;
          case 59:
            t1.readChar$0();
            _this.whitespaceWithoutComments$0();
            break;
          default:
            child = statement.call$0();
            if (child != null)
              statements.push(child);
            break;
        }
      return statements;
    },
    _scss$_silentComment$0: function() {
      var t2, t3, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expect$1("//");
      t2 = t1.string.length;
      do {
        while (true) {
          if (t1._string_scanner$_position !== t2) {
            t3 = t1.readChar$0();
            t3 = !(t3 === 10 || t3 === 13 || t3 === 12);
          } else
            t3 = false;
          if (!t3)
            break;
        }
        if (t1._string_scanner$_position === t2)
          break;
        _this.whitespaceWithoutComments$0();
      } while (t1.scan$1("//"));
      if (_this.get$plainCss())
        _this.error$2(0, string$.Silent, t1.spanFrom$1(start));
      return _this.lastSilentComment = new B.SilentComment(t1.substring$1(0, start.position), t1.spanFrom$1(start));
    },
    _scss$_loudComment$0: function() {
      var t3, t4, buffer, t5, endPosition,
        t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("/*");
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer(t3, t4);
      t3._contents = "/*";
      for (; true;)
        switch (t1.peekChar$0()) {
          case 35:
            if (t1.peekChar$1(1) === 123) {
              t5 = this.singleInterpolation$0();
              buffer._flushText$0();
              t4.push(t5);
            } else
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            break;
          case 42:
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            if (t1.peekChar$0() !== 47)
              break;
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            endPosition = t1._string_scanner$_position;
            t3 = t1._sourceFile;
            t4 = new S._SpanScannerState(t1, t2).position;
            t1 = new Y._FileSpan(t3, t4, endPosition);
            t1._FileSpan$3(t3, t4, endPosition);
            return new L.LoudComment(buffer.interpolation$1(t1));
          case 13:
            t1.readChar$0();
            if (t1.peekChar$0() !== 10)
              t3._contents += H.Primitives_stringFromCharCode(10);
            break;
          case 12:
            t1.readChar$0();
            t3._contents += H.Primitives_stringFromCharCode(10);
            break;
          default:
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            break;
        }
    }
  };
  T.SelectorParser.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new T.SelectorParser_parse_closure(this));
    },
    parseCompoundSelector$0: function() {
      return this.wrapSpanFormatException$1(new T.SelectorParser_parseCompoundSelector_closure(this));
    },
    _selectorList$0: function() {
      var t3, t4, lineBreak, _this = this,
        t1 = _this.scanner,
        t2 = t1._sourceFile,
        previousLine = t2.getLine$1(t1._string_scanner$_position),
        components = H.setRuntimeTypeInfo([_this._complexSelector$0()], type$.JSArray_legacy_ComplexSelector);
      _this.whitespace$0();
      for (t3 = t1.string; t1.scanChar$1(44);) {
        _this.whitespace$0();
        if (t1.peekChar$0() === 44)
          continue;
        t4 = t1._string_scanner$_position;
        if (t4 === t3.length)
          break;
        lineBreak = t2.getLine$1(t4) != previousLine;
        if (lineBreak)
          previousLine = t2.getLine$1(t1._string_scanner$_position);
        components.push(_this._complexSelector$1$lineBreak(lineBreak));
      }
      return D.SelectorList$(components);
    },
    _complexSelector$1$lineBreak: function(lineBreak) {
      var t1, next, _this = this,
        _s58_ = string$.x22x26__ma,
        components = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent);
      $label0$1:
        for (t1 = _this.scanner; true;) {
          _this.whitespace$0();
          next = t1.peekChar$0();
          switch (next) {
            case 43:
              t1.readChar$0();
              components.push(C.Combinator_uzg);
              break;
            case 62:
              t1.readChar$0();
              components.push(C.Combinator_sgq);
              break;
            case 126:
              t1.readChar$0();
              components.push(C.Combinator_CzM);
              break;
            case 91:
            case 46:
            case 35:
            case 37:
            case 58:
            case 38:
            case 42:
            case 124:
              components.push(_this._compoundSelector$0());
              if (t1.peekChar$0() === 38)
                t1.error$1(0, _s58_);
              break;
            default:
              if (next == null || !_this.lookingAtIdentifier$0())
                break $label0$1;
              components.push(_this._compoundSelector$0());
              if (t1.peekChar$0() === 38)
                t1.error$1(0, _s58_);
              break;
          }
        }
      if (components.length === 0)
        t1.error$1(0, "expected selector.");
      return S.ComplexSelector$(components, lineBreak);
    },
    _complexSelector$0: function() {
      return this._complexSelector$1$lineBreak(false);
    },
    _compoundSelector$0: function() {
      var t2,
        components = H.setRuntimeTypeInfo([this._simpleSelector$0()], type$.JSArray_legacy_SimpleSelector),
        t1 = this.scanner;
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 === 42 || t2 === 91 || t2 === 46 || t2 === 35 || t2 === 37 || t2 === 58))
          break;
        components.push(this._simpleSelector$1$allowParent(false));
      }
      return X.CompoundSelector$(components);
    },
    _simpleSelector$1$allowParent: function(allowParent) {
      var $name, text, t2, suffix, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      if (allowParent == null)
        allowParent = _this._allowParent;
      switch (t1.peekChar$0()) {
        case 91:
          return _this._attributeSelector$0();
        case 46:
          t1.expectChar$1(46);
          return new X.ClassSelector(_this.identifier$0());
        case 35:
          t1.expectChar$1(35);
          return new N.IDSelector(_this.identifier$0());
        case 37:
          t1.expectChar$1(37);
          $name = _this.identifier$0();
          if (!_this._allowPlaceholder)
            _this.error$2(0, string$.Placeh, t1.spanFrom$1(start));
          return new N.PlaceholderSelector($name);
        case 58:
          return _this._pseudoSelector$0();
        case 38:
          t1.expectChar$1(38);
          if (_this.lookingAtIdentifierBody$0()) {
            text = new P.StringBuffer("");
            _this._identifierBody$1(text);
            if (text._contents.length === 0)
              t1.error$1(0, "Expected identifier body.");
            t2 = text._contents;
            suffix = t2.charCodeAt(0) == 0 ? t2 : t2;
          } else
            suffix = null;
          if (!allowParent)
            _this.error$2(0, "Parent selectors aren't allowed here.", t1.spanFrom$1(start));
          return new M.ParentSelector(suffix);
        default:
          return _this._typeOrUniversalSelector$0();
      }
    },
    _simpleSelector$0: function() {
      return this._simpleSelector$1$allowParent(null);
    },
    _attributeSelector$0: function() {
      var $name, operator, next, value, modifier, _this = this, _null = null,
        t1 = _this.scanner;
      t1.expectChar$1(91);
      _this.whitespace$0();
      $name = _this._attributeName$0();
      _this.whitespace$0();
      if (t1.scanChar$1(93))
        return new N.AttributeSelector($name, _null, _null, _null);
      operator = _this._attributeOperator$0();
      _this.whitespace$0();
      next = t1.peekChar$0();
      value = next === 39 || next === 34 ? _this.string$0() : _this.identifier$0();
      _this.whitespace$0();
      modifier = T.isAlphabetic0(t1.peekChar$0()) ? H.Primitives_stringFromCharCode(t1.readChar$0()) : _null;
      t1.expectChar$1(93);
      return new N.AttributeSelector($name, operator, value, modifier);
    },
    _attributeName$0: function() {
      var nameOrNamespace, _this = this,
        t1 = _this.scanner;
      if (t1.scanChar$1(42)) {
        t1.expectChar$1(124);
        return new D.QualifiedName(_this.identifier$0(), "*");
      }
      nameOrNamespace = _this.identifier$0();
      if (t1.peekChar$0() !== 124 || t1.peekChar$1(1) === 61)
        return new D.QualifiedName(nameOrNamespace, null);
      t1.readChar$0();
      return new D.QualifiedName(_this.identifier$0(), nameOrNamespace);
    },
    _attributeOperator$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      switch (t1.readChar$0()) {
        case 61:
          return C.AttributeOperator_sEs;
        case 126:
          t1.expectChar$1(61);
          return C.AttributeOperator_fz1;
        case 124:
          t1.expectChar$1(61);
          return C.AttributeOperator_AuK;
        case 94:
          t1.expectChar$1(61);
          return C.AttributeOperator_4L5;
        case 36:
          t1.expectChar$1(61);
          return C.AttributeOperator_mOX;
        case 42:
          t1.expectChar$1(61);
          return C.AttributeOperator_gqZ;
        default:
          t1.error$2$position(0, 'Expected "]".', t2);
      }
    },
    _pseudoSelector$0: function() {
      var element, $name, unvendored, selector, argument, t2, _this = this, _null = null,
        t1 = _this.scanner;
      t1.expectChar$1(58);
      element = t1.scanChar$1(58);
      $name = _this.identifier$0();
      if (!t1.scanChar$1(40))
        return D.PseudoSelector$($name, _null, element, _null);
      _this.whitespace$0();
      unvendored = B.unvendor($name);
      if (element)
        if ($._selectorPseudoElements.contains$1(0, unvendored)) {
          selector = _this._selectorList$0();
          argument = _null;
        } else {
          argument = _this.declarationValue$1$allowEmpty(true);
          selector = _null;
        }
      else if ($._selectorPseudoClasses.contains$1(0, unvendored)) {
        selector = _this._selectorList$0();
        argument = _null;
      } else if (unvendored === "nth-child" || unvendored === "nth-last-child") {
        argument = _this._aNPlusB$0();
        _this.whitespace$0();
        t2 = t1.peekChar$1(-1);
        if ((t2 === 32 || t2 === 9 || T.isNewline(t2)) && t1.peekChar$0() !== 41) {
          _this.expectIdentifier$1("of");
          argument += " of";
          _this.whitespace$0();
          selector = _this._selectorList$0();
        } else
          selector = _null;
      } else {
        argument = C.JSString_methods.trimRight$0(_this.declarationValue$1$allowEmpty(true));
        selector = _null;
      }
      t1.expectChar$1(41);
      return D.PseudoSelector$($name, argument, element, selector);
    },
    _aNPlusB$0: function() {
      var t2, first, t3, next, last, _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 101:
        case 69:
          _this.expectIdentifier$1("even");
          return "even";
        case 111:
        case 79:
          _this.expectIdentifier$1("odd");
          return "odd";
        case 43:
        case 45:
          t2 = H.Primitives_stringFromCharCode(t1.readChar$0());
          break;
        default:
          t2 = "";
      }
      first = t1.peekChar$0();
      if (first != null && T.isDigit(first)) {
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        }
        _this.whitespace$0();
        if (!_this.scanIdentChar$1(110))
          return t2.charCodeAt(0) == 0 ? t2 : t2;
      } else
        _this.expectIdentChar$1(110);
      t2 += H.Primitives_stringFromCharCode(110);
      _this.whitespace$0();
      next = t1.peekChar$0();
      if (next !== 43 && next !== 45)
        return t2.charCodeAt(0) == 0 ? t2 : t2;
      t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
      _this.whitespace$0();
      last = t1.peekChar$0();
      if (last == null || !T.isDigit(last))
        t1.error$1(0, "Expected a number.");
      while (true) {
        t3 = t1.peekChar$0();
        if (!(t3 != null && t3 >= 48 && t3 <= 57))
          break;
        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    _typeOrUniversalSelector$0: function() {
      var nameOrNamespace, _this = this,
        t1 = _this.scanner,
        first = t1.peekChar$0();
      if (first === 42) {
        t1.readChar$0();
        if (!t1.scanChar$1(124))
          return new N.UniversalSelector(null);
        if (t1.scanChar$1(42))
          return new N.UniversalSelector("*");
        else
          return new F.TypeSelector(new D.QualifiedName(_this.identifier$0(), "*"));
      } else if (first === 124) {
        t1.readChar$0();
        if (t1.scanChar$1(42))
          return new N.UniversalSelector("");
        else
          return new F.TypeSelector(new D.QualifiedName(_this.identifier$0(), ""));
      }
      nameOrNamespace = _this.identifier$0();
      if (!t1.scanChar$1(124))
        return new F.TypeSelector(new D.QualifiedName(nameOrNamespace, null));
      else if (t1.scanChar$1(42))
        return new N.UniversalSelector(nameOrNamespace);
      else
        return new F.TypeSelector(new D.QualifiedName(_this.identifier$0(), nameOrNamespace));
    }
  };
  T.SelectorParser_parse_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        selector = t1._selectorList$0();
      t1 = t1.scanner;
      if (t1._string_scanner$_position !== t1.string.length)
        t1.error$1(0, "expected selector.");
      return selector;
    },
    $signature: 42
  };
  T.SelectorParser_parseCompoundSelector_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        compound = t1._compoundSelector$0();
      t1 = t1.scanner;
      if (t1._string_scanner$_position !== t1.string.length)
        t1.error$1(0, "expected selector.");
      return compound;
    },
    $signature: 264
  };
  V.StylesheetParser.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new V.StylesheetParser_parse_closure(this));
    },
    parseArgumentDeclaration$0: function() {
      return this._parseSingleProduction$1$1(new V.StylesheetParser_parseArgumentDeclaration_closure(this), type$.legacy_ArgumentDeclaration);
    },
    parseVariableDeclaration$0: function() {
      return this._parseSingleProduction$1$1(new V.StylesheetParser_parseVariableDeclaration_closure(this), type$.legacy_VariableDeclaration);
    },
    parseUseRule$0: function() {
      return this._parseSingleProduction$1$1(new V.StylesheetParser_parseUseRule_closure(this), type$.legacy_UseRule);
    },
    _parseSingleProduction$1$1: function(production, $T) {
      return this.wrapSpanFormatException$1(new V.StylesheetParser__parseSingleProduction_closure(this, production, $T));
    },
    _statement$1$root: function(root) {
      var t2, _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 64:
          return _this.atRule$2$root(new V.StylesheetParser__statement_closure(_this), root);
        case 43:
          if (!_this.get$indented() || !_this.lookingAtIdentifier$1(1))
            return _this._stylesheet$_styleRule$0();
          _this._isUseAllowed = false;
          t2 = t1._string_scanner$_position;
          t1.readChar$0();
          return _this._includeRule$1(new S._SpanScannerState(t1, t2));
        case 61:
          if (!_this.get$indented())
            return _this._stylesheet$_styleRule$0();
          _this._isUseAllowed = false;
          t2 = t1._string_scanner$_position;
          t1.readChar$0();
          _this.whitespace$0();
          return _this._mixinRule$1(new S._SpanScannerState(t1, t2));
        case 125:
          t1.error$2$length(0, 'unmatched "}".', 1);
          break;
        default:
          return _this._inStyleRule || _this._stylesheet$_inUnknownAtRule || _this._stylesheet$_inMixin || _this._inContentBlock ? _this._declarationOrStyleRule$0() : _this._variableDeclarationOrStyleRule$0();
      }
    },
    _statement$0: function() {
      return this._statement$1$root(false);
    },
    _variableDeclarationWithNamespace$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position,
        namespace = this.identifier$0();
      t1.expectChar$1(46);
      return this.variableDeclarationWithoutNamespace$2(namespace, new S._SpanScannerState(t1, t2));
    },
    variableDeclarationWithoutNamespace$2: function(namespace, start) {
      var precedingComment, t1, $name, t2, value, flagStart, guarded, global, flag, endPosition, t3, t4, t5, declaration, _this = this, _box_0 = {};
      _box_0.start = start;
      precedingComment = _this.lastSilentComment;
      _this.lastSilentComment = null;
      if (start == null) {
        t1 = _this.scanner;
        _box_0.start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      }
      $name = _this.variableName$0();
      t1 = namespace != null;
      if (t1)
        _this._assertPublic$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure(_box_0, _this));
      if (_this.get$plainCss())
        _this.error$2(0, string$.Sass_v, _this.scanner.spanFrom$1(_box_0.start));
      _this.whitespace$0();
      t2 = _this.scanner;
      t2.expectChar$1(58);
      _this.whitespace$0();
      value = _this.expression$0();
      flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);
      for (guarded = false, global = false; t2.scanChar$1(33);) {
        flag = _this.identifier$0();
        if (flag === "default")
          guarded = true;
        else if (flag === "global") {
          if (t1) {
            endPosition = t2._string_scanner$_position;
            t3 = t2._sourceFile;
            t4 = flagStart.position;
            t5 = new Y._FileSpan(t3, t4, endPosition);
            t5._FileSpan$3(t3, t4, endPosition);
            _this.error$2(0, string$.x21globa, t5);
          }
          global = true;
        } else {
          endPosition = t2._string_scanner$_position;
          t3 = t2._sourceFile;
          t4 = flagStart.position;
          t5 = new Y._FileSpan(t3, t4, endPosition);
          t5._FileSpan$3(t3, t4, endPosition);
          _this.error$2(0, "Invalid flag name.", t5);
        }
        _this.whitespace$0();
        flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);
      }
      _this.expectStatementSeparator$1("variable declaration");
      declaration = Z.VariableDeclaration$($name, value, t2.spanFrom$1(_box_0.start), precedingComment, global, guarded, namespace);
      if (global)
        _this._globalVariables.putIfAbsent$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure0(declaration));
      return declaration;
    },
    variableDeclarationWithoutNamespace$0: function() {
      return this.variableDeclarationWithoutNamespace$2(null, null);
    },
    _variableDeclarationOrStyleRule$0: function() {
      var t1, t2, variableOrInterpolation, t3, _this = this;
      if (_this.get$plainCss())
        return _this._stylesheet$_styleRule$0();
      if (_this.get$indented() && _this.scanner.scanChar$1(92))
        return _this._stylesheet$_styleRule$0();
      if (!_this.lookingAtIdentifier$0())
        return _this._stylesheet$_styleRule$0();
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      variableOrInterpolation = _this._variableDeclarationOrInterpolation$0();
      if (variableOrInterpolation instanceof Z.VariableDeclaration)
        return variableOrInterpolation;
      else {
        t3 = new Z.InterpolationBuffer(new P.StringBuffer(""), []);
        t3.addInterpolation$1(type$.legacy_Interpolation._as(variableOrInterpolation));
        return _this._stylesheet$_styleRule$2(t3, new S._SpanScannerState(t1, t2));
      }
    },
    _declarationOrStyleRule$0: function() {
      var t1, t2, declarationOrBuffer, _this = this;
      if (_this.get$plainCss() && _this._inStyleRule && !_this._stylesheet$_inUnknownAtRule)
        return _this._propertyOrVariableDeclaration$0();
      if (_this.get$indented() && _this.scanner.scanChar$1(92))
        return _this._stylesheet$_styleRule$0();
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      declarationOrBuffer = _this._declarationOrBuffer$0();
      return type$.legacy_Statement._is(declarationOrBuffer) ? declarationOrBuffer : _this._stylesheet$_styleRule$2(type$.legacy_InterpolationBuffer._as(declarationOrBuffer), new S._SpanScannerState(t1, t2));
    },
    _declarationOrBuffer$0: function() {
      var midBuffer, couldBeSelector, beforeDeclaration, additional, t3, startsWithPunctuation, variableOrInterpolation, t4, $name, postColonWhitespace, t5, value, exception, _this = this, t1 = {},
        t2 = _this.scanner,
        start = new S._SpanScannerState(t2, t2._string_scanner$_position),
        nameBuffer = new Z.InterpolationBuffer(new P.StringBuffer(""), []),
        first = t2.peekChar$0();
      if (first !== 58)
        if (first !== 42)
          if (first !== 46)
            t3 = first === 35 && t2.peekChar$1(1) !== 123;
          else
            t3 = true;
        else
          t3 = true;
      else
        t3 = true;
      if (t3) {
        t3 = t2.readChar$0();
        nameBuffer._interpolation_buffer$_text._contents += H.Primitives_stringFromCharCode(t3);
        t3 = _this.rawText$1(_this.get$whitespace());
        nameBuffer._interpolation_buffer$_text._contents += t3;
        startsWithPunctuation = true;
      } else
        startsWithPunctuation = false;
      if (!_this._lookingAtInterpolatedIdentifier$0())
        return nameBuffer;
      variableOrInterpolation = startsWithPunctuation ? _this.interpolatedIdentifier$0() : _this._variableDeclarationOrInterpolation$0();
      if (variableOrInterpolation instanceof Z.VariableDeclaration)
        return variableOrInterpolation;
      else
        nameBuffer.addInterpolation$1(type$.legacy_Interpolation._as(variableOrInterpolation));
      _this._isUseAllowed = false;
      if (t2.matches$1("/*")) {
        t3 = _this.rawText$1(_this.get$loudComment());
        nameBuffer._interpolation_buffer$_text._contents += t3;
      }
      midBuffer = new P.StringBuffer("");
      t3 = _this.get$whitespace();
      midBuffer._contents += _this.rawText$1(t3);
      t4 = t2._string_scanner$_position;
      if (!t2.scanChar$1(58)) {
        if (midBuffer._contents.length !== 0)
          nameBuffer._interpolation_buffer$_text._contents += H.Primitives_stringFromCharCode(32);
        return nameBuffer;
      }
      midBuffer._contents += H.Primitives_stringFromCharCode(58);
      $name = nameBuffer.interpolation$1(t2.spanFrom$2(start, new S._SpanScannerState(t2, t4)));
      if (C.JSString_methods.startsWith$1($name.get$initialPlain(), "--")) {
        t1 = _this._interpolatedDeclarationValue$0();
        _this.expectStatementSeparator$1("custom property");
        return L.Declaration$($name, t2.spanFrom$1(start), null, new D.StringExpression(t1, false));
      }
      if (t2.scanChar$1(58)) {
        t1 = nameBuffer;
        t2 = t1._interpolation_buffer$_text;
        t2._contents += H.S(midBuffer);
        t2._contents += H.Primitives_stringFromCharCode(58);
        return t1;
      } else if (_this.get$indented() && _this._lookingAtInterpolatedIdentifier$0()) {
        t1 = nameBuffer;
        t1._interpolation_buffer$_text._contents += H.S(midBuffer);
        return t1;
      }
      postColonWhitespace = _this.rawText$1(t3);
      if (_this.lookingAtChildren$0())
        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure($name));
      midBuffer._contents += postColonWhitespace;
      couldBeSelector = postColonWhitespace.length === 0 && _this._lookingAtInterpolatedIdentifier$0();
      beforeDeclaration = new S._SpanScannerState(t2, t2._string_scanner$_position);
      t1.value = null;
      try {
        if (_this.lookingAtChildren$0()) {
          t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);
          t4 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);
          t5 = t4.offset;
          value = new D.StringExpression(X.Interpolation$(t3, Y._FileSpan$(t4.file, t5, t5)), true);
        } else
          value = _this.expression$0();
        t3 = t1.value = value;
        if (_this.lookingAtChildren$0()) {
          if (couldBeSelector)
            _this.expectStatementSeparator$0();
        } else if (!_this.atEndOfStatement$0())
          _this.expectStatementSeparator$0();
      } catch (exception) {
        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {
          if (!couldBeSelector)
            throw exception;
          t2.set$state(beforeDeclaration);
          additional = _this.almostAnyValue$0();
          if (!_this.get$indented() && t2.peekChar$0() === 59)
            throw exception;
          nameBuffer._interpolation_buffer$_text._contents += H.S(midBuffer);
          nameBuffer.addInterpolation$1(additional);
          return nameBuffer;
        } else
          throw exception;
      }
      if (_this.lookingAtChildren$0())
        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure0(t1, $name));
      else {
        _this.expectStatementSeparator$0();
        return L.Declaration$($name, t2.spanFrom$1(start), null, t3);
      }
    },
    _variableDeclarationOrInterpolation$0: function() {
      var t1, start, identifier, t2, buffer, _this = this;
      if (!_this.lookingAtIdentifier$0())
        return _this.interpolatedIdentifier$0();
      t1 = _this.scanner;
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      identifier = _this.identifier$0();
      if (t1.matches$1(".$")) {
        t1.readChar$0();
        return _this.variableDeclarationWithoutNamespace$2(identifier, start);
      } else {
        t2 = new P.StringBuffer("");
        buffer = new Z.InterpolationBuffer(t2, []);
        t2._contents = identifier;
        if (_this._lookingAtInterpolatedIdentifierBody$0())
          buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
        return buffer.interpolation$1(t1.spanFrom$1(start));
      }
    },
    _stylesheet$_styleRule$2: function(buffer, start) {
      var t2, interpolation, t3, wasInStyleRule, _this = this, t1 = {};
      t1.start = start;
      _this._isUseAllowed = false;
      if (start == null) {
        t2 = _this.scanner;
        t2 = t1.start = new S._SpanScannerState(t2, t2._string_scanner$_position);
      } else
        t2 = start;
      interpolation = t1.interpolation = _this.styleRuleSelector$0();
      if (buffer != null) {
        buffer.addInterpolation$1(interpolation);
        t3 = t1.interpolation = buffer.interpolation$1(_this.scanner.spanFrom$1(t2));
      } else
        t3 = interpolation;
      if (t3.contents.length === 0)
        _this.scanner.error$1(0, 'expected "}".');
      wasInStyleRule = _this._inStyleRule;
      _this._inStyleRule = true;
      return _this._withChildren$3(_this.get$_statement(), t2, new V.StylesheetParser__styleRule_closure(t1, _this, wasInStyleRule));
    },
    _stylesheet$_styleRule$0: function() {
      return this._stylesheet$_styleRule$2(null, null);
    },
    _propertyOrVariableDeclaration$1$parseCustomProperties: function(parseCustomProperties) {
      var first, t3, nameBuffer, variableOrInterpolation, $name, value, _this = this,
        _s48_ = string$.Nested,
        t1 = {},
        t2 = _this.scanner,
        start = new S._SpanScannerState(t2, t2._string_scanner$_position);
      t1.name = null;
      first = t2.peekChar$0();
      if (first !== 58)
        if (first !== 42)
          if (first !== 46)
            t3 = first === 35 && t2.peekChar$1(1) !== 123;
          else
            t3 = true;
        else
          t3 = true;
      else
        t3 = true;
      if (t3) {
        t3 = new P.StringBuffer("");
        nameBuffer = new Z.InterpolationBuffer(t3, []);
        t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());
        t3._contents += _this.rawText$1(_this.get$whitespace());
        nameBuffer.addInterpolation$1(_this.interpolatedIdentifier$0());
        t3 = t1.name = nameBuffer.interpolation$1(t2.spanFrom$1(start));
      } else if (!_this.get$plainCss()) {
        variableOrInterpolation = _this._variableDeclarationOrInterpolation$0();
        if (variableOrInterpolation instanceof Z.VariableDeclaration)
          return variableOrInterpolation;
        else {
          type$.legacy_Interpolation._as(variableOrInterpolation);
          t1.name = variableOrInterpolation;
        }
        t3 = variableOrInterpolation;
      } else {
        $name = _this.interpolatedIdentifier$0();
        t1.name = $name;
        t3 = $name;
      }
      _this.whitespace$0();
      t2.expectChar$1(58);
      if (parseCustomProperties && C.JSString_methods.startsWith$1(t3.get$initialPlain(), "--")) {
        t1 = _this._interpolatedDeclarationValue$0();
        _this.expectStatementSeparator$1("custom property");
        return L.Declaration$(t3, t2.spanFrom$1(start), null, new D.StringExpression(t1, false));
      }
      _this.whitespace$0();
      if (_this.lookingAtChildren$0()) {
        if (_this.get$plainCss())
          t2.error$1(0, _s48_);
        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure(t1));
      }
      value = _this.expression$0();
      if (_this.lookingAtChildren$0()) {
        if (_this.get$plainCss())
          t2.error$1(0, _s48_);
        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure0(t1, value));
      } else {
        _this.expectStatementSeparator$0();
        return L.Declaration$(t3, t2.spanFrom$1(start), null, value);
      }
    },
    _propertyOrVariableDeclaration$0: function() {
      return this._propertyOrVariableDeclaration$1$parseCustomProperties(true);
    },
    _declarationChild$0: function() {
      if (this.scanner.peekChar$0() === 64)
        return this._declarationAtRule$0();
      return this._propertyOrVariableDeclaration$1$parseCustomProperties(false);
    },
    atRule$2$root: function(child, root) {
      var $name, wasUseAllowed, value, optional, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$2$name(64, "@-rule");
      $name = _this.interpolatedIdentifier$0();
      _this.whitespace$0();
      wasUseAllowed = _this._isUseAllowed;
      _this._isUseAllowed = false;
      switch ($name.get$asPlain()) {
        case "at-root":
          return _this._atRootRule$1(start);
        case "charset":
          _this._isUseAllowed = wasUseAllowed;
          if (!root)
            _this._disallowedAtRule$1(start);
          _this.string$0();
          return null;
        case "content":
          return _this._contentRule$1(start);
        case "debug":
          return _this._debugRule$1(start);
        case "each":
          return _this._eachRule$2(start, child);
        case "else":
          return _this._disallowedAtRule$1(start);
        case "error":
          return _this._errorRule$1(start);
        case "extend":
          if (!_this._inStyleRule && !_this._stylesheet$_inMixin && !_this._inContentBlock)
            _this.error$2(0, string$.x40exten, t1.spanFrom$1(start));
          value = _this.almostAnyValue$0();
          optional = t1.scanChar$1(33);
          if (optional)
            _this.expectIdentifier$1("optional");
          _this.expectStatementSeparator$1("@extend rule");
          return new X.ExtendRule(value, optional, t1.spanFrom$1(start));
        case "for":
          return _this._forRule$2(start, child);
        case "forward":
          _this._isUseAllowed = wasUseAllowed;
          if (!root)
            _this._disallowedAtRule$1(start);
          return _this._forwardRule$1(start);
        case "function":
          return _this._functionRule$1(start);
        case "if":
          return _this._ifRule$2(start, child);
        case "import":
          return _this._importRule$1(start);
        case "include":
          return _this._includeRule$1(start);
        case "media":
          return _this.mediaRule$1(start);
        case "mixin":
          return _this._mixinRule$1(start);
        case "-moz-document":
          return _this.mozDocumentRule$2(start, $name);
        case "return":
          return _this._disallowedAtRule$1(start);
        case "supports":
          return _this.supportsRule$1(start);
        case "use":
          _this._isUseAllowed = wasUseAllowed;
          if (!root)
            _this._disallowedAtRule$1(start);
          return _this._useRule$1(start);
        case "warn":
          return _this._warnRule$1(start);
        case "while":
          return _this._whileRule$2(start, child);
        default:
          return _this.unknownAtRule$2(start, $name);
      }
    },
    _declarationAtRule$0: function() {
      var _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      switch (_this._plainAtRuleName$0()) {
        case "content":
          return _this._contentRule$1(start);
        case "debug":
          return _this._debugRule$1(start);
        case "each":
          return _this._eachRule$2(start, _this.get$_declarationChild());
        case "else":
          return _this._disallowedAtRule$1(start);
        case "error":
          return _this._errorRule$1(start);
        case "for":
          return _this._forRule$2(start, _this.get$_declarationAtRule());
        case "if":
          return _this._ifRule$2(start, _this.get$_declarationChild());
        case "include":
          return _this._includeRule$1(start);
        case "warn":
          return _this._warnRule$1(start);
        case "while":
          return _this._whileRule$2(start, _this.get$_declarationChild());
        default:
          return _this._disallowedAtRule$1(start);
      }
    },
    _functionChild$0: function() {
      var state, variableDeclarationError, statement, t2, exception, t3, start, value, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() !== 64) {
        state = new S._SpanScannerState(t1, t1._string_scanner$_position);
        try {
          t2 = _this._variableDeclarationWithNamespace$0();
          return t2;
        } catch (exception) {
          t2 = H.unwrapException(exception);
          t3 = type$.legacy_SourceSpanFormatException;
          if (t3._is(t2)) {
            variableDeclarationError = t2;
            t1.set$state(state);
            statement = null;
            try {
              statement = _this._declarationOrStyleRule$0();
            } catch (exception) {
              if (t3._is(H.unwrapException(exception)))
                throw H.wrapException(variableDeclarationError);
              else
                throw exception;
            }
            _this.error$2(0, "@function rules may not contain " + (statement instanceof X.StyleRule ? "style rules" : "declarations") + ".", statement.get$span());
          } else
            throw exception;
        }
      }
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      switch (_this._plainAtRuleName$0()) {
        case "debug":
          return _this._debugRule$1(start);
        case "each":
          return _this._eachRule$2(start, _this.get$_functionChild());
        case "else":
          return _this._disallowedAtRule$1(start);
        case "error":
          return _this._errorRule$1(start);
        case "for":
          return _this._forRule$2(start, _this.get$_functionChild());
        case "if":
          return _this._ifRule$2(start, _this.get$_functionChild());
        case "return":
          value = _this.expression$0();
          _this.expectStatementSeparator$1("@return rule");
          return new B.ReturnRule(value, t1.spanFrom$1(start));
        case "warn":
          return _this._warnRule$1(start);
        case "while":
          return _this._whileRule$2(start, _this.get$_functionChild());
        default:
          return _this._disallowedAtRule$1(start);
      }
    },
    _plainAtRuleName$0: function() {
      this.scanner.expectChar$2$name(64, "@-rule");
      var $name = this.identifier$0();
      this.whitespace$0();
      return $name;
    },
    _atRootRule$1: function(start) {
      var query, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() === 40) {
        query = _this._atRootQuery$0();
        _this.whitespace$0();
        return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__atRootRule_closure(query));
      } else if (_this.lookingAtChildren$0())
        return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__atRootRule_closure0());
      else
        return V.AtRootRule$(H.setRuntimeTypeInfo([_this._stylesheet$_styleRule$0()], type$.JSArray_legacy_Statement), t1.spanFrom$1(start), null);
    },
    _atRootQuery$0: function() {
      var interpolation, t2, t3, t4, buffer, t5, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() === 35) {
        interpolation = _this.singleInterpolation$0();
        return X.Interpolation$(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());
      }
      t2 = t1._string_scanner$_position;
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer(t3, t4);
      t1.expectChar$1(40);
      t3._contents += H.Primitives_stringFromCharCode(40);
      _this.whitespace$0();
      t5 = _this.expression$0();
      buffer._flushText$0();
      t4.push(t5);
      if (t1.scanChar$1(58)) {
        _this.whitespace$0();
        t3._contents += H.Primitives_stringFromCharCode(58);
        t3._contents += H.Primitives_stringFromCharCode(32);
        t5 = _this.expression$0();
        buffer._flushText$0();
        t4.push(t5);
      }
      t1.expectChar$1(41);
      _this.whitespace$0();
      t3._contents += H.Primitives_stringFromCharCode(41);
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _contentRule$1: function(start) {
      var t1, $arguments, t2, t3, _this = this;
      if (!_this._stylesheet$_inMixin)
        _this.error$2(0, string$.x40conte, _this.scanner.spanFrom$1(start));
      _this.whitespace$0();
      t1 = _this.scanner;
      if (t1.peekChar$0() === 40)
        $arguments = _this._argumentInvocation$1$mixin(true);
      else {
        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);
        t3 = t2.offset;
        $arguments = X.ArgumentInvocation$empty(Y._FileSpan$(t2.file, t3, t3));
      }
      _this._mixinHasContent = true;
      _this.expectStatementSeparator$1("@content rule");
      return new Q.ContentRule(t1.spanFrom$1(start), $arguments);
    },
    _debugRule$1: function(start) {
      var value = this.expression$0();
      this.expectStatementSeparator$1("@debug rule");
      return new Q.DebugRule(value, this.scanner.spanFrom$1(start));
    },
    _eachRule$2: function(start, child) {
      var variables, t1, _this = this,
        wasInControlDirective = _this._inControlDirective;
      _this._inControlDirective = true;
      variables = H.setRuntimeTypeInfo([_this.variableName$0()], type$.JSArray_legacy_String);
      _this.whitespace$0();
      for (t1 = _this.scanner; t1.scanChar$1(44);) {
        _this.whitespace$0();
        t1.expectChar$1(36);
        variables.push(_this.identifier$1$normalize(true));
        _this.whitespace$0();
      }
      _this.expectIdentifier$1("in");
      _this.whitespace$0();
      return _this._withChildren$3(child, start, new V.StylesheetParser__eachRule_closure(_this, wasInControlDirective, variables, _this.expression$0()));
    },
    _errorRule$1: function(start) {
      var value = this.expression$0();
      this.expectStatementSeparator$1("@error rule");
      return new D.ErrorRule(value, this.scanner.spanFrom$1(start));
    },
    _functionRule$1: function(start) {
      var $name, $arguments, _this = this,
        precedingComment = _this.lastSilentComment;
      _this.lastSilentComment = null;
      $name = _this.identifier$1$normalize(true);
      _this.whitespace$0();
      $arguments = _this._argumentDeclaration$0();
      if (_this._stylesheet$_inMixin || _this._inContentBlock)
        _this.error$2(0, string$.Mixinscf, _this.scanner.spanFrom$1(start));
      else if (_this._inControlDirective)
        _this.error$2(0, string$.Functi, _this.scanner.spanFrom$1(start));
      switch (B.unvendor($name)) {
        case "calc":
        case "element":
        case "expression":
        case "url":
        case "and":
        case "or":
        case "not":
        case "clamp":
          _this.error$2(0, "Invalid function name.", _this.scanner.spanFrom$1(start));
          break;
      }
      _this.whitespace$0();
      return _this._withChildren$3(_this.get$_functionChild(), start, new V.StylesheetParser__functionRule_closure($name, $arguments, precedingComment));
    },
    _forRule$2: function(start, child) {
      var variable, from, _this = this, t1 = {},
        wasInControlDirective = _this._inControlDirective;
      _this._inControlDirective = true;
      variable = _this.variableName$0();
      _this.whitespace$0();
      _this.expectIdentifier$1("from");
      _this.whitespace$0();
      t1.exclusive = null;
      from = _this.expression$1$until(new V.StylesheetParser__forRule_closure(t1, _this));
      if (t1.exclusive == null)
        _this.scanner.error$1(0, 'Expected "to" or "through".');
      _this.whitespace$0();
      return _this._withChildren$3(child, start, new V.StylesheetParser__forRule_closure0(t1, _this, wasInControlDirective, variable, from, _this.expression$0()));
    },
    _forwardRule$1: function(start) {
      var prefix, members, shownMixinsAndFunctions, shownVariables, hiddenVariables, hiddenMixinsAndFunctions, configuration, span, t1, t2, t3, t4, _this = this, _null = null,
        url = _this._urlString$0();
      _this.whitespace$0();
      if (_this.scanIdentifier$1("as")) {
        _this.whitespace$0();
        prefix = _this.identifier$1$normalize(true);
        _this.scanner.expectChar$1(42);
        _this.whitespace$0();
      } else
        prefix = _null;
      if (_this.scanIdentifier$1("show")) {
        members = _this._memberList$0();
        shownMixinsAndFunctions = members.item1;
        shownVariables = members.item2;
        hiddenVariables = _null;
        hiddenMixinsAndFunctions = hiddenVariables;
      } else {
        if (_this.scanIdentifier$1("hide")) {
          members = _this._memberList$0();
          hiddenMixinsAndFunctions = members.item1;
          hiddenVariables = members.item2;
        } else {
          hiddenVariables = _null;
          hiddenMixinsAndFunctions = hiddenVariables;
        }
        shownVariables = _null;
        shownMixinsAndFunctions = shownVariables;
      }
      configuration = _this._stylesheet$_configuration$1$allowGuarded(true);
      _this.expectStatementSeparator$1("@forward rule");
      span = _this.scanner.spanFrom$1(start);
      if (!_this._isUseAllowed)
        _this.error$2(0, string$.x40forwa, span);
      if (shownMixinsAndFunctions != null) {
        t1 = type$.legacy_String;
        t2 = P.LinkedHashSet_LinkedHashSet$of(shownMixinsAndFunctions, t1);
        t3 = type$.UnmodifiableSetView_legacy_String;
        t1 = P.LinkedHashSet_LinkedHashSet$of(shownVariables, t1);
        t4 = configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable);
        return new L.ForwardRule(url, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), _null, _null, prefix, t4, span);
      } else if (hiddenMixinsAndFunctions != null) {
        t1 = type$.legacy_String;
        t2 = P.LinkedHashSet_LinkedHashSet$of(hiddenMixinsAndFunctions, t1);
        t3 = type$.UnmodifiableSetView_legacy_String;
        t1 = P.LinkedHashSet_LinkedHashSet$of(hiddenVariables, t1);
        t4 = configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable);
        return new L.ForwardRule(url, _null, _null, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), prefix, t4, span);
      } else
        return new L.ForwardRule(url, _null, _null, _null, _null, prefix, configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable), span);
    },
    _memberList$0: function() {
      var _this = this,
        t1 = type$.legacy_String,
        identifiers = P.LinkedHashSet_LinkedHashSet$_empty(t1),
        variables = P.LinkedHashSet_LinkedHashSet$_empty(t1);
      t1 = _this.scanner;
      do {
        _this.whitespace$0();
        _this.withErrorMessage$2(string$.Expect, new V.StylesheetParser__memberList_closure(_this, variables, identifiers));
        _this.whitespace$0();
      } while (t1.scanChar$1(44));
      return new S.Tuple2(identifiers, variables, type$.Tuple2_of_legacy_Set_legacy_String_and_legacy_Set_legacy_String);
    },
    _ifRule$2: function(start, child) {
      var condition, children, clauses, lastClause, span, _this = this,
        ifIndentation = _this.get$currentIndentation(),
        wasInControlDirective = _this._inControlDirective;
      _this._inControlDirective = true;
      condition = _this.expression$0();
      children = _this.children$1(0, child);
      _this.whitespaceWithoutComments$0();
      clauses = H.setRuntimeTypeInfo([V.IfClause$(condition, children)], type$.JSArray_legacy_IfClause);
      while (true) {
        if (!_this.scanElse$1(ifIndentation)) {
          lastClause = null;
          break;
        }
        _this.whitespace$0();
        if (_this.scanIdentifier$1("if")) {
          _this.whitespace$0();
          clauses.push(V.IfClause$(_this.expression$0(), _this.children$1(0, child)));
        } else {
          lastClause = V.IfClause$last(_this.children$1(0, child));
          break;
        }
      }
      _this._inControlDirective = wasInControlDirective;
      span = _this.scanner.spanFrom$1(start);
      _this.whitespaceWithoutComments$0();
      return new V.IfRule(P.List_List$unmodifiable(clauses, type$.legacy_IfClause), lastClause, span);
    },
    _importRule$1: function(start) {
      var argument, _this = this,
        imports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Import),
        t1 = _this.scanner;
      do {
        _this.whitespace$0();
        argument = _this.importArgument$0();
        if ((_this._inControlDirective || _this._stylesheet$_inMixin) && argument instanceof B.DynamicImport)
          _this._disallowedAtRule$1(start);
        imports.push(argument);
        _this.whitespace$0();
      } while (t1.scanChar$1(44));
      _this.expectStatementSeparator$1("@import rule");
      t1 = t1.spanFrom$1(start);
      return new B.ImportRule(P.List_List$unmodifiable(imports, type$.legacy_Import), t1);
    },
    importArgument$0: function() {
      var url, urlSpan, innerError, queries, t2, t3, t4, exception, _this = this, _null = null,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        next = t1.peekChar$0();
      if (next === 117 || next === 85) {
        url = _this.dynamicUrl$0();
        _this.whitespace$0();
        queries = _this.tryImportQueries$0();
        t2 = X.Interpolation$(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), t1.spanFrom$1(start));
        t1 = t1.spanFrom$1(start);
        t3 = queries == null;
        t4 = t3 ? _null : queries.item1;
        return new Q.StaticImport(t2, t4, t3 ? _null : queries.item2, t1);
      }
      url = _this.string$0();
      urlSpan = t1.spanFrom$1(start);
      _this.whitespace$0();
      queries = _this.tryImportQueries$0();
      if (_this.isPlainImportUrl$1(url) || queries != null) {
        t2 = urlSpan;
        t2 = X.Interpolation$(H.setRuntimeTypeInfo([P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2.file._decodedChars, t2._file$_start, t2._end), 0, _null)], type$.JSArray_legacy_Object), urlSpan);
        t1 = t1.spanFrom$1(start);
        t3 = queries == null;
        t4 = t3 ? _null : queries.item1;
        return new Q.StaticImport(t2, t4, t3 ? _null : queries.item2, t1);
      } else
        try {
          t1 = _this.parseImportUrl$1(url);
          return new B.DynamicImport(t1, urlSpan);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (type$.legacy_FormatException._is(t1)) {
            innerError = t1;
            _this.error$2(0, "Invalid URL: " + H.S(J.get$message$x(innerError)), urlSpan);
          } else
            throw exception;
        }
    },
    parseImportUrl$1: function(url) {
      var t1 = $.$get$windows();
      if (t1.style.rootLength$1(url) > 0)
        return t1.toUri$1(url).toString$0(0);
      P.Uri_parse(url);
      return url;
    },
    isPlainImportUrl$1: function(url) {
      var first;
      if (url.length < 5)
        return false;
      if (C.JSString_methods.endsWith$1(url, ".css"))
        return true;
      first = C.JSString_methods._codeUnitAt$1(url, 0);
      if (first === 47)
        return C.JSString_methods._codeUnitAt$1(url, 1) === 47;
      if (first !== 104)
        return false;
      return C.JSString_methods.startsWith$1(url, "http://") || C.JSString_methods.startsWith$1(url, "https://");
    },
    tryImportQueries$0: function() {
      var t1, start, supports, $name, media, _this = this;
      if (_this.scanIdentifier$1("supports")) {
        t1 = _this.scanner;
        t1.expectChar$1(40);
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
        if (_this.scanIdentifier$1("not")) {
          _this.whitespace$0();
          supports = new M.SupportsNegation(_this._supportsConditionInParens$0(), t1.spanFrom$1(start));
        } else if (t1.peekChar$0() === 40)
          supports = _this._supportsCondition$0();
        else {
          $name = _this.expression$0();
          t1.expectChar$1(58);
          _this.whitespace$0();
          supports = new L.SupportsDeclaration($name, _this.expression$0(), t1.spanFrom$1(start));
        }
        t1.expectChar$1(41);
        _this.whitespace$0();
      } else
        supports = null;
      media = _this._lookingAtInterpolatedIdentifier$0() || _this.scanner.peekChar$0() === 40 ? _this._mediaQueryList$0() : null;
      if (supports == null && media == null)
        return null;
      return new S.Tuple2(supports, media, type$.Tuple2_of_legacy_SupportsCondition_and_legacy_Interpolation);
    },
    _includeRule$1: function(start) {
      var name0, namespace, $arguments, t3, t4, wasInContentBlock, $content, _this = this, _null = null, t1 = {},
        $name = _this.identifier$0(),
        t2 = _this.scanner;
      if (t2.scanChar$1(46)) {
        name0 = _this._publicIdentifier$0();
        namespace = $name;
        $name = name0;
      } else {
        $name = H.stringReplaceAllUnchecked($name, "_", "-");
        namespace = _null;
      }
      _this.whitespace$0();
      if (t2.peekChar$0() === 40)
        $arguments = _this._argumentInvocation$1$mixin(true);
      else {
        t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);
        t4 = t3.offset;
        $arguments = X.ArgumentInvocation$empty(Y._FileSpan$(t3.file, t4, t4));
      }
      _this.whitespace$0();
      t1.contentArguments = null;
      if (_this.scanIdentifier$1("using")) {
        _this.whitespace$0();
        t3 = t1.contentArguments = _this._argumentDeclaration$0();
        _this.whitespace$0();
      } else
        t3 = _null;
      t3 = t3 == null;
      if (!t3 || _this.lookingAtChildren$0()) {
        if (t3) {
          t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);
          t4 = t3.offset;
          t1.contentArguments = new B.ArgumentDeclaration(C.List_empty8, _null, Y._FileSpan$(t3.file, t4, t4));
        }
        wasInContentBlock = _this._inContentBlock;
        _this._inContentBlock = true;
        $content = _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__includeRule_closure(t1));
        _this._inContentBlock = wasInContentBlock;
      } else {
        _this.expectStatementSeparator$0();
        $content = _null;
      }
      t1 = t2.spanFrom$2(start, start);
      return new A.IncludeRule(namespace, $name, $arguments, $content, t1.expand$1(0, ($content == null ? $arguments : $content).get$span()));
    },
    mediaRule$1: function(start) {
      return this._withChildren$3(this.get$_statement(), start, new V.StylesheetParser_mediaRule_closure(this._mediaQueryList$0()));
    },
    _mixinRule$1: function(start) {
      var $name, t1, $arguments, t2, t3, _this = this,
        precedingComment = _this.lastSilentComment;
      _this.lastSilentComment = null;
      $name = _this.identifier$1$normalize(true);
      _this.whitespace$0();
      t1 = _this.scanner;
      if (t1.peekChar$0() === 40)
        $arguments = _this._argumentDeclaration$0();
      else {
        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);
        t3 = t2.offset;
        $arguments = new B.ArgumentDeclaration(C.List_empty8, null, Y._FileSpan$(t2.file, t3, t3));
      }
      if (_this._stylesheet$_inMixin || _this._inContentBlock)
        _this.error$2(0, string$.Mixinscm, t1.spanFrom$1(start));
      else if (_this._inControlDirective)
        _this.error$2(0, string$.Mixinsb, t1.spanFrom$1(start));
      _this.whitespace$0();
      _this._stylesheet$_inMixin = true;
      _this._mixinHasContent = false;
      return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__mixinRule_closure(_this, $name, $arguments, precedingComment));
    },
    mozDocumentRule$2: function(start, $name) {
      var t5, t6, identifier, contents, argument, trailing, endPosition, t7, t8, start0, end, _this = this, _box_0 = {},
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        t4 = [],
        buffer = new Z.InterpolationBuffer(t3, t4);
      _box_0.needsDeprecationWarning = false;
      for (t5 = _this.get$whitespace(); true;) {
        if (t1.peekChar$0() === 35) {
          t6 = _this.singleInterpolation$0();
          buffer._flushText$0();
          t4.push(t6);
          _box_0.needsDeprecationWarning = true;
        } else {
          t6 = t1._string_scanner$_position;
          identifier = _this.identifier$0();
          switch (identifier) {
            case "url":
            case "url-prefix":
            case "domain":
              contents = _this._tryUrlContents$2$name(new S._SpanScannerState(t1, t6), identifier);
              if (contents != null)
                buffer.addInterpolation$1(contents);
              else {
                t1.expectChar$1(40);
                _this.whitespace$0();
                argument = _this.interpolatedString$0();
                t1.expectChar$1(41);
                t3._contents += identifier;
                t3._contents += H.Primitives_stringFromCharCode(40);
                buffer.addInterpolation$1(argument.asInterpolation$0());
                t3._contents += H.Primitives_stringFromCharCode(41);
              }
              t6 = t3._contents;
              trailing = t6.charCodeAt(0) == 0 ? t6 : t6;
              if (!C.JSString_methods.endsWith$1(trailing, "url-prefix()") && !C.JSString_methods.endsWith$1(trailing, "url-prefix('')") && !C.JSString_methods.endsWith$1(trailing, 'url-prefix("")'))
                _box_0.needsDeprecationWarning = true;
              break;
            case "regexp":
              t3._contents += "regexp(";
              t1.expectChar$1(40);
              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());
              t1.expectChar$1(41);
              t3._contents += H.Primitives_stringFromCharCode(41);
              _box_0.needsDeprecationWarning = true;
              break;
            default:
              endPosition = t1._string_scanner$_position;
              t7 = t1._sourceFile;
              t8 = new Y._FileSpan(t7, t6, endPosition);
              t8._FileSpan$3(t7, t6, endPosition);
              _this.error$2(0, "Invalid function name.", t8);
          }
        }
        _this.whitespace$0();
        if (!t1.scanChar$1(44))
          break;
        t3._contents += H.Primitives_stringFromCharCode(44);
        start0 = t1._string_scanner$_position;
        t5.call$0();
        end = t1._string_scanner$_position;
        t3._contents += J.substring$2$s(t1.string, start0, end);
      }
      return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser_mozDocumentRule_closure(_box_0, _this, $name, buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)))));
    },
    supportsRule$1: function(start) {
      var _this = this,
        condition = _this._supportsCondition$0();
      _this.whitespace$0();
      return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser_supportsRule_closure(condition));
    },
    _useRule$1: function(start) {
      var namespace, configuration, span, t1, _this = this,
        _s9_ = "@use rule",
        url = _this._urlString$0();
      _this.whitespace$0();
      namespace = _this._useNamespace$2(url, start);
      _this.whitespace$0();
      configuration = _this._stylesheet$_configuration$0();
      _this.expectStatementSeparator$1(_s9_);
      span = _this.scanner.spanFrom$1(start);
      if (!_this._isUseAllowed)
        _this.error$2(0, string$.x40use_r, span);
      _this.expectStatementSeparator$1(_s9_);
      t1 = new T.UseRule(url, namespace, configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable), span);
      t1.UseRule$4$configuration(url, namespace, span, configuration);
      return t1;
    },
    _useNamespace$2: function(url, start) {
      var namespace, basename, dot, t1, exception, _this = this;
      if (_this.scanIdentifier$1("as")) {
        _this.whitespace$0();
        return _this.scanner.scanChar$1(42) ? null : _this.identifier$0();
      }
      basename = url.get$pathSegments().length === 0 ? "" : C.JSArray_methods.get$last(url.get$pathSegments());
      dot = J.getInterceptor$asx(basename).indexOf$1(basename, ".");
      t1 = C.JSString_methods.startsWith$1(basename, "_") ? 1 : 0;
      namespace = C.JSString_methods.substring$2(basename, t1, dot === -1 ? basename.length : dot);
      try {
        t1 = S.SpanScanner$(namespace, null);
        t1 = new G.Parser(t1, _this.logger)._parseIdentifier$0();
        return t1;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof E.SassFormatException)
          _this.error$2(0, 'Invalid Sass identifier "' + H.S(namespace) + '"', _this.scanner.spanFrom$1(start));
        else
          throw exception;
      }
    },
    _stylesheet$_configuration$1$allowGuarded: function(allowGuarded) {
      var variableNames, configuration, t1, t2, $name, expression, t3, guarded, endPosition, t4, t5, span, _this = this;
      if (!_this.scanIdentifier$1("with"))
        return null;
      variableNames = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);
      configuration = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ConfiguredVariable);
      _this.whitespace$0();
      t1 = _this.scanner;
      t1.expectChar$1(40);
      for (; true;) {
        _this.whitespace$0();
        t2 = t1._string_scanner$_position;
        t1.expectChar$1(36);
        $name = _this.identifier$1$normalize(true);
        _this.whitespace$0();
        t1.expectChar$1(58);
        _this.whitespace$0();
        expression = _this._expressionUntilComma$0();
        t3 = t1._string_scanner$_position;
        if (allowGuarded && t1.scanChar$1(33))
          if (_this.identifier$0() === "default") {
            _this.whitespace$0();
            guarded = true;
          } else {
            endPosition = t1._string_scanner$_position;
            t4 = t1._sourceFile;
            t5 = new Y._FileSpan(t4, t3, endPosition);
            t5._FileSpan$3(t4, t3, endPosition);
            _this.error$2(0, "Invalid flag name.", t5);
            guarded = false;
          }
        else
          guarded = false;
        endPosition = t1._string_scanner$_position;
        t3 = t1._sourceFile;
        span = new Y._FileSpan(t3, t2, endPosition);
        span._FileSpan$3(t3, t2, endPosition);
        if (variableNames.contains$1(0, $name))
          _this.error$2(0, string$.The_sa, span);
        variableNames.add$1(0, $name);
        configuration.push(new Z.ConfiguredVariable($name, expression, guarded, span));
        if (!t1.scanChar$1(44))
          break;
        _this.whitespace$0();
        if (!_this._lookingAtExpression$0())
          break;
      }
      t1.expectChar$1(41);
      return configuration;
    },
    _stylesheet$_configuration$0: function() {
      return this._stylesheet$_configuration$1$allowGuarded(false);
    },
    _warnRule$1: function(start) {
      var value = this.expression$0();
      this.expectStatementSeparator$1("@warn rule");
      return new Y.WarnRule(value, this.scanner.spanFrom$1(start));
    },
    _whileRule$2: function(start, child) {
      var _this = this,
        wasInControlDirective = _this._inControlDirective;
      _this._inControlDirective = true;
      return _this._withChildren$3(child, start, new V.StylesheetParser__whileRule_closure(_this, wasInControlDirective, _this.expression$0()));
    },
    unknownAtRule$2: function(start, $name) {
      var t2, t3, rule, _this = this, t1 = {},
        wasInUnknownAtRule = _this._stylesheet$_inUnknownAtRule;
      _this._stylesheet$_inUnknownAtRule = true;
      t1.value = null;
      t2 = _this.scanner;
      t3 = t2.peekChar$0() !== 33 && !_this.atEndOfStatement$0() ? t1.value = _this.almostAnyValue$0() : null;
      if (_this.lookingAtChildren$0())
        rule = _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser_unknownAtRule_closure(t1, $name));
      else {
        _this.expectStatementSeparator$0();
        rule = U.AtRule$($name, t2.spanFrom$1(start), null, t3);
      }
      _this._stylesheet$_inUnknownAtRule = wasInUnknownAtRule;
      return rule;
    },
    _disallowedAtRule$1: function(start) {
      this.almostAnyValue$0();
      this.error$2(0, "This at-rule is not allowed here.", this.scanner.spanFrom$1(start));
    },
    _argumentDeclaration$0: function() {
      var $arguments, named, restArgument, t3, $name, defaultValue, endPosition, t4, t5, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expectChar$1(40);
      _this.whitespace$0();
      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Argument);
      named = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);
      while (true) {
        if (!(t1.peekChar$0() === 36)) {
          restArgument = null;
          break;
        }
        t3 = t1._string_scanner$_position;
        t1.expectChar$1(36);
        $name = _this.identifier$1$normalize(true);
        _this.whitespace$0();
        if (t1.scanChar$1(58)) {
          _this.whitespace$0();
          defaultValue = _this._expressionUntilComma$0();
        } else {
          if (t1.scanChar$1(46)) {
            t1.expectChar$1(46);
            t1.expectChar$1(46);
            _this.whitespace$0();
            restArgument = $name;
            break;
          }
          defaultValue = null;
        }
        endPosition = t1._string_scanner$_position;
        t4 = t1._sourceFile;
        t5 = new Y._FileSpan(t4, t3, endPosition);
        t5._FileSpan$3(t4, t3, endPosition);
        $arguments.push(new Z.Argument($name, defaultValue, t5));
        if (!named.add$1(0, $name))
          _this.error$2(0, "Duplicate argument.", C.JSArray_methods.get$last($arguments).span);
        if (!t1.scanChar$1(44)) {
          restArgument = null;
          break;
        }
        _this.whitespace$0();
      }
      t1.expectChar$1(41);
      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      return new B.ArgumentDeclaration(P.List_List$unmodifiable($arguments, type$.legacy_Argument), restArgument, t1);
    },
    _argumentInvocation$1$mixin: function(mixin) {
      var positional, t3, t4, named, keywordRest, t5, rest, expression, t6, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expectChar$1(40);
      _this.whitespace$0();
      positional = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);
      t3 = type$.legacy_String;
      t4 = type$.legacy_Expression;
      named = P.LinkedHashMap_LinkedHashMap$_empty(t3, t4);
      t5 = !mixin;
      rest = null;
      while (true) {
        if (!_this._lookingAtExpression$0()) {
          keywordRest = null;
          break;
        }
        expression = _this._expressionUntilComma$1$singleEquals(t5);
        _this.whitespace$0();
        if (expression instanceof S.VariableExpression && t1.scanChar$1(58)) {
          _this.whitespace$0();
          t6 = expression.name;
          if (named.containsKey$1(t6))
            _this.error$2(0, "Duplicate argument.", expression.span);
          named.$indexSet(0, t6, _this._expressionUntilComma$1$singleEquals(t5));
        } else if (t1.scanChar$1(46)) {
          t1.expectChar$1(46);
          t1.expectChar$1(46);
          if (rest != null) {
            _this.whitespace$0();
            keywordRest = expression;
            break;
          }
          rest = expression;
        } else if (named.get$isNotEmpty(named))
          _this.error$2(0, string$.Positi, expression.get$span());
        else
          positional.push(expression);
        _this.whitespace$0();
        if (!t1.scanChar$1(44)) {
          keywordRest = null;
          break;
        }
        _this.whitespace$0();
      }
      t1.expectChar$1(41);
      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      return new X.ArgumentInvocation(P.List_List$unmodifiable(positional, t4), H.ConstantMap_ConstantMap$from(named, t3, t4), rest, keywordRest, t1);
    },
    _argumentInvocation$0: function() {
      return this._argumentInvocation$1$mixin(false);
    },
    expression$3$bracketList$singleEquals$until: function(bracketList, singleEquals, until) {
      var t2, beforeBracket, t3, wasInParentheses, resetState, resolveOneOperation, resolveOperations, addSingleExpression, addOperator, resolveSpaceExpressions, first, next, t4, _this = this,
        _s20_ = "Expected expression.",
        _box_0 = {},
        t1 = until != null;
      if (t1 && until.call$0())
        _this.scanner.error$1(0, _s20_);
      if (bracketList) {
        t2 = _this.scanner;
        beforeBracket = new S._SpanScannerState(t2, t2._string_scanner$_position);
        t2.expectChar$1(91);
        _this.whitespace$0();
        if (t2.scanChar$1(93))
          return D.ListExpression$(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression), C.ListSeparator_undecided, true, t2.spanFrom$1(beforeBracket));
      } else
        beforeBracket = null;
      t2 = _this.scanner;
      t3 = t2._string_scanner$_position;
      wasInParentheses = _this._inParentheses;
      _box_0.operands = _box_0.operators = _box_0.spaceExpressions = _box_0.commaExpressions = null;
      _box_0.allowSlash = _this.lookingAtNumber$0();
      _box_0.singleExpression = _this._singleExpression$0();
      resetState = new V.StylesheetParser_expression_resetState(_box_0, _this, new S._SpanScannerState(t2, t3));
      resolveOneOperation = new V.StylesheetParser_expression_resolveOneOperation(_box_0, _this);
      resolveOperations = new V.StylesheetParser_expression_resolveOperations(_box_0, resolveOneOperation);
      addSingleExpression = new V.StylesheetParser_expression_addSingleExpression(_box_0, _this, resetState, resolveOperations);
      addOperator = new V.StylesheetParser_expression_addOperator(_box_0, _this, resolveOneOperation);
      resolveSpaceExpressions = new V.StylesheetParser_expression_resolveSpaceExpressions(_box_0, resolveOperations);
      $label0$0:
        for (t3 = type$.JSArray_legacy_Expression; true;) {
          _this.whitespace$0();
          if (t1 && until.call$0())
            break $label0$0;
          first = t2.peekChar$0();
          switch (first) {
            case 40:
              addSingleExpression.call$1(_this._parentheses$0());
              break;
            case 91:
              addSingleExpression.call$1(_this.expression$1$bracketList(true));
              break;
            case 36:
              addSingleExpression.call$1(_this._variable$0());
              break;
            case 38:
              addSingleExpression.call$1(_this._selector$0());
              break;
            case 39:
            case 34:
              addSingleExpression.call$1(_this.interpolatedString$0());
              break;
            case 35:
              addSingleExpression.call$1(_this._hashExpression$0());
              break;
            case 61:
              t2.readChar$0();
              if (singleEquals && t2.peekChar$0() !== 61)
                addOperator.call$1(C.BinaryOperator_kjl);
              else {
                t2.expectChar$1(61);
                addOperator.call$1(C.BinaryOperator_YlX);
              }
              break;
            case 33:
              next = t2.peekChar$1(1);
              if (next === 61) {
                t2.readChar$0();
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_i5H);
              } else {
                if (next != null)
                  if ((next | 32) !== 105)
                    t4 = next === 32 || next === 9 || next === 10 || next === 13 || next === 12;
                  else
                    t4 = true;
                else
                  t4 = true;
                if (t4)
                  addSingleExpression.call$1(_this._importantExpression$0());
                else
                  break $label0$0;
              }
              break;
            case 60:
              t2.readChar$0();
              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_33h : C.BinaryOperator_8qt);
              break;
            case 62:
              t2.readChar$0();
              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_1da : C.BinaryOperator_AcR);
              break;
            case 42:
              t2.readChar$0();
              addOperator.call$1(C.BinaryOperator_O1M);
              break;
            case 43:
              if (_box_0.singleExpression == null)
                addSingleExpression.call$1(_this._unaryOperation$0());
              else {
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_AcR0);
              }
              break;
            case 45:
              next = t2.peekChar$1(1);
              if (next != null && next >= 48 && next <= 57 || next === 46)
                if (_box_0.singleExpression != null) {
                  t4 = t2.peekChar$1(-1);
                  t4 = t4 === 32 || t4 === 9 || t4 === 10 || t4 === 13 || t4 === 12;
                } else
                  t4 = true;
              else
                t4 = false;
              if (t4)
                addSingleExpression.call$2$number(_this._number$0(), true);
              else if (_this._lookingAtInterpolatedIdentifier$0())
                addSingleExpression.call$1(_this.identifierLike$0());
              else if (_box_0.singleExpression == null)
                addSingleExpression.call$1(_this._unaryOperation$0());
              else {
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_iyO);
              }
              break;
            case 47:
              if (_box_0.singleExpression == null)
                addSingleExpression.call$1(_this._unaryOperation$0());
              else {
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_RTB);
              }
              break;
            case 37:
              t2.readChar$0();
              addOperator.call$1(C.BinaryOperator_2ad);
              break;
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
              addSingleExpression.call$2$number(_this._number$0(), true);
              break;
            case 46:
              if (t2.peekChar$1(1) === 46)
                break $label0$0;
              addSingleExpression.call$2$number(_this._number$0(), true);
              break;
            case 97:
              if (!_this.get$plainCss() && _this.scanIdentifier$1("and"))
                addOperator.call$1(C.BinaryOperator_and_and_2);
              else
                addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 111:
              if (!_this.get$plainCss() && _this.scanIdentifier$1("or"))
                addOperator.call$1(C.BinaryOperator_or_or_1);
              else
                addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 117:
            case 85:
              if (t2.peekChar$1(1) === 43)
                addSingleExpression.call$1(_this._unicodeRange$0());
              else
                addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 95:
            case 92:
              addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 44:
              if (_this._inParentheses) {
                _this._inParentheses = false;
                if (_box_0.allowSlash) {
                  resetState.call$0();
                  break;
                }
              }
              if (_box_0.commaExpressions == null)
                _box_0.commaExpressions = H.setRuntimeTypeInfo([], t3);
              if (_box_0.singleExpression == null)
                t2.error$1(0, _s20_);
              resolveSpaceExpressions.call$0();
              _box_0.commaExpressions.push(_box_0.singleExpression);
              t2.readChar$0();
              _box_0.allowSlash = true;
              _box_0.singleExpression = null;
              break;
            default:
              if (first != null && first >= 128) {
                addSingleExpression.call$1(_this.identifierLike$0());
                break;
              } else
                break $label0$0;
          }
        }
      if (bracketList)
        t2.expectChar$1(93);
      if (_box_0.commaExpressions != null) {
        resolveSpaceExpressions.call$0();
        _this._inParentheses = wasInParentheses;
        t1 = _box_0.singleExpression;
        if (t1 != null)
          _box_0.commaExpressions.push(t1);
        t1 = _box_0.commaExpressions;
        return D.ListExpression$(t1, C.ListSeparator_comma, bracketList, bracketList ? t2.spanFrom$1(beforeBracket) : null);
      } else if (bracketList && _box_0.spaceExpressions != null) {
        resolveOperations.call$0();
        t1 = _box_0.spaceExpressions;
        t1.push(_box_0.singleExpression);
        return D.ListExpression$(t1, C.ListSeparator_space, true, t2.spanFrom$1(beforeBracket));
      } else {
        resolveSpaceExpressions.call$0();
        if (bracketList)
          _box_0.singleExpression = D.ListExpression$(H.setRuntimeTypeInfo([_box_0.singleExpression], t3), C.ListSeparator_undecided, true, t2.spanFrom$1(beforeBracket));
        return _box_0.singleExpression;
      }
    },
    expression$0: function() {
      return this.expression$3$bracketList$singleEquals$until(false, false, null);
    },
    expression$2$singleEquals$until: function(singleEquals, until) {
      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, until);
    },
    expression$1$bracketList: function(bracketList) {
      return this.expression$3$bracketList$singleEquals$until(bracketList, false, null);
    },
    expression$1$singleEquals: function(singleEquals) {
      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, null);
    },
    expression$1$until: function(until) {
      return this.expression$3$bracketList$singleEquals$until(false, false, until);
    },
    _expressionUntilComma$1$singleEquals: function(singleEquals) {
      return this.expression$2$singleEquals$until(singleEquals, new V.StylesheetParser__expressionUntilComma_closure(this));
    },
    _expressionUntilComma$0: function() {
      return this._expressionUntilComma$1$singleEquals(false);
    },
    _singleExpression$0: function() {
      var next, _this = this,
        t1 = _this.scanner,
        first = t1.peekChar$0();
      switch (first) {
        case 40:
          return _this._parentheses$0();
        case 47:
          return _this._unaryOperation$0();
        case 46:
          return _this._number$0();
        case 91:
          return _this.expression$1$bracketList(true);
        case 36:
          return _this._variable$0();
        case 38:
          return _this._selector$0();
        case 39:
        case 34:
          return _this.interpolatedString$0();
        case 35:
          return _this._hashExpression$0();
        case 43:
          next = t1.peekChar$1(1);
          return T.isDigit(next) || next === 46 ? _this._number$0() : _this._unaryOperation$0();
        case 45:
          return _this._minusExpression$0();
        case 33:
          return _this._importantExpression$0();
        case 117:
        case 85:
          if (t1.peekChar$1(1) === 43)
            return _this._unicodeRange$0();
          else
            return _this.identifierLike$0();
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
          return _this._number$0();
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 95:
        case 92:
          return _this.identifierLike$0();
        default:
          if (first != null && first >= 128)
            return _this.identifierLike$0();
          t1.error$1(0, "Expected expression.");
      }
    },
    _parentheses$0: function() {
      var wasInParentheses, start, first, expressions, t1, _this = this;
      if (_this.get$plainCss())
        _this.scanner.error$2$length(0, "Parentheses aren't allowed in plain CSS.", 1);
      wasInParentheses = _this._inParentheses;
      _this._inParentheses = true;
      try {
        t1 = _this.scanner;
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
        t1.expectChar$1(40);
        _this.whitespace$0();
        if (!_this._lookingAtExpression$0()) {
          t1.expectChar$1(41);
          t1 = D.ListExpression$(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression), C.ListSeparator_undecided, false, t1.spanFrom$1(start));
          return t1;
        }
        first = _this._expressionUntilComma$0();
        if (t1.scanChar$1(58)) {
          _this.whitespace$0();
          t1 = _this._stylesheet$_map$2(first, start);
          return t1;
        }
        if (!t1.scanChar$1(44)) {
          t1.expectChar$1(41);
          t1 = t1.spanFrom$1(start);
          return new T.ParenthesizedExpression(first, t1);
        }
        _this.whitespace$0();
        expressions = H.setRuntimeTypeInfo([first], type$.JSArray_legacy_Expression);
        for (; true;) {
          if (!_this._lookingAtExpression$0())
            break;
          J.add$1$ax(expressions, _this._expressionUntilComma$0());
          if (!t1.scanChar$1(44))
            break;
          _this.whitespace$0();
        }
        t1.expectChar$1(41);
        t1 = D.ListExpression$(expressions, C.ListSeparator_comma, false, t1.spanFrom$1(start));
        return t1;
      } finally {
        _this._inParentheses = wasInParentheses;
      }
    },
    _stylesheet$_map$2: function(first, start) {
      var t2, key, _this = this,
        t1 = type$.Tuple2_of_legacy_Expression_and_legacy_Expression,
        pairs = H.setRuntimeTypeInfo([new S.Tuple2(first, _this._expressionUntilComma$0(), t1)], type$.JSArray_legacy_Tuple2_of_legacy_Expression_and_legacy_Expression);
      for (t2 = _this.scanner; t2.scanChar$1(44);) {
        _this.whitespace$0();
        if (!_this._lookingAtExpression$0())
          break;
        key = _this._expressionUntilComma$0();
        t2.expectChar$1(58);
        _this.whitespace$0();
        pairs.push(new S.Tuple2(key, _this._expressionUntilComma$0(), t1));
      }
      t2.expectChar$1(41);
      t1 = t2.spanFrom$1(start);
      return new A.MapExpression(P.List_List$unmodifiable(pairs, type$.legacy_Tuple2_of_legacy_Expression_and_legacy_Expression), t1);
    },
    _hashExpression$0: function() {
      var start, first, t2, identifier, buffer, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$1(1) === 123)
        return _this.identifierLike$0();
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$1(35);
      first = t1.peekChar$0();
      if (first != null && T.isDigit(first))
        return new K.ColorExpression(_this._hexColorContents$1(start));
      t2 = t1._string_scanner$_position;
      identifier = _this.interpolatedIdentifier$0();
      if (_this._isHexColor$1(identifier)) {
        t1.set$state(new S._SpanScannerState(t1, t2));
        return new K.ColorExpression(_this._hexColorContents$1(start));
      }
      t2 = new P.StringBuffer("");
      buffer = new Z.InterpolationBuffer(t2, []);
      t2._contents += H.Primitives_stringFromCharCode(35);
      buffer.addInterpolation$1(identifier);
      return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(start)), false);
    },
    _hexColorContents$1: function(start) {
      var red, green, blue, alpha, digit4, t2, t3, _this = this,
        digit1 = _this._hexDigit$0(),
        digit2 = _this._hexDigit$0(),
        digit3 = _this._hexDigit$0(),
        t1 = _this.scanner;
      if (!T.isHex(t1.peekChar$0())) {
        red = (digit1 << 4 >>> 0) + digit1;
        green = (digit2 << 4 >>> 0) + digit2;
        blue = (digit3 << 4 >>> 0) + digit3;
        alpha = 1;
      } else {
        digit4 = _this._hexDigit$0();
        t2 = digit1 << 4 >>> 0;
        t3 = digit3 << 4 >>> 0;
        if (!T.isHex(t1.peekChar$0())) {
          red = t2 + digit1;
          green = (digit2 << 4 >>> 0) + digit2;
          blue = t3 + digit3;
          alpha = ((digit4 << 4 >>> 0) + digit4) / 255;
        } else {
          red = t2 + digit2;
          green = t3 + digit4;
          blue = (_this._hexDigit$0() << 4 >>> 0) + _this._hexDigit$0();
          alpha = T.isHex(t1.peekChar$0()) ? ((_this._hexDigit$0() << 4 >>> 0) + _this._hexDigit$0()) / 255 : 1;
        }
      }
      return K.SassColor$rgb(red, green, blue, alpha, t1.spanFrom$1(start));
    },
    _isHexColor$1: function(interpolation) {
      var t1,
        plain = interpolation.get$asPlain();
      if (plain == null)
        return false;
      t1 = plain.length;
      if (t1 !== 3 && t1 !== 4 && t1 !== 6 && t1 !== 8)
        return false;
      t1 = new H.CodeUnits(plain);
      return t1.every$1(t1, T.character__isHex$closure());
    },
    _hexDigit$0: function() {
      var t1 = this.scanner,
        char = t1.peekChar$0();
      if (char == null || !T.isHex(char))
        t1.error$1(0, "Expected hex digit.");
      return T.asHex(t1.readChar$0());
    },
    _minusExpression$0: function() {
      var _this = this,
        next = _this.scanner.peekChar$1(1);
      if (T.isDigit(next) || next === 46)
        return _this._number$0();
      if (_this._lookingAtInterpolatedIdentifier$0())
        return _this.identifierLike$0();
      return _this._unaryOperation$0();
    },
    _importantExpression$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      t1.readChar$0();
      this.whitespace$0();
      this.expectIdentifier$1("important");
      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      return new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo(["!important"], type$.JSArray_legacy_Object), t2), false);
    },
    _unaryOperation$0: function() {
      var _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        operator = _this._unaryOperatorFor$1(t1.readChar$0());
      if (operator == null)
        t1.error$2$position(0, "Expected unary operator.", t1._string_scanner$_position - 1);
      else if (_this.get$plainCss() && operator !== C.UnaryOperator_zDx)
        t1.error$3$length$position(0, "Operators aren't allowed in plain CSS.", 1, t1._string_scanner$_position - 1);
      _this.whitespace$0();
      return new X.UnaryOperationExpression(operator, _this._singleExpression$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _unaryOperatorFor$1: function(character) {
      switch (character) {
        case 43:
          return C.UnaryOperator_j2w;
        case 45:
          return C.UnaryOperator_U4G;
        case 47:
          return C.UnaryOperator_zDx;
        default:
          return null;
      }
    },
    _number$0: function() {
      var number, t4, unit, t5, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        first = t1.peekChar$0(),
        t3 = first === 45,
        sign = t3 ? -1 : 1;
      if (first === 43 || t3)
        t1.readChar$0();
      number = t1.peekChar$0() === 46 ? 0 : _this.naturalNumber$0();
      t3 = _this._tryDecimal$1$allowTrailingDot(t1._string_scanner$_position !== t2);
      t4 = _this._tryExponent$0();
      if (t1.scanChar$1(37))
        unit = "%";
      else {
        if (_this.lookingAtIdentifier$0())
          t5 = t1.peekChar$0() !== 45 || t1.peekChar$1(1) !== 45;
        else
          t5 = false;
        unit = t5 ? _this.identifier$1$unit(true) : null;
      }
      return new T.NumberExpression(sign * ((number + t3) * t4), unit, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _tryDecimal$1$allowTrailingDot: function(allowTrailingDot) {
      var t2,
        t1 = this.scanner,
        start = t1._string_scanner$_position;
      if (t1.peekChar$0() !== 46)
        return 0;
      if (!T.isDigit(t1.peekChar$1(1))) {
        if (allowTrailingDot)
          return 0;
        t1.error$2$position(0, "Expected digit.", t1._string_scanner$_position + 1);
      }
      t1.readChar$0();
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 != null && t2 >= 48 && t2 <= 57))
          break;
        t1.readChar$0();
      }
      return P.double_parse(t1.substring$1(0, start));
    },
    _tryExponent$0: function() {
      var next, t2, exponentSign, exponent,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first !== 101 && first !== 69)
        return 1;
      next = t1.peekChar$1(1);
      if (!T.isDigit(next) && next !== 45 && next !== 43)
        return 1;
      t1.readChar$0();
      t2 = next === 45;
      exponentSign = t2 ? -1 : 1;
      if (next === 43 || t2)
        t1.readChar$0();
      if (!T.isDigit(t1.peekChar$0()))
        t1.error$1(0, "Expected digit.");
      exponent = 0;
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 != null && t2 >= 48 && t2 <= 57))
          break;
        exponent = exponent * 10 + (t1.readChar$0() - 48);
      }
      return Math.pow(10, exponentSign * exponent);
    },
    _unicodeRange$0: function() {
      var i, t2, j, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      _this.expectIdentChar$1(117);
      t1.expectChar$1(43);
      for (i = 0; i < 6; ++i)
        if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure()))
          break;
      if (t1.scanChar$1(63)) {
        ++i;
        for (; i < 6; ++i)
          if (!t1.scanChar$1(63))
            break;
        t2 = t1.substring$1(0, start.position);
        t1 = t1.spanFrom$1(start);
        return new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);
      }
      if (i === 0)
        t1.error$1(0, 'Expected hex digit or "?".');
      if (t1.scanChar$1(45)) {
        for (j = 0; j < 6; ++j)
          if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure0()))
            break;
        if (j === 0)
          t1.error$1(0, "Expected hex digit.");
      }
      if (_this._lookingAtInterpolatedIdentifierBody$0())
        t1.error$1(0, "Expected end of identifier.");
      t2 = t1.substring$1(0, start.position);
      t1 = t1.spanFrom$1(start);
      return new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);
    },
    _variable$0: function() {
      var _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        $name = _this.variableName$0();
      if (_this.get$plainCss())
        _this.error$2(0, string$.Sass_v, t1.spanFrom$1(start));
      return new S.VariableExpression(null, $name, t1.spanFrom$1(start));
    },
    _selector$0: function() {
      var t1, start, _this = this;
      if (_this.get$plainCss())
        _this.scanner.error$2$length(0, string$.The_pa, 1);
      t1 = _this.scanner;
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$1(38);
      if (t1.scanChar$1(38)) {
        _this.logger.warn$2$span(0, string$.In_Sas, t1.spanFrom$1(start));
        t1.set$position(t1._string_scanner$_position - 1);
      }
      return new T.SelectorExpression(t1.spanFrom$1(start));
    },
    interpolatedString$0: function() {
      var t3, t4, buffer, next, second, t5,
        t1 = this.scanner,
        t2 = t1._string_scanner$_position,
        quote = t1.readChar$0();
      if (quote !== 39 && quote !== 34)
        t1.error$2$position(0, "Expected string.", t2);
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer(t3, t4);
      for (; true;) {
        next = t1.peekChar$0();
        if (next === quote) {
          t1.readChar$0();
          break;
        } else if (next == null || next === 10 || next === 13 || next === 12)
          t1.error$1(0, "Expected " + H.Primitives_stringFromCharCode(quote) + ".");
        else if (next === 92) {
          second = t1.peekChar$1(1);
          if (second === 10 || second === 13 || second === 12) {
            t1.readChar$0();
            t1.readChar$0();
            if (second === 13)
              t1.scanChar$1(10);
          } else
            t3._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());
        } else if (next === 35)
          if (t1.peekChar$1(1) === 123) {
            t5 = this.singleInterpolation$0();
            buffer._flushText$0();
            t4.push(t5);
          } else
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
        else
          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))), true);
    },
    identifierLike$0: function() {
      var invocation, lower, color, specialFunction, $name, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        identifier = _this.interpolatedIdentifier$0(),
        plain = identifier.get$asPlain(),
        t2 = plain == null;
      if (!t2) {
        if (plain === "if") {
          invocation = _this._argumentInvocation$0();
          return new L.IfExpression(invocation, B.spanForList(H.setRuntimeTypeInfo([identifier, invocation], type$.JSArray_legacy_AstNode)));
        } else if (plain === "not") {
          _this.whitespace$0();
          return new X.UnaryOperationExpression(C.UnaryOperator_not_not, _this._singleExpression$0(), identifier.span);
        }
        lower = plain.toLowerCase();
        if (t1.peekChar$0() !== 40) {
          switch (plain) {
            case "false":
              return new Z.BooleanExpression(false, identifier.span);
            case "null":
              return new O.NullExpression(identifier.span);
            case "true":
              return new Z.BooleanExpression(true, identifier.span);
          }
          color = $.$get$colorsByName().$index(0, lower);
          if (color != null)
            return new K.ColorExpression(K.SassColor$rgb(color.get$red(), color.get$green(), color.get$blue(), color.alpha, identifier.span));
        }
        specialFunction = _this.trySpecialFunction$2(lower, start);
        if (specialFunction != null)
          return specialFunction;
      }
      switch (t1.peekChar$0()) {
        case 46:
          if (t1.peekChar$1(1) === 46)
            return new D.StringExpression(identifier, false);
          t1.readChar$0();
          if (t2)
            _this.error$2(0, string$.Interpn, identifier.span);
          if (t1.peekChar$0() === 36) {
            $name = _this.variableName$0();
            _this._assertPublic$2($name, new V.StylesheetParser_identifierLike_closure(_this, start));
            return new S.VariableExpression(plain, $name, t1.spanFrom$1(start));
          }
          t2 = t1._string_scanner$_position;
          return new F.FunctionExpression(plain, X.Interpolation$(H.setRuntimeTypeInfo([_this._publicIdentifier$0()], type$.JSArray_legacy_Object), t1.spanFrom$1(new S._SpanScannerState(t1, t2))), _this._argumentInvocation$0(), t1.spanFrom$1(start));
        case 40:
          return new F.FunctionExpression(null, identifier, _this._argumentInvocation$0(), t1.spanFrom$1(start));
        default:
          return new D.StringExpression(identifier, false);
      }
    },
    trySpecialFunction$2: function($name, start) {
      var t1, buffer, t2, t3, next, contents, _this = this, _null = null;
      switch (B.unvendor($name)) {
        case "calc":
        case "element":
        case "expression":
          if (!_this.scanner.scanChar$1(40))
            return _null;
          t1 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer(t1, []);
          t1._contents = $name;
          t1._contents += H.Primitives_stringFromCharCode(40);
          break;
        case "min":
        case "max":
          t1 = _this.scanner;
          t2 = t1._string_scanner$_position;
          if (!t1.scanChar$1(40))
            return _null;
          _this.whitespace$0();
          t3 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer(t3, []);
          t3._contents = $name;
          t3._contents += H.Primitives_stringFromCharCode(40);
          if (!_this._tryMinMaxContents$1(buffer)) {
            t1.set$state(new S._SpanScannerState(t1, t2));
            return _null;
          }
          return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(start)), false);
        case "progid":
          t1 = _this.scanner;
          if (!t1.scanChar$1(58))
            return _null;
          t2 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer(t2, []);
          t2._contents = $name;
          t2._contents += H.Primitives_stringFromCharCode(58);
          next = t1.peekChar$0();
          while (true) {
            if (next != null) {
              if (!(next >= 97 && next <= 122))
                t3 = next >= 65 && next <= 90;
              else
                t3 = true;
              t3 = t3 || next === 46;
            } else
              t3 = false;
            if (!t3)
              break;
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            next = t1.peekChar$0();
          }
          t1.expectChar$1(40);
          t2._contents += H.Primitives_stringFromCharCode(40);
          break;
        case "url":
          contents = _this._tryUrlContents$1(start);
          return contents == null ? _null : new D.StringExpression(contents, false);
        case "clamp":
          if ($name !== "clamp")
            return _null;
          if (!_this.scanner.scanChar$1(40))
            return _null;
          t1 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer(t1, []);
          t1._contents = $name;
          t1._contents += H.Primitives_stringFromCharCode(40);
          break;
        default:
          return _null;
      }
      buffer.addInterpolation$1(_this._interpolatedDeclarationValue$1$allowEmpty(true));
      t1 = _this.scanner;
      t1.expectChar$1(41);
      buffer._interpolation_buffer$_text._contents += H.Primitives_stringFromCharCode(41);
      return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(start)), false);
    },
    _tryMinMaxContents$2$allowComma: function(buffer, allowComma) {
      var t1, t2, t3, t4, start, end, exception, t5, _this = this;
      for (t1 = _this.scanner, t2 = buffer._interpolation_buffer$_text, t3 = !allowComma, t4 = _this.get$_number(); true;) {
        switch (t1.peekChar$0()) {
          case 45:
          case 43:
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            try {
              start = t1._string_scanner$_position;
              t4.call$0();
              end = t1._string_scanner$_position;
              t2._contents += J.substring$2$s(t1.string, start, end);
            } catch (exception) {
              if (type$.legacy_FormatException._is(H.unwrapException(exception)))
                return false;
              else
                throw exception;
            }
            break;
          case 35:
            if (t1.peekChar$1(1) !== 123)
              return false;
            t5 = _this.singleInterpolation$0();
            buffer._flushText$0();
            buffer._interpolation_buffer$_contents.push(t5);
            break;
          case 99:
          case 67:
            switch (t1.peekChar$1(1)) {
              case 97:
              case 65:
                if (!_this._tryMinMaxFunction$2(buffer, "calc"))
                  return false;
                break;
              case 108:
              case 76:
                if (!_this._tryMinMaxFunction$2(buffer, "clamp"))
                  return false;
                break;
            }
            break;
          case 101:
          case 69:
            if (!_this._tryMinMaxFunction$2(buffer, "env"))
              return false;
            break;
          case 118:
          case 86:
            if (!_this._tryMinMaxFunction$2(buffer, "var"))
              return false;
            break;
          case 40:
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            if (!_this._tryMinMaxContents$2$allowComma(buffer, false))
              return false;
            break;
          case 109:
          case 77:
            t1.readChar$0();
            if (_this.scanIdentChar$1(105)) {
              if (!_this.scanIdentChar$1(110))
                return false;
              t2._contents += "min(";
            } else if (_this.scanIdentChar$1(97)) {
              if (!_this.scanIdentChar$1(120))
                return false;
              t2._contents += "max(";
            } else
              return false;
            if (!t1.scanChar$1(40))
              return false;
            if (!_this._tryMinMaxContents$1(buffer))
              return false;
            break;
          default:
            return false;
        }
        _this.whitespace$0();
        switch (t1.peekChar$0()) {
          case 41:
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            return true;
          case 43:
          case 45:
          case 42:
          case 47:
            t2._contents += H.Primitives_stringFromCharCode(32);
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            t2._contents += H.Primitives_stringFromCharCode(32);
            break;
          case 44:
            if (t3)
              return false;
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            t2._contents += H.Primitives_stringFromCharCode(32);
            break;
          default:
            return false;
        }
        _this.whitespace$0();
      }
    },
    _tryMinMaxContents$1: function(buffer) {
      return this._tryMinMaxContents$2$allowComma(buffer, true);
    },
    _tryMinMaxFunction$2: function(buffer, $name) {
      var t1, t2;
      if (!this.scanIdentifier$1($name))
        return false;
      t1 = this.scanner;
      if (!t1.scanChar$1(40))
        return false;
      t2 = buffer._interpolation_buffer$_text;
      t2._contents += $name;
      t2._contents += H.Primitives_stringFromCharCode(40);
      buffer.addInterpolation$1(this._interpolatedDeclarationValue$1$allowEmpty(true));
      t2._contents += H.Primitives_stringFromCharCode(41);
      if (!t1.scanChar$1(41))
        return false;
      return true;
    },
    _tryUrlContents$2$name: function(start, $name) {
      var t3, t4, buffer, next, t5, endPosition, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      if (!t1.scanChar$1(40))
        return null;
      _this.whitespaceWithoutComments$0();
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer(t3, t4);
      t3._contents = $name == null ? "url" : $name;
      t3._contents += H.Primitives_stringFromCharCode(40);
      for (; true;) {
        next = t1.peekChar$0();
        if (next == null)
          break;
        else {
          if (next !== 33)
            if (next !== 37)
              if (next !== 38)
                t5 = next >= 42 && next <= 126 || next >= 128;
              else
                t5 = true;
            else
              t5 = true;
          else
            t5 = true;
          if (t5)
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 92)
            t3._contents += H.S(_this.escape$0());
          else if (next === 35)
            if (t1.peekChar$1(1) === 123) {
              t5 = _this.singleInterpolation$0();
              buffer._flushText$0();
              t4.push(t5);
            } else
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {
            _this.whitespaceWithoutComments$0();
            if (t1.peekChar$0() !== 41)
              break;
          } else if (next === 41) {
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            endPosition = t1._string_scanner$_position;
            t2 = t1._sourceFile;
            t3 = start.position;
            t1 = new Y._FileSpan(t2, t3, endPosition);
            t1._FileSpan$3(t2, t3, endPosition);
            return buffer.interpolation$1(t1);
          } else
            break;
        }
      }
      t1.set$state(new S._SpanScannerState(t1, t2));
      return null;
    },
    _tryUrlContents$1: function(start) {
      return this._tryUrlContents$2$name(start, null);
    },
    dynamicUrl$0: function() {
      var contents, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      _this.expectIdentifier$1("url");
      contents = _this._tryUrlContents$1(start);
      if (contents != null)
        return new D.StringExpression(contents, false);
      return new F.FunctionExpression(null, X.Interpolation$(H.setRuntimeTypeInfo(["url"], type$.JSArray_legacy_Object), t1.spanFrom$1(start)), _this._argumentInvocation$0(), t1.spanFrom$1(start));
    },
    almostAnyValue$1$omitComments: function(omitComments) {
      var t4, t5, next, commentStart, end, t6, contents, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer(t3, []);
      $label0$1:
        for (t4 = t1.string, t5 = !omitComments; true;) {
          next = t1.peekChar$0();
          switch (next) {
            case 92:
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 34:
            case 39:
              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());
              break;
            case 47:
              commentStart = t1._string_scanner$_position;
              if (_this.scanComment$0()) {
                if (t5) {
                  end = t1._string_scanner$_position;
                  t3._contents += J.substring$2$s(t4, commentStart, end);
                }
              } else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 35:
              if (t1.peekChar$1(1) === 123)
                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 13:
            case 10:
            case 12:
              if (_this.get$indented())
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 33:
            case 59:
            case 123:
            case 125:
              break $label0$1;
            case 117:
            case 85:
              t6 = t1._string_scanner$_position;
              if (!_this.scanIdentifier$1("url")) {
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                break;
              }
              contents = _this._tryUrlContents$1(new S._SpanScannerState(t1, t6));
              if (contents == null) {
                if (t6 < 0 || t6 > t4.length)
                  H.throwExpression(P.ArgumentError$("Invalid position " + t6));
                t1._string_scanner$_position = t6;
                t1._lastMatch = null;
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              } else
                buffer.addInterpolation$1(contents);
              break;
            default:
              if (next == null)
                break $label0$1;
              if (_this.lookingAtIdentifier$0())
                t3._contents += _this.identifier$0();
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
          }
        }
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    almostAnyValue$0: function() {
      return this.almostAnyValue$1$omitComments(false);
    },
    _interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon: function(allowColon, allowEmpty, allowSemicolon) {
      var t4, t5, t6, wroteNewline, next, t7, start, end, contents, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer(t3, []),
        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);
      $label0$1:
        for (t4 = t1.string, t5 = !allowColon, t6 = !allowSemicolon, wroteNewline = false; true;) {
          next = t1.peekChar$0();
          switch (next) {
            case 92:
              t3._contents += H.S(_this.escape$1$identifierStart(true));
              wroteNewline = false;
              break;
            case 34:
            case 39:
              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());
              wroteNewline = false;
              break;
            case 47:
              if (t1.peekChar$1(1) === 42) {
                t7 = _this.get$loudComment();
                start = t1._string_scanner$_position;
                t7.call$0();
                end = t1._string_scanner$_position;
                t3._contents += J.substring$2$s(t4, start, end);
              } else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 35:
              if (t1.peekChar$1(1) === 123)
                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 32:
            case 9:
              if (!wroteNewline) {
                t7 = t1.peekChar$1(1);
                t7 = !(t7 === 32 || t7 === 9 || t7 === 10 || t7 === 13 || t7 === 12);
              } else
                t7 = true;
              if (t7)
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              else
                t1.readChar$0();
              break;
            case 10:
            case 13:
            case 12:
              if (_this.get$indented())
                break $label0$1;
              t7 = t1.peekChar$1(-1);
              if (!(t7 === 10 || t7 === 13 || t7 === 12))
                t3._contents += "\n";
              t1.readChar$0();
              wroteNewline = true;
              break;
            case 40:
            case 123:
            case 91:
              t3._contents += H.Primitives_stringFromCharCode(next);
              brackets.push(T.opposite(t1.readChar$0()));
              wroteNewline = false;
              break;
            case 41:
            case 125:
            case 93:
              if (brackets.length === 0)
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(next);
              t1.expectChar$1(brackets.pop());
              wroteNewline = false;
              break;
            case 59:
              if (t6 && brackets.length === 0)
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 58:
              if (t5 && brackets.length === 0)
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 117:
            case 85:
              t7 = t1._string_scanner$_position;
              if (!_this.scanIdentifier$1("url")) {
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                wroteNewline = false;
                break;
              }
              contents = _this._tryUrlContents$1(new S._SpanScannerState(t1, t7));
              if (contents == null) {
                if (t7 < 0 || t7 > t4.length)
                  H.throwExpression(P.ArgumentError$("Invalid position " + t7));
                t1._string_scanner$_position = t7;
                t1._lastMatch = null;
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              } else
                buffer.addInterpolation$1(contents);
              wroteNewline = false;
              break;
            default:
              if (next == null)
                break $label0$1;
              if (_this.lookingAtIdentifier$0())
                t3._contents += _this.identifier$0();
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
          }
        }
      if (brackets.length !== 0)
        t1.expectChar$1(C.JSArray_methods.get$last(brackets));
      if (!allowEmpty && buffer._interpolation_buffer$_contents.length === 0 && t3._contents.length === 0)
        t1.error$1(0, "Expected token.");
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _interpolatedDeclarationValue$1$allowEmpty: function(allowEmpty) {
      return this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, false);
    },
    _interpolatedDeclarationValue$2$allowEmpty$allowSemicolon: function(allowEmpty, allowSemicolon) {
      return this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, allowSemicolon);
    },
    _interpolatedDeclarationValue$0: function() {
      return this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, false, false);
    },
    interpolatedIdentifier$0: function() {
      var first, _this = this,
        _s20_ = "Expected identifier.",
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        t2 = new P.StringBuffer(""),
        t3 = [],
        buffer = new Z.InterpolationBuffer(t2, t3);
      if (t1.scanChar$1(45)) {
        t2._contents += H.Primitives_stringFromCharCode(45);
        if (t1.scanChar$1(45)) {
          t2._contents += H.Primitives_stringFromCharCode(45);
          _this._interpolatedIdentifierBody$1(buffer);
          return buffer.interpolation$1(t1.spanFrom$1(start));
        }
      }
      first = t1.peekChar$0();
      if (first == null)
        t1.error$1(0, _s20_);
      else if (first === 95 || T.isAlphabetic0(first) || first >= 128)
        t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
      else if (first === 92)
        t2._contents += H.S(_this.escape$1$identifierStart(true));
      else if (first === 35 && t1.peekChar$1(1) === 123) {
        t2 = _this.singleInterpolation$0();
        buffer._flushText$0();
        t3.push(t2);
      } else
        t1.error$1(0, _s20_);
      _this._interpolatedIdentifierBody$1(buffer);
      return buffer.interpolation$1(t1.spanFrom$1(start));
    },
    _interpolatedIdentifierBody$1: function(buffer) {
      var t1, t2, t3, next, t4;
      for (t1 = buffer._interpolation_buffer$_contents, t2 = this.scanner, t3 = buffer._interpolation_buffer$_text; true;) {
        next = t2.peekChar$0();
        if (next == null)
          break;
        else {
          if (next !== 95)
            if (next !== 45) {
              if (!(next >= 97 && next <= 122))
                t4 = next >= 65 && next <= 90;
              else
                t4 = true;
              if (!t4)
                t4 = next >= 48 && next <= 57;
              else
                t4 = true;
              t4 = t4 || next >= 128;
            } else
              t4 = true;
          else
            t4 = true;
          if (t4)
            t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());
          else if (next === 92)
            t3._contents += H.S(this.escape$0());
          else if (next === 35 && t2.peekChar$1(1) === 123) {
            t4 = this.singleInterpolation$0();
            buffer._flushText$0();
            t1.push(t4);
          } else
            break;
        }
      }
    },
    singleInterpolation$0: function() {
      var contents, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("#{");
      _this.whitespace$0();
      contents = _this.expression$0();
      t1.expectChar$1(125);
      if (_this.get$plainCss())
        _this.error$2(0, string$.Interpp, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
      return contents;
    },
    _mediaQueryList$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer(t3, []);
      for (; true;) {
        this.whitespace$0();
        this._stylesheet$_mediaQuery$1(buffer);
        if (!t1.scanChar$1(44))
          break;
        t3._contents += H.Primitives_stringFromCharCode(44);
        t3._contents += H.Primitives_stringFromCharCode(32);
      }
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _stylesheet$_mediaQuery$1: function(buffer) {
      var t1, identifier, _this = this;
      if (_this.scanner.peekChar$0() !== 40) {
        buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
        _this.whitespace$0();
        if (!_this._lookingAtInterpolatedIdentifier$0())
          return;
        t1 = buffer._interpolation_buffer$_text;
        t1._contents += H.Primitives_stringFromCharCode(32);
        identifier = _this.interpolatedIdentifier$0();
        _this.whitespace$0();
        if (B.equalsIgnoreCase(identifier.get$asPlain(), "and"))
          t1._contents += " and ";
        else {
          buffer.addInterpolation$1(identifier);
          if (_this.scanIdentifier$1("and")) {
            _this.whitespace$0();
            t1._contents += " and ";
          } else
            return;
        }
      }
      for (t1 = buffer._interpolation_buffer$_text; true;) {
        _this.whitespace$0();
        buffer.addInterpolation$1(_this._mediaFeature$0());
        _this.whitespace$0();
        if (!_this.scanIdentifier$1("and"))
          break;
        t1._contents += " and ";
      }
    },
    _mediaFeature$0: function() {
      var interpolation, t2, t3, t4, buffer, t5, next, isAngle, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() === 35) {
        interpolation = _this.singleInterpolation$0();
        return X.Interpolation$(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());
      }
      t2 = t1._string_scanner$_position;
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer(t3, t4);
      t1.expectChar$1(40);
      t3._contents += H.Primitives_stringFromCharCode(40);
      _this.whitespace$0();
      t5 = _this._expressionUntilComparison$0();
      buffer._flushText$0();
      t4.push(t5);
      if (t1.scanChar$1(58)) {
        _this.whitespace$0();
        t3._contents += H.Primitives_stringFromCharCode(58);
        t3._contents += H.Primitives_stringFromCharCode(32);
        t5 = _this.expression$0();
        buffer._flushText$0();
        t4.push(t5);
      } else {
        next = t1.peekChar$0();
        isAngle = next === 60 || next === 62;
        if (isAngle || next === 61) {
          t3._contents += H.Primitives_stringFromCharCode(32);
          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          if (isAngle && t1.scanChar$1(61))
            t3._contents += H.Primitives_stringFromCharCode(61);
          t3._contents += H.Primitives_stringFromCharCode(32);
          _this.whitespace$0();
          t5 = _this._expressionUntilComparison$0();
          buffer._flushText$0();
          t4.push(t5);
          if (isAngle && t1.scanChar$1(next)) {
            t3._contents += H.Primitives_stringFromCharCode(32);
            t3._contents += H.Primitives_stringFromCharCode(next);
            if (t1.scanChar$1(61))
              t3._contents += H.Primitives_stringFromCharCode(61);
            t3._contents += H.Primitives_stringFromCharCode(32);
            _this.whitespace$0();
            t5 = _this._expressionUntilComparison$0();
            buffer._flushText$0();
            t4.push(t5);
          }
        }
      }
      t1.expectChar$1(41);
      _this.whitespace$0();
      t3._contents += H.Primitives_stringFromCharCode(41);
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _expressionUntilComparison$0: function() {
      return this.expression$1$until(new V.StylesheetParser__expressionUntilComparison_closure(this));
    },
    _supportsCondition$0: function() {
      var condition, operator, right, endPosition, t3, t4, lowerOperator, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      if (_this.scanIdentifier$1("not")) {
        _this.whitespace$0();
        return new M.SupportsNegation(_this._supportsConditionInParens$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
      }
      condition = _this._supportsConditionInParens$0();
      _this.whitespace$0();
      for (operator = null; _this.lookingAtIdentifier$0();) {
        if (operator != null)
          _this.expectIdentifier$1(operator);
        else if (_this.scanIdentifier$1("or"))
          operator = "or";
        else {
          _this.expectIdentifier$1("and");
          operator = "and";
        }
        _this.whitespace$0();
        right = _this._supportsConditionInParens$0();
        endPosition = t1._string_scanner$_position;
        t3 = t1._sourceFile;
        t4 = new Y._FileSpan(t3, t2, endPosition);
        t4._FileSpan$3(t3, t2, endPosition);
        condition = new U.SupportsOperation(condition, right, operator, t4);
        lowerOperator = operator.toLowerCase();
        if (lowerOperator !== "and" && lowerOperator !== "or")
          H.throwExpression(P.ArgumentError$value(operator, "operator", 'may only be "and" or "or".'));
        _this.whitespace$0();
      }
      return condition;
    },
    _supportsConditionInParens$0: function() {
      var $name, nameStart, wasInParentheses, identifier, operation, contents, identifier0, t2, $arguments, condition, exception, value, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      if (_this._lookingAtInterpolatedIdentifier$0()) {
        identifier0 = _this.interpolatedIdentifier$0();
        t2 = identifier0.get$asPlain();
        if ((t2 == null ? null : t2.toLowerCase()) === "not")
          _this.error$2(0, '"not" is not a valid identifier here.', identifier0.span);
        if (t1.scanChar$1(40)) {
          $arguments = _this._interpolatedDeclarationValue$2$allowEmpty$allowSemicolon(true, true);
          t1.expectChar$1(41);
          return new F.SupportsFunction(identifier0, $arguments, t1.spanFrom$1(start));
        } else {
          t2 = identifier0.contents;
          if (t2.length !== 1 || !type$.legacy_Expression._is(C.JSArray_methods.get$first(t2)))
            _this.error$2(0, "Expected @supports condition.", identifier0.span);
          else
            return new X.SupportsInterpolation(type$.legacy_Expression._as(C.JSArray_methods.get$first(t2)), t1.spanFrom$1(start));
        }
      }
      t1.expectChar$1(40);
      _this.whitespace$0();
      if (_this.scanIdentifier$1("not")) {
        _this.whitespace$0();
        condition = _this._supportsConditionInParens$0();
        t1.expectChar$1(41);
        return new M.SupportsNegation(condition, t1.spanFrom$1(start));
      } else if (t1.peekChar$0() === 40) {
        condition = _this._supportsCondition$0();
        t1.expectChar$1(41);
        return condition;
      }
      $name = null;
      nameStart = new S._SpanScannerState(t1, t1._string_scanner$_position);
      wasInParentheses = _this._inParentheses;
      try {
        $name = _this.expression$0();
        t1.expectChar$1(58);
      } catch (exception) {
        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {
          t1.set$state(nameStart);
          _this._inParentheses = wasInParentheses;
          identifier = _this.interpolatedIdentifier$0();
          operation = _this._trySupportsOperation$2(identifier, nameStart);
          if (operation != null) {
            t1.expectChar$1(41);
            return operation;
          }
          t2 = new Z.InterpolationBuffer(new P.StringBuffer(""), []);
          t2.addInterpolation$1(identifier);
          t2.addInterpolation$1(_this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(false, true, true));
          contents = t2.interpolation$1(t1.spanFrom$1(nameStart));
          if (t1.peekChar$0() === 58)
            throw exception;
          t1.expectChar$1(41);
          return new Y.SupportsAnything(contents, t1.spanFrom$1(start));
        } else
          throw exception;
      }
      _this.whitespace$0();
      value = _this.expression$0();
      t1.expectChar$1(41);
      return new L.SupportsDeclaration($name, value, t1.spanFrom$1(start));
    },
    _trySupportsOperation$2: function(interpolation, start) {
      var expression, beforeWhitespace, t2, t3, operator, operation, right, t4, endPosition, t5, t6, lowerOperator, _this = this, _null = null,
        t1 = interpolation.contents;
      if (t1.length !== 1)
        return _null;
      expression = C.JSArray_methods.get$first(t1);
      if (!type$.legacy_Expression._is(expression))
        return _null;
      t1 = _this.scanner;
      beforeWhitespace = new S._SpanScannerState(t1, t1._string_scanner$_position);
      _this.whitespace$0();
      for (t2 = start.position, t3 = interpolation.span, operator = _null, operation = operator; _this.lookingAtIdentifier$0();) {
        if (operator != null)
          _this.expectIdentifier$1(operator);
        else if (_this.scanIdentifier$1("and"))
          operator = "and";
        else {
          if (!_this.scanIdentifier$1("or")) {
            if (beforeWhitespace._scanner !== t1)
              H.throwExpression(P.ArgumentError$(string$.The_gi));
            t2 = beforeWhitespace.position;
            if (t2 < 0 || t2 > t1.string.length)
              H.throwExpression(P.ArgumentError$("Invalid position " + t2));
            t1._string_scanner$_position = t2;
            return t1._lastMatch = null;
          }
          operator = "or";
        }
        _this.whitespace$0();
        right = _this._supportsConditionInParens$0();
        t4 = operation == null ? new X.SupportsInterpolation(expression, t3) : operation;
        endPosition = t1._string_scanner$_position;
        t5 = t1._sourceFile;
        t6 = new Y._FileSpan(t5, t2, endPosition);
        t6._FileSpan$3(t5, t2, endPosition);
        operation = new U.SupportsOperation(t4, right, operator, t6);
        lowerOperator = operator.toLowerCase();
        if (lowerOperator !== "and" && lowerOperator !== "or")
          H.throwExpression(P.ArgumentError$value(operator, "operator", 'may only be "and" or "or".'));
        _this.whitespace$0();
      }
      return operation;
    },
    _lookingAtInterpolatedIdentifier$0: function() {
      var second,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (first === 95 || T.isAlphabetic0(first) || first >= 128 || first === 92)
        return true;
      if (first === 35)
        return t1.peekChar$1(1) === 123;
      if (first !== 45)
        return false;
      second = t1.peekChar$1(1);
      if (second == null)
        return false;
      if (second === 35)
        return t1.peekChar$1(2) === 123;
      return second === 95 || T.isAlphabetic0(second) || second >= 128 || second === 92 || second === 45;
    },
    _lookingAtInterpolatedIdentifierBody$0: function() {
      var t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (first === 95 || T.isAlphabetic0(first) || first >= 128 || T.isDigit(first) || first === 45 || first === 92)
        return true;
      return first === 35 && t1.peekChar$1(1) === 123;
    },
    _lookingAtExpression$0: function() {
      var next,
        t1 = this.scanner,
        character = t1.peekChar$0();
      if (character == null)
        return false;
      if (character === 46)
        return t1.peekChar$1(1) !== 46;
      if (character === 33) {
        next = t1.peekChar$1(1);
        if (next != null)
          if ((next | 32) !== 105)
            t1 = next === 32 || next === 9 || T.isNewline(next);
          else
            t1 = true;
        else
          t1 = true;
        return t1;
      }
      if (character !== 40)
        if (character !== 47)
          if (character !== 91)
            if (character !== 39)
              if (character !== 34)
                if (character !== 35)
                  if (character !== 43)
                    if (character !== 45)
                      if (character !== 92)
                        if (character !== 36)
                          if (character !== 38)
                            t1 = character === 95 || T.isAlphabetic0(character) || character >= 128 || T.isDigit(character);
                          else
                            t1 = true;
                        else
                          t1 = true;
                      else
                        t1 = true;
                    else
                      t1 = true;
                  else
                    t1 = true;
                else
                  t1 = true;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _withChildren$1$3: function(child, start, create) {
      var result = create.call$2(this.children$1(0, child), this.scanner.spanFrom$1(start));
      this.whitespaceWithoutComments$0();
      return result;
    },
    _withChildren$3: function(child, start, create) {
      return this._withChildren$1$3(child, start, create, type$.dynamic);
    },
    _urlString$0: function() {
      var innerError, t2, exception,
        t1 = this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        url = this.string$0();
      try {
        t2 = P.Uri_parse(url);
        return t2;
      } catch (exception) {
        t2 = H.unwrapException(exception);
        if (type$.legacy_FormatException._is(t2)) {
          innerError = t2;
          this.error$2(0, "Invalid URL: " + H.S(J.get$message$x(innerError)), t1.spanFrom$1(start));
        } else
          throw exception;
      }
    },
    _publicIdentifier$0: function() {
      var _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        result = _this.identifier$1$normalize(true);
      _this._assertPublic$2(result, new V.StylesheetParser__publicIdentifier_closure(_this, new S._SpanScannerState(t1, t2)));
      return result;
    },
    _assertPublic$2: function(identifier, span) {
      if (!T.isPrivate(identifier))
        return;
      this.error$2(0, string$.Privat, span.call$0());
    },
    get$plainCss: function() {
      return false;
    }
  };
  V.StylesheetParser_parse_closure.prototype = {
    call$0: function() {
      var statements, t4,
        t1 = this.$this,
        t2 = t1.scanner,
        t3 = t2._string_scanner$_position;
      t2.scanChar$1(65279);
      statements = t1.statements$1(new V.StylesheetParser_parse__closure(t1));
      t2.expectDone$0();
      t4 = t1._globalVariables;
      t4 = t4.get$values(t4);
      C.JSArray_methods.addAll$1(statements, H.MappedIterable_MappedIterable(t4, new V.StylesheetParser_parse__closure0(), H._instanceType(t4)._eval$1("Iterable.E"), type$.legacy_Statement));
      return V.Stylesheet$(statements, t2.spanFrom$1(new S._SpanScannerState(t2, t3)), t1.get$plainCss());
    },
    $signature: 59
  };
  V.StylesheetParser_parse__closure.prototype = {
    call$0: function() {
      return this.$this._statement$1$root(true);
    },
    $signature: 57
  };
  V.StylesheetParser_parse__closure0.prototype = {
    call$1: function(declaration) {
      return Z.VariableDeclaration$(declaration.name, new O.NullExpression(declaration.expression.get$span()), declaration.span, null, false, true, null);
    },
    $signature: 256
  };
  V.StylesheetParser_parseArgumentDeclaration_closure.prototype = {
    call$0: function() {
      var $arguments,
        t1 = this.$this,
        t2 = t1.scanner;
      t2.expectChar$2$name(64, "@-rule");
      t1.identifier$0();
      t1.whitespace$0();
      t1.identifier$0();
      $arguments = t1._argumentDeclaration$0();
      t1.whitespace$0();
      t2.expectChar$1(123);
      return $arguments;
    },
    $signature: 250
  };
  V.StylesheetParser_parseVariableDeclaration_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      return t1.lookingAtIdentifier$0() ? t1._variableDeclarationWithNamespace$0() : t1.variableDeclarationWithoutNamespace$0();
    },
    $signature: 187
  };
  V.StylesheetParser_parseUseRule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1.scanner,
        t3 = t2._string_scanner$_position;
      t2.expectChar$2$name(64, "@-rule");
      t1.expectIdentifier$1("use");
      t1.whitespace$0();
      return t1._useRule$1(new S._SpanScannerState(t2, t3));
    },
    $signature: 244
  };
  V.StylesheetParser__parseSingleProduction_closure.prototype = {
    call$0: function() {
      var result = this.production.call$0();
      this.$this.scanner.expectDone$0();
      return result;
    },
    $signature: function() {
      return this.T._eval$1("0*()");
    }
  };
  V.StylesheetParser__statement_closure.prototype = {
    call$0: function() {
      return this.$this._statement$0();
    },
    $signature: 57
  };
  V.StylesheetParser_variableDeclarationWithoutNamespace_closure.prototype = {
    call$0: function() {
      return this.$this.scanner.spanFrom$1(this._box_0.start);
    },
    $signature: 33
  };
  V.StylesheetParser_variableDeclarationWithoutNamespace_closure0.prototype = {
    call$0: function() {
      return this.declaration;
    },
    $signature: 187
  };
  V.StylesheetParser__declarationOrBuffer_closure.prototype = {
    call$2: function(children, span) {
      return L.Declaration$(this.name, span, children, null);
    },
    $signature: 67
  };
  V.StylesheetParser__declarationOrBuffer_closure0.prototype = {
    call$2: function(children, span) {
      return L.Declaration$(this.name, span, children, this._box_0.value);
    },
    $signature: 67
  };
  V.StylesheetParser__styleRule_closure.prototype = {
    call$2: function(children, span) {
      var t2, _this = this,
        t1 = _this.$this;
      if (t1.get$indented() && children.length === 0)
        t1.logger.warn$2$span(0, string$.This_s, _this._box_0.interpolation.span);
      t1._inStyleRule = _this.wasInStyleRule;
      t2 = _this._box_0;
      return X.StyleRule$(t2.interpolation, children, t1.scanner.spanFrom$1(t2.start));
    },
    $signature: 240
  };
  V.StylesheetParser__propertyOrVariableDeclaration_closure.prototype = {
    call$2: function(children, span) {
      return L.Declaration$(this._box_0.name, span, children, null);
    },
    $signature: 67
  };
  V.StylesheetParser__propertyOrVariableDeclaration_closure0.prototype = {
    call$2: function(children, span) {
      return L.Declaration$(this._box_0.name, span, children, this.value);
    },
    $signature: 67
  };
  V.StylesheetParser__atRootRule_closure.prototype = {
    call$2: function(children, span) {
      return V.AtRootRule$(children, span, this.query);
    },
    $signature: 192
  };
  V.StylesheetParser__atRootRule_closure0.prototype = {
    call$2: function(children, span) {
      return V.AtRootRule$(children, span, null);
    },
    $signature: 192
  };
  V.StylesheetParser__eachRule_closure.prototype = {
    call$2: function(children, span) {
      var _this = this;
      _this.$this._inControlDirective = _this.wasInControlDirective;
      return V.EachRule$(_this.variables, _this.list, children, span);
    },
    $signature: 236
  };
  V.StylesheetParser__functionRule_closure.prototype = {
    call$2: function(children, span) {
      return M.FunctionRule$(this.name, this.$arguments, children, span, this.precedingComment);
    },
    $signature: 235
  };
  V.StylesheetParser__forRule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (!t1.lookingAtIdentifier$0())
        return false;
      if (t1.scanIdentifier$1("to"))
        return this._box_0.exclusive = true;
      else if (t1.scanIdentifier$1("through")) {
        this._box_0.exclusive = false;
        return true;
      } else
        return false;
    },
    $signature: 35
  };
  V.StylesheetParser__forRule_closure0.prototype = {
    call$2: function(children, span) {
      var _this = this;
      _this.$this._inControlDirective = _this.wasInControlDirective;
      return B.ForRule$(_this.variable, _this.from, _this.to, children, span, _this._box_0.exclusive);
    },
    $signature: 234
  };
  V.StylesheetParser__memberList_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.scanner.peekChar$0() === 36)
        this.variables.add$1(0, t1.variableName$0());
      else
        this.identifiers.add$1(0, t1.identifier$1$normalize(true));
    },
    $signature: 0
  };
  V.StylesheetParser__includeRule_closure.prototype = {
    call$2: function(children, span) {
      return Y.ContentBlock$(this._box_0.contentArguments, children, span);
    },
    $signature: 233
  };
  V.StylesheetParser_mediaRule_closure.prototype = {
    call$2: function(children, span) {
      return G.MediaRule$(this.query, children, span);
    },
    $signature: 231
  };
  V.StylesheetParser__mixinRule_closure.prototype = {
    call$2: function(children, span) {
      var _this = this,
        t1 = _this.$this,
        hadContent = t1._mixinHasContent;
      t1._stylesheet$_inMixin = false;
      t1._mixinHasContent = null;
      return T.MixinRule$(_this.name, _this.$arguments, children, span, _this.precedingComment, hadContent);
    },
    $signature: 229
  };
  V.StylesheetParser_mozDocumentRule_closure.prototype = {
    call$2: function(children, span) {
      var _this = this;
      if (_this._box_0.needsDeprecationWarning)
        _this.$this.logger.warn$3$deprecation$span(0, string$.x40_moz_, true, span);
      return U.AtRule$(_this.name, span, children, _this.value);
    },
    $signature: 199
  };
  V.StylesheetParser_supportsRule_closure.prototype = {
    call$2: function(children, span) {
      return B.SupportsRule$(this.condition, children, span);
    },
    $signature: 228
  };
  V.StylesheetParser__whileRule_closure.prototype = {
    call$2: function(children, span) {
      this.$this._inControlDirective = this.wasInControlDirective;
      return G.WhileRule$(this.condition, children, span);
    },
    $signature: 227
  };
  V.StylesheetParser_unknownAtRule_closure.prototype = {
    call$2: function(children, span) {
      return U.AtRule$(this.name, span, children, this._box_0.value);
    },
    $signature: 199
  };
  V.StylesheetParser_expression_resetState.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_0;
      t1.operands = t1.operators = t1.spaceExpressions = t1.commaExpressions = null;
      t2 = this.$this;
      t2.scanner.set$state(this.start);
      t1.allowSlash = t2.lookingAtNumber$0();
      t1.singleExpression = t2._singleExpression$0();
    },
    $signature: 1
  };
  V.StylesheetParser_expression_resolveOneOperation.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this._box_0,
        operator = t1.operators.pop();
      if (operator !== C.BinaryOperator_RTB)
        t1.allowSlash = false;
      t2 = t1.allowSlash && !this.$this._inParentheses;
      t3 = t1.operands;
      if (t2)
        t1.singleExpression = new V.BinaryOperationExpression(C.BinaryOperator_RTB, t3.pop(), t1.singleExpression, true);
      else
        t1.singleExpression = new V.BinaryOperationExpression(operator, t3.pop(), t1.singleExpression, false);
    },
    $signature: 1
  };
  V.StylesheetParser_expression_resolveOperations.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_0;
      if (t1.operators == null)
        return;
      for (t2 = this.resolveOneOperation; t1.operators.length !== 0;)
        t2.call$0();
    },
    $signature: 1
  };
  V.StylesheetParser_expression_addSingleExpression.prototype = {
    call$2$number: function(expression, number) {
      var t2, _this = this,
        t1 = _this._box_0;
      if (t1.singleExpression != null) {
        t2 = _this.$this;
        if (t2._inParentheses) {
          t2._inParentheses = false;
          if (t1.allowSlash) {
            _this.resetState.call$0();
            return;
          }
        }
        if (t1.spaceExpressions == null)
          t1.spaceExpressions = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);
        _this.resolveOperations.call$0();
        t1.spaceExpressions.push(t1.singleExpression);
        t1.allowSlash = number;
      } else if (!number)
        t1.allowSlash = false;
      t1.singleExpression = expression;
    },
    call$1: function(expression) {
      return this.call$2$number(expression, false);
    },
    $signature: 226
  };
  V.StylesheetParser_expression_addOperator.prototype = {
    call$1: function(operator) {
      var t2, t3, t4, t5, singleExpression,
        t1 = this.$this;
      if (t1.get$plainCss() && operator !== C.BinaryOperator_RTB && operator !== C.BinaryOperator_kjl) {
        t2 = t1.scanner;
        t3 = operator.operator.length;
        t2.error$3$length$position(0, "Operators aren't allowed in plain CSS.", t3, t2._string_scanner$_position - t3);
      }
      t2 = this._box_0;
      t2.allowSlash = t2.allowSlash && operator === C.BinaryOperator_RTB;
      if (t2.operators == null)
        t2.operators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BinaryOperator);
      if (t2.operands == null)
        t2.operands = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);
      t3 = this.resolveOneOperation;
      t4 = operator.precedence;
      while (true) {
        t5 = t2.operators;
        if (!(t5.length !== 0 && C.JSArray_methods.get$last(t5).precedence >= t4))
          break;
        t3.call$0();
      }
      t2.operators.push(operator);
      t2.operands.push(t2.singleExpression);
      t1.whitespace$0();
      t2.allowSlash = t2.allowSlash && t1.lookingAtNumber$0();
      singleExpression = t1._singleExpression$0();
      t2.singleExpression = singleExpression;
      t2.allowSlash = t2.allowSlash && singleExpression instanceof T.NumberExpression;
    },
    $signature: 225
  };
  V.StylesheetParser_expression_resolveSpaceExpressions.prototype = {
    call$0: function() {
      var t1, t2;
      this.resolveOperations.call$0();
      t1 = this._box_0;
      t2 = t1.spaceExpressions;
      if (t2 != null) {
        t2.push(t1.singleExpression);
        t1.singleExpression = D.ListExpression$(t1.spaceExpressions, C.ListSeparator_space, false, null);
        t1.spaceExpressions = null;
      }
    },
    $signature: 1
  };
  V.StylesheetParser__expressionUntilComma_closure.prototype = {
    call$0: function() {
      return this.$this.scanner.peekChar$0() === 44;
    },
    $signature: 35
  };
  V.StylesheetParser__unicodeRange_closure.prototype = {
    call$1: function(char) {
      return char != null && T.isHex(char);
    },
    $signature: 24
  };
  V.StylesheetParser__unicodeRange_closure0.prototype = {
    call$1: function(char) {
      return char != null && T.isHex(char);
    },
    $signature: 24
  };
  V.StylesheetParser_identifierLike_closure.prototype = {
    call$0: function() {
      return this.$this.scanner.spanFrom$1(this.start);
    },
    $signature: 33
  };
  V.StylesheetParser__expressionUntilComparison_closure.prototype = {
    call$0: function() {
      var t1 = this.$this.scanner,
        next = t1.peekChar$0();
      if (next === 61)
        return t1.peekChar$1(1) !== 61;
      return next === 60 || next === 62;
    },
    $signature: 35
  };
  V.StylesheetParser__publicIdentifier_closure.prototype = {
    call$0: function() {
      return this.$this.scanner.spanFrom$1(this.start);
    },
    $signature: 33
  };
  M.StylesheetGraph.prototype = {
    modifiedSince$3: function(url, since, baseImporter) {
      var node = this._stylesheet_graph$_add$3(url, baseImporter, null);
      if (node == null)
        return true;
      return new M.StylesheetGraph_modifiedSince_transitiveModificationTime(this).call$1(node)._value > since._value;
    },
    _stylesheet_graph$_add$3: function(url, baseImporter, baseUrl) {
      var t1, t2, _this = this,
        tuple = _this._ignoreErrors$1(new M.StylesheetGraph__add_closure(_this, url, baseImporter, baseUrl));
      if (tuple == null)
        return null;
      t1 = tuple.item1;
      t2 = tuple.item2;
      _this.addCanonical$3(t1, t2, tuple.item3);
      return _this._nodes.$index(0, t2);
    },
    addCanonical$4$recanonicalize: function(importer, canonicalUrl, originalUrl, recanonicalize) {
      var stylesheet, _this = this,
        t1 = _this._nodes;
      if (t1.$index(0, canonicalUrl) != null)
        return C.Set_empty1;
      stylesheet = _this._ignoreErrors$1(new M.StylesheetGraph_addCanonical_closure(_this, importer, canonicalUrl, originalUrl));
      if (stylesheet == null)
        return C.Set_empty1;
      t1.$indexSet(0, canonicalUrl, M.StylesheetNode$_(stylesheet, importer, canonicalUrl, _this._upstreamNodes$3(stylesheet, importer, canonicalUrl)));
      return recanonicalize ? _this._recanonicalizeImports$2(importer, canonicalUrl) : C.Set_empty1;
    },
    addCanonical$3: function(importer, canonicalUrl, originalUrl) {
      return this.addCanonical$4$recanonicalize(importer, canonicalUrl, originalUrl, true);
    },
    _upstreamNodes$3: function(stylesheet, baseImporter, baseUrl) {
      var t4, t5, t6, t7,
        t1 = type$.legacy_Uri,
        active = P.LinkedHashSet_LinkedHashSet$_literal([baseUrl], t1),
        t2 = type$.JSArray_legacy_Uri,
        t3 = H.setRuntimeTypeInfo([], t2);
      t2 = H.setRuntimeTypeInfo([], t2);
      new F._FindDependenciesVisitor(t3, t2).visitChildren$1(stylesheet);
      t4 = type$.legacy_StylesheetNode;
      t5 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t4);
      for (t6 = C.JSArray_methods.get$iterator(t3); t6.moveNext$0();) {
        t7 = t6.get$current(t6);
        t5.$indexSet(0, t7, this._nodeFor$4(t7, baseImporter, baseUrl, active));
      }
      t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t4);
      for (t2 = J.get$iterator$ax(new S.Tuple2(t3, t2, type$.Tuple2_of_legacy_List_legacy_Uri_and_legacy_List_legacy_Uri).item2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.$indexSet(0, t3, this._nodeFor$5$forImport(t3, baseImporter, baseUrl, active, true));
      }
      return new S.Tuple2(t5, t1, type$.Tuple2_of_legacy_Map_of_legacy_Uri_and_legacy_StylesheetNode_and_legacy_Map_of_legacy_Uri_and_legacy_StylesheetNode);
    },
    reload$1: function(canonicalUrl) {
      var stylesheet, upstream, _this = this,
        node = _this._nodes.$index(0, canonicalUrl);
      if (node == null)
        throw H.wrapException(P.StateError$(canonicalUrl.toString$0(0) + " is not in the dependency graph."));
      _this._transitiveModificationTimes.clear$0(0);
      _this.importCache.clearImport$1(canonicalUrl);
      stylesheet = _this._ignoreErrors$1(new M.StylesheetGraph_reload_closure(_this, node, canonicalUrl));
      if (stylesheet == null)
        return false;
      node._stylesheet_graph$_stylesheet = stylesheet;
      upstream = _this._upstreamNodes$3(stylesheet, node.importer, canonicalUrl);
      node._replaceUpstream$2(upstream.item1, upstream.item2);
      return true;
    },
    _recanonicalizeImports$2: function(importer, canonicalUrl) {
      var t2, t3, t4, t5, newUpstream, newUpstreamImports, _this = this,
        t1 = type$.legacy_StylesheetNode,
        changed = P.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (t2 = _this._nodes, t3 = type$.UnmodifiableMapView_of_legacy_Uri_and_legacy_StylesheetNode, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2), t4 = type$.legacy_Uri; t2.moveNext$0();) {
        t5 = t2.get$current(t2);
        newUpstream = _this._recanonicalizeImportsForNode$4$forImport(t5, importer, canonicalUrl, false);
        newUpstreamImports = _this._recanonicalizeImportsForNode$4$forImport(t5, importer, canonicalUrl, true);
        if (newUpstream.get$isNotEmpty(newUpstream) || newUpstreamImports.get$isNotEmpty(newUpstreamImports)) {
          changed.add$1(0, t5);
          t5._replaceUpstream$2(Y.mergeMaps(new P.UnmodifiableMapView(t5._upstream, t3), newUpstream, t4, t1), Y.mergeMaps(new P.UnmodifiableMapView(t5._upstreamImports, t3), newUpstreamImports, t4, t1));
        }
      }
      if (changed._collection$_length !== 0)
        _this._transitiveModificationTimes.clear$0(0);
      return changed;
    },
    _recanonicalizeImportsForNode$4$forImport: function(node, importer, canonicalUrl, forImport) {
      var t1 = type$.UnmodifiableMapView_of_legacy_Uri_and_legacy_StylesheetNode,
        map = forImport ? new P.UnmodifiableMapView(node._upstreamImports, t1) : new P.UnmodifiableMapView(node._upstream, t1),
        newMap = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_StylesheetNode);
      map._collection$_map.forEach$1(0, new M.StylesheetGraph__recanonicalizeImportsForNode_closure(this, importer, canonicalUrl, node, forImport, newMap));
      return newMap;
    },
    _nodeFor$5$forImport: function(url, baseImporter, baseUrl, active, forImport) {
      var importer, canonicalUrl, resolvedUrl, t1, stylesheet, node, _this = this,
        tuple = _this._ignoreErrors$1(new M.StylesheetGraph__nodeFor_closure(_this, url, baseImporter, baseUrl, forImport));
      if (tuple == null)
        return null;
      importer = tuple.item1;
      canonicalUrl = tuple.item2;
      resolvedUrl = tuple.item3;
      t1 = _this._nodes;
      if (t1.containsKey$1(canonicalUrl))
        return t1.$index(0, canonicalUrl);
      if (active.contains$1(0, canonicalUrl))
        return null;
      stylesheet = _this._ignoreErrors$1(new M.StylesheetGraph__nodeFor_closure0(_this, importer, canonicalUrl, resolvedUrl));
      if (stylesheet == null)
        return null;
      active.add$1(0, canonicalUrl);
      node = M.StylesheetNode$_(stylesheet, importer, canonicalUrl, _this._upstreamNodes$3(stylesheet, importer, canonicalUrl));
      active.remove$1(0, canonicalUrl);
      t1.$indexSet(0, canonicalUrl, node);
      return node;
    },
    _nodeFor$4: function(url, baseImporter, baseUrl, active) {
      return this._nodeFor$5$forImport(url, baseImporter, baseUrl, active, false);
    },
    _ignoreErrors$1$1: function(callback) {
      var t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        return null;
      }
    },
    _ignoreErrors$1: function(callback) {
      return this._ignoreErrors$1$1(callback, type$.dynamic);
    }
  };
  M.StylesheetGraph_modifiedSince_transitiveModificationTime.prototype = {
    call$1: function(node) {
      return this.$this._transitiveModificationTimes.putIfAbsent$2(node.canonicalUrl, new M.StylesheetGraph_modifiedSince_transitiveModificationTime_closure(node, this));
    },
    $signature: 222
  };
  M.StylesheetGraph_modifiedSince_transitiveModificationTime_closure.prototype = {
    call$0: function() {
      var t2, t3, upstreamTime,
        t1 = this.node,
        latest = t1.importer.modificationTime$1(t1.canonicalUrl);
      for (t2 = t1._upstream, t2 = t2.get$values(t2), t1 = t1._upstreamImports, t1 = t2.followedBy$1(0, t1.get$values(t1)), t1 = new H.FollowedByIterator(J.get$iterator$ax(t1.__internal$_first), t1._second), t2 = this.transitiveModificationTime; t1.moveNext$0();) {
        t3 = t1._currentIterator;
        t3 = t3.get$current(t3);
        upstreamTime = t3 == null ? new P.DateTime(Date.now(), false) : t2.call$1(t3);
        if (upstreamTime._value > latest._value)
          latest = upstreamTime;
      }
      return latest;
    },
    $signature: 172
  };
  M.StylesheetGraph__add_closure.prototype = {
    call$0: function() {
      var _this = this;
      return _this.$this.importCache.canonicalize$3$baseImporter$baseUrl(_this.url, _this.baseImporter, _this.baseUrl);
    },
    $signature: 109
  };
  M.StylesheetGraph_addCanonical_closure.prototype = {
    call$0: function() {
      var _this = this;
      return _this.$this.importCache.importCanonical$3(_this.importer, _this.canonicalUrl, _this.originalUrl);
    },
    $signature: 59
  };
  M.StylesheetGraph_reload_closure.prototype = {
    call$0: function() {
      return this.$this.importCache.importCanonical$2(this.node.importer, this.canonicalUrl);
    },
    $signature: 59
  };
  M.StylesheetGraph__recanonicalizeImportsForNode_closure.prototype = {
    call$2: function(url, upstream) {
      var result, t1, t2, t3, t4, exception, newCanonicalUrl, _this = this;
      if (!_this.importer.couldCanonicalize$2(url, _this.canonicalUrl))
        return;
      t1 = _this.$this;
      t2 = t1.importCache;
      t3 = t2._canonicalizeCache;
      t4 = type$.Tuple2_of_legacy_Uri_and_legacy_bool;
      t3.remove$1(0, new S.Tuple2(url, false, t4));
      t3.remove$1(0, new S.Tuple2(url, true, t4));
      result = null;
      try {
        t3 = _this.node;
        result = t2.canonicalize$4$baseImporter$baseUrl$forImport(url, t3.importer, t3.canonicalUrl, _this.forImport);
      } catch (exception) {
        H.unwrapException(exception);
      }
      t2 = result;
      newCanonicalUrl = t2 == null ? null : t2.item2;
      if (J.$eq$(newCanonicalUrl, upstream == null ? null : upstream.canonicalUrl))
        return;
      t1 = result == null ? null : t1._nodes.$index(0, result.item2);
      _this.newMap.$indexSet(0, url, t1);
    },
    $signature: 221
  };
  M.StylesheetGraph__nodeFor_closure.prototype = {
    call$0: function() {
      var _this = this;
      return _this.$this.importCache.canonicalize$4$baseImporter$baseUrl$forImport(_this.url, _this.baseImporter, _this.baseUrl, _this.forImport);
    },
    $signature: 109
  };
  M.StylesheetGraph__nodeFor_closure0.prototype = {
    call$0: function() {
      var _this = this;
      return _this.$this.importCache.importCanonical$3(_this.importer, _this.canonicalUrl, _this.resolvedUrl);
    },
    $signature: 59
  };
  M.StylesheetNode.prototype = {
    StylesheetNode$_$4: function(_stylesheet, importer, canonicalUrl, allUpstream) {
      var t1, t2;
      for (t1 = this._upstream, t1 = t1.get$values(t1), t2 = this._upstreamImports, t2 = t1.followedBy$1(0, t2.get$values(t2)), t2 = new H.FollowedByIterator(J.get$iterator$ax(t2.__internal$_first), t2._second); t2.moveNext$0();) {
        t1 = t2._currentIterator;
        t1 = t1.get$current(t1);
        if (t1 != null)
          t1._downstream.add$1(0, this);
      }
    },
    _replaceUpstream$2: function(newUpstream, newUpstreamImports) {
      var t3, _this = this,
        t1 = type$.legacy_StylesheetNode,
        t2 = P.LinkedHashSet_LinkedHashSet(t1);
      for (t3 = _this._upstream, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t2.add$1(0, t3.get$current(t3));
      for (t3 = _this._upstreamImports, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t2.add$1(0, t3.get$current(t3));
      t2.remove$1(0, null);
      t1 = P.LinkedHashSet_LinkedHashSet(t1);
      for (t3 = newUpstream.get$values(newUpstream), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t1.add$1(0, t3.get$current(t3));
      for (t3 = newUpstreamImports.get$values(newUpstreamImports), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t1.add$1(0, t3.get$current(t3));
      t1.remove$1(0, null);
      for (t3 = t2.difference$1(t1), t3 = P._LinkedHashSetIterator$(t3, t3._collection$_modifications); t3.moveNext$0();)
        t3._collection$_current._downstream.remove$1(0, _this);
      for (t1 = t1.difference$1(t2), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
        t1._collection$_current._downstream.add$1(0, _this);
      _this._upstream = newUpstream;
      _this._upstreamImports = newUpstreamImports;
    },
    _stylesheet_graph$_remove$0: function() {
      var t2, t3, t4, _i, url, _this = this,
        t1 = P.LinkedHashSet_LinkedHashSet(type$.legacy_StylesheetNode);
      for (t2 = _this._upstream, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.add$1(0, t2.get$current(t2));
      for (t2 = _this._upstreamImports, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.add$1(0, t2.get$current(t2));
      t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications);
      for (; t1.moveNext$0();) {
        t2 = t1._collection$_current;
        if (t2 == null)
          continue;
        t2._downstream.remove$1(0, _this);
      }
      for (t1 = _this._downstream, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        for (t3 = t2._upstream, t3 = J.toList$0$ax(t3.get$keys(t3)), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {
          url = t3[_i];
          if (J.$eq$(t2._upstream.$index(0, url), _this)) {
            t2._upstream.$indexSet(0, url, null);
            break;
          }
        }
        for (t3 = t2._upstreamImports, t3 = J.toList$0$ax(t3.get$keys(t3)), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {
          url = t3[_i];
          if (J.$eq$(t2._upstreamImports.$index(0, url), _this)) {
            t2._upstreamImports.$indexSet(0, url, null);
            break;
          }
        }
      }
    },
    toString$0: function(_) {
      var t1 = this._stylesheet_graph$_stylesheet.span.file;
      return $.$get$context().prettyUri$1(t1.url);
    }
  };
  M.Syntax.prototype = {
    toString$0: function(_) {
      return this._syntax$_name;
    }
  };
  G.FixedLengthListBuilder.prototype = {
    add$1: function(_, element) {
      var t1, _this = this;
      _this._checkUnbuilt$0();
      t1 = _this._fixed_length_list_builder$_index;
      _this._list[t1] = element;
      _this._fixed_length_list_builder$_index = t1 + 1;
    },
    addAll$1: function(_, elements) {
      var _this = this;
      _this._checkUnbuilt$0();
      C.JSArray_methods.setAll$2(_this._list, _this._fixed_length_list_builder$_index, elements);
      _this._fixed_length_list_builder$_index = _this._fixed_length_list_builder$_index + elements.length;
    },
    addRange$3: function(elements, start, end) {
      var $length, t1, _this = this;
      _this._checkUnbuilt$0();
      $length = (end == null ? J.get$length$asx(elements._collection$_source) : end) - start;
      t1 = _this._fixed_length_list_builder$_index;
      C.JSArray_methods.setRange$4(_this._list, t1, t1 + $length, elements, start);
      _this._fixed_length_list_builder$_index += $length;
    },
    addRange$2: function(elements, start) {
      return this.addRange$3(elements, start, null);
    },
    build$0: function() {
      this._checkUnbuilt$0();
      this._fixed_length_list_builder$_index = -1;
      return this._list;
    },
    _checkUnbuilt$0: function() {
      if (this._fixed_length_list_builder$_index === -1)
        throw H.wrapException(P.StateError$("build() has already been called."));
    }
  };
  K.LimitedMapView.prototype = {
    get$keys: function(_) {
      return this._limited_map_view$_keys;
    },
    get$length: function(_) {
      return this._limited_map_view$_keys._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._limited_map_view$_keys._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._limited_map_view$_keys._collection$_length !== 0;
    },
    $index: function(_, key) {
      return this._limited_map_view$_keys.contains$1(0, key) ? this._limited_map_view$_map.$index(0, key) : null;
    },
    containsKey$1: function(key) {
      return this._limited_map_view$_keys.contains$1(0, key);
    },
    remove$1: function(_, key) {
      return this._limited_map_view$_keys.contains$1(0, key) ? this._limited_map_view$_map.remove$1(0, key) : null;
    }
  };
  Z.MergedMapView.prototype = {
    get$keys: function(_) {
      var t1 = this._mapsByKey;
      return t1.get$keys(t1);
    },
    get$length: function(_) {
      var t1 = this._mapsByKey;
      return t1.get$length(t1);
    },
    get$isEmpty: function(_) {
      var t1 = this._mapsByKey;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._mapsByKey;
      return t1.get$isNotEmpty(t1);
    },
    MergedMapView$1: function(maps, $K, $V) {
      var t1, t2, t3, _i, map, t4, t5;
      for (t1 = maps.length, t2 = this._mapsByKey, t3 = $K._eval$1("@<0>")._bind$1($V)._eval$1("MergedMapView<1*,2*>*"), _i = 0; _i < maps.length; maps.length === t1 || (0, H.throwConcurrentModificationError)(maps), ++_i) {
        map = maps[_i];
        if (t3._is(map))
          for (t4 = map._mapsByKey, t4 = t4.get$values(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
            t5 = t4.get$current(t4);
            B.setAll(t2, t5.get$keys(t5), t5);
          }
        else
          B.setAll(t2, map.get$keys(map), map);
      }
    },
    $index: function(_, key) {
      var child = this._mapsByKey.$index(0, key);
      return child == null ? null : child.$index(0, key);
    },
    $indexSet: function(_, key, value) {
      var child = this._mapsByKey.$index(0, key);
      if (child == null)
        throw H.wrapException(P.UnsupportedError$(string$.New_en));
      child.$indexSet(0, key, value);
    },
    remove$1: function(_, key) {
      throw H.wrapException(P.UnsupportedError$(string$.Entrie));
    },
    containsKey$1: function(key) {
      return this._mapsByKey.containsKey$1(key);
    }
  };
  U.MultiDirWatcher.prototype = {
    watch$1: function(_, directory) {
      var t1, t2, t3, t4, isParentOfExistingDir, _i, existingDir, t5, future, completer;
      for (t1 = this._watchers, t2 = t1.get$keys(t1), t2 = P.List_List$from(t2, true, H._instanceType(t2)._eval$1("Iterable.E")), t3 = t2.length, t4 = this._group, isParentOfExistingDir = false, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        existingDir = t2[_i];
        if (!isParentOfExistingDir) {
          t5 = $.$get$context();
          t5 = t5._isWithinOrEquals$2(existingDir, directory) === C._PathRelation_equal || t5._isWithinOrEquals$2(existingDir, directory) === C._PathRelation_within;
        } else
          t5 = false;
        if (t5) {
          t1 = new P._Future($.Zone__current, type$._Future_void);
          t1._asyncComplete$1(null);
          return t1;
        }
        if ($.$get$context()._isWithinOrEquals$2(directory, existingDir) === C._PathRelation_within) {
          t4.remove$1(0, t1.remove$1(0, existingDir));
          isParentOfExistingDir = true;
        }
      }
      future = B.watchDir(directory, this._poll);
      t2 = new Y._CompleterStream(type$._CompleterStream_legacy_WatchEvent);
      completer = new Y.StreamCompleter(t2, type$.StreamCompleter_legacy_WatchEvent);
      future.then$1$2$onError(0, completer.get$setSourceStream(), completer.get$setError(), type$.void);
      t1.$indexSet(0, directory, t2);
      t4.add$1(0, t2);
      return future;
    }
  };
  N.NoSourceMapBuffer0.prototype = {
    get$length: function(_) {
      return this._no_source_map_buffer0$_buffer._contents.length;
    },
    get$sourceFiles: function() {
      return C.Map_empty;
    },
    forSpan$1$2: function(span, callback) {
      return callback.call$0();
    },
    forSpan$2: function(span, callback) {
      return this.forSpan$1$2(span, callback, type$.dynamic);
    },
    write$1: function(_, object) {
      this._no_source_map_buffer0$_buffer._contents += H.S(object);
      return null;
    },
    writeCharCode$1: function(charCode) {
      this._no_source_map_buffer0$_buffer._contents += H.Primitives_stringFromCharCode(charCode);
      return null;
    },
    toString$0: function(_) {
      var t1 = this._no_source_map_buffer0$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    buildSourceMap$1$prefix: function(prefix) {
      return H.throwExpression(P.UnsupportedError$(string$.NoSour));
    },
    $isStringBuffer: 1
  };
  F.PrefixedMapView.prototype = {
    get$keys: function(_) {
      return new F._PrefixedKeys(this);
    },
    get$length: function(_) {
      var t1 = this._prefixed_map_view$_map;
      return t1.get$length(t1);
    },
    get$isEmpty: function(_) {
      var t1 = this._prefixed_map_view$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._prefixed_map_view$_map;
      return t1.get$isNotEmpty(t1);
    },
    $index: function(_, key) {
      return typeof key == "string" && C.JSString_methods.startsWith$1(key, this._prefix) ? this._prefixed_map_view$_map.$index(0, J.substring$1$s(key, this._prefix.length)) : null;
    },
    containsKey$1: function(key) {
      return typeof key == "string" && C.JSString_methods.startsWith$1(key, this._prefix) && this._prefixed_map_view$_map.containsKey$1(J.substring$1$s(key, this._prefix.length));
    }
  };
  F._PrefixedKeys.prototype = {
    get$length: function(_) {
      var t1 = this._view._prefixed_map_view$_map;
      return t1.get$length(t1);
    },
    get$iterator: function(_) {
      var t1 = this._view._prefixed_map_view$_map;
      t1 = J.map$1$1$ax(t1.get$keys(t1), new F._PrefixedKeys_iterator_closure(this), type$.legacy_String);
      return t1.get$iterator(t1);
    },
    contains$1: function(_, key) {
      return this._view.containsKey$1(key);
    }
  };
  F._PrefixedKeys_iterator_closure.prototype = {
    call$1: function(key) {
      return this.$this._view._prefix + H.S(key);
    },
    $signature: 4
  };
  U.PublicMemberMapView.prototype = {
    get$keys: function(_) {
      var t1 = this._inner;
      return J.where$1$ax(t1.get$keys(t1), B.utils__isPublic$closure());
    },
    containsKey$1: function(key) {
      return typeof key == "string" && B.isPublic(key) && this._inner.containsKey$1(key);
    },
    $index: function(_, key) {
      if (typeof key == "string" && B.isPublic(key))
        return this._inner.$index(0, key);
      return null;
    }
  };
  D.SourceMapBuffer0.prototype = {
    get$sourceFiles: function() {
      var t2, t3,
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_SourceFile);
      for (t2 = this._sourceFiles, t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.$indexSet(0, J.toString$0$(t3.key), t3.value);
      }
      return new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_SourceFile);
    },
    get$_source_map_buffer0$_targetLocation: function() {
      var t1 = this._source_map_buffer0$_buffer._contents,
        t2 = this._source_map_buffer0$_line;
      return V.SourceLocation$(t1.length, this._source_map_buffer0$_column, t2, null);
    },
    get$length: function(_) {
      return this._source_map_buffer0$_buffer._contents.length;
    },
    forSpan$1$2: function(span, callback) {
      var t1, _this = this,
        wasInSpan = _this._source_map_buffer0$_inSpan;
      _this._source_map_buffer0$_inSpan = true;
      _this._addEntry$2(Y.FileLocation$_(span.file, span._file$_start), _this.get$_source_map_buffer0$_targetLocation());
      try {
        t1 = callback.call$0();
        return t1;
      } finally {
        _this._source_map_buffer0$_inSpan = wasInSpan;
      }
    },
    forSpan$2: function(span, callback) {
      return this.forSpan$1$2(span, callback, type$.dynamic);
    },
    _addEntry$2: function(source, target) {
      var entry, t2,
        t1 = this._source_map_buffer0$_entries;
      if (t1.length !== 0) {
        entry = C.JSArray_methods.get$last(t1);
        t2 = entry.source;
        if (t2.file.getLine$1(t2.offset) == source.file.getLine$1(source.offset) && entry.target.line === target.line)
          return;
        if (entry.target.offset === target.offset)
          return;
      }
      this._sourceFiles.putIfAbsent$2(source.file.url, new D.SourceMapBuffer__addEntry_closure(source));
      t1.push(new L.Entry(source, target, null));
    },
    write$1: function(_, object) {
      var t1, i,
        string = J.toString$0$(object);
      this._source_map_buffer0$_buffer._contents += H.S(string);
      for (t1 = string.length, i = 0; i < t1; ++i)
        if (C.JSString_methods._codeUnitAt$1(string, i) === 10)
          this._source_map_buffer0$_writeLine$0();
        else
          ++this._source_map_buffer0$_column;
    },
    writeCharCode$1: function(charCode) {
      this._source_map_buffer0$_buffer._contents += H.Primitives_stringFromCharCode(charCode);
      if (charCode === 10)
        this._source_map_buffer0$_writeLine$0();
      else
        ++this._source_map_buffer0$_column;
    },
    _source_map_buffer0$_writeLine$0: function() {
      var _this = this,
        t1 = _this._source_map_buffer0$_entries;
      if (C.JSArray_methods.get$last(t1).target.line === _this._source_map_buffer0$_line && C.JSArray_methods.get$last(t1).target.column === _this._source_map_buffer0$_column)
        t1.pop();
      ++_this._source_map_buffer0$_line;
      _this._source_map_buffer0$_column = 0;
      if (_this._source_map_buffer0$_inSpan)
        t1.push(new L.Entry(C.JSArray_methods.get$last(t1).source, _this.get$_source_map_buffer0$_targetLocation(), null));
    },
    toString$0: function(_) {
      var t1 = this._source_map_buffer0$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    buildSourceMap$1$prefix: function(prefix) {
      var i, t2, prefixColumn, _box_0 = {},
        t1 = prefix.length;
      if (t1 === 0)
        return T.SingleMapping_SingleMapping$fromEntries(this._source_map_buffer0$_entries);
      _box_0.prefixColumn = _box_0.prefixLines = 0;
      for (i = 0, t2 = 0; i < t1; ++i)
        if (C.JSString_methods._codeUnitAt$1(prefix, i) === 10) {
          ++_box_0.prefixLines;
          _box_0.prefixColumn = 0;
          t2 = 0;
        } else {
          prefixColumn = t2 + 1;
          _box_0.prefixColumn = prefixColumn;
          t2 = prefixColumn;
        }
      t2 = this._source_map_buffer0$_entries;
      return T.SingleMapping_SingleMapping$fromEntries(new H.MappedListIterable(t2, new D.SourceMapBuffer_buildSourceMap_closure(_box_0, t1), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Entry*>")));
    },
    $isStringBuffer: 1
  };
  D.SourceMapBuffer__addEntry_closure.prototype = {
    call$0: function() {
      return this.source.file;
    },
    $signature: 124
  };
  D.SourceMapBuffer_buildSourceMap_closure.prototype = {
    call$1: function(entry) {
      var t1 = entry.source,
        t2 = entry.target,
        t3 = t2.line,
        t4 = this._box_0,
        t5 = t4.prefixLines;
      t4 = t3 === 0 ? t4.prefixColumn : 0;
      return new L.Entry(t1, V.SourceLocation$(t2.offset + this.prefixLength, t2.column + t4, t3 + t5, null), entry.identifierName);
    },
    $signature: 207
  };
  R.UnprefixedMapView.prototype = {
    get$keys: function(_) {
      return new R._UnprefixedKeys(this);
    },
    $index: function(_, key) {
      return typeof key == "string" ? this._unprefixed_map_view$_map.$index(0, J.$add$ansx(this._unprefixed_map_view$_prefix, key)) : null;
    },
    containsKey$1: function(key) {
      return typeof key == "string" && this._unprefixed_map_view$_map.containsKey$1(J.$add$ansx(this._unprefixed_map_view$_prefix, key));
    },
    remove$1: function(_, key) {
      return typeof key == "string" ? this._unprefixed_map_view$_map.remove$1(0, J.$add$ansx(this._unprefixed_map_view$_prefix, key)) : null;
    }
  };
  R._UnprefixedKeys.prototype = {
    get$iterator: function(_) {
      var t1 = this._unprefixed_map_view$_view._unprefixed_map_view$_map;
      t1 = J.where$1$ax(t1.get$keys(t1), new R._UnprefixedKeys_iterator_closure(this)).map$1$1(0, new R._UnprefixedKeys_iterator_closure0(this), type$.legacy_String);
      return t1.get$iterator(t1);
    },
    contains$1: function(_, key) {
      return this._unprefixed_map_view$_view.containsKey$1(key);
    }
  };
  R._UnprefixedKeys_iterator_closure.prototype = {
    call$1: function(key) {
      return J.startsWith$1$s(key, this.$this._unprefixed_map_view$_view._unprefixed_map_view$_prefix);
    },
    $signature: 6
  };
  R._UnprefixedKeys_iterator_closure0.prototype = {
    call$1: function(key) {
      return J.substring$1$s(key, this.$this._unprefixed_map_view$_view._unprefixed_map_view$_prefix.length);
    },
    $signature: 4
  };
  B.indent_closure.prototype = {
    call$1: function(line) {
      return C.JSString_methods.$add(C.JSString_methods.$mul(" ", this.indentation), line);
    },
    $signature: 4
  };
  B.flattenVertically_closure.prototype = {
    call$1: function(inner) {
      return Q.QueueList_QueueList$from(inner, this.T._eval$1("0*"));
    },
    $signature: function() {
      return this.T._eval$1("QueueList<0*>*(Iterable<0*>*)");
    }
  };
  B.flattenVertically_closure0.prototype = {
    call$1: function(queue) {
      this.result.push(queue.removeFirst$0());
      return queue.get$length(queue) === 0;
    },
    $signature: function() {
      return this.T._eval$1("bool*(QueueList<0*>*)");
    }
  };
  B.longestCommonSubsequence_closure.prototype = {
    call$2: function(element1, element2) {
      return J.$eq$(element1, element2) ? element1 : null;
    },
    $signature: function() {
      return this.T._eval$1("0*(0*,0*)");
    }
  };
  B.longestCommonSubsequence_closure0.prototype = {
    call$1: function(_) {
      return P.List_List$filled(J.get$length$asx(this.list2) + 1, 0, false, type$.legacy_int);
    },
    $signature: 208
  };
  B.longestCommonSubsequence_closure1.prototype = {
    call$1: function(_) {
      var t1 = new Array(J.get$length$asx(this.list2));
      t1.fixed$length = Array;
      return H.setRuntimeTypeInfo(t1, this.T._eval$1("JSArray<0*>"));
    },
    $signature: function() {
      return this.T._eval$1("List<0*>*(int*)");
    }
  };
  B.longestCommonSubsequence_backtrack.prototype = {
    call$2: function(i, j) {
      var selection, t1, _this = this;
      if (i === -1 || j === -1)
        return H.setRuntimeTypeInfo([], _this.T._eval$1("JSArray<0*>"));
      selection = J.$index$asx(_this.selections[i], j);
      if (selection != null) {
        t1 = _this.call$2(i - 1, j - 1);
        J.add$1$ax(t1, selection);
        return t1;
      }
      t1 = _this.lengths;
      return J.$index$asx(t1[i + 1], j) > J.$index$asx(t1[i], j + 1) ? _this.call$2(i, j - 1) : _this.call$2(i - 1, j);
    },
    $signature: function() {
      return this.T._eval$1("List<0*>*(int*,int*)");
    }
  };
  B.mapAddAll2_closure.prototype = {
    call$2: function(key, inner) {
      var t1 = this.destination;
      if (t1.containsKey$1(key))
        t1.$index(0, key).addAll$1(0, inner);
      else
        t1.$indexSet(0, key, inner);
    },
    $signature: function() {
      return this.K1._eval$1("@<0>")._bind$1(this.K2)._bind$1(this.V)._eval$1("Null(1*,Map<2*,3*>*)");
    }
  };
  F.Value.prototype = {
    get$isTruthy: function() {
      return true;
    },
    get$separator: function() {
      return C.ListSeparator_undecided;
    },
    get$hasBrackets: function() {
      return false;
    },
    get$asList: function() {
      return H.setRuntimeTypeInfo([this], type$.JSArray_legacy_Value);
    },
    get$lengthAsList: function() {
      return 1;
    },
    get$isBlank: function() {
      return false;
    },
    get$isSpecialNumber: function() {
      return false;
    },
    get$isVar: function() {
      return false;
    },
    get$realNull: function() {
      return this;
    },
    sassIndexToListIndex$2: function(sassIndex, $name) {
      var _this = this,
        index = sassIndex.assertNumber$1($name).assertInt$1($name);
      if (index === 0)
        throw H.wrapException(_this._value$_exception$2("List index may not be 0.", $name));
      if (Math.abs(index) > _this.get$lengthAsList())
        throw H.wrapException(_this._value$_exception$2("Invalid index " + sassIndex.toString$0(0) + " for a list with " + _this.get$lengthAsList() + " elements.", $name));
      return index < 0 ? _this.get$lengthAsList() + index : index - 1;
    },
    assertColor$1: function($name) {
      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a color.", $name));
    },
    assertFunction$1: function($name) {
      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a function reference.", $name));
    },
    assertMap$1: function($name) {
      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a map.", $name));
    },
    tryMap$0: function() {
      return null;
    },
    assertNumber$1: function($name) {
      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a number.", $name));
    },
    assertNumber$0: function() {
      return this.assertNumber$1(null);
    },
    assertString$1: function($name) {
      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a string.", $name));
    },
    assertSelector$2$allowParent$name: function(allowParent, $name) {
      var error, t1, exception,
        string = this._selectorString$1($name);
      try {
        t1 = D.SelectorList_SelectorList$parse(string, allowParent, true, null);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException) {
          error = t1;
          throw H.wrapException(this._value$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), "Error: ", ""), $name));
        } else
          throw exception;
      }
    },
    assertSelector$1$name: function($name) {
      return this.assertSelector$2$allowParent$name(false, $name);
    },
    assertSelector$0: function() {
      return this.assertSelector$2$allowParent$name(false, null);
    },
    assertSelector$1$allowParent: function(allowParent) {
      return this.assertSelector$2$allowParent$name(allowParent, null);
    },
    assertCompoundSelector$1$name: function($name) {
      var error, t1, exception,
        allowParent = false,
        string = this._selectorString$1($name);
      try {
        t1 = T.SelectorParser$(string, allowParent, true, null, null).parseCompoundSelector$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException) {
          error = t1;
          throw H.wrapException(this._value$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), "Error: ", ""), $name));
        } else
          throw exception;
      }
    },
    _selectorString$1: function($name) {
      var string = this._selectorStringOrNull$0();
      if (string != null)
        return string;
      throw H.wrapException(this._value$_exception$2(this.toString$0(0) + string$.x20is_no, $name));
    },
    _selectorString$0: function() {
      return this._selectorString$1(null);
    },
    _selectorStringOrNull$0: function() {
      var t1, t2, result, t3, _i, complex, string, compound, _this = this, _null = null;
      if (_this instanceof D.SassString)
        return _this.text;
      if (!(_this instanceof D.SassList))
        return _null;
      t1 = _this._list$_contents;
      t2 = t1.length;
      if (t2 === 0)
        return _null;
      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      t3 = _this.separator === C.ListSeparator_comma;
      if (t3)
        for (_i = 0; _i < t2; ++_i) {
          complex = t1[_i];
          if (complex instanceof D.SassString)
            result.push(complex.text);
          else if (complex instanceof D.SassList && complex.separator === C.ListSeparator_space) {
            string = complex._selectorString$0();
            result.push(string);
          } else
            return _null;
        }
      else
        for (_i = 0; _i < t2; ++_i) {
          compound = t1[_i];
          if (compound instanceof D.SassString)
            result.push(compound.text);
          else
            return _null;
        }
      return C.JSArray_methods.join$1(result, t3 ? ", " : " ");
    },
    changeListContents$2$separator: function(contents, separator) {
      var t1 = separator == null ? this.get$separator() : separator,
        t2 = this.get$hasBrackets();
      return D.SassList$(contents, t1, t2);
    },
    changeListContents$1: function(contents) {
      return this.changeListContents$2$separator(contents, null);
    },
    greaterThan$1: function(other) {
      return H.throwExpression(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " > " + H.S(other) + '".'));
    },
    greaterThanOrEquals$1: function(other) {
      return H.throwExpression(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " >= " + H.S(other) + '".'));
    },
    lessThan$1: function(other) {
      return H.throwExpression(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " < " + H.S(other) + '".'));
    },
    lessThanOrEquals$1: function(other) {
      return H.throwExpression(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " <= " + H.S(other) + '".'));
    },
    times$1: function(other) {
      return H.throwExpression(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " * " + H.S(other) + '".'));
    },
    modulo$1: function(other) {
      return H.throwExpression(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " % " + H.S(other) + '".'));
    },
    plus$1: function(other) {
      var t1;
      if (other instanceof D.SassString)
        return new D.SassString(C.JSString_methods.$add(N.serializeValue0(this, false, true), other.text), other.hasQuotes);
      else {
        t1 = N.serializeValue0(this, false, true);
        other.toString;
        return new D.SassString(t1 + N.serializeValue0(other, false, true), false);
      }
    },
    minus$1: function(other) {
      var t1 = N.serializeValue0(this, false, true) + "-";
      other.toString;
      return new D.SassString(t1 + N.serializeValue0(other, false, true), false);
    },
    dividedBy$1: function(other) {
      var t1 = N.serializeValue0(this, false, true) + "/";
      other.toString;
      return new D.SassString(t1 + N.serializeValue0(other, false, true), false);
    },
    unaryPlus$0: function() {
      return new D.SassString("+" + N.serializeValue0(this, false, true), false);
    },
    unaryMinus$0: function() {
      return new D.SassString("-" + N.serializeValue0(this, false, true), false);
    },
    unaryNot$0: function() {
      return C.SassBoolean_false0;
    },
    withoutSlash$0: function() {
      return this;
    },
    toString$0: function(_) {
      return N.serializeValue0(this, true, true);
    },
    _value$_exception$2: function(message, $name) {
      return new E.SassScriptException($name == null ? message : "$" + $name + ": " + message);
    }
  };
  D.SassArgumentList.prototype = {};
  Z.SassBoolean.prototype = {
    get$isTruthy: function() {
      return this.value;
    },
    accept$1$1: function(visitor) {
      return visitor._serialize$_buffer.write$1(0, String(this.value));
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unaryNot$0: function() {
      return this.value ? C.SassBoolean_false0 : C.SassBoolean_true0;
    }
  };
  K.SassColor.prototype = {
    get$red: function() {
      if (this._red == null)
        this._hslToRgb$0();
      return this._red;
    },
    get$green: function() {
      if (this._green == null)
        this._hslToRgb$0();
      return this._green;
    },
    get$blue: function() {
      if (this._blue == null)
        this._hslToRgb$0();
      return this._blue;
    },
    get$hue: function() {
      if (this._hue == null)
        this._rgbToHsl$0();
      return this._hue;
    },
    get$saturation: function() {
      if (this._saturation == null)
        this._rgbToHsl$0();
      return this._saturation;
    },
    get$lightness: function() {
      if (this._lightness == null)
        this._rgbToHsl$0();
      return this._lightness;
    },
    get$whiteness: function() {
      var t1 = this.get$red(),
        t2 = this.get$green();
      return Math.min(Math.min(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;
    },
    get$blackness: function() {
      var t1 = this.get$red(),
        t2 = this.get$green();
      return 100 - Math.max(Math.max(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;
    },
    get$original: function() {
      var t1 = this.originalSpan;
      return t1 == null ? null : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null);
    },
    accept$1$1: function(visitor) {
      return visitor.visitColor$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertColor$1: function($name) {
      return this;
    },
    changeRgb$4$alpha$blue$green$red: function(alpha, blue, green, red) {
      return K.SassColor$rgb(red, green, blue, alpha == null ? this.alpha : alpha, null);
    },
    changeRgb$3$blue$green$red: function(blue, green, red) {
      return this.changeRgb$4$alpha$blue$green$red(null, blue, green, red);
    },
    changeHsl$4$alpha$hue$lightness$saturation: function(alpha, hue, lightness, saturation) {
      var _this = this,
        t1 = hue == null ? _this.get$hue() : hue,
        t2 = saturation == null ? _this.get$saturation() : saturation,
        t3 = lightness == null ? _this.get$lightness() : lightness;
      return K.SassColor$hsl(t1, t2, t3, alpha == null ? _this.alpha : alpha);
    },
    changeHsl$1$saturation: function(saturation) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, null, saturation);
    },
    changeHsl$1$lightness: function(lightness) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, lightness, null);
    },
    changeHsl$1$hue: function(hue) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, hue, null, null);
    },
    changeAlpha$1: function(alpha) {
      var _this = this;
      return new K.SassColor(_this._red, _this._green, _this._blue, _this._hue, _this._saturation, _this._lightness, T.fuzzyAssertRange(alpha, 0, 1, "alpha"), null);
    },
    plus$1: function(other) {
      if (!(other instanceof T.SassNumber) && !(other instanceof K.SassColor))
        return this.super$Value$plus(other);
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " + " + H.S(other) + '".'));
    },
    minus$1: function(other) {
      if (!(other instanceof T.SassNumber) && !(other instanceof K.SassColor))
        return this.super$Value$minus(other);
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " - " + H.S(other) + '".'));
    },
    dividedBy$1: function(other) {
      if (!(other instanceof T.SassNumber) && !(other instanceof K.SassColor))
        return this.super$Value$dividedBy(other);
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " / " + H.S(other) + '".'));
    },
    modulo$1: function(other) {
      return H.throwExpression(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " % " + H.S(other) + '".'));
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof K.SassColor && other.get$red() == _this.get$red() && other.get$green() == _this.get$green() && other.get$blue() == _this.get$blue() && other.alpha === _this.alpha;
    },
    get$hashCode: function(_) {
      var _this = this;
      return J.get$hashCode$(_this.get$red()) ^ J.get$hashCode$(_this.get$green()) ^ J.get$hashCode$(_this.get$blue()) ^ C.JSNumber_methods.get$hashCode(_this.alpha);
    },
    _rgbToHsl$0: function() {
      var t2, t3, _this = this,
        scaledRed = _this.get$red() / 255,
        scaledGreen = _this.get$green() / 255,
        scaledBlue = _this.get$blue() / 255,
        max = Math.max(Math.max(scaledRed, scaledGreen), scaledBlue),
        min = Math.min(Math.min(scaledRed, scaledGreen), scaledBlue),
        delta = max - min,
        t1 = max === min;
      if (t1)
        _this._hue = 0;
      else if (max === scaledRed)
        _this._hue = C.JSDouble_methods.$mod(60 * (scaledGreen - scaledBlue) / delta, 360);
      else if (max === scaledGreen)
        _this._hue = C.JSNumber_methods.$mod(120 + 60 * (scaledBlue - scaledRed) / delta, 360);
      else if (max === scaledBlue)
        _this._hue = C.JSNumber_methods.$mod(240 + 60 * (scaledRed - scaledGreen) / delta, 360);
      t2 = max + min;
      t3 = 50 * t2;
      _this._lightness = t3;
      if (t1)
        _this._saturation = 0;
      else {
        t1 = 100 * delta;
        if (t3 < 50)
          _this._saturation = t1 / t2;
        else
          _this._saturation = t1 / (2 - max - min);
      }
    },
    _hslToRgb$0: function() {
      var _this = this,
        scaledHue = _this.get$hue() / 360,
        scaledSaturation = _this.get$saturation() / 100,
        scaledLightness = _this.get$lightness() / 100,
        m2 = scaledLightness <= 0.5 ? scaledLightness * (scaledSaturation + 1) : scaledLightness + scaledSaturation - scaledLightness * scaledSaturation,
        m1 = scaledLightness * 2 - m2;
      _this._red = T.fuzzyRound(K.SassColor__hueToRgb(m1, m2, scaledHue + 0.3333333333333333) * 255);
      _this._green = T.fuzzyRound(K.SassColor__hueToRgb(m1, m2, scaledHue) * 255);
      _this._blue = T.fuzzyRound(K.SassColor__hueToRgb(m1, m2, scaledHue - 0.3333333333333333) * 255);
    }
  };
  K.SassColor_SassColor$hwb_toRgb.prototype = {
    call$1: function(hue) {
      return T.fuzzyRound((K.SassColor__hueToRgb(0, 1, hue) * this.factor + this._box_0.scaledWhiteness) * 255);
    },
    $signature: 39
  };
  F.SassFunction.prototype = {
    accept$1$1: function(visitor) {
      var t1, t2;
      if (!visitor._serialize$_inspect)
        H.throwExpression(E.SassScriptException$(this.toString$0(0) + " isn't a valid CSS value."));
      t1 = visitor._serialize$_buffer;
      t1.write$1(0, "get-function(");
      t2 = this.callable;
      visitor._visitQuotedString$1(t2.get$name(t2));
      t1.writeCharCode$1(41);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertFunction$1: function($name) {
      return this;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof F.SassFunction && J.$eq$(this.callable, other.callable);
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.callable);
    }
  };
  D.SassList.prototype = {
    get$isBlank: function() {
      return C.JSArray_methods.every$1(this._list$_contents, new D.SassList_isBlank_closure());
    },
    get$asList: function() {
      return this._list$_contents;
    },
    get$lengthAsList: function() {
      return this._list$_contents.length;
    },
    SassList$3$brackets: function(contents, separator, brackets) {
      if (this.separator === C.ListSeparator_undecided && this._list$_contents.length > 1)
        throw H.wrapException(P.ArgumentError$(string$.A_list));
    },
    accept$1$1: function(visitor) {
      return visitor.visitList$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertMap$1: function($name) {
      return this._list$_contents.length === 0 ? C.SassMap_Map_empty : this.super$Value$assertMap($name);
    },
    tryMap$0: function() {
      return this._list$_contents.length === 0 ? C.SassMap_Map_empty : null;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (!(other instanceof D.SassList && other.separator === _this.separator && other.hasBrackets === _this.hasBrackets && C.C_ListEquality.equals$2(0, other._list$_contents, _this._list$_contents)))
        t1 = _this._list$_contents.length === 0 && other instanceof A.SassMap && other.get$asList().length === 0;
      else
        t1 = true;
      return t1;
    },
    get$hashCode: function(_) {
      return C.C_ListEquality.hash$1(this._list$_contents);
    },
    get$separator: function() {
      return this.separator;
    },
    get$hasBrackets: function() {
      return this.hasBrackets;
    }
  };
  D.SassList_isBlank_closure.prototype = {
    call$1: function(element) {
      return element.get$isBlank();
    },
    $signature: 53
  };
  D.ListSeparator.prototype = {
    toString$0: function(_) {
      return this._list$_name;
    }
  };
  A.SassMap.prototype = {
    get$separator: function() {
      var t1 = this.contents;
      return t1.get$isEmpty(t1) ? C.ListSeparator_undecided : C.ListSeparator_comma;
    },
    get$asList: function() {
      var result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      this.contents.forEach$1(0, new A.SassMap_asList_closure(result));
      return result;
    },
    get$lengthAsList: function() {
      var t1 = this.contents;
      return t1.get$length(t1);
    },
    accept$1$1: function(visitor) {
      return visitor.visitMap$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertMap$1: function($name) {
      return this;
    },
    tryMap$0: function() {
      return this;
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (!(other instanceof A.SassMap && C.C_MapEquality.equals$2(0, other.contents, this.contents))) {
        t1 = this.contents;
        t1 = t1.get$isEmpty(t1) && other instanceof D.SassList && other._list$_contents.length === 0;
      } else
        t1 = true;
      return t1;
    },
    get$hashCode: function(_) {
      var t1 = this.contents;
      return t1.get$isEmpty(t1) ? C.C_ListEquality.hash$1(C.List_empty5) : C.C_MapEquality.hash$1(t1);
    }
  };
  A.SassMap_asList_closure.prototype = {
    call$2: function(key, value) {
      this.result.push(D.SassList$(H.setRuntimeTypeInfo([key, value], type$.JSArray_legacy_Value), C.ListSeparator_space, false));
    },
    $signature: 46
  };
  O.SassNull.prototype = {
    get$isTruthy: function() {
      return false;
    },
    get$isBlank: function() {
      return true;
    },
    get$realNull: function() {
      return null;
    },
    accept$1$1: function(visitor) {
      if (visitor._serialize$_inspect)
        visitor._serialize$_buffer.write$1(0, "null");
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unaryNot$0: function() {
      return C.SassBoolean_true0;
    }
  };
  T.SassNumber.prototype = {
    get$unitString: function() {
      var _this = this;
      return _this.get$hasUnits() ? _this._unitString$2(_this.get$numeratorUnits(), _this.get$denominatorUnits()) : "";
    },
    accept$1$1: function(visitor) {
      return visitor.visitNumber$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    withoutSlash$0: function() {
      var _this = this;
      return _this.asSlash == null ? _this : _this.withValue$1(_this.value);
    },
    assertNumber$1: function($name) {
      return this;
    },
    assertNumber$0: function() {
      return this.assertNumber$1(null);
    },
    assertInt$1: function($name) {
      var t1 = this.value,
        integer = T.fuzzyIsInt(t1) ? J.round$0$n(t1) : null;
      if (integer != null)
        return integer;
      throw H.wrapException(this._number$_exception$2(this.toString$0(0) + " is not an int.", $name));
    },
    assertInt$0: function() {
      return this.assertInt$1(null);
    },
    valueInRange$3: function(min, max, $name) {
      var _this = this,
        result = T.fuzzyCheckRange(_this.value, min, max);
      if (result != null)
        return result;
      throw H.wrapException(_this._number$_exception$2("Expected " + _this.toString$0(0) + " to be within " + min + _this.get$unitString() + " and " + max + _this.get$unitString() + ".", $name));
    },
    assertUnit$2: function(unit, $name) {
      if (this.hasUnit$1(unit))
        return;
      throw H.wrapException(this._number$_exception$2("Expected " + this.toString$0(0) + ' to have unit "' + unit + '".', $name));
    },
    assertNoUnits$1: function($name) {
      if (!this.get$hasUnits())
        return;
      throw H.wrapException(this._number$_exception$2("Expected " + this.toString$0(0) + " to have no units.", $name));
    },
    coerceValueToMatch$1: function(other) {
      return this._coerceOrConvertValue$6$coerceUnitless$name$other$otherName(other.get$numeratorUnits(), other.get$denominatorUnits(), true, null, other, null);
    },
    convertValueToMatch$3: function(other, $name, otherName) {
      return this._coerceOrConvertValue$6$coerceUnitless$name$other$otherName(other.get$numeratorUnits(), other.get$denominatorUnits(), false, $name, other, otherName);
    },
    coerce$3: function(newNumerators, newDenominators, $name) {
      return T.SassNumber_SassNumber$withUnits(this.coerceValue$3(newNumerators, newDenominators, $name), newDenominators, newNumerators);
    },
    coerce$2: function(newNumerators, newDenominators) {
      return this.coerce$3(newNumerators, newDenominators, null);
    },
    coerceValue$3: function(newNumerators, newDenominators, $name) {
      return this._coerceOrConvertValue$4$coerceUnitless$name(newNumerators, newDenominators, true, $name);
    },
    coerceValueToUnit$2: function(unit, $name) {
      var t1 = type$.JSArray_legacy_String;
      return this.coerceValue$3(H.setRuntimeTypeInfo([unit], t1), H.setRuntimeTypeInfo([], t1), $name);
    },
    _coerceOrConvertValue$6$coerceUnitless$name$other$otherName: function(newNumerators, newDenominators, coerceUnitless, $name, other, otherName) {
      var t1, otherHasUnits, t2, _compatibilityException, oldNumerators, oldDenominators, _i, _this = this, _box_0 = {};
      if (C.C_ListEquality.equals$2(0, _this.get$numeratorUnits(), newNumerators) && C.C_ListEquality.equals$2(0, _this.get$denominatorUnits(), newDenominators))
        return _this.value;
      t1 = J.getInterceptor$asx(newNumerators);
      otherHasUnits = t1.get$isNotEmpty(newNumerators) || newDenominators.length !== 0;
      if (coerceUnitless)
        t2 = !_this.get$hasUnits() || !otherHasUnits;
      else
        t2 = false;
      if (t2)
        return _this.value;
      _compatibilityException = new T.SassNumber__coerceOrConvertValue__compatibilityException(_this, other, otherName, otherHasUnits, $name, newNumerators, newDenominators);
      _box_0.value = _this.value;
      oldNumerators = J.toList$0$ax(_this.get$numeratorUnits());
      for (t1 = t1.get$iterator(newNumerators); t1.moveNext$0();)
        B.removeFirstWhere(oldNumerators, new T.SassNumber__coerceOrConvertValue_closure(_box_0, _this, t1.get$current(t1)), new T.SassNumber__coerceOrConvertValue_closure0(_compatibilityException));
      t1 = _this.get$denominatorUnits();
      oldDenominators = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      for (t1 = newDenominators.length, _i = 0; _i < newDenominators.length; newDenominators.length === t1 || (0, H.throwConcurrentModificationError)(newDenominators), ++_i)
        B.removeFirstWhere(oldDenominators, new T.SassNumber__coerceOrConvertValue_closure1(_box_0, _this, newDenominators[_i]), new T.SassNumber__coerceOrConvertValue_closure2(_compatibilityException));
      if (oldNumerators.length !== 0 || oldDenominators.length !== 0)
        throw H.wrapException(_compatibilityException.call$0());
      return _box_0.value;
    },
    _coerceOrConvertValue$4$coerceUnitless$name: function(newNumerators, newDenominators, coerceUnitless, $name) {
      return this._coerceOrConvertValue$6$coerceUnitless$name$other$otherName(newNumerators, newDenominators, coerceUnitless, $name, null, null);
    },
    isComparableTo$1: function(other) {
      var exception;
      if (!this.get$hasUnits() || !other.get$hasUnits())
        return true;
      try {
        this.greaterThan$1(other);
        return true;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof E.SassScriptException)
          return false;
        else
          throw exception;
      }
    },
    greaterThan$1: function(other) {
      if (other instanceof T.SassNumber)
        return this._coerceUnits$2(other, T.number0__fuzzyGreaterThan$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " > " + H.S(other) + '".'));
    },
    greaterThanOrEquals$1: function(other) {
      if (other instanceof T.SassNumber)
        return this._coerceUnits$2(other, T.number0__fuzzyGreaterThanOrEquals$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " >= " + H.S(other) + '".'));
    },
    lessThan$1: function(other) {
      if (other instanceof T.SassNumber)
        return this._coerceUnits$2(other, T.number0__fuzzyLessThan$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " < " + H.S(other) + '".'));
    },
    lessThanOrEquals$1: function(other) {
      if (other instanceof T.SassNumber)
        return this._coerceUnits$2(other, T.number0__fuzzyLessThanOrEquals$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + this.toString$0(0) + " <= " + H.S(other) + '".'));
    },
    modulo$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber)
        return _this.withValue$1(_this._coerceUnits$2(other, _this.get$moduloLikeSass()));
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " % " + H.S(other) + '".'));
    },
    moduloLikeSass$2: function(num1, num2) {
      var t1;
      if (num2 > 0)
        return C.JSNumber_methods.$mod(num1, num2);
      if (num2 === 0)
        return 0 / 0;
      t1 = C.JSNumber_methods.$mod(num1, num2);
      return t1 === 0 ? 0 : t1 + num2;
    },
    plus$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber)
        return _this.withValue$1(_this._coerceUnits$2(other, new T.SassNumber_plus_closure()));
      if (!(other instanceof K.SassColor))
        return _this.super$Value$plus(other);
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " + " + other.toString$0(0) + '".'));
    },
    minus$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber)
        return _this.withValue$1(_this._coerceUnits$2(other, new T.SassNumber_minus_closure()));
      if (!(other instanceof K.SassColor))
        return _this.super$Value$minus(other);
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " - " + other.toString$0(0) + '".'));
    },
    times$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber) {
        if (!other.get$hasUnits())
          return _this.withValue$1(_this.value * other.value);
        return _this.multiplyUnits$3(_this.value * other.value, other.get$numeratorUnits(), other.get$denominatorUnits());
      }
      throw H.wrapException(E.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " * " + H.S(other) + '".'));
    },
    dividedBy$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber) {
        if (!other.get$hasUnits())
          return _this.withValue$1(_this.value / other.value);
        return _this.multiplyUnits$3(_this.value / other.value, other.get$denominatorUnits(), other.get$numeratorUnits());
      }
      return _this.super$Value$dividedBy(other);
    },
    unaryPlus$0: function() {
      return this;
    },
    _coerceUnits$1$2: function(other, operation) {
      var t1, exception;
      try {
        t1 = operation.call$2(this.value, other.coerceValueToMatch$1(this));
        return t1;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof E.SassScriptException) {
          this.coerceValueToMatch$1(other);
          throw exception;
        } else
          throw exception;
      }
    },
    _coerceUnits$2: function(other, operation) {
      return this._coerceUnits$1$2(other, operation, type$.dynamic);
    },
    multiplyUnits$3: function(value, otherNumerators, otherDenominators) {
      var newNumerators, mutableOtherDenominators, t1, t2, mutableDenominatorUnits, _this = this, _box_0 = {};
      _box_0.value = value;
      if (J.get$isEmpty$asx(_this.get$numeratorUnits())) {
        if (J.get$isEmpty$asx(otherDenominators) && !_this._areAnyConvertible$2(_this.get$denominatorUnits(), otherNumerators))
          return T.SassNumber_SassNumber$withUnits(value, _this.get$denominatorUnits(), otherNumerators);
        else if (_this.get$denominatorUnits().length === 0)
          return T.SassNumber_SassNumber$withUnits(value, otherDenominators, otherNumerators);
      } else if (J.get$isEmpty$asx(otherNumerators))
        if (J.get$isEmpty$asx(otherDenominators))
          return T.SassNumber_SassNumber$withUnits(value, otherDenominators, _this.get$numeratorUnits());
        else if (_this.get$denominatorUnits().length === 0 && !_this._areAnyConvertible$2(_this.get$numeratorUnits(), otherDenominators))
          return T.SassNumber_SassNumber$withUnits(value, otherDenominators, _this.get$numeratorUnits());
      newNumerators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      mutableOtherDenominators = J.toList$0$ax(otherDenominators);
      for (t1 = J.get$iterator$ax(_this.get$numeratorUnits()); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        B.removeFirstWhere(mutableOtherDenominators, new T.SassNumber_multiplyUnits_closure(_box_0, _this, t2), new T.SassNumber_multiplyUnits_closure0(newNumerators, t2));
      }
      t1 = _this.get$denominatorUnits();
      mutableDenominatorUnits = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      for (t1 = J.get$iterator$ax(otherNumerators); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        B.removeFirstWhere(mutableDenominatorUnits, new T.SassNumber_multiplyUnits_closure1(_box_0, _this, t2), new T.SassNumber_multiplyUnits_closure2(newNumerators, t2));
      }
      t1 = _box_0.value;
      C.JSArray_methods.addAll$1(mutableDenominatorUnits, mutableOtherDenominators);
      return T.SassNumber_SassNumber$withUnits(t1, mutableDenominatorUnits, newNumerators);
    },
    _areAnyConvertible$2: function(units1, units2) {
      return J.any$1$ax(units1, new T.SassNumber__areAnyConvertible_closure(this, units2));
    },
    conversionFactor$2: function(unit1, unit2) {
      var innerMap;
      if (unit1 == unit2)
        return 1;
      innerMap = C.Map_K2BWj.$index(0, unit1);
      if (innerMap == null)
        return null;
      return innerMap.$index(0, unit2);
    },
    _unitString$2: function(numerators, denominators) {
      var t1 = J.getInterceptor$asx(numerators);
      if (t1.get$isEmpty(numerators)) {
        t1 = denominators.length;
        if (t1 === 0)
          return "no units";
        if (t1 === 1)
          return J.$add$ansx(C.JSArray_methods.get$single(denominators), "^-1");
        return "(" + C.JSArray_methods.join$1(denominators, "*") + ")^-1";
      }
      if (denominators.length === 0)
        return t1.join$1(numerators, "*");
      return t1.join$1(numerators, "*") + "/" + C.JSArray_methods.join$1(denominators, "*");
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (other instanceof T.SassNumber) {
        if (J.get$length$asx(_this.get$numeratorUnits()) !== J.get$length$asx(other.get$numeratorUnits()) || _this.get$denominatorUnits().length !== other.get$denominatorUnits().length)
          return false;
        if (!_this.get$hasUnits())
          return Math.abs(_this.value - other.value) < $.$get$epsilon();
        if (!C.C_ListEquality.equals$2(0, _this._canonicalizeUnitList$1(_this.get$numeratorUnits()), _this._canonicalizeUnitList$1(other.get$numeratorUnits())) || !C.C_ListEquality.equals$2(0, _this._canonicalizeUnitList$1(_this.get$denominatorUnits()), _this._canonicalizeUnitList$1(other.get$denominatorUnits())))
          return false;
        return Math.abs(_this.value * _this._canonicalMultiplier$1(_this.get$numeratorUnits()) / _this._canonicalMultiplier$1(_this.get$denominatorUnits()) - other.value * _this._canonicalMultiplier$1(other.get$numeratorUnits()) / _this._canonicalMultiplier$1(other.get$denominatorUnits())) < $.$get$epsilon();
      } else
        return false;
    },
    get$hashCode: function(_) {
      var _this = this;
      return T.fuzzyHashCode(_this.value * _this._canonicalMultiplier$1(_this.get$numeratorUnits()) / _this._canonicalMultiplier$1(_this.get$denominatorUnits()));
    },
    _canonicalizeUnitList$1: function(units) {
      var type,
        t1 = J.getInterceptor$asx(units);
      if (t1.get$isEmpty(units))
        return units;
      if (t1.get$length(units) === 1) {
        type = $.$get$_typesByUnit().$index(0, t1.get$first(units));
        if (type == null)
          t1 = units;
        else {
          t1 = C.Map_U8AHF.$index(0, type);
          t1 = H.setRuntimeTypeInfo([(t1 && C.JSArray_methods).get$first(t1)], type$.JSArray_legacy_String);
        }
        return t1;
      }
      t1 = t1.map$1$1(units, new T.SassNumber__canonicalizeUnitList_closure(), type$.legacy_String);
      t1 = P.List_List$from(t1, true, t1.$ti._eval$1("ListIterable.E"));
      C.JSArray_methods.sort$0(t1);
      return t1;
    },
    _canonicalMultiplier$1: function(units) {
      return J.fold$2$ax(units, 1, new T.SassNumber__canonicalMultiplier_closure(this));
    },
    canonicalMultiplierForUnit$1: function(unit) {
      var t1,
        innerMap = C.Map_K2BWj.$index(0, unit);
      if (innerMap == null)
        t1 = 1;
      else {
        t1 = innerMap.get$values(innerMap);
        t1 = 1 / t1.get$first(t1);
      }
      return t1;
    },
    _number$_exception$2: function(message, $name) {
      return new E.SassScriptException($name == null ? message : "$" + $name + ": " + message);
    }
  };
  T.SassNumber__coerceOrConvertValue__compatibilityException.prototype = {
    call$0: function() {
      var t2, t3, message, t4, type, unit, _this = this,
        t1 = _this.other;
      if (t1 != null) {
        t2 = _this.$this;
        t3 = t2.toString$0(0) + " and";
        message = new P.StringBuffer(t3);
        t4 = _this.otherName;
        if (t4 != null)
          t3 = message._contents = t3 + (" $" + t4 + ":");
        t1 = t3 + (" " + t1.toString$0(0) + " have incompatible units");
        message._contents = t1;
        if (!t2.get$hasUnits() || !_this.otherHasUnits)
          message._contents = t1 + " (one has units and the other doesn't)";
        t1 = message.toString$0(0) + ".";
        t2 = _this.name;
        return new E.SassScriptException(t2 == null ? t1 : "$" + t2 + ": " + t1);
      } else if (!_this.otherHasUnits) {
        t1 = "Expected " + _this.$this.toString$0(0) + " to have no units.";
        t2 = _this.name;
        return new E.SassScriptException(t2 == null ? t1 : "$" + t2 + ": " + t1);
      } else {
        t1 = _this.newNumerators;
        t2 = J.getInterceptor$asx(t1);
        if (t2.get$length(t1) === 1 && _this.newDenominators.length === 0) {
          type = $.$get$_typesByUnit().$index(0, t2.get$first(t1));
          if (type != null) {
            t1 = "Expected " + _this.$this.toString$0(0) + " to have ";
            t1 = t1 + (C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([97, 101, 105, 111, 117], type$.JSArray_legacy_int), C.JSString_methods._codeUnitAt$1(type, 0)) ? "an " + type : "a " + type) + " unit (";
            t2 = C.Map_U8AHF.$index(0, type);
            t2 = t1 + (t2 && C.JSArray_methods).join$1(t2, ", ") + ").";
            t1 = _this.name;
            return new E.SassScriptException(t1 == null ? t2 : "$" + t1 + ": " + t2);
          }
        }
        t3 = _this.newDenominators;
        unit = B.pluralize("unit", t2.get$length(t1) + t3.length, null);
        t2 = _this.$this;
        t3 = "Expected " + t2.toString$0(0) + " to have " + unit + " " + t2._unitString$2(t1, t3) + ".";
        t1 = _this.name;
        return new E.SassScriptException(t1 == null ? t3 : "$" + t1 + ": " + t3);
      }
    },
    $signature: 219
  };
  T.SassNumber__coerceOrConvertValue_closure.prototype = {
    call$1: function(oldNumerator) {
      var t1,
        factor = this.$this.conversionFactor$2(this.newNumerator, oldNumerator);
      if (factor == null)
        return false;
      t1 = this._box_0;
      t1.value = t1.value * factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber__coerceOrConvertValue_closure0.prototype = {
    call$0: function() {
      return H.throwExpression(this._compatibilityException.call$0());
    },
    $signature: 0
  };
  T.SassNumber__coerceOrConvertValue_closure1.prototype = {
    call$1: function(oldDenominator) {
      var t1,
        factor = this.$this.conversionFactor$2(this.newDenominator, oldDenominator);
      if (factor == null)
        return false;
      t1 = this._box_0;
      t1.value = t1.value / factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber__coerceOrConvertValue_closure2.prototype = {
    call$0: function() {
      return H.throwExpression(this._compatibilityException.call$0());
    },
    $signature: 0
  };
  T.SassNumber_plus_closure.prototype = {
    call$2: function(num1, num2) {
      return num1 + num2;
    },
    $signature: 50
  };
  T.SassNumber_minus_closure.prototype = {
    call$2: function(num1, num2) {
      return num1 - num2;
    },
    $signature: 50
  };
  T.SassNumber_multiplyUnits_closure.prototype = {
    call$1: function(denominator) {
      var factor = this.$this.conversionFactor$2(this.numerator, denominator);
      if (factor == null)
        return false;
      this._box_0.value /= factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber_multiplyUnits_closure0.prototype = {
    call$0: function() {
      this.newNumerators.push(this.numerator);
      return null;
    },
    $signature: 0
  };
  T.SassNumber_multiplyUnits_closure1.prototype = {
    call$1: function(denominator) {
      var factor = this.$this.conversionFactor$2(this.numerator, denominator);
      if (factor == null)
        return false;
      this._box_0.value /= factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber_multiplyUnits_closure2.prototype = {
    call$0: function() {
      this.newNumerators.push(this.numerator);
      return null;
    },
    $signature: 0
  };
  T.SassNumber__areAnyConvertible_closure.prototype = {
    call$1: function(unit1) {
      if (!C.Map_K2BWj.containsKey$1(unit1))
        return J.contains$1$asx(this.units2, unit1);
      return J.any$1$ax(this.units2, C.Map_K2BWj.$index(0, unit1).get$containsKey());
    },
    $signature: 6
  };
  T.SassNumber__canonicalizeUnitList_closure.prototype = {
    call$1: function(unit) {
      var t1,
        type = $.$get$_typesByUnit().$index(0, unit);
      if (type == null)
        t1 = unit;
      else {
        t1 = C.Map_U8AHF.$index(0, type);
        t1 = (t1 && C.JSArray_methods).get$first(t1);
      }
      return t1;
    },
    $signature: 4
  };
  T.SassNumber__canonicalMultiplier_closure.prototype = {
    call$2: function(multiplier, unit) {
      return multiplier * this.$this.canonicalMultiplierForUnit$1(unit);
    },
    $signature: 211
  };
  S.ComplexSassNumber.prototype = {
    get$hasUnits: function() {
      return true;
    },
    hasUnit$1: function(unit) {
      return false;
    },
    compatibleWithUnit$1: function(unit) {
      return false;
    },
    withValue$1: function(value) {
      return new S.ComplexSassNumber(this.numeratorUnits, this.denominatorUnits, value, null);
    },
    withSlash$2: function(numerator, denominator) {
      return new S.ComplexSassNumber(this.numeratorUnits, this.denominatorUnits, this.value, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber));
    },
    get$numeratorUnits: function() {
      return this.numeratorUnits;
    },
    get$denominatorUnits: function() {
      return this.denominatorUnits;
    }
  };
  L.SingleUnitSassNumber.prototype = {
    get$numeratorUnits: function() {
      return new P.UnmodifiableListView(H.setRuntimeTypeInfo([this._unit], type$.JSArray_legacy_String), type$.UnmodifiableListView_legacy_String);
    },
    get$denominatorUnits: function() {
      return C.List_empty;
    },
    get$hasUnits: function() {
      return true;
    },
    withValue$1: function(value) {
      return new L.SingleUnitSassNumber(this._unit, value, null);
    },
    withSlash$2: function(numerator, denominator) {
      return new L.SingleUnitSassNumber(this._unit, this.value, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber));
    },
    hasUnit$1: function(unit) {
      return unit === this._unit;
    },
    compatibleWithUnit$1: function(unit) {
      return this.conversionFactor$2(this._unit, unit) != null;
    },
    coerceValueToMatch$1: function(other) {
      return this.convertValueToMatch$3(other, null, null);
    },
    convertValueToMatch$3: function(other, $name, otherName) {
      var t1 = other instanceof L.SingleUnitSassNumber ? this._coerceValueToUnit$1(other._unit) : null;
      return t1 == null ? this.super$SassNumber$convertValueToMatch(other, $name, otherName) : t1;
    },
    coerce$2: function(newNumerators, newDenominators) {
      var t1 = J.getInterceptor$asx(newNumerators);
      t1 = t1.get$length(newNumerators) === 1 && newDenominators.length === 0 ? this._coerceToUnit$1(t1.$index(newNumerators, 0)) : null;
      return t1 == null ? this.super$SassNumber$coerce(newNumerators, newDenominators, null) : t1;
    },
    coerceValue$3: function(newNumerators, newDenominators, $name) {
      var t1 = J.getInterceptor$asx(newNumerators);
      t1 = t1.get$length(newNumerators) === 1 && newDenominators.length === 0 ? this._coerceValueToUnit$1(t1.$index(newNumerators, 0)) : null;
      return t1 == null ? this.super$SassNumber$coerceValue(newNumerators, newDenominators, $name) : t1;
    },
    coerceValueToUnit$2: function(unit, $name) {
      var t1 = this._coerceValueToUnit$1(unit);
      return t1 == null ? this.super$SassNumber$coerceValueToUnit(unit, $name) : t1;
    },
    _coerceToUnit$1: function(unit) {
      var factor, _this = this,
        t1 = _this._unit;
      if (t1 == unit)
        return _this;
      factor = _this.conversionFactor$2(unit, t1);
      return factor == null ? null : new L.SingleUnitSassNumber(unit, _this.value * factor, null);
    },
    _coerceValueToUnit$1: function(unit) {
      var factor = this.conversionFactor$2(unit, this._unit);
      return factor == null ? null : this.value * factor;
    },
    multiplyUnits$3: function(value, otherNumerators, otherDenominators) {
      var mutableOtherDenominators, t1 = {};
      t1.value = value;
      t1.newNumerators = otherNumerators;
      mutableOtherDenominators = J.toList$0$ax(otherDenominators);
      B.removeFirstWhere(mutableOtherDenominators, new L.SingleUnitSassNumber_multiplyUnits_closure(t1, this), new L.SingleUnitSassNumber_multiplyUnits_closure0(t1, this));
      return T.SassNumber_SassNumber$withUnits(t1.value, mutableOtherDenominators, t1.newNumerators);
    },
    unaryMinus$0: function() {
      return new L.SingleUnitSassNumber(this._unit, -this.value, null);
    },
    $eq: function(_, other) {
      var factor;
      if (other == null)
        return false;
      if (other instanceof L.SingleUnitSassNumber) {
        factor = this.conversionFactor$2(other._unit, this._unit);
        return factor != null && Math.abs(this.value * factor - other.value) < $.$get$epsilon();
      } else
        return false;
    },
    get$hashCode: function(_) {
      return T.fuzzyHashCode(this.value * this.canonicalMultiplierForUnit$1(this._unit));
    }
  };
  L.SingleUnitSassNumber_multiplyUnits_closure.prototype = {
    call$1: function(denominator) {
      var t1 = this.$this,
        factor = t1.conversionFactor$2(denominator, t1._unit);
      if (factor == null)
        return false;
      this._box_0.value *= factor;
      return true;
    },
    $signature: 6
  };
  L.SingleUnitSassNumber_multiplyUnits_closure0.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      t1.push(this.$this._unit);
      for (t2 = this._box_0, t3 = J.get$iterator$ax(t2.newNumerators); t3.moveNext$0();)
        t1.push(t3.get$current(t3));
      t2.newNumerators = t1;
      return null;
    },
    $signature: 0
  };
  N.UnitlessSassNumber.prototype = {
    get$numeratorUnits: function() {
      return C.List_empty;
    },
    get$denominatorUnits: function() {
      return C.List_empty;
    },
    get$hasUnits: function() {
      return false;
    },
    withValue$1: function(value) {
      return new N.UnitlessSassNumber(value, null);
    },
    withSlash$2: function(numerator, denominator) {
      return new N.UnitlessSassNumber(this.value, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber));
    },
    hasUnit$1: function(unit) {
      return false;
    },
    compatibleWithUnit$1: function(unit) {
      return true;
    },
    coerceValueToMatch$1: function(other) {
      return this.value;
    },
    convertValueToMatch$3: function(other, $name, otherName) {
      return other.get$hasUnits() ? this.super$SassNumber$convertValueToMatch(other, $name, otherName) : this.value;
    },
    coerce$2: function(newNumerators, newDenominators) {
      return T.SassNumber_SassNumber$withUnits(this.value, newDenominators, newNumerators);
    },
    coerceValue$3: function(newNumerators, newDenominators, $name) {
      return this.value;
    },
    coerceValueToUnit$2: function(unit, $name) {
      return this.value;
    },
    greaterThan$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber) {
        t1 = this.value;
        t2 = other.value;
        return t1 > t2 && !(Math.abs(t1 - t2) < $.$get$epsilon()) ? C.SassBoolean_true0 : C.SassBoolean_false0;
      }
      return this.super$SassNumber$greaterThan(other);
    },
    greaterThanOrEquals$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber) {
        t1 = this.value;
        t2 = other.value;
        return t1 > t2 || Math.abs(t1 - t2) < $.$get$epsilon() ? C.SassBoolean_true0 : C.SassBoolean_false0;
      }
      return this.super$SassNumber$greaterThanOrEquals(other);
    },
    lessThan$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber) {
        t1 = this.value;
        t2 = other.value;
        return t1 < t2 && !(Math.abs(t1 - t2) < $.$get$epsilon()) ? C.SassBoolean_true0 : C.SassBoolean_false0;
      }
      return this.super$SassNumber$lessThan(other);
    },
    lessThanOrEquals$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber) {
        t1 = this.value;
        t2 = other.value;
        return t1 < t2 || Math.abs(t1 - t2) < $.$get$epsilon() ? C.SassBoolean_true0 : C.SassBoolean_false0;
      }
      return this.super$SassNumber$lessThanOrEquals(other);
    },
    modulo$1: function(other) {
      if (other instanceof T.SassNumber)
        return other.withValue$1(this.moduloLikeSass$2(this.value, other.value));
      return this.super$SassNumber$modulo(other);
    },
    plus$1: function(other) {
      if (other instanceof T.SassNumber)
        return other.withValue$1(this.value + other.value);
      return this.super$SassNumber$plus(other);
    },
    minus$1: function(other) {
      if (other instanceof T.SassNumber)
        return other.withValue$1(this.value - other.value);
      return this.super$SassNumber$minus(other);
    },
    times$1: function(other) {
      if (other instanceof T.SassNumber)
        return other.withValue$1(this.value * other.value);
      return this.super$SassNumber$times(other);
    },
    dividedBy$1: function(other) {
      var t1, t2, t3;
      if (other instanceof T.SassNumber) {
        t1 = other.get$hasUnits();
        t2 = this.value;
        t3 = other.value;
        if (t1) {
          t1 = other.get$denominatorUnits();
          t1 = T.SassNumber_SassNumber$withUnits(t2 / t3, other.get$numeratorUnits(), t1);
        } else
          t1 = new N.UnitlessSassNumber(t2 / t3, null);
        return t1;
      }
      return this.super$SassNumber$dividedBy(other);
    },
    unaryMinus$0: function() {
      return new N.UnitlessSassNumber(-this.value, null);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof N.UnitlessSassNumber && Math.abs(this.value - other.value) < $.$get$epsilon();
    },
    get$hashCode: function(_) {
      return T.fuzzyHashCode(this.value);
    }
  };
  D.SassString.prototype = {
    get$sassLength: function() {
      var t1 = this._sassLength;
      if (t1 == null) {
        t1 = this.text;
        t1.toString;
        t1 = new P.Runes(t1);
        t1 = this._sassLength = t1.get$length(t1);
      }
      return t1;
    },
    get$isSpecialNumber: function() {
      var t1, t2;
      if (this.hasQuotes)
        return false;
      t1 = this.text;
      if (t1.length < 6)
        return false;
      t2 = J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32;
      if (t2 === 99) {
        t2 = C.JSString_methods._codeUnitAt$1(t1, 1) | 32;
        if (t2 === 108) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 97)
            return false;
          if ((C.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 109)
            return false;
          if ((C.JSString_methods._codeUnitAt$1(t1, 4) | 32) !== 112)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 5) === 40;
        } else if (t2 === 97) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 108)
            return false;
          if ((C.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 99)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 4) === 40;
        } else
          return false;
      } else if (t2 === 118) {
        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 97)
          return false;
        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 114)
          return false;
        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
      } else if (t2 === 101) {
        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 110)
          return false;
        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 118)
          return false;
        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
      } else if (t2 === 109) {
        t2 = C.JSString_methods._codeUnitAt$1(t1, 1) | 32;
        if (t2 === 97) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 120)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
        } else if (t2 === 105) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 110)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
        } else
          return false;
      } else
        return false;
    },
    get$isVar: function() {
      if (this.hasQuotes)
        return false;
      var t1 = this.text;
      if (t1.length < 8)
        return false;
      return (J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32) === 118 && (C.JSString_methods._codeUnitAt$1(t1, 1) | 32) === 97 && (C.JSString_methods._codeUnitAt$1(t1, 2) | 32) === 114 && C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
    },
    get$isBlank: function() {
      return !this.hasQuotes && this.text.length === 0;
    },
    accept$1$1: function(visitor) {
      var t1 = visitor._quote && this.hasQuotes,
        t2 = this.text;
      if (t1)
        visitor._visitQuotedString$1(t2);
      else
        visitor._visitUnquotedString$1(t2);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertString$1: function($name) {
      return this;
    },
    plus$1: function(other) {
      var t1 = this.text,
        t2 = this.hasQuotes;
      if (other instanceof D.SassString)
        return new D.SassString(J.$add$ansx(t1, other.text), t2);
      else {
        other.toString;
        return new D.SassString(J.$add$ansx(t1, N.serializeValue0(other, false, true)), t2);
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof D.SassString && this.text == other.text;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.text);
    }
  };
  E._EvaluateVisitor0.prototype = {
    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap0: function(functions, importCache, logger, nodeImporter, sourceMap) {
      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        metaFunctions = [Q.BuiltInCallable$function("global-variable-exists", _s20_, new E._EvaluateVisitor_closure9(_this), _s9_), Q.BuiltInCallable$function("variable-exists", "$name", new E._EvaluateVisitor_closure10(_this), _s9_), Q.BuiltInCallable$function("function-exists", _s20_, new E._EvaluateVisitor_closure11(_this), _s9_), Q.BuiltInCallable$function("mixin-exists", _s20_, new E._EvaluateVisitor_closure12(_this), _s9_), Q.BuiltInCallable$function("content-exists", "", new E._EvaluateVisitor_closure13(_this), _s9_), Q.BuiltInCallable$function("module-variables", "$module", new E._EvaluateVisitor_closure14(_this), _s9_), Q.BuiltInCallable$function("module-functions", "$module", new E._EvaluateVisitor_closure15(_this), _s9_), Q.BuiltInCallable$function("get-function", "$name, $css: false, $module: null", new E._EvaluateVisitor_closure16(_this), _s9_), new S.AsyncBuiltInCallable("call", L.ScssParser$("@function call($function, $args...) {", null, _s9_).parseArgumentDeclaration$0(), new E._EvaluateVisitor_closure17(_this))],
        t1 = type$.JSArray_legacy_AsyncBuiltInCallable,
        metaMixins = H.setRuntimeTypeInfo([S.AsyncBuiltInCallable$mixin("load-css", "$url, $with: null", new E._EvaluateVisitor_closure18(_this), _s9_)], t1);
      t1 = H.setRuntimeTypeInfo([], t1);
      for (t2 = $.$get$global(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      metaModule = Q.BuiltInModule$("meta", t1, metaMixins, null, type$.legacy_AsyncBuiltInCallable);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_AsyncBuiltInCallable);
      for (t2 = $.$get$coreModules(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      t1.push(metaModule);
      t2 = t1.length;
      t3 = _this._async_evaluate$_builtInModules;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AsyncCallable_2);
      for (t2 = $.$get$globalFunctions(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      for (t2 = t1.length, t3 = _this._async_evaluate$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = $function.get$name($function);
        t4.toString;
        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2: function(_, importer, node) {
      return this.run$body$_EvaluateVisitor(_, importer, node);
    },
    run$body$_EvaluateVisitor: function(_, importer, node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult),
        $async$returnValue, $async$self = this;
      var $async$run$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self._async_evaluate$_withWarnCallback$1$1(new E._EvaluateVisitor_run_closure0($async$self, node, importer), type$.legacy_FutureOr_legacy_EvaluateResult);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$run$2, $async$completer);
    },
    _async_evaluate$_withWarnCallback$1$1: function(callback, $T) {
      return N.withWarnCallback(new E._EvaluateVisitor__withWarnCallback_closure0(this), callback, $T._eval$1("0*"));
    },
    _async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      return this._loadModule$body$_EvaluateVisitor(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors);
    },
    _async_evaluate$_loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _async_evaluate$_loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {
      return this._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _loadModule$body$_EvaluateVisitor: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, builtInModule;
      var $async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              builtInModule = $async$self._async_evaluate$_builtInModules.$index(0, url);
              if (builtInModule != null) {
                if (configuration != null && !configuration.isImplicit) {
                  t1 = namesInErrors ? "Built-in module " + H.S(url) + " can't be configured." : "Built-in modules can't be configured.";
                  throw H.wrapException($async$self._async_evaluate$_exception$2(t1, nodeWithSpan.get$span()));
                }
                $async$self._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__loadModule_closure1(callback, builtInModule));
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_withStackFrame$1$3(stackFrame, nodeWithSpan, new E._EvaluateVisitor__loadModule_closure2($async$self, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback), type$.Null), $async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors);
            case 3:
              // returning from await.
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors, $async$completer);
    },
    _async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      return this._execute$body$_EvaluateVisitor(importer, stylesheet, configuration, namesInErrors, nodeWithSpan);
    },
    _async_evaluate$_execute$2: function(importer, stylesheet) {
      return this._async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _execute$body$_EvaluateVisitor: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Module_legacy_AsyncCallable),
        $async$returnValue, $async$self = this, message, existingNode, environment, extender, module, t1, url, t2, alreadyLoaded;
      var $async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              url = stylesheet.span.file.url;
              t2 = $async$self._async_evaluate$_modules;
              alreadyLoaded = t2.$index(0, url);
              if (alreadyLoaded != null) {
                t1 = configuration == null;
                if (!(t1 ? $async$self._async_evaluate$_configuration : configuration).isImplicit) {
                  message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;
                  existingNode = $async$self._async_evaluate$_moduleNodes.$index(0, url);
                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
                  if (existingNode != null)
                    t2.$indexSet(0, existingNode.get$span(), "original load");
                  if (t1)
                    t2.$indexSet(0, $async$self._async_evaluate$_configuration.nodeWithSpan.get$span(), "configuration");
                  throw H.wrapException(t2.get$isEmpty(t2) ? $async$self._async_evaluate$_exception$1(message) : $async$self._async_evaluate$_multiSpanException$3(message, "new load", t2));
                }
                $async$returnValue = alreadyLoaded;
                // goto return
                $async$goto = 1;
                break;
              }
              environment = Q.AsyncEnvironment$($async$self._async_evaluate$_sourceMap);
              t1.css = null;
              extender = F.Extender$();
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_withEnvironment$1$2(environment, new E._EvaluateVisitor__execute_closure0(t1, $async$self, importer, stylesheet, extender, configuration), type$.Null), $async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan);
            case 3:
              // returning from await.
              module = Q._EnvironmentModule__EnvironmentModule0(environment, t1.css, extender, environment._async_environment$_forwardedModules);
              t2.$indexSet(0, url, module);
              $async$self._async_evaluate$_moduleNodes.$indexSet(0, url, nodeWithSpan);
              $async$returnValue = module;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan, $async$completer);
    },
    _async_evaluate$_addOutOfOrderImports$0: function() {
      var t1, statements, _this = this;
      if (_this._async_evaluate$_outOfOrderImports == null)
        return _this._async_evaluate$_root.children;
      t1 = new Array(J.get$length$asx(_this._async_evaluate$_root.children._collection$_source) + _this._async_evaluate$_outOfOrderImports.length);
      t1.fixed$length = Array;
      statements = new G.FixedLengthListBuilder(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode), type$.FixedLengthListBuilder_legacy_ModifiableCssNode);
      statements.addRange$3(_this._async_evaluate$_root.children, 0, _this._async_evaluate$_endOfImports);
      statements.addAll$1(0, _this._async_evaluate$_outOfOrderImports);
      statements.addRange$2(_this._async_evaluate$_root.children, _this._async_evaluate$_endOfImports);
      return statements.build$0();
    },
    _async_evaluate$_combineCss$2$clone: function(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;
      if (!C.JSArray_methods.any$1(root.get$upstream(), new E._EvaluateVisitor__combineCss_closure2())) {
        selectors = root.get$extender().get$simpleSelectors();
        unsatisfiedExtension = B.firstOrNull(root.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__combineCss_closure3(selectors)));
        if (unsatisfiedExtension != null)
          _this._async_evaluate$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._async_evaluate$_topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module<AsyncCallable*>*>");
        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new E._EvaluateVisitor__combineCss_closure4(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._async_evaluate$_extendModules$1(sortedModules);
      t1 = type$.JSArray_legacy_CssNode;
      imports = H.setRuntimeTypeInfo([], t1);
      css = H.setRuntimeTypeInfo([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        t2 = cur.get$css(cur);
        statements = t2.get$children(t2);
        index = _this._async_evaluate$_indexAfterImports$1(statements);
        t2 = J.getInterceptor$ax(statements);
        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));
        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));
      }
      return new V.CssStylesheet(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode), root.get$css(root).get$span());
    },
    _async_evaluate$_combineCss$1: function(root) {
      return this._async_evaluate$_combineCss$2$clone(root, false);
    },
    _async_evaluate$_extendModules$1: function(sortedModules) {
      var t1, t2, originalSelectors, extenders, t3, t4, _i,
        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender),
        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__extendModules_closure1(originalSelectors)));
        extenders = downstreamExtenders.$index(0, t2.get$url());
        if (extenders != null)
          t2.get$extender().addExtensions$1(extenders);
        t3 = t2.get$extender();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new E._EvaluateVisitor__extendModules_closure2()), t2.get$extender());
        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._async_evaluate$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _async_evaluate$_throwForUnsatisfiedExtension$1: function(extension) {
      throw H.wrapException(E.SassException$(string$.The_ta + H.S(extension.target) + ' !optional" to avoid this error.', extension.span));
    },
    _async_evaluate$_topologicalModules$1: function(root) {
      var t1 = type$.legacy_Module_legacy_AsyncCallable,
        sorted = Q.QueueList$(null, t1);
      new E._EvaluateVisitor__topologicalModules_visitModule0(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _async_evaluate$_indexAfterImports$1: function(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment, t3 = type$.legacy_CssImport, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1: function(node) {
      return this.visitStylesheet$body$_EvaluateVisitor(node);
    },
    visitStylesheet$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$visitStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.children, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].accept$1($async$self), $async$visitStylesheet$1);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitStylesheet$1, $async$completer);
    },
    visitAtRootRule$1: function(node) {
      return this.visitAtRootRule$body$_EvaluateVisitor(node);
    },
    visitAtRootRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, root, innerCopy, outerCopy, cur, copy, t1, query, $parent, included, $async$temp1, $async$temp2;
      var $async$visitAtRootRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.query;
              $async$goto = t1 != null ? 3 : 5;
              break;
            case 3:
              // then
              $async$temp1 = t1;
              $async$temp2 = E;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$2$warnForColor(t1, true), $async$visitAtRootRule$1);
            case 6:
              // returning from await.
              $async$result = $async$self._async_evaluate$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor_visitAtRootRule_closure2($async$self, $async$result));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$result = C.AtRootQuery_UsS;
            case 4:
              // join
              query = $async$result;
              $parent = $async$self._async_evaluate$_parent;
              included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode);
              for (t1 = type$.legacy_CssStylesheet; !t1._is($parent);) {
                if (!query.excludes$1($parent))
                  included.push($parent);
                $parent = $parent._parent;
              }
              root = $async$self._async_evaluate$_trimIncluded$1(included);
              $async$goto = root == $async$self._async_evaluate$_parent ? 7 : 8;
              break;
            case 7:
              // then
              $async$goto = 9;
              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(new E._EvaluateVisitor_visitAtRootRule_closure3($async$self, node), node.hasDeclarations, type$.Null), $async$visitAtRootRule$1);
            case 9:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              innerCopy = included.length === 0 ? null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();
              for (t1 = H.SubListIterable$(included, 1, null, type$.legacy_ModifiableCssParentNode), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
                cur = t1.__internal$_current;
                copy = cur.copyWithoutChildren$0();
                copy.addChild$1(outerCopy);
              }
              if (outerCopy != null)
                root.addChild$1(outerCopy);
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate$_scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new E._EvaluateVisitor_visitAtRootRule_closure4($async$self, node)), $async$visitAtRootRule$1);
            case 10:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitAtRootRule$1, $async$completer);
    },
    _async_evaluate$_trimIncluded$1: function(nodes) {
      var $parent, innermostContiguous, i, t2, root,
        t1 = nodes.length;
      if (t1 === 0)
        return this._async_evaluate$_root;
      $parent = this._async_evaluate$_parent;
      for (innermostContiguous = null, i = 0; i < t1; ++i) {
        for (; $parent != nodes[i]; innermostContiguous = null)
          $parent = $parent._parent;
        if (innermostContiguous == null)
          innermostContiguous = i;
        $parent = $parent._parent;
      }
      t2 = this._async_evaluate$_root;
      if ($parent != t2)
        return t2;
      root = nodes[innermostContiguous];
      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);
      return root;
    },
    _async_evaluate$_scopeForAtRoot$4: function(node, newParent, query, included) {
      var _this = this,
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure5(_this, newParent, node),
        t1 = query._all || query._at_root_query$_rule;
      if (t1 !== query.include)
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure6(_this, scope);
      if (_this._async_evaluate$_mediaQueries != null && query.excludesName$1("media"))
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure7(_this, scope);
      if (_this._async_evaluate$_inKeyframes && query.excludesName$1("keyframes"))
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure8(_this, scope);
      return _this._async_evaluate$_inUnknownAtRule && !C.JSArray_methods.any$1(included, new E._EvaluateVisitor__scopeForAtRoot_closure9()) ? new E._EvaluateVisitor__scopeForAtRoot_closure10(_this, scope) : scope;
    },
    visitContentBlock$1: function(node) {
      return H.throwExpression(P.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1: function(node) {
      return this.visitContentRule$body$_EvaluateVisitor(node);
    },
    visitContentRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, $content;
      var $async$visitContentRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $content = $async$self._async_evaluate$_environment._async_environment$_content;
              if ($content == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_runUserDefinedCallable$4(node.$arguments, $content, node, new E._EvaluateVisitor_visitContentRule_closure0($async$self, $content)), $async$visitContentRule$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitContentRule$1, $async$completer);
    },
    visitDebugRule$1: function(node) {
      return this.visitDebugRule$body$_EvaluateVisitor(node);
    },
    visitDebugRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, value, t1;
      var $async$visitDebugRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitDebugRule$1);
            case 3:
              // returning from await.
              value = $async$result;
              t1 = value instanceof D.SassString ? value.text : J.toString$0$(value);
              $async$self._async_evaluate$_logger.debug$2(0, t1, node.span);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitDebugRule$1, $async$completer);
    },
    visitDeclaration$1: function(node) {
      return this.visitDeclaration$body$_EvaluateVisitor(node);
    },
    visitDeclaration$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, $name, t2, cssValue, t3, oldDeclarationName, $async$temp1;
      var $async$visitDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!($async$self._async_evaluate$_styleRule != null && !$async$self._async_evaluate$_atRootExcludingStyleRule) && !$async$self._async_evaluate$_inUnknownAtRule && !$async$self._async_evaluate$_inKeyframes)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Declarm, node.span));
              t1 = node.name;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$2$warnForColor(t1, true), $async$visitDeclaration$1);
            case 3:
              // returning from await.
              $name = $async$result;
              t2 = $async$self._async_evaluate$_declarationName;
              if (t2 != null)
                $name = new F.CssValue(t2 + "-" + H.S($name.get$value($name)), $name.get$span(), type$.CssValue_legacy_String);
              t2 = node.value;
              $async$goto = t2 == null ? 4 : 6;
              break;
            case 4:
              // then
              $async$result = null;
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$temp1 = F;
              $async$goto = 7;
              return P._asyncAwait(t2.accept$1($async$self), $async$visitDeclaration$1);
            case 7:
              // returning from await.
              $async$result = new $async$temp1.CssValue($async$result, t2.get$span(), type$.CssValue_legacy_Value);
            case 5:
              // join
              cssValue = $async$result;
              if (cssValue != null) {
                t3 = cssValue.value;
                t3 = !t3.get$isBlank() || t3.get$asList().length === 0;
              } else
                t3 = false;
              if (t3) {
                t3 = $async$self._async_evaluate$_parent;
                t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
                t2 = $async$self._async_evaluate$_expressionNode$1(t2);
                t2 = t2 == null ? null : t2.get$span();
                t3.addChild$1(L.ModifiableCssDeclaration$($name, cssValue, node.span, t1, t2));
              } else if (J.startsWith$1$s($name.get$value($name), "--") && node.children == null)
                throw H.wrapException($async$self._async_evaluate$_exception$2("Custom property values may not be empty.", t2.get$span()));
              $async$goto = node.children != null ? 8 : 9;
              break;
            case 8:
              // then
              oldDeclarationName = $async$self._async_evaluate$_declarationName;
              $async$self._async_evaluate$_declarationName = $name.get$value($name);
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(new E._EvaluateVisitor_visitDeclaration_closure0($async$self, node), node.hasDeclarations, type$.Null), $async$visitDeclaration$1);
            case 10:
              // returning from await.
              $async$self._async_evaluate$_declarationName = oldDeclarationName;
            case 9:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitDeclaration$1, $async$completer);
    },
    visitEachRule$1: function(node) {
      return this.visitEachRule$body$_EvaluateVisitor(node);
    },
    visitEachRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, list, nodeWithSpan, setVariables;
      var $async$visitEachRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.list;
              $async$goto = 3;
              return P._asyncAwait(t1.accept$1($async$self), $async$visitEachRule$1);
            case 3:
              // returning from await.
              list = $async$result;
              nodeWithSpan = $async$self._async_evaluate$_expressionNode$1(t1);
              setVariables = node.variables.length === 1 ? new E._EvaluateVisitor_visitEachRule_closure2($async$self, node, nodeWithSpan) : new E._EvaluateVisitor_visitEachRule_closure3($async$self, node, nodeWithSpan);
              $async$returnValue = $async$self._async_evaluate$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitEachRule_closure4($async$self, list, setVariables, node), true, type$.legacy_Value);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitEachRule$1, $async$completer);
    },
    _async_evaluate$_setMultipleVariables$3: function(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._async_evaluate$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._async_evaluate$_environment.setLocalVariable$3(variables[i], C.C_SassNull0, nodeWithSpan);
    },
    visitErrorRule$1: function(node) {
      return this.visitErrorRule$body$_EvaluateVisitor(node);
    },
    visitErrorRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$self = this, $async$temp1, $async$temp2;
      var $async$visitErrorRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = H;
              $async$temp2 = J;
              $async$goto = 2;
              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitErrorRule$1);
            case 2:
              // returning from await.
              throw $async$temp1.wrapException($async$self._async_evaluate$_exception$2($async$temp2.toString$0$($async$result), node.span));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitErrorRule$1, $async$completer);
    },
    visitExtendRule$1: function(node) {
      return this.visitExtendRule$body$_EvaluateVisitor(node);
    },
    visitExtendRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, targetText, t1, t2, t3, _i, t4;
      var $async$visitExtendRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!($async$self._async_evaluate$_styleRule != null && !$async$self._async_evaluate$_atRootExcludingStyleRule) || $async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.x40exten, node.span));
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$2$warnForColor(node.selector, true), $async$visitExtendRule$1);
            case 3:
              // returning from await.
              targetText = $async$result;
              for (t1 = $async$self._async_evaluate$_adjustParseError$2(targetText, new E._EvaluateVisitor_visitExtendRule_closure0($async$self, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector, _i = 0; _i < t2; ++_i) {
                t4 = t1[_i].components;
                if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector))
                  throw H.wrapException(E.SassFormatException$("complex selectors may not be extended.", targetText.get$span()));
                t4 = t3._as(C.JSArray_methods.get$first(t4)).components;
                if (t4.length !== 1)
                  throw H.wrapException(E.SassFormatException$(string$.compou + C.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.get$span()));
                $async$self._async_evaluate$_extender.addExtension$4($async$self._async_evaluate$_styleRule.selector, C.JSArray_methods.get$first(t4), node, $async$self._async_evaluate$_mediaQueries);
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitExtendRule$1, $async$completer);
    },
    visitAtRule$1: function(node) {
      return this.visitAtRule$body$_EvaluateVisitor(node);
    },
    visitAtRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, $name, t1, value, wasInKeyframes, wasInUnknownAtRule;
      var $async$visitAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.At_rul, node.span));
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$1(node.name), $async$visitAtRule$1);
            case 3:
              // returning from await.
              $name = $async$result;
              t1 = node.value;
              $async$goto = t1 == null ? 4 : 6;
              break;
            case 4:
              // then
              $async$result = null;
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$3$trim$warnForColor(t1, true, true), $async$visitAtRule$1);
            case 7:
              // returning from await.
            case 5:
              // join
              value = $async$result;
              if (node.children == null) {
                $async$self._async_evaluate$_parent.addChild$1(U.ModifiableCssAtRule$($name, node.span, true, value));
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              wasInKeyframes = $async$self._async_evaluate$_inKeyframes;
              wasInUnknownAtRule = $async$self._async_evaluate$_inUnknownAtRule;
              if (B.unvendor($name.get$value($name)) === "keyframes")
                $async$self._async_evaluate$_inKeyframes = true;
              else
                $async$self._async_evaluate$_inUnknownAtRule = true;
              $async$goto = 8;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$($name, node.span, false, value), new E._EvaluateVisitor_visitAtRule_closure1($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitAtRule_closure2(), type$.legacy_ModifiableCssAtRule, type$.Null), $async$visitAtRule$1);
            case 8:
              // returning from await.
              $async$self._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;
              $async$self._async_evaluate$_inKeyframes = wasInKeyframes;
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitAtRule$1, $async$completer);
    },
    visitForRule$1: function(node) {
      return this.visitForRule$body$_EvaluateVisitor(node);
    },
    visitForRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, fromNumber, t4, toNumber, from, to, direction;
      var $async$visitForRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = node.from;
              t3 = type$.legacy_SassNumber;
              $async$goto = 3;
              return P._asyncAwait($async$self._addExceptionSpanAsync$1$2(t2, new E._EvaluateVisitor_visitForRule_closure4($async$self, node), t3), $async$visitForRule$1);
            case 3:
              // returning from await.
              fromNumber = $async$result;
              t4 = node.to;
              $async$goto = 4;
              return P._asyncAwait($async$self._addExceptionSpanAsync$1$2(t4, new E._EvaluateVisitor_visitForRule_closure5($async$self, node), t3), $async$visitForRule$1);
            case 4:
              // returning from await.
              toNumber = $async$result;
              from = $async$self._async_evaluate$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitForRule_closure6(fromNumber));
              to = t1.to = $async$self._async_evaluate$_addExceptionSpan$2(t4, new E._EvaluateVisitor_visitForRule_closure7(toNumber, fromNumber));
              direction = from > to ? -1 : 1;
              if (from === (!node.isExclusive ? t1.to = to + direction : to)) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self._async_evaluate$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitForRule_closure8(t1, $async$self, node, from, direction, fromNumber), true, type$.legacy_Value);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitForRule$1, $async$completer);
    },
    visitForwardRule$1: function(node) {
      return this.visitForwardRule$body$_EvaluateVisitor(node);
    },
    visitForwardRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, newConfiguration, t4, _i, variable, oldConfiguration, adjustedConfiguration, t1, t2, t3;
      var $async$visitForwardRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldConfiguration = $async$self._async_evaluate$_configuration;
              adjustedConfiguration = oldConfiguration.throughForward$1(node);
              t1 = node.configuration;
              t2 = t1.length;
              t3 = node.url;
              $async$goto = t2 !== 0 ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_addForwardConfiguration$2(adjustedConfiguration, node), $async$visitForwardRule$1);
            case 6:
              // returning from await.
              newConfiguration = $async$result;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate$_loadModule$5$configuration(t3, "@forward", node, new E._EvaluateVisitor_visitForwardRule_closure1($async$self, node), newConfiguration), $async$visitForwardRule$1);
            case 7:
              // returning from await.
              t3 = type$.legacy_String;
              t4 = P.LinkedHashSet_LinkedHashSet(t3);
              for (_i = 0; _i < t2; ++_i) {
                variable = t1[_i];
                if (!variable.isGuarded)
                  t4.add$1(0, variable.name);
              }
              $async$self._async_evaluate$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
              t3 = P.LinkedHashSet_LinkedHashSet(t3);
              for (_i = 0; _i < t2; ++_i)
                t3.add$1(0, t1[_i].name);
              $async$self._async_evaluate$_assertConfigurationIsEmpty$2$only(newConfiguration, t3);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$self._async_evaluate$_configuration = adjustedConfiguration;
              $async$goto = 8;
              return P._asyncAwait($async$self._async_evaluate$_loadModule$4(t3, "@forward", node, new E._EvaluateVisitor_visitForwardRule_closure2($async$self, node)), $async$visitForwardRule$1);
            case 8:
              // returning from await.
              $async$self._async_evaluate$_configuration = oldConfiguration;
            case 4:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitForwardRule$1, $async$completer);
    },
    _async_evaluate$_addForwardConfiguration$2: function(configuration, node) {
      return this._addForwardConfiguration$body$_EvaluateVisitor(configuration, node);
    },
    _addForwardConfiguration$body$_EvaluateVisitor: function(configuration, node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Configuration),
        $async$returnValue, $async$self = this, t2, t3, _i, variable, t4, t5, t1, newValues, $async$temp1, $async$temp2, $async$temp3;
      var $async$_async_evaluate$_addForwardConfiguration$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = configuration._values;
              newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue), type$.legacy_String, type$.legacy_ConfiguredValue);
              t2 = node.configuration, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              variable = t2[_i];
              if (variable.isGuarded) {
                t4 = variable.name;
                t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
                if (t5 != null && !J.$eq$(t5.value, C.C_SassNull0)) {
                  newValues.$indexSet(0, t4, t5);
                  // goto for update
                  $async$goto = 4;
                  break;
                }
              }
              t4 = variable.name;
              t5 = variable.expression;
              $async$temp1 = newValues;
              $async$temp2 = t4;
              $async$temp3 = Z;
              $async$goto = 6;
              return P._asyncAwait(t5.accept$1($async$self), $async$_async_evaluate$_addForwardConfiguration$2);
            case 6:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate$_expressionNode$1(t5)));
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = new A.Configuration(newValues, node, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_addForwardConfiguration$2, $async$completer);
    },
    _async_evaluate$_removeUsedConfiguration$3$except: function(upstream, downstream, except) {
      var t1, t2, t3, _i, $name;
      for (t1 = upstream._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!downstream._values.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {
      configuration._values.forEach$1(0, new E._EvaluateVisitor__assertConfigurationIsEmpty_closure0(this, only, nameInError));
    },
    _async_evaluate$_assertConfigurationIsEmpty$1: function(configuration) {
      return this._async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);
    },
    _async_evaluate$_assertConfigurationIsEmpty$2$only: function(configuration, only) {
      return this._async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);
    },
    _async_evaluate$_assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {
      return this._async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);
    },
    visitFunctionRule$1: function(node) {
      return this.visitFunctionRule$body$_EvaluateVisitor(node);
    },
    visitFunctionRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;
      var $async$visitFunctionRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate$_environment;
              t2 = t1.closure$0();
              t3 = t1._async_environment$_functions;
              index = t3.length - 1;
              t4 = node.name;
              t1._async_environment$_functionIndices.$indexSet(0, t4, index);
              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitFunctionRule$1, $async$completer);
    },
    visitIfRule$1: function(node) {
      return this.visitIfRule$body$_EvaluateVisitor(node);
    },
    visitIfRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, _i, clauseToCheck, _box_0;
      var $async$visitIfRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              _box_0.clause = node.lastClause;
              t1 = node.clauses, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              clauseToCheck = t1[_i];
              $async$goto = 6;
              return P._asyncAwait(clauseToCheck.expression.accept$1($async$self), $async$visitIfRule$1);
            case 6:
              // returning from await.
              if ($async$result.get$isTruthy()) {
                _box_0.clause = clauseToCheck;
                // goto after for
                $async$goto = 5;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t1 = _box_0.clause;
              if (t1 == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitIfRule_closure0(_box_0, $async$self), true, t1.hasDeclarations, type$.legacy_Value), $async$visitIfRule$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitIfRule$1, $async$completer);
    },
    visitImportRule$1: function(node) {
      return this.visitImportRule$body$_EvaluateVisitor(node);
    },
    visitImportRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, _i, $import;
      var $async$visitImportRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.imports, t2 = t1.length, t3 = type$.legacy_StaticImport, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $import = t1[_i];
              $async$goto = $import instanceof B.DynamicImport ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return P._asyncAwait($async$self._async_evaluate$_visitDynamicImport$1($import), $async$visitImportRule$1);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = 10;
              return P._asyncAwait($async$self._visitStaticImport$1(t3._as($import)), $async$visitImportRule$1);
            case 10:
              // returning from await.
            case 7:
              // join
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitImportRule$1, $async$completer);
    },
    _async_evaluate$_visitDynamicImport$1: function($import) {
      return this._async_evaluate$_withStackFrame$1$3("@import", $import, new E._EvaluateVisitor__visitDynamicImport_closure0(this, $import), type$.void);
    },
    _async_evaluate$_loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {
      return this._loadStylesheet$body$_EvaluateVisitor(url, span, baseUrl, forImport);
    },
    _async_evaluate$_loadStylesheet$3$baseUrl: function(url, span, baseUrl) {
      return this._async_evaluate$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _async_evaluate$_loadStylesheet$3$forImport: function(url, span, forImport) {
      return this._async_evaluate$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    _loadStylesheet$body$_EvaluateVisitor: function(url, span, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, tuple, error, error0, message, t1, t2, t3, exception, message0, $async$exception;
      var $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$self._async_evaluate$_importSpan = span;
              t1 = P.Uri_parse(url);
              t2 = $async$self._async_evaluate$_importer;
              if (baseUrl == null) {
                t3 = $async$self._async_evaluate$_stylesheet;
                t3 = t3 == null ? null : t3.span;
                t3 = t3 == null ? null : t3.file.url;
              } else
                t3 = baseUrl;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport), $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport);
            case 7:
              // returning from await.
              tuple = $async$result;
              if (tuple != null) {
                $async$returnValue = tuple;
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
              }
              if (C.JSString_methods.startsWith$1(url, "package:") && true)
                throw H.wrapException(string$.x22packa);
              else
                throw H.wrapException("Can't find stylesheet to import.");
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof E.SassException) {
                error = t1;
                t1 = $async$self._async_evaluate$_exception$2(error._span_exception$_message, error.get$span());
                throw H.wrapException(t1);
              } else {
                error0 = t1;
                message = null;
                try {
                  message = H._asStringS(J.get$message$x(error0));
                } catch (exception) {
                  H.unwrapException($async$exception);
                  message0 = J.toString$0$(error0);
                  message = message0;
                }
                t1 = $async$self._async_evaluate$_exception$1(message);
                throw H.wrapException(t1);
              }
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              $async$self._async_evaluate$_importSpan = null;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport, $async$completer);
    },
    _visitStaticImport$1: function($import) {
      return this._visitStaticImport$body$_EvaluateVisitor($import);
    },
    _visitStaticImport$body$_EvaluateVisitor: function($import) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, resolvedSupports, t1, mediaQuery, node, t2, url, supports, $async$temp1, $async$temp2;
      var $async$_visitStaticImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$1($import.url), $async$_visitStaticImport$1);
            case 3:
              // returning from await.
              url = $async$result;
              supports = $import.supports;
              $async$goto = supports instanceof L.SupportsDeclaration ? 4 : 6;
              break;
            case 4:
              // then
              $async$temp1 = H;
              $async$goto = 7;
              return P._asyncAwait($async$self._evaluateToCss$1(supports.name), $async$_visitStaticImport$1);
            case 7:
              // returning from await.
              $async$temp1 = $async$temp1.S($async$result) + ": ";
              $async$temp2 = H;
              $async$goto = 8;
              return P._asyncAwait($async$self._evaluateToCss$1(supports.value), $async$_visitStaticImport$1);
            case 8:
              // returning from await.
              resolvedSupports = $async$temp1 + $async$temp2.S($async$result);
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$goto = supports == null ? 9 : 11;
              break;
            case 9:
              // then
              $async$result = null;
              // goto join
              $async$goto = 10;
              break;
            case 11:
              // else
              $async$goto = 12;
              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(supports), $async$_visitStaticImport$1);
            case 12:
              // returning from await.
            case 10:
              // join
              resolvedSupports = $async$result;
            case 5:
              // join
              t1 = $import.media;
              $async$goto = t1 == null ? 13 : 15;
              break;
            case 13:
              // then
              $async$result = null;
              // goto join
              $async$goto = 14;
              break;
            case 15:
              // else
              $async$goto = 16;
              return P._asyncAwait($async$self._async_evaluate$_visitMediaQueries$1(t1), $async$_visitStaticImport$1);
            case 16:
              // returning from await.
            case 14:
              // join
              mediaQuery = $async$result;
              t1 = $import.span;
              node = F.ModifiableCssImport$(url, t1, mediaQuery, resolvedSupports == null ? null : new F.CssValue("supports(" + resolvedSupports + ")", supports.get$span(), type$.CssValue_legacy_String));
              t1 = $async$self._async_evaluate$_parent;
              t2 = $async$self._async_evaluate$_root;
              if (t1 != t2)
                t1.addChild$1(node);
              else if ($async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {
                $async$self._async_evaluate$_root.addChild$1(node);
                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;
              } else {
                t1 = $async$self._async_evaluate$_outOfOrderImports;
                (t1 == null ? $async$self._async_evaluate$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t1).push(node);
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_visitStaticImport$1, $async$completer);
    },
    visitIncludeRule$1: function(node) {
      return this.visitIncludeRule$body$_EvaluateVisitor(node);
    },
    visitIncludeRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, nodeWithSpan, t1, t2, contentCallable, mixin;
      var $async$visitIncludeRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              mixin = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitIncludeRule_closure2($async$self, node));
              if (mixin == null)
                throw H.wrapException($async$self._async_evaluate$_exception$2("Undefined mixin.", node.span));
              nodeWithSpan = new B._FakeAstNode(new E._EvaluateVisitor_visitIncludeRule_closure3(node));
              $async$goto = type$.legacy_AsyncBuiltInCallable._is(mixin) ? 3 : 5;
              break;
            case 3:
              // then
              if (node.content != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2("Mixin doesn't accept a content block.", node.span));
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan), $async$visitIncludeRule$1);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment._is(mixin) ? 7 : 9;
              break;
            case 7:
              // then
              t1 = node.content;
              t2 = t1 == null;
              if (!t2 && !type$.legacy_MixinRule._as(mixin.declaration).hasContent)
                throw H.wrapException(E.MultiSpanSassRuntimeException$("Mixin doesn't accept a content block.", node.get$spanWithoutContent(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate$_stackTrace$1(node.get$spanWithoutContent())));
              contentCallable = t2 ? null : new E.UserDefinedCallable(t1, $async$self._async_evaluate$_environment.closure$0(), type$.UserDefinedCallable_legacy_AsyncEnvironment);
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate$_runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new E._EvaluateVisitor_visitIncludeRule_closure4($async$self, contentCallable, mixin, nodeWithSpan)), $async$visitIncludeRule$1);
            case 10:
              // returning from await.
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              throw H.wrapException(P.UnsupportedError$("Unknown callable type " + mixin.toString$0(0) + "."));
            case 8:
              // join
            case 4:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitIncludeRule$1, $async$completer);
    },
    visitMixinRule$1: function(node) {
      return this.visitMixinRule$body$_EvaluateVisitor(node);
    },
    visitMixinRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;
      var $async$visitMixinRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate$_environment;
              t2 = t1.closure$0();
              t3 = t1._async_environment$_mixins;
              index = t3.length - 1;
              t4 = node.name;
              t1._async_environment$_mixinIndices.$indexSet(0, t4, index);
              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitMixinRule$1, $async$completer);
    },
    visitLoudComment$1: function(node) {
      return this.visitLoudComment$body$_EvaluateVisitor(node);
    },
    visitLoudComment$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2;
      var $async$visitLoudComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_inFunction) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self._async_evaluate$_parent;
              t2 = $async$self._async_evaluate$_root;
              if (t1 == t2 && $async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source))
                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;
              t1 = node.text;
              $async$temp1 = $async$self._async_evaluate$_parent;
              $async$temp2 = R;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(t1), $async$visitLoudComment$1);
            case 3:
              // returning from await.
              $async$temp1.addChild$1(new $async$temp2.ModifiableCssComment($async$result, t1.span));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitLoudComment$1, $async$completer);
    },
    visitMediaRule$1: function(node) {
      return this.visitMediaRule$body$_EvaluateVisitor(node);
    },
    visitMediaRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, queries, t1, mergedQueries;
      var $async$visitMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Media_, node.span));
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_visitMediaQueries$1(node.query), $async$visitMediaRule$1);
            case 3:
              // returning from await.
              queries = $async$result;
              t1 = $async$self._async_evaluate$_mediaQueries;
              mergedQueries = t1 == null ? null : $async$self._async_evaluate$_mergeMediaQueries$2(t1, queries);
              t1 = mergedQueries == null;
              if (!t1 && mergedQueries.length === 0) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = t1 ? queries : mergedQueries;
              $async$goto = 4;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new E._EvaluateVisitor_visitMediaRule_closure1($async$self, mergedQueries, queries, node), node.hasDeclarations, new E._EvaluateVisitor_visitMediaRule_closure2(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null), $async$visitMediaRule$1);
            case 4:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitMediaRule$1, $async$completer);
    },
    _async_evaluate$_visitMediaQueries$1: function(interpolation) {
      return this._visitMediaQueries$body$_EvaluateVisitor(interpolation);
    },
    _visitMediaQueries$body$_EvaluateVisitor: function(interpolation) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_List_legacy_CssMediaQuery),
        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;
      var $async$_async_evaluate$_visitMediaQueries$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = interpolation;
              $async$temp2 = E;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$2$warnForColor(interpolation, true), $async$_async_evaluate$_visitMediaQueries$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$self._async_evaluate$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor__visitMediaQueries_closure0($async$self, $async$result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_visitMediaQueries$1, $async$completer);
    },
    _async_evaluate$_mergeMediaQueries$2: function(queries1, queries2) {
      var t1, t2, t3, t4, t5, result,
        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery);
      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {
          result = t4.merge$1(t5.get$current(t5));
          if (result === C._SingletonCssMediaQueryMergeResult_empty)
            continue;
          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable)
            return null;
          queries.push(t3._as(result).query);
        }
      }
      return queries;
    },
    visitReturnRule$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitSilentComment$1: function(node) {
      return this.visitSilentComment$body$_EvaluateVisitor(node);
    },
    visitSilentComment$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue;
      var $async$visitSilentComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitSilentComment$1, $async$completer);
    },
    visitStyleRule$1: function(node) {
      return this.visitStyleRule$body$_EvaluateVisitor(node);
    },
    visitStyleRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, t1;
      var $async$visitStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Style_, node.span));
              t2 = node.selector;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$3$trim$warnForColor(t2, true, true), $async$visitStyleRule$1);
            case 3:
              // returning from await.
              selectorText = $async$result;
              $async$goto = $async$self._async_evaluate$_inKeyframes ? 4 : 5;
              break;
            case 4:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(new F.CssValue(P.List_List$unmodifiable($async$self._async_evaluate$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure6($async$self, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String), node.span), new E._EvaluateVisitor_visitStyleRule_closure7($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure8(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null), $async$visitStyleRule$1);
            case 6:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // join
              t1.parsedSelector = $async$self._async_evaluate$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure9($async$self, selectorText));
              parsedSelector = $async$self._async_evaluate$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitStyleRule_closure10(t1, $async$self));
              t1.parsedSelector = parsedSelector;
              rule = X.ModifiableCssStyleRule$($async$self._async_evaluate$_extender.addSelector$3(parsedSelector, t2.span, $async$self._async_evaluate$_mediaQueries), node.span, t1.parsedSelector);
              oldAtRootExcludingStyleRule = $async$self._async_evaluate$_atRootExcludingStyleRule;
              $async$self._async_evaluate$_atRootExcludingStyleRule = false;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitStyleRule_closure11($async$self, rule, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure12(), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$visitStyleRule$1);
            case 7:
              // returning from await.
              $async$self._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              if (!($async$self._async_evaluate$_styleRule != null && !oldAtRootExcludingStyleRule)) {
                t1 = $async$self._async_evaluate$_parent.children;
                t1 = !t1.get$isEmpty(t1);
              } else
                t1 = false;
              if (t1) {
                t1 = $async$self._async_evaluate$_parent.children;
                t1.get$last(t1).isGroupEnd = true;
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitStyleRule$1, $async$completer);
    },
    visitSupportsRule$1: function(node) {
      return this.visitSupportsRule$body$_EvaluateVisitor(node);
    },
    visitSupportsRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;
      var $async$visitSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Suppor, node.span));
              t1 = node.condition;
              $async$temp1 = B;
              $async$temp2 = F;
              $async$goto = 4;
              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(t1), $async$visitSupportsRule$1);
            case 4:
              // returning from await.
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through($async$temp1.ModifiableCssSupportsRule$(new $async$temp2.CssValue($async$result, t1.get$span(), type$.CssValue_legacy_String), node.span), new E._EvaluateVisitor_visitSupportsRule_closure1($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitSupportsRule_closure2(), type$.legacy_ModifiableCssSupportsRule, type$.Null), $async$visitSupportsRule$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitSupportsRule$1, $async$completer);
    },
    _async_evaluate$_visitSupportsCondition$1: function(condition) {
      return this._visitSupportsCondition$body$_EvaluateVisitor(condition);
    },
    _visitSupportsCondition$body$_EvaluateVisitor: function(condition) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;
      var $async$_async_evaluate$_visitSupportsCondition$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = condition instanceof U.SupportsOperation ? 3 : 5;
              break;
            case 3:
              // then
              t1 = condition.operator;
              $async$temp1 = H;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_parenthesize$2(condition.left, t1), $async$_async_evaluate$_visitSupportsCondition$1);
            case 6:
              // returning from await.
              $async$temp1 = $async$temp1.S($async$result) + " " + t1 + " ";
              $async$temp2 = H;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate$_parenthesize$2(condition.right, t1), $async$_async_evaluate$_visitSupportsCondition$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1 + $async$temp2.S($async$result);
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = condition instanceof M.SupportsNegation ? 8 : 10;
              break;
            case 8:
              // then
              $async$temp1 = H;
              $async$goto = 11;
              return P._asyncAwait($async$self._async_evaluate$_parenthesize$1(condition.condition), $async$_async_evaluate$_visitSupportsCondition$1);
            case 11:
              // returning from await.
              $async$returnValue = "not " + $async$temp1.S($async$result);
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 9;
              break;
            case 10:
              // else
              $async$goto = condition instanceof X.SupportsInterpolation ? 12 : 14;
              break;
            case 12:
              // then
              $async$goto = 15;
              return P._asyncAwait($async$self._evaluateToCss$2$quote(condition.expression, false), $async$_async_evaluate$_visitSupportsCondition$1);
            case 15:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 13;
              break;
            case 14:
              // else
              $async$goto = condition instanceof L.SupportsDeclaration ? 16 : 18;
              break;
            case 16:
              // then
              $async$temp1 = H;
              $async$goto = 19;
              return P._asyncAwait($async$self._evaluateToCss$1(condition.name), $async$_async_evaluate$_visitSupportsCondition$1);
            case 19:
              // returning from await.
              $async$temp1 = "(" + $async$temp1.S($async$result) + ": ";
              $async$temp2 = H;
              $async$goto = 20;
              return P._asyncAwait($async$self._evaluateToCss$1(condition.value), $async$_async_evaluate$_visitSupportsCondition$1);
            case 20:
              // returning from await.
              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 17;
              break;
            case 18:
              // else
              $async$goto = condition instanceof F.SupportsFunction ? 21 : 23;
              break;
            case 21:
              // then
              $async$temp1 = H;
              $async$goto = 24;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(condition.name), $async$_async_evaluate$_visitSupportsCondition$1);
            case 24:
              // returning from await.
              $async$temp1 = $async$temp1.S($async$result) + "(";
              $async$temp2 = H;
              $async$goto = 25;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(condition.$arguments), $async$_async_evaluate$_visitSupportsCondition$1);
            case 25:
              // returning from await.
              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 22;
              break;
            case 23:
              // else
              $async$goto = condition instanceof Y.SupportsAnything ? 26 : 28;
              break;
            case 26:
              // then
              $async$temp1 = H;
              $async$goto = 29;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(condition.contents), $async$_async_evaluate$_visitSupportsCondition$1);
            case 29:
              // returning from await.
              $async$returnValue = "(" + $async$temp1.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 27;
              break;
            case 28:
              // else
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 27:
              // join
            case 22:
              // join
            case 17:
              // join
            case 13:
              // join
            case 9:
              // join
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_visitSupportsCondition$1, $async$completer);
    },
    _async_evaluate$_parenthesize$2: function(condition, operator) {
      return this._parenthesize$body$_EvaluateVisitor(condition, operator);
    },
    _async_evaluate$_parenthesize$1: function(condition) {
      return this._async_evaluate$_parenthesize$2(condition, null);
    },
    _parenthesize$body$_EvaluateVisitor: function(condition, operator) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$_async_evaluate$_parenthesize$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!(condition instanceof M.SupportsNegation))
                if (condition instanceof U.SupportsOperation)
                  t1 = operator == null || operator !== condition.operator;
                else
                  t1 = false;
              else
                t1 = true;
              $async$goto = t1 ? 3 : 5;
              break;
            case 3:
              // then
              $async$temp1 = H;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(condition), $async$_async_evaluate$_parenthesize$2);
            case 6:
              // returning from await.
              $async$returnValue = "(" + $async$temp1.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(condition), $async$_async_evaluate$_parenthesize$2);
            case 7:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_parenthesize$2, $async$completer);
    },
    visitVariableDeclaration$1: function(node) {
      return this.visitVariableDeclaration$body$_EvaluateVisitor(node);
    },
    visitVariableDeclaration$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, value, t2, $async$temp1, $async$temp2, $async$temp3;
      var $async$visitVariableDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (node.isGuarded) {
                if (node.namespace == null && $async$self._async_evaluate$_environment._async_environment$_variables.length === 1) {
                  t1 = $async$self._async_evaluate$_configuration._values;
                  t1 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, node.name);
                  if (t1 != null) {
                    $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure2($async$self, node, t1));
                    $async$returnValue = null;
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                }
                value = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure3($async$self, node));
                if (value != null && !value.$eq(0, C.C_SassNull0)) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
              }
              if (node.isGlobal && !$async$self._async_evaluate$_environment.globalVariableExists$1(node.name)) {
                t1 = $async$self._async_evaluate$_environment._async_environment$_variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName(node.span) + ": null` at the root of the\nstylesheet.";
                t2 = node.span;
                $async$self._async_evaluate$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, $async$self._async_evaluate$_stackTrace$1(t2));
              }
              $async$temp1 = node;
              $async$temp2 = E;
              $async$temp3 = node;
              $async$goto = 3;
              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitVariableDeclaration$1);
            case 3:
              // returning from await.
              $async$self._async_evaluate$_addExceptionSpan$2($async$temp1, new $async$temp2._EvaluateVisitor_visitVariableDeclaration_closure4($async$self, $async$temp3, $async$result.withoutSlash$0()));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitVariableDeclaration$1, $async$completer);
    },
    visitUseRule$1: function(node) {
      return this.visitUseRule$body$_EvaluateVisitor(node);
    },
    visitUseRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, configuration, t3, _i, variable, t4, t5, t1, t2, $async$temp1, $async$temp2, $async$temp3;
      var $async$visitUseRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.configuration;
              t2 = t1.length;
              $async$goto = t2 === 0 ? 3 : 5;
              break;
            case 3:
              // then
              configuration = C.Configuration_Map_empty_null_true;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);
              _i = 0;
            case 6:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 8;
                break;
              }
              variable = t1[_i];
              t4 = variable.name;
              t5 = variable.expression;
              $async$temp1 = t3;
              $async$temp2 = t4;
              $async$temp3 = Z;
              $async$goto = 9;
              return P._asyncAwait(t5.accept$1($async$self), $async$visitUseRule$1);
            case 9:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate$_expressionNode$1(t5)));
            case 7:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 6;
              break;
            case 8:
              // after for
              configuration = new A.Configuration(t3, node, false);
            case 4:
              // join
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate$_loadModule$5$configuration(node.url, "@use", node, new E._EvaluateVisitor_visitUseRule_closure0($async$self, node), configuration), $async$visitUseRule$1);
            case 10:
              // returning from await.
              $async$self._async_evaluate$_assertConfigurationIsEmpty$1(configuration);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitUseRule$1, $async$completer);
    },
    visitWarnRule$1: function(node) {
      return this.visitWarnRule$body$_EvaluateVisitor(node);
    },
    visitWarnRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, value, t1;
      var $async$visitWarnRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitWarnRule_closure0($async$self, node), type$.legacy_Value), $async$visitWarnRule$1);
            case 3:
              // returning from await.
              value = $async$result;
              t1 = value instanceof D.SassString ? value.text : $async$self._async_evaluate$_serialize$2(value, node.expression);
              $async$self._async_evaluate$_logger.warn$2$trace(0, t1, $async$self._async_evaluate$_stackTrace$1(node.span));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitWarnRule$1, $async$completer);
    },
    visitWhileRule$1: function(node) {
      return this._async_evaluate$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitWhileRule_closure0(this, node), true, node.hasDeclarations, type$.legacy_Value);
    },
    visitBinaryOperationExpression$1: function(node) {
      return this._addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitBinaryOperationExpression_closure0(this, node), type$.legacy_Value);
    },
    visitValueExpression$1: function(node) {
      return this.visitValueExpression$body$_EvaluateVisitor(node);
    },
    visitValueExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue;
      var $async$visitValueExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = node.value;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitValueExpression$1, $async$completer);
    },
    visitVariableExpression$1: function(node) {
      return this.visitVariableExpression$body$_EvaluateVisitor(node);
    },
    visitVariableExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, result;
      var $async$visitVariableExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              result = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableExpression_closure0($async$self, node));
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              throw H.wrapException($async$self._async_evaluate$_exception$2("Undefined variable.", node.span));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitVariableExpression$1, $async$completer);
    },
    visitUnaryOperationExpression$1: function(node) {
      return this.visitUnaryOperationExpression$body$_EvaluateVisitor(node);
    },
    visitUnaryOperationExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, operand, t1;
      var $async$visitUnaryOperationExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 3;
                return P._asyncAwait(node.operand.accept$1($async$self), $async$visitUnaryOperationExpression$1);
              case 3:
                // returning from await.
                operand = $async$result;
                t1 = node.operator;
                switch (t1) {
                  case C.UnaryOperator_j2w:
                    $async$returnValue = operand.unaryPlus$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.UnaryOperator_U4G:
                    $async$returnValue = operand.unaryMinus$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.UnaryOperator_zDx:
                    operand.toString;
                    $async$returnValue = new D.SassString("/" + N.serializeValue0(operand, false, true), false);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.UnaryOperator_not_not:
                    $async$returnValue = operand.unaryNot$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  default:
                    throw H.wrapException(P.StateError$("Unknown unary operator " + H.S(t1) + "."));
                }
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$visitUnaryOperationExpression$1, $async$completer);
    },
    visitBooleanExpression$1: function(node) {
      return this.visitBooleanExpression$body$_EvaluateVisitor(node);
    },
    visitBooleanExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassBoolean),
        $async$returnValue;
      var $async$visitBooleanExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = node.value ? C.SassBoolean_true0 : C.SassBoolean_false0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitBooleanExpression$1, $async$completer);
    },
    visitIfExpression$1: function(node) {
      return this.visitIfExpression$body$_EvaluateVisitor(node);
    },
    visitIfExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, condition, ifTrue, ifFalse, pair, positional, named, t1;
      var $async$visitIfExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_evaluateMacroArguments$1(node), $async$visitIfExpression$1);
            case 3:
              // returning from await.
              pair = $async$result;
              positional = pair.item1;
              named = pair.item2;
              t1 = J.getInterceptor$asx(positional);
              $async$self._async_evaluate$_verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration(), node);
              condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, "condition");
              ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, "if-true");
              ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, "if-false");
              $async$goto = 5;
              return P._asyncAwait(condition.accept$1($async$self), $async$visitIfExpression$1);
            case 5:
              // returning from await.
              $async$goto = 4;
              return P._asyncAwait(($async$result.get$isTruthy() ? ifTrue : ifFalse).accept$1($async$self), $async$visitIfExpression$1);
            case 4:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitIfExpression$1, $async$completer);
    },
    visitNullExpression$1: function(node) {
      return this.visitNullExpression$body$_EvaluateVisitor(node);
    },
    visitNullExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNull),
        $async$returnValue;
      var $async$visitNullExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = C.C_SassNull0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitNullExpression$1, $async$completer);
    },
    visitNumberExpression$1: function(node) {
      return this.visitNumberExpression$body$_EvaluateVisitor(node);
    },
    visitNumberExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber),
        $async$returnValue, t1, t2;
      var $async$visitNumberExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.value;
              t2 = node.unit;
              $async$returnValue = t2 == null ? new N.UnitlessSassNumber(t1, null) : new L.SingleUnitSassNumber(t2, t1, null);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitNumberExpression$1, $async$completer);
    },
    visitParenthesizedExpression$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitColorExpression$1: function(node) {
      return this.visitColorExpression$body$_EvaluateVisitor(node);
    },
    visitColorExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassColor),
        $async$returnValue;
      var $async$visitColorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = node.value;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitColorExpression$1, $async$completer);
    },
    visitListExpression$1: function(node) {
      return this.visitListExpression$body$_EvaluateVisitor(node);
    },
    visitListExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassList),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$visitListExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = D;
              $async$goto = 3;
              return P._asyncAwait(B.mapAsync(node.contents, new E._EvaluateVisitor_visitListExpression_closure0($async$self), type$.legacy_Expression, type$.legacy_Value), $async$visitListExpression$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.SassList$($async$result, node.separator, node.hasBrackets);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitListExpression$1, $async$completer);
    },
    visitMapExpression$1: function(node) {
      return this.visitMapExpression$body$_EvaluateVisitor(node);
    },
    visitMapExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassMap),
        $async$returnValue, $async$self = this, t2, t3, _i, pair, t4, keyValue, valueValue, t1, map, keyNodes;
      var $async$visitMapExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.legacy_Value;
              map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
              keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode);
              t2 = node.pairs, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              pair = t2[_i];
              t4 = pair.item1;
              $async$goto = 6;
              return P._asyncAwait(t4.accept$1($async$self), $async$visitMapExpression$1);
            case 6:
              // returning from await.
              keyValue = $async$result;
              $async$goto = 7;
              return P._asyncAwait(pair.item2.accept$1($async$self), $async$visitMapExpression$1);
            case 7:
              // returning from await.
              valueValue = $async$result;
              if (map.containsKey$1(keyValue))
                throw H.wrapException(E.MultiSpanSassRuntimeException$("Duplicate key.", t4.get$span(), "second key", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), "first key"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate$_stackTrace$1(t4.get$span())));
              map.$indexSet(0, keyValue, valueValue);
              keyNodes.$indexSet(0, keyValue, t4);
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = new A.SassMap(H.ConstantMap_ConstantMap$from(map, t1, t1));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitMapExpression$1, $async$completer);
    },
    visitFunctionExpression$1: function(node) {
      return this.visitFunctionExpression$body$_EvaluateVisitor(node);
    },
    visitFunctionExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, oldInFunction, result, t1, t2, plainName, $async$temp1, $async$temp2;
      var $async$visitFunctionExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = node.name;
              plainName = t2.get$asPlain();
              t1.$function = null;
              $async$goto = (plainName != null ? t1.$function = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure1($async$self, node, plainName)) : null) == null ? 3 : 4;
              break;
            case 3:
              // then
              if (node.namespace != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2("Undefined function.", node.span));
              $async$temp1 = t1;
              $async$temp2 = L;
              $async$goto = 5;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(t2), $async$visitFunctionExpression$1);
            case 5:
              // returning from await.
              $async$temp1.$function = new $async$temp2.PlainCssCallable($async$result);
            case 4:
              // join
              oldInFunction = $async$self._async_evaluate$_inFunction;
              $async$self._async_evaluate$_inFunction = true;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_addErrorSpan$1$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure2(t1, $async$self, node), type$.legacy_Value), $async$visitFunctionExpression$1);
            case 6:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate$_inFunction = oldInFunction;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitFunctionExpression$1, $async$completer);
    },
    _async_evaluate$_getFunction$2$namespace: function($name, namespace) {
      var local = this._async_evaluate$_environment.getFunction$2$namespace($name, namespace);
      if (local != null || namespace != null)
        return local;
      return this._async_evaluate$_builtInFunctions.$index(0, $name);
    },
    _async_evaluate$_runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {
      return this._runUserDefinedCallable$body$_EvaluateVisitor($arguments, callable, nodeWithSpan, run);
    },
    _runUserDefinedCallable$body$_EvaluateVisitor: function($arguments, callable, nodeWithSpan, run) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, evaluated, t1, $name;
      var $async$_async_evaluate$_runUserDefinedCallable$4 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_evaluateArguments$1($arguments), $async$_async_evaluate$_runUserDefinedCallable$4);
            case 3:
              // returning from await.
              evaluated = $async$result;
              t1 = callable.declaration.name;
              $name = t1 == null ? "@content" : t1 + "()";
              $async$goto = 4;
              return P._asyncAwait($async$self._async_evaluate$_withStackFrame$1$3($name, nodeWithSpan, new E._EvaluateVisitor__runUserDefinedCallable_closure0($async$self, callable, evaluated, nodeWithSpan, run), type$.legacy_Value), $async$_async_evaluate$_runUserDefinedCallable$4);
            case 4:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_runUserDefinedCallable$4, $async$completer);
    },
    _async_evaluate$_runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {
      return this._runFunctionCallable$body$_EvaluateVisitor($arguments, callable, nodeWithSpan);
    },
    _runFunctionCallable$body$_EvaluateVisitor: function($arguments, callable, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, result, t1, t2, t3, first, _i, argument, rest, $async$temp1;
      var $async$_async_evaluate$_runFunctionCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = type$.legacy_AsyncBuiltInCallable._is(callable) ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate$_runBuiltInCallable$3($arguments, callable, nodeWithSpan), $async$_async_evaluate$_runFunctionCallable$3);
            case 6:
              // returning from await.
              result = $async$result;
              if (result == null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Custom, nodeWithSpan.get$span()));
              $async$returnValue = result.withoutSlash$0();
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment._is(callable) ? 7 : 9;
              break;
            case 7:
              // then
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate$_runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new E._EvaluateVisitor__runFunctionCallable_closure0($async$self, callable)), $async$_async_evaluate$_runFunctionCallable$3);
            case 10:
              // returning from await.
              $async$returnValue = $async$result.withoutSlash$0();
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              $async$goto = callable instanceof L.PlainCssCallable ? 11 : 13;
              break;
            case 11:
              // then
              t1 = $arguments.named;
              if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Plain_, nodeWithSpan.get$span()));
              t1 = H.S(callable.name) + "(";
              t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0;
            case 14:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 16;
                break;
              }
              argument = t2[_i];
              if (first)
                first = false;
              else
                t1 += ", ";
              $async$temp1 = H;
              $async$goto = 17;
              return P._asyncAwait($async$self._evaluateToCss$1(argument), $async$_async_evaluate$_runFunctionCallable$3);
            case 17:
              // returning from await.
              t1 += $async$temp1.S($async$result);
            case 15:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 14;
              break;
            case 16:
              // after for
              t2 = $arguments.rest;
              $async$goto = 18;
              return P._asyncAwait(t2 == null ? null : t2.accept$1($async$self), $async$_async_evaluate$_runFunctionCallable$3);
            case 18:
              // returning from await.
              rest = $async$result;
              if (rest != null) {
                if (!first)
                  t1 += ", ";
                t2 = t1 + H.S($async$self._async_evaluate$_serialize$2(rest, t2));
                t1 = t2;
              }
              t1 += H.Primitives_stringFromCharCode(41);
              $async$returnValue = new D.SassString(t1.charCodeAt(0) == 0 ? t1 : t1, false);
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 12;
              break;
            case 13:
              // else
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // join
            case 8:
              // join
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_runFunctionCallable$3, $async$completer);
    },
    _async_evaluate$_runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {
      return this._runBuiltInCallable$body$_EvaluateVisitor($arguments, callable, nodeWithSpan);
    },
    _runBuiltInCallable$body$_EvaluateVisitor: function($arguments, callable, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, evaluated, oldCallableNode, $async$exception;
      var $async$_async_evaluate$_runBuiltInCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_evaluateArguments$2$trackSpans($arguments, false), $async$_async_evaluate$_runBuiltInCallable$3);
            case 3:
              // returning from await.
              evaluated = $async$result;
              oldCallableNode = $async$self._async_evaluate$_callableNode;
              $async$self._async_evaluate$_callableNode = nodeWithSpan;
              namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);
              tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);
              overload = tuple.item1;
              callback = tuple.item2;
              $async$self._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__runBuiltInCallable_closure1(overload, evaluated, namedSet));
              declaredArguments = overload.$arguments;
              i = evaluated.positional.length, t1 = declaredArguments.length;
            case 4:
              // for condition
              if (!(i < t1)) {
                // goto after for
                $async$goto = 6;
                break;
              }
              argument = declaredArguments[i];
              t2 = evaluated.positional;
              t3 = evaluated.named.remove$1(0, argument.name);
              $async$goto = t3 == null ? 7 : 8;
              break;
            case 7:
              // then
              t3 = argument.defaultValue;
              $async$goto = 9;
              return P._asyncAwait(t3 == null ? null : t3.accept$1($async$self), $async$_async_evaluate$_runBuiltInCallable$3);
            case 9:
              // returning from await.
              t3 = $async$result;
            case 8:
              // join
              t2.push(t3);
            case 5:
              // for update
              ++i;
              // goto for condition
              $async$goto = 4;
              break;
            case 6:
              // after for
              if (overload.restArgument != null) {
                if (evaluated.positional.length > t1) {
                  rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);
                  C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);
                } else
                  rest = C.List_empty5;
                t1 = evaluated.named;
                argumentList = D.SassArgumentList$(rest, t1, evaluated.separator === C.ListSeparator_undecided ? C.ListSeparator_comma : evaluated.separator);
                evaluated.positional.push(argumentList);
              } else
                argumentList = null;
              result = null;
              $async$handler = 11;
              $async$goto = 14;
              return P._asyncAwait(callback.call$1(evaluated.positional), $async$_async_evaluate$_runBuiltInCallable$3);
            case 14:
              // returning from await.
              result = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 13;
              break;
            case 11:
              // catch
              $async$handler = 10;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.legacy_SassRuntimeException._is(t1))
                throw $async$exception;
              else if (t1 instanceof E.MultiSpanSassScriptException) {
                error = t1;
                throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));
              } else if (t1 instanceof E.MultiSpanSassException) {
                error0 = t1;
                throw H.wrapException(E.MultiSpanSassRuntimeException$(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, $async$self._async_evaluate$_stackTrace$1(error0.get$span())));
              } else {
                error1 = t1;
                message = null;
                try {
                  message = H._asStringS(J.get$message$x(error1));
                } catch (exception) {
                  H.unwrapException($async$exception);
                  message0 = J.toString$0$(error1);
                  message = message0;
                }
                throw H.wrapException($async$self._async_evaluate$_exception$2(message, nodeWithSpan.get$span()));
              }
              // goto after finally
              $async$goto = 13;
              break;
            case 10:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 13:
              // after finally
              $async$self._async_evaluate$_callableNode = oldCallableNode;
              if (argumentList == null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = evaluated.named;
              if (t1.get$isEmpty(t1)) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              if (argumentList._wereKeywordsAccessed) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = evaluated.named;
              t1 = t1.get$keys(t1);
              t1 = "No " + B.pluralize("argument", t1.get$length(t1), null) + " named ";
              t2 = evaluated.named;
              throw H.wrapException(E.MultiSpanSassRuntimeException$(t1 + H.S(B.toSentence(t2.get$keys(t2).map$1$1(0, new E._EvaluateVisitor__runBuiltInCallable_closure2(), type$.legacy_Object), "or")) + ".", nodeWithSpan.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_runBuiltInCallable$3, $async$completer);
    },
    _async_evaluate$_evaluateArguments$2$trackSpans: function($arguments, trackSpans) {
      return this._evaluateArguments$body$_EvaluateVisitor($arguments, trackSpans);
    },
    _async_evaluate$_evaluateArguments$1: function($arguments) {
      return this._async_evaluate$_evaluateArguments$2$trackSpans($arguments, null);
    },
    _evaluateArguments$body$_EvaluateVisitor: function($arguments, trackSpans) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy__ArgumentResults),
        $async$returnValue, $async$self = this, t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, $async$temp1, $async$temp2;
      var $async$_async_evaluate$_evaluateArguments$2$trackSpans = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (trackSpans == null)
                trackSpans = $async$self._async_evaluate$_sourceMap;
              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
              t2 = $arguments.positional, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$temp1 = t1;
              $async$goto = 6;
              return P._asyncAwait(t2[_i].accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);
            case 6:
              // returning from await.
              $async$temp1.push($async$result);
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t4 = type$.legacy_String;
              t5 = type$.legacy_Value;
              t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);
              t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8);
            case 7:
              // for condition
              if (!t8.moveNext$0()) {
                // goto after for
                $async$goto = 8;
                break;
              }
              t9 = t8.get$current(t8);
              $async$temp1 = t6;
              $async$temp2 = t9.key;
              $async$goto = 9;
              return P._asyncAwait(t9.value.accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);
            case 9:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, $async$result);
              // goto for condition
              $async$goto = 7;
              break;
            case 8:
              // after for
              if (trackSpans) {
                t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode);
                for (_i = 0; _i < t3; ++_i)
                  t8.push($async$self._async_evaluate$_expressionNode$1(t2[_i]));
                positionalNodes = t8;
              } else
                positionalNodes = null;
              if (trackSpans) {
                t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);
                for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
                  t7 = t3.get$current(t3);
                  t2.$indexSet(0, t7.key, $async$self._async_evaluate$_expressionNode$1(t7.value));
                }
                namedNodes = t2;
              } else
                namedNodes = null;
              t2 = $arguments.rest;
              if (t2 == null) {
                $async$returnValue = new E._ArgumentResults0(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 10;
              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);
            case 10:
              // returning from await.
              rest = $async$result;
              restNodeForSpan = trackSpans ? $async$self._async_evaluate$_expressionNode$1(t2) : null;
              if (rest instanceof A.SassMap) {
                $async$self._async_evaluate$_addRestMap$1$3(t6, rest, t2, t5);
                if (namedNodes != null) {
                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);
                  for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString; t3.moveNext$0();)
                    t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);
                  namedNodes.addAll$1(0, t2);
                }
                separator = C.ListSeparator_undecided;
              } else if (rest instanceof D.SassList) {
                t2 = rest._list$_contents;
                C.JSArray_methods.addAll$1(t1, t2);
                if (positionalNodes != null)
                  C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode));
                separator = rest.separator;
                if (rest instanceof D.SassArgumentList) {
                  rest._wereKeywordsAccessed = true;
                  rest._keywords.forEach$1(0, new E._EvaluateVisitor__evaluateArguments_closure0(t6, namedNodes, restNodeForSpan));
                }
              } else {
                t1.push(rest);
                if (positionalNodes != null)
                  positionalNodes.push(restNodeForSpan);
                separator = C.ListSeparator_undecided;
              }
              t2 = $arguments.keywordRest;
              if (t2 == null) {
                $async$returnValue = new E._ArgumentResults0(t1, positionalNodes, t6, namedNodes, separator);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 11;
              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);
            case 11:
              // returning from await.
              keywordRest = $async$result;
              keywordRestNodeForSpan = trackSpans ? $async$self._async_evaluate$_expressionNode$1(t2) : null;
              if (keywordRest instanceof A.SassMap) {
                $async$self._async_evaluate$_addRestMap$1$3(t6, keywordRest, t2, t5);
                if (namedNodes != null) {
                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);
                  for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString; t3.moveNext$0();)
                    t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);
                  namedNodes.addAll$1(0, t2);
                }
                $async$returnValue = new E._ArgumentResults0(t1, positionalNodes, t6, namedNodes, separator);
                // goto return
                $async$goto = 1;
                break;
              } else
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + ").", t2.get$span()));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_evaluateArguments$2$trackSpans, $async$completer);
    },
    _async_evaluate$_evaluateMacroArguments$1: function(invocation) {
      return this._evaluateMacroArguments$body$_EvaluateVisitor(invocation);
    },
    _evaluateMacroArguments$body$_EvaluateVisitor: function(invocation) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression),
        $async$returnValue, $async$self = this, t3, positional, named, rest, keywordRest, t1, t2;
      var $async$_async_evaluate$_evaluateMacroArguments$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = invocation.$arguments;
              t2 = t1.rest;
              if (t2 == null) {
                $async$returnValue = new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);
                // goto return
                $async$goto = 1;
                break;
              }
              t3 = t1.positional;
              positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1("JSArray<1>"));
              t3 = type$.legacy_Expression;
              named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);
              $async$goto = 3;
              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate$_evaluateMacroArguments$1);
            case 3:
              // returning from await.
              rest = $async$result;
              if (rest instanceof A.SassMap)
                $async$self._async_evaluate$_addRestMap$1$4(named, rest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure3(), t3);
              else if (rest instanceof D.SassList) {
                t2 = rest._list$_contents;
                C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new E._EvaluateVisitor__evaluateMacroArguments_closure4(), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Expression*>")));
                if (rest instanceof D.SassArgumentList) {
                  rest._wereKeywordsAccessed = true;
                  rest._keywords.forEach$1(0, new E._EvaluateVisitor__evaluateMacroArguments_closure5(named));
                }
              } else
                positional.push(new F.ValueExpression(rest, null));
              t1 = t1.keywordRest;
              if (t1 == null) {
                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 4;
              return P._asyncAwait(t1.accept$1($async$self), $async$_async_evaluate$_evaluateMacroArguments$1);
            case 4:
              // returning from await.
              keywordRest = $async$result;
              if (keywordRest instanceof A.SassMap) {
                $async$self._async_evaluate$_addRestMap$1$4(named, keywordRest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure6(), t3);
                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);
                // goto return
                $async$goto = 1;
                break;
              } else
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + ").", invocation.span));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_evaluateMacroArguments$1, $async$completer);
    },
    _async_evaluate$_addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {
      var t1 = {};
      t1.convert = convert;
      if (convert == null)
        t1.convert = new E._EvaluateVisitor__addRestMap_closure1($T);
      map.contents.forEach$1(0, new E._EvaluateVisitor__addRestMap_closure2(t1, this, values, map, nodeWithSpan));
    },
    _async_evaluate$_addRestMap$1$3: function(values, map, nodeWithSpan, $T) {
      return this._async_evaluate$_addRestMap$1$4(values, map, nodeWithSpan, null, $T);
    },
    _async_evaluate$_verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {
      return this._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__verifyArguments_closure0($arguments, positional, named));
    },
    visitSelectorExpression$1: function(node) {
      return this.visitSelectorExpression$body$_EvaluateVisitor(node);
    },
    visitSelectorExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1;
      var $async$visitSelectorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate$_styleRule;
              if (t1 == null) {
                $async$returnValue = C.C_SassNull0;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = t1.originalSelector.get$asSassList();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitSelectorExpression$1, $async$completer);
    },
    visitStringExpression$1: function(node) {
      return this.visitStringExpression$body$_EvaluateVisitor(node);
    },
    visitStringExpression$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassString),
        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;
      var $async$visitStringExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = D;
              $async$temp2 = J;
              $async$goto = 3;
              return P._asyncAwait(B.mapAsync(node.text.contents, new E._EvaluateVisitor_visitStringExpression_closure0($async$self), type$.legacy_Object, type$.legacy_String), $async$visitStringExpression$1);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1.SassString($async$temp2.join$0$ax($async$result), node.hasQuotes);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitStringExpression$1, $async$completer);
    },
    visitCssAtRule$1: function(node) {
      return this.visitCssAtRule$body$_EvaluateVisitor(node);
    },
    visitCssAtRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, wasInKeyframes, wasInUnknownAtRule, t1;
      var $async$visitCssAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.At_rul, node.span));
              if (node.isChildless) {
                $async$self._async_evaluate$_parent.addChild$1(U.ModifiableCssAtRule$(node.name, node.span, true, node.value));
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              wasInKeyframes = $async$self._async_evaluate$_inKeyframes;
              wasInUnknownAtRule = $async$self._async_evaluate$_inUnknownAtRule;
              t1 = node.name;
              if (B.unvendor(t1.get$value(t1)) === "keyframes")
                $async$self._async_evaluate$_inKeyframes = true;
              else
                $async$self._async_evaluate$_inUnknownAtRule = true;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$(t1, node.span, false, node.value), new E._EvaluateVisitor_visitCssAtRule_closure1($async$self, node), false, new E._EvaluateVisitor_visitCssAtRule_closure2(), type$.legacy_ModifiableCssAtRule, type$.Null), $async$visitCssAtRule$1);
            case 3:
              // returning from await.
              $async$self._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;
              $async$self._async_evaluate$_inKeyframes = wasInKeyframes;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssAtRule$1, $async$completer);
    },
    visitCssComment$1: function(node) {
      return this.visitCssComment$body$_EvaluateVisitor(node);
    },
    visitCssComment$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2;
      var $async$visitCssComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate$_parent;
              t2 = $async$self._async_evaluate$_root;
              if (t1 == t2 && $async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source))
                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;
              $async$self._async_evaluate$_parent.addChild$1(new R.ModifiableCssComment(node.text, node.span));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssComment$1, $async$completer);
    },
    visitCssDeclaration$1: function(node) {
      return this.visitCssDeclaration$body$_EvaluateVisitor(node);
    },
    visitCssDeclaration$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$visitCssDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.name;
              $async$self._async_evaluate$_parent.addChild$1(L.ModifiableCssDeclaration$(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), "--"), node.valueSpanForMap));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssDeclaration$1, $async$completer);
    },
    visitCssImport$1: function(node) {
      return this.visitCssImport$body$_EvaluateVisitor(node);
    },
    visitCssImport$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, modifiableNode, t1, t2;
      var $async$visitCssImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              modifiableNode = F.ModifiableCssImport$(node.url, node.span, node.media, node.supports);
              t1 = $async$self._async_evaluate$_parent;
              t2 = $async$self._async_evaluate$_root;
              if (t1 != t2)
                t1.addChild$1(modifiableNode);
              else if ($async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {
                $async$self._async_evaluate$_root.addChild$1(modifiableNode);
                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;
              } else {
                t1 = $async$self._async_evaluate$_outOfOrderImports;
                (t1 == null ? $async$self._async_evaluate$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t1).push(modifiableNode);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssImport$1, $async$completer);
    },
    visitCssKeyframeBlock$1: function(node) {
      return this.visitCssKeyframeBlock$body$_EvaluateVisitor(node);
    },
    visitCssKeyframeBlock$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$visitCssKeyframeBlock$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(node.selector, node.span), new E._EvaluateVisitor_visitCssKeyframeBlock_closure1($async$self, node), false, new E._EvaluateVisitor_visitCssKeyframeBlock_closure2(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null), $async$visitCssKeyframeBlock$1);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssKeyframeBlock$1, $async$completer);
    },
    visitCssMediaRule$1: function(node) {
      return this.visitCssMediaRule$body$_EvaluateVisitor(node);
    },
    visitCssMediaRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, mergedQueries;
      var $async$visitCssMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Media_, node.span));
              t1 = $async$self._async_evaluate$_mediaQueries;
              mergedQueries = t1 == null ? null : $async$self._async_evaluate$_mergeMediaQueries$2(t1, node.queries);
              t1 = mergedQueries == null;
              if (!t1 && mergedQueries.length === 0) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = t1 ? node.queries : mergedQueries;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new E._EvaluateVisitor_visitCssMediaRule_closure1($async$self, mergedQueries, node), false, new E._EvaluateVisitor_visitCssMediaRule_closure2(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null), $async$visitCssMediaRule$1);
            case 3:
              // returning from await.
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssMediaRule$1, $async$completer);
    },
    visitCssStyleRule$1: function(node) {
      return this.visitCssStyleRule$body$_EvaluateVisitor(node);
    },
    visitCssStyleRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule;
      var $async$visitCssStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Style_, node.span));
              t1 = node.selector;
              t2 = t1.value;
              t3 = $async$self._async_evaluate$_styleRule;
              t3 = t3 == null ? null : t3.originalSelector;
              originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !$async$self._async_evaluate$_atRootExcludingStyleRule);
              rule = X.ModifiableCssStyleRule$($async$self._async_evaluate$_extender.addSelector$3(originalSelector, t1.span, $async$self._async_evaluate$_mediaQueries), node.span, originalSelector);
              oldAtRootExcludingStyleRule = $async$self._async_evaluate$_atRootExcludingStyleRule;
              $async$self._async_evaluate$_atRootExcludingStyleRule = false;
              $async$goto = 2;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitCssStyleRule_closure1($async$self, rule, node), false, new E._EvaluateVisitor_visitCssStyleRule_closure2(), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$visitCssStyleRule$1);
            case 2:
              // returning from await.
              $async$self._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              if (!($async$self._async_evaluate$_styleRule != null && !oldAtRootExcludingStyleRule)) {
                t1 = $async$self._async_evaluate$_parent.children;
                t1 = !t1.get$isEmpty(t1);
              } else
                t1 = false;
              if (t1) {
                t1 = $async$self._async_evaluate$_parent.children;
                t1.get$last(t1).isGroupEnd = true;
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssStyleRule$1, $async$completer);
    },
    visitCssStylesheet$1: function(node) {
      return this.visitCssStylesheet$body$_EvaluateVisitor(node);
    },
    visitCssStylesheet$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$visitCssStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.get$iterator$ax(node.get$children(node));
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              $async$goto = 4;
              return P._asyncAwait(t1.get$current(t1).accept$1($async$self), $async$visitCssStylesheet$1);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssStylesheet$1, $async$completer);
    },
    visitCssSupportsRule$1: function(node) {
      return this.visitCssSupportsRule$body$_EvaluateVisitor(node);
    },
    visitCssSupportsRule$body$_EvaluateVisitor: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$visitCssSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Suppor, node.span));
              $async$goto = 2;
              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$(node.condition, node.span), new E._EvaluateVisitor_visitCssSupportsRule_closure1($async$self, node), false, new E._EvaluateVisitor_visitCssSupportsRule_closure2(), type$.legacy_ModifiableCssSupportsRule, type$.Null), $async$visitCssSupportsRule$1);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssSupportsRule$1, $async$completer);
    },
    _async_evaluate$_handleReturn$1$2: function(list, callback) {
      return this._handleReturn$body$_EvaluateVisitor(list, callback);
    },
    _async_evaluate$_handleReturn$2: function(list, callback) {
      return this._async_evaluate$_handleReturn$1$2(list, callback, type$.dynamic);
    },
    _handleReturn$body$_EvaluateVisitor: function(list, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, t1, _i, result;
      var $async$_async_evaluate$_handleReturn$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = list.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < list.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(callback.call$1(list[_i]), $async$_async_evaluate$_handleReturn$1$2);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_handleReturn$1$2, $async$completer);
    },
    _async_evaluate$_withEnvironment$1$2: function(environment, callback, $T) {
      return this._withEnvironment$body$_EvaluateVisitor(environment, callback, $T, $T._eval$1("0*"));
    },
    _withEnvironment$body$_EvaluateVisitor: function(environment, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result, oldEnvironment;
      var $async$_async_evaluate$_withEnvironment$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldEnvironment = $async$self._async_evaluate$_environment;
              $async$self._async_evaluate$_environment = environment;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withEnvironment$1$2);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate$_environment = oldEnvironment;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_withEnvironment$1$2, $async$completer);
    },
    _async_evaluate$_interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {
      return this._interpolationToValue$body$_EvaluateVisitor(interpolation, trim, warnForColor);
    },
    _async_evaluate$_interpolationToValue$1: function(interpolation) {
      return this._async_evaluate$_interpolationToValue$3$trim$warnForColor(interpolation, false, false);
    },
    _async_evaluate$_interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {
      return this._async_evaluate$_interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);
    },
    _interpolationToValue$body$_EvaluateVisitor: function(interpolation, trim, warnForColor) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CssValue_legacy_String),
        $async$returnValue, $async$self = this, result, t1;
      var $async$_async_evaluate$_interpolationToValue$3$trim$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$2$warnForColor(interpolation, warnForColor), $async$_async_evaluate$_interpolationToValue$3$trim$warnForColor);
            case 3:
              // returning from await.
              result = $async$result;
              t1 = trim ? B.trimAscii(result, true) : result;
              $async$returnValue = new F.CssValue(t1, interpolation.span, type$.CssValue_legacy_String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_interpolationToValue$3$trim$warnForColor, $async$completer);
    },
    _async_evaluate$_performInterpolation$2$warnForColor: function(interpolation, warnForColor) {
      return this._performInterpolation$body$_EvaluateVisitor(interpolation, warnForColor);
    },
    _async_evaluate$_performInterpolation$1: function(interpolation) {
      return this._async_evaluate$_performInterpolation$2$warnForColor(interpolation, false);
    },
    _performInterpolation$body$_EvaluateVisitor: function(interpolation, warnForColor) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$_async_evaluate$_performInterpolation$2$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = J;
              $async$goto = 3;
              return P._asyncAwait(B.mapAsync(interpolation.contents, new E._EvaluateVisitor__performInterpolation_closure0($async$self, warnForColor), type$.legacy_Object, type$.legacy_String), $async$_async_evaluate$_performInterpolation$2$warnForColor);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.join$0$ax($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_performInterpolation$2$warnForColor, $async$completer);
    },
    _evaluateToCss$2$quote: function(expression, quote) {
      return this._evaluateToCss$body$_EvaluateVisitor(expression, quote);
    },
    _evaluateToCss$1: function(expression) {
      return this._evaluateToCss$2$quote(expression, true);
    },
    _evaluateToCss$body$_EvaluateVisitor: function(expression, quote) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this;
      var $async$_evaluateToCss$2$quote = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(expression.accept$1($async$self), $async$_evaluateToCss$2$quote);
            case 3:
              // returning from await.
              $async$returnValue = $async$self._async_evaluate$_serialize$3$quote($async$result, expression, quote);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_evaluateToCss$2$quote, $async$completer);
    },
    _async_evaluate$_serialize$3$quote: function(value, nodeWithSpan, quote) {
      return this._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__serialize_closure0(value, quote));
    },
    _async_evaluate$_serialize$2: function(value, nodeWithSpan) {
      return this._async_evaluate$_serialize$3$quote(value, nodeWithSpan, true);
    },
    _async_evaluate$_expressionNode$1: function(expression) {
      var t1;
      if (!this._async_evaluate$_sourceMap)
        return null;
      if (expression instanceof S.VariableExpression) {
        t1 = this._async_evaluate$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);
        return t1 == null ? expression : t1;
      } else
        return expression;
    },
    _async_evaluate$_withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {
      return this._withParent$body$_EvaluateVisitor(node, callback, scopeWhen, through, $S, $T, $T._eval$1("0*"));
    },
    _async_evaluate$_withParent$2$2: function(node, callback, $S, $T) {
      return this._async_evaluate$_withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);
    },
    _async_evaluate$_withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {
      return this._async_evaluate$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);
    },
    _withParent$body$_EvaluateVisitor: function(node, callback, scopeWhen, through, $S, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, oldParent, result;
      var $async$_async_evaluate$_withParent$2$4$scopeWhen$through = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._async_evaluate$_addChild$2$through(node, through);
              oldParent = $async$self._async_evaluate$_parent;
              $async$self._async_evaluate$_parent = node;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1("0*")), $async$_async_evaluate$_withParent$2$4$scopeWhen$through);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate$_parent = oldParent;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_withParent$2$4$scopeWhen$through, $async$completer);
    },
    _async_evaluate$_addChild$2$through: function(node, through) {
      var grandparent,
        $parent = this._async_evaluate$_parent;
      if (through != null) {
        for (; through.call$1($parent);)
          $parent = $parent._parent;
        if ($parent.get$hasFollowingSibling()) {
          grandparent = $parent._parent;
          $parent = $parent.copyWithoutChildren$0();
          grandparent.addChild$1($parent);
        }
      }
      $parent.addChild$1(node);
    },
    _async_evaluate$_addChild$1: function(node) {
      return this._async_evaluate$_addChild$2$through(node, null);
    },
    _async_evaluate$_withStyleRule$1$2: function(rule, callback, $T) {
      return this._withStyleRule$body$_EvaluateVisitor(rule, callback, $T, $T._eval$1("0*"));
    },
    _withStyleRule$body$_EvaluateVisitor: function(rule, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result, oldRule;
      var $async$_async_evaluate$_withStyleRule$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldRule = $async$self._async_evaluate$_styleRule;
              $async$self._async_evaluate$_styleRule = rule;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withStyleRule$1$2);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate$_styleRule = oldRule;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_withStyleRule$1$2, $async$completer);
    },
    _async_evaluate$_withMediaQueries$1$2: function(queries, callback, $T) {
      return this._withMediaQueries$body$_EvaluateVisitor(queries, callback, $T, $T._eval$1("0*"));
    },
    _withMediaQueries$body$_EvaluateVisitor: function(queries, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result, oldMediaQueries;
      var $async$_async_evaluate$_withMediaQueries$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldMediaQueries = $async$self._async_evaluate$_mediaQueries;
              $async$self._async_evaluate$_mediaQueries = queries;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withMediaQueries$1$2);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate$_mediaQueries = oldMediaQueries;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_withMediaQueries$1$2, $async$completer);
    },
    _async_evaluate$_withStackFrame$1$3: function(member, nodeWithSpan, callback, $T) {
      return this._withStackFrame$body$_EvaluateVisitor(member, nodeWithSpan, callback, $T, $T._eval$1("0*"));
    },
    _withStackFrame$body$_EvaluateVisitor: function(member, nodeWithSpan, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, oldMember, result, t1;
      var $async$_async_evaluate$_withStackFrame$1$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate$_stack;
              t1.push(new S.Tuple2($async$self._async_evaluate$_member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode));
              oldMember = $async$self._async_evaluate$_member;
              $async$self._async_evaluate$_member = member;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withStackFrame$1$3);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate$_member = oldMember;
              t1.pop();
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_withStackFrame$1$3, $async$completer);
    },
    _async_evaluate$_stackFrame$2: function(member, span) {
      var url = span.file.url;
      return B.frameForSpan(span, member, url != null && this._async_evaluate$_importCache != null ? this._async_evaluate$_importCache.humanize$1(url) : url);
    },
    _async_evaluate$_stackTrace$1: function(span) {
      var t2, cur, _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);
      for (t2 = _this._async_evaluate$_stack, t2 = new H.MappedListIterable(t2, new E._EvaluateVisitor__stackTrace_closure0(_this), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Frame*>")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      if (span != null)
        t1.push(_this._async_evaluate$_stackFrame$2(_this._async_evaluate$_member, span));
      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));
    },
    _async_evaluate$_stackTrace$0: function() {
      return this._async_evaluate$_stackTrace$1(null);
    },
    _async_evaluate$_warn$3$deprecation: function(message, span, deprecation) {
      return this._async_evaluate$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._async_evaluate$_stackTrace$1(span));
    },
    _async_evaluate$_warn$2: function(message, span) {
      return this._async_evaluate$_warn$3$deprecation(message, span, false);
    },
    _async_evaluate$_exception$2: function(message, span) {
      var t1 = span == null ? C.JSArray_methods.get$last(this._async_evaluate$_stack).item2.get$span() : span;
      return new E.SassRuntimeException(this._async_evaluate$_stackTrace$1(span), message, t1);
    },
    _async_evaluate$_exception$1: function(message) {
      return this._async_evaluate$_exception$2(message, null);
    },
    _async_evaluate$_multiSpanException$3: function(message, primaryLabel, secondaryLabels) {
      var t1 = C.JSArray_methods.get$last(this._async_evaluate$_stack).item2.get$span();
      return new E.MultiSpanSassRuntimeException(this._async_evaluate$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);
    },
    _async_evaluate$_adjustParseError$1$2: function(nodeWithSpan, callback) {
      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException) {
          error = t1;
          t1 = error;
          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);
          span = nodeWithSpan.get$span();
          t1 = span;
          t2 = span;
          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);
          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);
          t1 = span;
          t1 = Y.FileLocation$_(t1.file, t1._file$_start);
          t3 = error;
          t3 = G.SourceSpanException.prototype.get$span.call(t3);
          t3 = Y.FileLocation$_(t3.file, t3._file$_start);
          t4 = span;
          t4 = Y.FileLocation$_(t4.file, t4._file$_start);
          t5 = error;
          t5 = G.SourceSpanException.prototype.get$span.call(t5);
          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);
          throw H.wrapException(this._async_evaluate$_exception$2(error._span_exception$_message, syntheticSpan));
        } else
          throw exception;
      }
    },
    _async_evaluate$_adjustParseError$2: function(nodeWithSpan, callback) {
      return this._async_evaluate$_adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _async_evaluate$_addExceptionSpan$1$2: function(nodeWithSpan, callback) {
      var error, error0, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.MultiSpanSassScriptException) {
          error = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));
        } else if (t1 instanceof E.SassScriptException) {
          error0 = t1;
          throw H.wrapException(this._async_evaluate$_exception$2(error0.message, nodeWithSpan.get$span()));
        } else
          throw exception;
      }
    },
    _async_evaluate$_addExceptionSpan$2: function(nodeWithSpan, callback) {
      return this._async_evaluate$_addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _addExceptionSpanAsync$1$2: function(nodeWithSpan, callback, $T) {
      return this._addExceptionSpanAsync$body$_EvaluateVisitor(nodeWithSpan, callback, $T, $T._eval$1("0*"));
    },
    _addExceptionSpanAsync$body$_EvaluateVisitor: function(nodeWithSpan, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, error0, t1, exception, $async$exception;
      var $async$_addExceptionSpanAsync$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(callback.call$0(), $async$_addExceptionSpanAsync$1$2);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof E.MultiSpanSassScriptException) {
                error = t1;
                throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));
              } else if (t1 instanceof E.SassScriptException) {
                error0 = t1;
                throw H.wrapException($async$self._async_evaluate$_exception$2(error0.message, nodeWithSpan.get$span()));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_addExceptionSpanAsync$1$2, $async$completer);
    },
    _async_evaluate$_addErrorSpan$1$2: function(nodeWithSpan, callback, $T) {
      return this._addErrorSpan$body$_EvaluateVisitor(nodeWithSpan, callback, $T, $T._eval$1("0*"));
    },
    _addErrorSpan$body$_EvaluateVisitor: function(nodeWithSpan, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, t1, exception, $async$exception;
      var $async$_async_evaluate$_addErrorSpan$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_addErrorSpan$1$2);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.legacy_SassRuntimeException._is(t1)) {
                error = t1;
                t1 = error.get$span();
                if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), "@error"))
                  throw $async$exception;
                throw H.wrapException(E.SassRuntimeException$(error._span_exception$_message, nodeWithSpan.get$span(), $async$self._async_evaluate$_stackTrace$0()));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate$_addErrorSpan$1$2, $async$completer);
    }
  };
  E._EvaluateVisitor_closure9.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._async_evaluate$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  E._EvaluateVisitor_closure10.prototype = {
    call$1: function($arguments) {
      var variable = J.$index$asx($arguments, 0).assertString$1("name"),
        t1 = this.$this._async_evaluate$_environment,
        t2 = variable.text;
      t2.toString;
      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, "_", "-")) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  E._EvaluateVisitor_closure11.prototype = {
    call$1: function($arguments) {
      var module, t2, t3, t4,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this;
      t2 = t1._async_evaluate$_environment;
      t3 = variable.text;
      t3.toString;
      t4 = H.stringReplaceAllUnchecked(t3, "_", "-");
      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._async_evaluate$_builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  E._EvaluateVisitor_closure12.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._async_evaluate$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  E._EvaluateVisitor_closure13.prototype = {
    call$1: function($arguments) {
      var t1 = this.$this._async_evaluate$_environment;
      if (!t1._async_environment$_inMixin)
        throw H.wrapException(E.SassScriptException$(string$.conten));
      return t1._async_environment$_content != null ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  E._EvaluateVisitor_closure14.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._async_evaluate$_environment._async_environment$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString(t4.key, true), t4.value);
      }
      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 36
  };
  E._EvaluateVisitor_closure15.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._async_evaluate$_environment._async_environment$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString(t4.key, true), new F.SassFunction(t4.value));
      }
      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 36
  };
  E._EvaluateVisitor_closure16.prototype = {
    call$1: function($arguments) {
      var module, callable,
        t1 = J.getInterceptor$asx($arguments),
        $name = t1.$index($arguments, 0).assertString$1("name"),
        css = t1.$index($arguments, 1).get$isTruthy();
      t1 = t1.$index($arguments, 2).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      if (css && module != null)
        throw H.wrapException(string$.x24css_a);
      if (css)
        callable = new L.PlainCssCallable($name.text);
      else {
        t1 = this.$this;
        callable = t1._async_evaluate$_addExceptionSpan$2(t1._async_evaluate$_callableNode, new E._EvaluateVisitor__closure4(t1, $name, module));
      }
      if (callable != null)
        return new F.SassFunction(callable);
      throw H.wrapException("Function not found: " + $name.toString$0(0));
    },
    $signature: 212
  };
  E._EvaluateVisitor__closure4.prototype = {
    call$0: function() {
      var t2,
        t1 = this.name.text;
      t1.toString;
      t1 = H.stringReplaceAllUnchecked(t1, "_", "-");
      t2 = this.module;
      t2 = t2 == null ? null : t2.text;
      return this.$this._async_evaluate$_getFunction$2$namespace(t1, t2);
    },
    $signature: 105
  };
  E._EvaluateVisitor_closure17.prototype = {
    call$1: function($arguments) {
      return this.$call$body$_EvaluateVisitor_closure0($arguments);
    },
    $call$body$_EvaluateVisitor_closure0: function($arguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable, t1, $function, args;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$asx($arguments);
              $function = t1.$index($arguments, 0);
              args = type$.legacy_SassArgumentList._as(t1.$index($arguments, 1));
              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);
              t2 = type$.legacy_String;
              t3 = type$.legacy_Expression;
              t4 = $async$self.$this;
              t5 = t4._async_evaluate$_callableNode.get$span();
              t6 = t4._async_evaluate$_callableNode.get$span();
              args._wereKeywordsAccessed = true;
              t7 = args._keywords;
              if (t7.get$isEmpty(t7))
                t7 = null;
              else {
                t8 = type$.legacy_Value;
                t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);
                for (args._wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {
                  t10 = t7.get$current(t7);
                  t9.$indexSet(0, new D.SassString(t10.key, false), t10.value);
                }
                t7 = new F.ValueExpression(new A.SassMap(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._async_evaluate$_callableNode.get$span());
              }
              invocation = new X.ArgumentInvocation(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression(args, t6), t7, t5);
              $async$goto = $function instanceof D.SassString ? 3 : 4;
              break;
            case 3:
              // then
              N.warn(string$.Passin + $function.toString$0(0) + ")) instead.", true);
              $async$goto = 5;
              return P._asyncAwait(t4.visitFunctionExpression$1(new F.FunctionExpression(null, X.Interpolation$(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._async_evaluate$_callableNode.get$span()), invocation, t4._async_evaluate$_callableNode.get$span())), $async$call$1);
            case 5:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              callable = $function.assertFunction$1("function").callable;
              $async$goto = type$.legacy_AsyncCallable._is(callable) ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return P._asyncAwait(t4._async_evaluate$_runFunctionCallable$3(invocation, callable, t4._async_evaluate$_callableNode), $async$call$1);
            case 9:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              throw H.wrapException(E.SassScriptException$("The function " + H.S(callable.get$name(callable)) + string$.x20is_as));
            case 7:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 217
  };
  E._EvaluateVisitor_closure18.prototype = {
    call$1: function($arguments) {
      return this.$call$body$_EvaluateVisitor_closure($arguments);
    },
    $call$body$_EvaluateVisitor_closure: function($arguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, withMap, values, configuration, t2, t3, t1, url;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$asx($arguments);
              url = P.Uri_parse(t1.$index($arguments, 0).assertString$1("url").text);
              t1 = t1.$index($arguments, 1).get$realNull();
              t1 = t1 == null ? null : t1.assertMap$1("with");
              withMap = t1 == null ? null : t1.contents;
              if (withMap != null) {
                values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);
                t1 = $async$self.$this;
                withMap.forEach$1(0, new E._EvaluateVisitor__closure2(values, t1._async_evaluate$_callableNode.get$span()));
                configuration = new A.Configuration(values, t1._async_evaluate$_callableNode, false);
              } else
                configuration = C.Configuration_Map_empty_null_true;
              t1 = $async$self.$this;
              t2 = t1._async_evaluate$_callableNode;
              t3 = t2.get$span();
              t3 = t3 == null ? null : t3.file.url;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, "load-css()", t2, new E._EvaluateVisitor__closure3(t1), t3, configuration, true), $async$call$1);
            case 3:
              // returning from await.
              t1._async_evaluate$_assertConfigurationIsEmpty$2$nameInError(configuration, true);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 126
  };
  E._EvaluateVisitor__closure2.prototype = {
    call$2: function(variable, value) {
      var $name,
        t1 = variable.assertString$1("with key").text;
      t1.toString;
      $name = H.stringReplaceAllUnchecked(t1, "_", "-");
      t1 = this.values;
      if (t1.containsKey$1($name))
        throw H.wrapException("The variable $" + $name + " was configured twice.");
      t1.$indexSet(0, $name, new Z.ConfiguredValue(value, this.span, null));
    },
    $signature: 46
  };
  E._EvaluateVisitor__closure3.prototype = {
    call$1: function(module) {
      var t1 = this.$this;
      return t1._async_evaluate$_combineCss$2$clone(module, true).accept$1(t1);
    },
    $signature: 165
  };
  E._EvaluateVisitor_run_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult),
        $async$returnValue, $async$self = this, t1, t2, url, $async$temp1, $async$temp2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node;
              t2 = t1.span;
              url = t2 == null ? null : t2.file.url;
              if (url != null)
                $async$self.$this._async_evaluate$_activeModules.$indexSet(0, url, null);
              t2 = $async$self.$this;
              $async$temp1 = E;
              $async$temp2 = t2;
              $async$goto = 3;
              return P._asyncAwait(t2._async_evaluate$_execute$2($async$self.importer, t1), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1.EvaluateResult($async$temp2._async_evaluate$_combineCss$1($async$result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 216
  };
  E._EvaluateVisitor__withWarnCallback_closure0.prototype = {
    call$2: function(message, deprecation) {
      var t1 = this.$this,
        t2 = t1._async_evaluate$_importSpan;
      return t1._async_evaluate$_warn$3$deprecation(message, t2 == null ? t1._async_evaluate$_callableNode.get$span() : t2, deprecation);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 72
  };
  E._EvaluateVisitor__loadModule_closure1.prototype = {
    call$0: function() {
      return this.callback.call$1(this.builtInModule);
    },
    $signature: 1
  };
  E._EvaluateVisitor__loadModule_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, module, error, error0, error1, error2, message, previousLoad, exception, t1, t2, result, importer, stylesheet, canonicalUrl, t3, $async$exception;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.nodeWithSpan;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate$_loadStylesheet$3$baseUrl(J.toString$0$($async$self.url), t2.get$span(), $async$self.baseUrl), $async$call$0);
            case 2:
              // returning from await.
              result = $async$result;
              importer = result.item1;
              stylesheet = result.item2;
              canonicalUrl = stylesheet.span.file.url;
              t3 = t1._async_evaluate$_activeModules;
              if (t3.containsKey$1(canonicalUrl)) {
                message = $async$self.namesInErrors ? "Module loop: " + H.S($.$get$context().prettyUri$1(canonicalUrl)) + " is already being loaded." : string$.Module;
                previousLoad = t3.$index(0, canonicalUrl);
                throw H.wrapException(previousLoad == null ? t1._async_evaluate$_exception$1(message) : t1._async_evaluate$_multiSpanException$3(message, "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
              }
              t3.$indexSet(0, canonicalUrl, t2);
              module = null;
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait(t1._async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, $async$self.configuration, $async$self.namesInErrors, t2), $async$call$0);
            case 6:
              // returning from await.
              module = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              t3.remove$1(0, canonicalUrl);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              $async$handler = 8;
              $async$goto = 11;
              return P._asyncAwait($async$self.callback.call$1(module), $async$call$0);
            case 11:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 10;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception = $async$currentError;
              t2 = H.unwrapException($async$exception);
              if (type$.legacy_SassRuntimeException._is(t2))
                throw $async$exception;
              else if (t2 instanceof E.MultiSpanSassException) {
                error = t2;
                throw H.wrapException(E.MultiSpanSassRuntimeException$(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._async_evaluate$_stackTrace$1(error.get$span())));
              } else if (t2 instanceof E.SassException) {
                error0 = t2;
                throw H.wrapException(t1._async_evaluate$_exception$2(error0._span_exception$_message, error0.get$span()));
              } else if (t2 instanceof E.MultiSpanSassScriptException) {
                error1 = t2;
                throw H.wrapException(t1._async_evaluate$_multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));
              } else if (t2 instanceof E.SassScriptException) {
                error2 = t2;
                throw H.wrapException(t1._async_evaluate$_exception$1(error2.message));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 10;
              break;
            case 7:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 10:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor__execute_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, t4, css, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldExtender, oldStyleRule, oldMediaQueries, oldDeclarationName, oldInUnknownAtRule, oldAtRootExcludingStyleRule, oldInKeyframes, oldConfiguration;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldImporter = t1._async_evaluate$_importer;
              oldStylesheet = t1._async_evaluate$_stylesheet;
              oldRoot = t1._async_evaluate$_root;
              oldParent = t1._async_evaluate$_parent;
              oldEndOfImports = t1._async_evaluate$_endOfImports;
              oldOutOfOrderImports = t1._async_evaluate$_outOfOrderImports;
              oldExtender = t1._async_evaluate$_extender;
              oldStyleRule = t1._async_evaluate$_styleRule;
              oldMediaQueries = t1._async_evaluate$_mediaQueries;
              oldDeclarationName = t1._async_evaluate$_declarationName;
              oldInUnknownAtRule = t1._async_evaluate$_inUnknownAtRule;
              oldAtRootExcludingStyleRule = t1._async_evaluate$_atRootExcludingStyleRule;
              oldInKeyframes = t1._async_evaluate$_inKeyframes;
              oldConfiguration = t1._async_evaluate$_configuration;
              t1._async_evaluate$_importer = $async$self.importer;
              t2 = t1._async_evaluate$_stylesheet = $async$self.stylesheet;
              t3 = t2.span;
              t1._async_evaluate$_parent = t1._async_evaluate$_root = V.ModifiableCssStylesheet$(t3);
              t1._async_evaluate$_endOfImports = 0;
              t1._async_evaluate$_outOfOrderImports = null;
              t1._async_evaluate$_extender = $async$self.extender;
              t1._async_evaluate$_declarationName = t1._async_evaluate$_mediaQueries = t1._async_evaluate$_styleRule = null;
              t1._async_evaluate$_inKeyframes = t1._async_evaluate$_atRootExcludingStyleRule = t1._async_evaluate$_inUnknownAtRule = false;
              t4 = $async$self.configuration;
              if (t4 != null)
                t1._async_evaluate$_configuration = t4;
              $async$goto = 2;
              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);
            case 2:
              // returning from await.
              css = t1._async_evaluate$_outOfOrderImports == null ? t1._async_evaluate$_root : new V.CssStylesheet(new P.UnmodifiableListView(t1._async_evaluate$_addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode), t3);
              $async$self._box_0.css = css;
              t1._async_evaluate$_importer = oldImporter;
              t1._async_evaluate$_stylesheet = oldStylesheet;
              t1._async_evaluate$_root = oldRoot;
              t1._async_evaluate$_parent = oldParent;
              t1._async_evaluate$_endOfImports = oldEndOfImports;
              t1._async_evaluate$_outOfOrderImports = oldOutOfOrderImports;
              t1._async_evaluate$_extender = oldExtender;
              t1._async_evaluate$_styleRule = oldStyleRule;
              t1._async_evaluate$_mediaQueries = oldMediaQueries;
              t1._async_evaluate$_declarationName = oldDeclarationName;
              t1._async_evaluate$_inUnknownAtRule = oldInUnknownAtRule;
              t1._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              t1._async_evaluate$_inKeyframes = oldInKeyframes;
              t1._async_evaluate$_configuration = oldConfiguration;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor__combineCss_closure2.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 94
  };
  E._EvaluateVisitor__combineCss_closure3.prototype = {
    call$1: function(target) {
      return !this.selectors.contains$1(0, target);
    },
    $signature: 18
  };
  E._EvaluateVisitor__combineCss_closure4.prototype = {
    call$1: function(module) {
      return module.cloneCss$0();
    },
    $signature: 140
  };
  E._EvaluateVisitor__extendModules_closure1.prototype = {
    call$1: function(target) {
      return !this.originalSelectors.contains$1(0, target);
    },
    $signature: 18
  };
  E._EvaluateVisitor__extendModules_closure2.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender);
    },
    $signature: 210
  };
  E._EvaluateVisitor__topologicalModules_visitModule0.prototype = {
    call$1: function(module) {
      var t1, t2, t3, _i, upstream;
      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        upstream = t1[_i];
        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))
          this.call$1(upstream);
      }
      this.sorted.addFirst$1(module);
    },
    $signature: 165
  };
  E._EvaluateVisitor_visitAtRootRule_closure2.prototype = {
    call$0: function() {
      return V.AtRootQueryParser$(this.resolved, this.$this._async_evaluate$_logger, null).parse$0();
    },
    $signature: 113
  };
  E._EvaluateVisitor_visitAtRootRule_closure3.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitAtRootRule_closure4.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  E._EvaluateVisitor__scopeForAtRoot_closure5.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, oldParent;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldParent = t1._async_evaluate$_parent;
              t1._async_evaluate$_parent = $async$self.newParent;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate$_environment.scope$1$2$when(callback, $async$self.node.hasDeclarations, type$.void), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate$_parent = oldParent;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot_closure6.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, oldAtRootExcludingStyleRule;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldAtRootExcludingStyleRule = t1._async_evaluate$_atRootExcludingStyleRule;
              t1._async_evaluate$_atRootExcludingStyleRule = true;
              $async$goto = 2;
              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot_closure7.prototype = {
    call$1: function(callback) {
      return this.$this._async_evaluate$_withMediaQueries$1$2(null, new E._EvaluateVisitor__scopeForAtRoot__closure0(this.innerScope, callback), type$.Null);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot__closure0.prototype = {
    call$0: function() {
      return this.innerScope.call$1(this.callback);
    },
    $signature: 2
  };
  E._EvaluateVisitor__scopeForAtRoot_closure8.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, wasInKeyframes;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              wasInKeyframes = t1._async_evaluate$_inKeyframes;
              t1._async_evaluate$_inKeyframes = false;
              $async$goto = 2;
              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate$_inKeyframes = wasInKeyframes;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot_closure9.prototype = {
    call$1: function($parent) {
      return type$.legacy_CssAtRule._is($parent);
    },
    $signature: 205
  };
  E._EvaluateVisitor__scopeForAtRoot_closure10.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, wasInUnknownAtRule;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              wasInUnknownAtRule = t1._async_evaluate$_inUnknownAtRule;
              t1._async_evaluate$_inUnknownAtRule = false;
              $async$goto = 2;
              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor_visitContentRule_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.content.declaration.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitDeclaration_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitEachRule_closure2.prototype = {
    call$1: function(value) {
      return this.$this._async_evaluate$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);
    },
    $signature: 68
  };
  E._EvaluateVisitor_visitEachRule_closure3.prototype = {
    call$1: function(value) {
      return this.$this._async_evaluate$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);
    },
    $signature: 68
  };
  E._EvaluateVisitor_visitEachRule_closure4.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._async_evaluate$_handleReturn$2(_this.list.get$asList(), new E._EvaluateVisitor_visitEachRule__closure0(t1, _this.setVariables, _this.node));
    },
    $signature: 30
  };
  E._EvaluateVisitor_visitEachRule__closure0.prototype = {
    call$1: function(element) {
      var t1;
      this.setVariables.call$1(element);
      t1 = this.$this;
      return t1._async_evaluate$_handleReturn$2(this.node.children, new E._EvaluateVisitor_visitEachRule___closure0(t1));
    },
    $signature: 224
  };
  E._EvaluateVisitor_visitEachRule___closure0.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 81
  };
  E._EvaluateVisitor_visitExtendRule_closure0.prototype = {
    call$0: function() {
      var t1 = this.targetText;
      return D.SelectorList_SelectorList$parse(B.trimAscii(t1.get$value(t1), true), false, true, this.$this._async_evaluate$_logger);
    },
    $signature: 42
  };
  E._EvaluateVisitor_visitAtRule_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t3, _i, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) || t1._async_evaluate$_inKeyframes ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return P._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitAtRule__closure0(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitAtRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitAtRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitForRule_closure4.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber),
        $async$returnValue, $async$self = this;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.node.from.accept$1($async$self.$this), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.assertNumber$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 202
  };
  E._EvaluateVisitor_visitForRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber),
        $async$returnValue, $async$self = this;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.node.to.accept$1($async$self.$this), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.assertNumber$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 202
  };
  E._EvaluateVisitor_visitForRule_closure6.prototype = {
    call$0: function() {
      return this.fromNumber.assertInt$0();
    },
    $signature: 11
  };
  E._EvaluateVisitor_visitForRule_closure7.prototype = {
    call$0: function() {
      var t1 = this.fromNumber;
      return this.toNumber.coerce$2(t1.get$numeratorUnits(), t1.get$denominatorUnits()).assertInt$0();
    },
    $signature: 11
  };
  E._EvaluateVisitor_visitForRule_closure8.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, i, t3, t4, t5, t6, t7, t8, result, t1, t2, nodeWithSpan;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.node;
              nodeWithSpan = t1._async_evaluate$_expressionNode$1(t2.from);
              i = $async$self.from, t3 = $async$self._box_0, t4 = $async$self.direction, t5 = t2.variable, t6 = $async$self.fromNumber, t2 = t2.children;
            case 3:
              // for condition
              if (!(i !== t3.to)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t7 = t1._async_evaluate$_environment;
              t8 = t6.get$numeratorUnits();
              t7.setLocalVariable$3(t5, T.SassNumber_SassNumber$withUnits(i, t6.get$denominatorUnits(), t8), nodeWithSpan);
              $async$goto = 6;
              return P._asyncAwait(t1._async_evaluate$_handleReturn$2(t2, new E._EvaluateVisitor_visitForRule__closure0(t1)), $async$call$0);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              i += t4;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 30
  };
  E._EvaluateVisitor_visitForRule__closure0.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 81
  };
  E._EvaluateVisitor_visitForwardRule_closure1.prototype = {
    call$1: function(module) {
      this.$this._async_evaluate$_environment.forwardModule$2(module, this.node);
    },
    $signature: 121
  };
  E._EvaluateVisitor_visitForwardRule_closure2.prototype = {
    call$1: function(module) {
      this.$this._async_evaluate$_environment.forwardModule$2(module, this.node);
    },
    $signature: 121
  };
  E._EvaluateVisitor__assertConfigurationIsEmpty_closure0.prototype = {
    call$2: function($name, value) {
      var t1 = this.only;
      if (t1 != null && !t1.contains$1(0, $name))
        return;
      t1 = this.nameInError ? "$" + H.S($name) + string$.x20was_n : string$.This_v;
      throw H.wrapException(this.$this._async_evaluate$_exception$2(t1, value.configurationSpan));
    },
    $signature: 200
  };
  E._EvaluateVisitor_visitIfRule_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      return t1._async_evaluate$_handleReturn$2(this._box_0.clause.children, new E._EvaluateVisitor_visitIfRule__closure0(t1));
    },
    $signature: 30
  };
  E._EvaluateVisitor_visitIfRule__closure0.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 81
  };
  E._EvaluateVisitor__visitDynamicImport_closure0.prototype = {
    call$0: function() {
      return this.$call$body$_EvaluateVisitor__visitDynamicImport_closure();
    },
    $call$body$_EvaluateVisitor__visitDynamicImport_closure: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _box_0, t1, t2, result, importer, stylesheet, url, t3;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              t1 = $async$self.$this;
              t2 = $async$self.$import;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate$_loadStylesheet$3$forImport(t2.url, t2.span, true), $async$call$0);
            case 3:
              // returning from await.
              result = $async$result;
              importer = result.item1;
              stylesheet = result.item2;
              url = stylesheet.span.file.url;
              t3 = t1._async_evaluate$_activeModules;
              if (t3.containsKey$1(url)) {
                previousLoad = t3.$index(0, url);
                throw H.wrapException(previousLoad == null ? t1._async_evaluate$_exception$1("This file is already being loaded.") : t1._async_evaluate$_multiSpanException$3("This file is already being loaded.", "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
              }
              t3.$indexSet(0, url, t2);
              t2 = new P.UnmodifiableListView(stylesheet._uses, type$.UnmodifiableListView_legacy_UseRule);
              if (t2.get$length(t2) === 0) {
                t2 = new P.UnmodifiableListView(stylesheet._forwards, type$.UnmodifiableListView_legacy_ForwardRule);
                t2 = t2.get$length(t2) === 0;
              } else
                t2 = false;
              $async$goto = t2 ? 4 : 5;
              break;
            case 4:
              // then
              oldImporter = t1._async_evaluate$_importer;
              oldStylesheet = t1._async_evaluate$_stylesheet;
              t1._async_evaluate$_importer = importer;
              t1._async_evaluate$_stylesheet = stylesheet;
              $async$goto = 6;
              return P._asyncAwait(t1.visitStylesheet$1(stylesheet), $async$call$0);
            case 6:
              // returning from await.
              t1._async_evaluate$_importer = oldImporter;
              t1._async_evaluate$_stylesheet = oldStylesheet;
              t3.remove$1(0, url);
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // join
              _box_0.children = null;
              t2 = t1._async_evaluate$_environment;
              t4 = type$.legacy_String;
              t5 = type$.legacy_Module_legacy_AsyncCallable;
              t6 = type$.legacy_AstNode;
              t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable);
              t8 = t2._async_environment$_variables;
              t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));
              t9 = t2._async_environment$_variableNodes;
              if (t9 == null)
                t9 = null;
              else
                t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));
              t10 = t2._async_environment$_functions;
              t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));
              t11 = t2._async_environment$_mixins;
              t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));
              environment = Q.AsyncEnvironment$_(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), null, null, null, t7, t8, t9, t10, t11, t2._async_environment$_content);
              $async$goto = 7;
              return P._asyncAwait(t1._async_evaluate$_withEnvironment$1$2(environment, new E._EvaluateVisitor__visitDynamicImport__closure0(_box_0, t1, importer, stylesheet, environment), type$.Null), $async$call$0);
            case 7:
              // returning from await.
              module = Q._EnvironmentModule__EnvironmentModule0(environment, new V.CssStylesheet(new P.UnmodifiableListView(C.List_empty0, type$.UnmodifiableListView_legacy_CssNode), Y.SourceFile$decoded(C.List_empty1, "<dummy module>").span$1(0)), C.C_EmptyExtender, environment._async_environment$_forwardedModules);
              t1._async_evaluate$_environment.importForwards$1(module);
              $async$goto = module.transitivelyContainsCss ? 8 : 9;
              break;
            case 8:
              // then
              $async$goto = 10;
              return P._asyncAwait(t1._async_evaluate$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1), $async$call$0);
            case 10:
              // returning from await.
            case 9:
              // join
              visitor = new E._ImportedCssVisitor0(t1);
              for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)
                t1.get$current(t1).accept$1(visitor);
              t3.remove$1(0, url);
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor__visitDynamicImport__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldConfiguration;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldImporter = t1._async_evaluate$_importer;
              oldStylesheet = t1._async_evaluate$_stylesheet;
              oldRoot = t1._async_evaluate$_root;
              oldParent = t1._async_evaluate$_parent;
              oldEndOfImports = t1._async_evaluate$_endOfImports;
              oldOutOfOrderImports = t1._async_evaluate$_outOfOrderImports;
              oldConfiguration = t1._async_evaluate$_configuration;
              t1._async_evaluate$_importer = $async$self.importer;
              t2 = t1._async_evaluate$_stylesheet = $async$self.stylesheet;
              t1._async_evaluate$_parent = t1._async_evaluate$_root = V.ModifiableCssStylesheet$(t2.span);
              t1._async_evaluate$_endOfImports = 0;
              t1._async_evaluate$_outOfOrderImports = null;
              t3 = new P.UnmodifiableListView(t2._forwards, type$.UnmodifiableListView_legacy_ForwardRule);
              if (!t3.get$isEmpty(t3))
                t1._async_evaluate$_configuration = $async$self.environment.toImplicitConfiguration$0();
              $async$goto = 2;
              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);
            case 2:
              // returning from await.
              $async$self._box_0.children = t1._async_evaluate$_addOutOfOrderImports$0();
              t1._async_evaluate$_importer = oldImporter;
              t1._async_evaluate$_stylesheet = oldStylesheet;
              t1._async_evaluate$_root = oldRoot;
              t1._async_evaluate$_parent = oldParent;
              t1._async_evaluate$_endOfImports = oldEndOfImports;
              t1._async_evaluate$_outOfOrderImports = oldOutOfOrderImports;
              t1._async_evaluate$_configuration = oldConfiguration;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule_closure2.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate$_environment.getMixin$2$namespace(t1.name, t1.namespace);
    },
    $signature: 105
  };
  E._EvaluateVisitor_visitIncludeRule_closure3.prototype = {
    call$0: function() {
      return this.node.get$spanWithoutContent();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 33
  };
  E._EvaluateVisitor_visitIncludeRule_closure4.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate$_environment.withContent$2($async$self.contentCallable, new E._EvaluateVisitor_visitIncludeRule__closure0(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate$_environment.asMixin$1(new E._EvaluateVisitor_visitIncludeRule___closure0(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule___closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, t4, t5, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.mixin.declaration.children, t2 = t1.length, t3 = $async$self.$this, t4 = $async$self.nodeWithSpan, t5 = type$.legacy_Value, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t3._async_evaluate$_addErrorSpan$1$2(t4, new E._EvaluateVisitor_visitIncludeRule____closure0(t3, t1[_i]), t5), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule____closure0.prototype = {
    call$0: function() {
      return this.statement.accept$1(this.$this);
    },
    $signature: 30
  };
  E._EvaluateVisitor_visitMediaRule_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.mergedQueries;
              if (t2 == null)
                t2 = $async$self.queries;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitMediaRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitMediaRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t3, _i, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return P._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitMediaRule___closure0(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitMediaRule___closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitMediaRule_closure2.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  E._EvaluateVisitor__visitMediaQueries_closure0.prototype = {
    call$0: function() {
      return F.MediaQueryParser$(this.resolved, this.$this._async_evaluate$_logger, null).parse$0();
    },
    $signature: 114
  };
  E._EvaluateVisitor_visitStyleRule_closure6.prototype = {
    call$0: function() {
      var t1 = this.selectorText;
      return E.KeyframeSelectorParser$(t1.get$value(t1), this.$this._async_evaluate$_logger).parse$0();
    },
    $signature: 40
  };
  E._EvaluateVisitor_visitStyleRule_closure7.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitStyleRule_closure8.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitStyleRule_closure9.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this.selectorText;
      t1 = t1.get$value(t1);
      t2 = this.$this;
      t3 = !t2._async_evaluate$_stylesheet.plainCss;
      return D.SelectorList_SelectorList$parse(t1, t3, t3, t2._async_evaluate$_logger);
    },
    $signature: 42
  };
  E._EvaluateVisitor_visitStyleRule_closure10.prototype = {
    call$0: function() {
      var t1 = this._box_0.parsedSelector,
        t2 = this.$this,
        t3 = t2._async_evaluate$_styleRule;
      t3 = t3 == null ? null : t3.originalSelector;
      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._async_evaluate$_atRootExcludingStyleRule);
    },
    $signature: 42
  };
  E._EvaluateVisitor_visitStyleRule_closure11.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitStyleRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitStyleRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitStyleRule_closure12.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitSupportsRule_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t3, _i, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return P._asyncAwait(t1._async_evaluate$_withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitSupportsRule__closure0(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitSupportsRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitSupportsRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitVariableDeclaration_closure2.prototype = {
    call$0: function() {
      var t1 = this.override;
      this.$this._async_evaluate$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);
    },
    $signature: 0
  };
  E._EvaluateVisitor_visitVariableDeclaration_closure3.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 13
  };
  E._EvaluateVisitor_visitVariableDeclaration_closure4.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.node;
      t1._async_evaluate$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._async_evaluate$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);
    },
    $signature: 0
  };
  E._EvaluateVisitor_visitUseRule_closure0.prototype = {
    call$1: function(module) {
      var t1 = this.node;
      this.$this._async_evaluate$_environment.addModule$3$namespace(module, t1, t1.namespace);
    },
    $signature: 121
  };
  E._EvaluateVisitor_visitWarnRule_closure0.prototype = {
    call$0: function() {
      return this.node.expression.accept$1(this.$this);
    },
    $signature: 30
  };
  E._EvaluateVisitor_visitWhileRule_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, result;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node, t2 = t1.condition, t3 = $async$self.$this, t1 = t1.children;
            case 3:
              // for condition
              $async$goto = 5;
              return P._asyncAwait(t2.accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
              if (!$async$result.get$isTruthy()) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t3._async_evaluate$_handleReturn$2(t1, new E._EvaluateVisitor_visitWhileRule__closure0(t3)), $async$call$0);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 30
  };
  E._EvaluateVisitor_visitWhileRule__closure0.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 81
  };
  E._EvaluateVisitor_visitBinaryOperationExpression_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, right, result, t1, t2, left, $async$temp1, $async$temp2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node;
              t2 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(t1.left.accept$1(t2), $async$call$0);
            case 3:
              // returning from await.
              left = $async$result;
            case 4:
              // switch
              switch (t1.operator) {
                case C.BinaryOperator_kjl:
                  // goto case
                  $async$goto = 6;
                  break;
                case C.BinaryOperator_or_or_1:
                  // goto case
                  $async$goto = 7;
                  break;
                case C.BinaryOperator_and_and_2:
                  // goto case
                  $async$goto = 8;
                  break;
                case C.BinaryOperator_YlX:
                  // goto case
                  $async$goto = 9;
                  break;
                case C.BinaryOperator_i5H:
                  // goto case
                  $async$goto = 10;
                  break;
                case C.BinaryOperator_AcR:
                  // goto case
                  $async$goto = 11;
                  break;
                case C.BinaryOperator_1da:
                  // goto case
                  $async$goto = 12;
                  break;
                case C.BinaryOperator_8qt:
                  // goto case
                  $async$goto = 13;
                  break;
                case C.BinaryOperator_33h:
                  // goto case
                  $async$goto = 14;
                  break;
                case C.BinaryOperator_AcR0:
                  // goto case
                  $async$goto = 15;
                  break;
                case C.BinaryOperator_iyO:
                  // goto case
                  $async$goto = 16;
                  break;
                case C.BinaryOperator_O1M:
                  // goto case
                  $async$goto = 17;
                  break;
                case C.BinaryOperator_RTB:
                  // goto case
                  $async$goto = 18;
                  break;
                case C.BinaryOperator_2ad:
                  // goto case
                  $async$goto = 19;
                  break;
                default:
                  // goto default
                  $async$goto = 20;
                  break;
              }
              break;
            case 6:
              // case
              $async$goto = 21;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 21:
              // returning from await.
              right = $async$result;
              left.toString;
              t1 = N.serializeValue0(left, false, true) + "=";
              right.toString;
              $async$returnValue = new D.SassString(t1 + N.serializeValue0(right, false, true), false);
              // goto return
              $async$goto = 1;
              break;
            case 7:
              // case
              $async$goto = left.get$isTruthy() ? 22 : 24;
              break;
            case 22:
              // then
              $async$result = left;
              // goto join
              $async$goto = 23;
              break;
            case 24:
              // else
              $async$goto = 25;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 25:
              // returning from await.
            case 23:
              // join
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // case
              $async$goto = left.get$isTruthy() ? 26 : 28;
              break;
            case 26:
              // then
              $async$goto = 29;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 29:
              // returning from await.
              // goto join
              $async$goto = 27;
              break;
            case 28:
              // else
              $async$result = left;
            case 27:
              // join
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 9:
              // case
              $async$temp1 = J;
              $async$temp2 = left;
              $async$goto = 30;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 30:
              // returning from await.
              $async$returnValue = $async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true0 : C.SassBoolean_false0;
              // goto return
              $async$goto = 1;
              break;
            case 10:
              // case
              $async$temp1 = J;
              $async$temp2 = left;
              $async$goto = 31;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 31:
              // returning from await.
              $async$returnValue = !$async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true0 : C.SassBoolean_false0;
              // goto return
              $async$goto = 1;
              break;
            case 11:
              // case
              $async$temp1 = left;
              $async$goto = 32;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 32:
              // returning from await.
              $async$returnValue = $async$temp1.greaterThan$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // case
              $async$temp1 = left;
              $async$goto = 33;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 33:
              // returning from await.
              $async$returnValue = $async$temp1.greaterThanOrEquals$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 13:
              // case
              $async$temp1 = left;
              $async$goto = 34;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 34:
              // returning from await.
              $async$returnValue = $async$temp1.lessThan$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 14:
              // case
              $async$temp1 = left;
              $async$goto = 35;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 35:
              // returning from await.
              $async$returnValue = $async$temp1.lessThanOrEquals$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 15:
              // case
              $async$temp1 = left;
              $async$goto = 36;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 36:
              // returning from await.
              $async$returnValue = $async$temp1.plus$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 16:
              // case
              $async$temp1 = left;
              $async$goto = 37;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 37:
              // returning from await.
              $async$returnValue = $async$temp1.minus$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 17:
              // case
              $async$temp1 = left;
              $async$goto = 38;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 38:
              // returning from await.
              $async$returnValue = $async$temp1.times$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 18:
              // case
              $async$goto = 39;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 39:
              // returning from await.
              right = $async$result;
              result = left.dividedBy$1(right);
              if (t1.allowsSlash && left instanceof T.SassNumber && right instanceof T.SassNumber) {
                $async$returnValue = type$.legacy_SassNumber._as(result).withSlash$2(left, right);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 19:
              // case
              $async$temp1 = left;
              $async$goto = 40;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 40:
              // returning from await.
              $async$returnValue = $async$temp1.modulo$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 20:
              // default
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // after switch
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 30
  };
  E._EvaluateVisitor_visitVariableExpression_closure0.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 13
  };
  E._EvaluateVisitor_visitListExpression_closure0.prototype = {
    call$1: function(expression) {
      return expression.accept$1(this.$this);
    },
    $signature: 230
  };
  E._EvaluateVisitor_visitFunctionExpression_closure1.prototype = {
    call$0: function() {
      var t1 = this.node.namespace,
        t2 = this.plainName;
      if (t1 == null)
        t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return this.$this._async_evaluate$_getFunction$2$namespace(t2, t1);
    },
    $signature: 105
  };
  E._EvaluateVisitor_visitFunctionExpression_closure2.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);
    },
    $signature: 30
  };
  E._EvaluateVisitor__runUserDefinedCallable_closure0.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.callable;
      return t1._async_evaluate$_withEnvironment$1$2(t2.environment.closure$0(), new E._EvaluateVisitor__runUserDefinedCallable__closure0(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run), type$.legacy_Value);
    },
    $signature: 30
  };
  E._EvaluateVisitor__runUserDefinedCallable__closure0.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._async_evaluate$_environment.scope$1$1(new E._EvaluateVisitor__runUserDefinedCallable___closure0(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value);
    },
    $signature: 30
  };
  E._EvaluateVisitor__runUserDefinedCallable___closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, declaredArguments, minLength, t8, i, t9, t10, t11, argument, value, t12, rest, argumentList, result, argumentWord, argumentNames, t1, t2, t3, t4, t5, t6, t7;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.evaluated;
              t3 = t2.positional;
              t4 = t3.length;
              t5 = t2.named;
              t6 = $async$self.callable.declaration.$arguments;
              t7 = $async$self.nodeWithSpan;
              t1._async_evaluate$_verifyArguments$4(t4, t5, t6, t7);
              declaredArguments = t6.$arguments;
              t4 = declaredArguments.length;
              minLength = Math.min(t3.length, t4);
              for (t8 = t1._async_evaluate$_sourceMap, i = 0; i < minLength; ++i) {
                t9 = t1._async_evaluate$_environment;
                t10 = declaredArguments[i].name;
                t11 = t3[i].withoutSlash$0();
                t9.setLocalVariable$3(t10, t11, t8 ? t2.positionalNodes[i] : null);
              }
              i = t3.length;
            case 3:
              // for condition
              if (!(i < t4)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              argument = declaredArguments[i];
              t9 = argument.name;
              value = t5.remove$1(0, t9);
              $async$goto = value == null ? 6 : 7;
              break;
            case 6:
              // then
              $async$goto = 8;
              return P._asyncAwait(argument.defaultValue.accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
              value = $async$result;
            case 7:
              // join
              t10 = t1._async_evaluate$_environment;
              t11 = value.withoutSlash$0();
              if (t8) {
                t12 = t2.namedNodes.$index(0, t9);
                if (t12 == null)
                  t12 = t1._async_evaluate$_expressionNode$1(argument.defaultValue);
              } else
                t12 = null;
              t10.setLocalVariable$3(t9, t11, t12);
            case 4:
              // for update
              ++i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t8 = t6.restArgument;
              if (t8 != null) {
                rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty5;
                t2 = t2.separator;
                argumentList = D.SassArgumentList$(rest, t5, t2 === C.ListSeparator_undecided ? C.ListSeparator_comma : t2);
                t1._async_evaluate$_environment.setLocalVariable$3(t8, argumentList, t7);
              } else
                argumentList = null;
              $async$goto = 9;
              return P._asyncAwait($async$self.run.call$0(), $async$call$0);
            case 9:
              // returning from await.
              result = $async$result;
              if (argumentList == null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              if (t5.get$isEmpty(t5)) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              if (argumentList._wereKeywordsAccessed) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = t5.get$keys(t5);
              argumentWord = B.pluralize("argument", t2.get$length(t2), null);
              t5 = t5.get$keys(t5);
              argumentNames = B.toSentence(H.MappedIterable_MappedIterable(t5, new E._EvaluateVisitor__runUserDefinedCallable____closure0(), H._instanceType(t5)._eval$1("Iterable.E"), type$.legacy_Object), "or");
              throw H.wrapException(E.MultiSpanSassRuntimeException$("No " + argumentWord + " named " + H.S(argumentNames) + ".", t7.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), t1._async_evaluate$_stackTrace$1(t7.get$span())));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 30
  };
  E._EvaluateVisitor__runUserDefinedCallable____closure0.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  E._EvaluateVisitor__runFunctionCallable_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, _i, $returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = $async$self.$this, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t2[_i].accept$1(t4), $async$call$0);
            case 6:
              // returning from await.
              $returnValue = $async$result;
              if ($returnValue instanceof F.Value) {
                $async$returnValue = $returnValue;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              throw H.wrapException(t4._async_evaluate$_exception$2("Function finished without @return.", t1.span));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 30
  };
  E._EvaluateVisitor__runBuiltInCallable_closure1.prototype = {
    call$0: function() {
      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);
    },
    $signature: 1
  };
  E._EvaluateVisitor__runBuiltInCallable_closure2.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  E._EvaluateVisitor__evaluateArguments_closure0.prototype = {
    call$2: function(key, value) {
      var t1;
      this.named.$indexSet(0, key, value);
      t1 = this.namedNodes;
      if (t1 != null)
        t1.$indexSet(0, key, this.restNodeForSpan);
    },
    $signature: 80
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure3.prototype = {
    call$1: function(value) {
      return new F.ValueExpression(value, null);
    },
    $signature: 47
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure4.prototype = {
    call$1: function(value) {
      return new F.ValueExpression(value, null);
    },
    $signature: 47
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure5.prototype = {
    call$2: function(key, value) {
      this.named.$indexSet(0, key, new F.ValueExpression(value, null));
    },
    $signature: 80
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure6.prototype = {
    call$1: function(value) {
      return new F.ValueExpression(value, null);
    },
    $signature: 47
  };
  E._EvaluateVisitor__addRestMap_closure1.prototype = {
    call$1: function(value) {
      return this.T._eval$1("0*")._as(value);
    },
    $signature: function() {
      return this.T._eval$1("0*(Value*)");
    }
  };
  E._EvaluateVisitor__addRestMap_closure2.prototype = {
    call$2: function(key, value) {
      var _this = this;
      if (key instanceof D.SassString)
        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));
      else
        throw H.wrapException(_this.$this._async_evaluate$_exception$2(string$.Variab_ + H.S(key) + " is not a string in " + _this.map.toString$0(0) + ".", _this.nodeWithSpan.get$span()));
    },
    $signature: 46
  };
  E._EvaluateVisitor__verifyArguments_closure0.prototype = {
    call$0: function() {
      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));
    },
    $signature: 1
  };
  E._EvaluateVisitor_visitStringExpression_closure0.prototype = {
    call$1: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, result;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (typeof value == "string") {
                $async$returnValue = value;
                // goto return
                $async$goto = 1;
                break;
              }
              type$.legacy_Expression._as(value);
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(value.accept$1(t1), $async$call$1);
            case 3:
              // returning from await.
              result = $async$result;
              $async$returnValue = result instanceof D.SassString ? result.text : t1._async_evaluate$_serialize$3$quote(result, value, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 79
  };
  E._EvaluateVisitor_visitCssAtRule_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssAtRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitCssKeyframeBlock_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssKeyframeBlock_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitCssMediaRule_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.mergedQueries;
              if (t2 == null)
                t2 = $async$self.node.queries;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitCssMediaRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssMediaRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, cur, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));
            case 5:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 6;
                break;
              }
              cur = t2.__internal$_current;
              $async$goto = 7;
              return P._asyncAwait(cur.accept$1(t1), $async$call$0);
            case 7:
              // returning from await.
              // goto for condition
              $async$goto = 5;
              break;
            case 6:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 8;
              return P._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssMediaRule___closure0(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 8:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssMediaRule___closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssMediaRule_closure2.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitCssStyleRule_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitCssStyleRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssStyleRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssStyleRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor_visitCssSupportsRule_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, cur, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));
            case 5:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 6;
                break;
              }
              cur = t2.__internal$_current;
              $async$goto = 7;
              return P._asyncAwait(cur.accept$1(t1), $async$call$0);
            case 7:
              // returning from await.
              // goto for condition
              $async$goto = 5;
              break;
            case 6:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 8;
              return P._asyncAwait(t1._async_evaluate$_withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssSupportsRule__closure0(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 8:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssSupportsRule__closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssSupportsRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._EvaluateVisitor__performInterpolation_closure0.prototype = {
    call$1: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, result, t2, t3;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (typeof value == "string") {
                $async$returnValue = value;
                // goto return
                $async$goto = 1;
                break;
              }
              type$.legacy_Expression._as(value);
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(value.accept$1(t1), $async$call$1);
            case 3:
              // returning from await.
              result = $async$result;
              if ($async$self.warnForColor && result instanceof K.SassColor && $.$get$namesByColor().containsKey$1(result)) {
                t2 = X.Interpolation$(H.setRuntimeTypeInfo([""], type$.JSArray_legacy_Object), null);
                t3 = $.$get$namesByColor();
                t1._async_evaluate$_warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whicw + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression(C.BinaryOperator_AcR0, new D.StringExpression(t2, true), value, false).toString$0(0) + "'.", value.get$span());
              }
              $async$returnValue = t1._async_evaluate$_serialize$3$quote(result, value, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 79
  };
  E._EvaluateVisitor__serialize_closure0.prototype = {
    call$0: function() {
      var t1 = this.value;
      t1.toString;
      return N.serializeValue0(t1, false, this.quote);
    },
    $signature: 12
  };
  E._EvaluateVisitor__stackTrace_closure0.prototype = {
    call$1: function(tuple) {
      return this.$this._async_evaluate$_stackFrame$2(tuple.item1, tuple.item2.get$span());
    },
    $signature: 195
  };
  E._ImportedCssVisitor0.prototype = {
    visitCssAtRule$1: function(node) {
      var t1 = node.isChildless ? null : new E._ImportedCssVisitor_visitCssAtRule_closure0();
      this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, t1);
    },
    visitCssComment$1: function(node) {
      return this._async_evaluate$_visitor._async_evaluate$_addChild$1(node);
    },
    visitCssDeclaration$1: function(node) {
    },
    visitCssImport$1: function(node) {
      var t1 = this._async_evaluate$_visitor,
        t2 = t1._async_evaluate$_parent,
        t3 = t1._async_evaluate$_root;
      if (t2 != t3)
        t1._async_evaluate$_addChild$1(node);
      else if (t1._async_evaluate$_endOfImports === J.get$length$asx(t3.children._collection$_source)) {
        t1._async_evaluate$_addChild$1(node);
        t1._async_evaluate$_endOfImports = t1._async_evaluate$_endOfImports + 1;
      } else {
        t2 = t1._async_evaluate$_outOfOrderImports;
        (t2 == null ? t1._async_evaluate$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t2).push(node);
      }
    },
    visitCssKeyframeBlock$1: function(node) {
    },
    visitCssMediaRule$1: function(node) {
      var t1 = this._async_evaluate$_visitor,
        t2 = t1._async_evaluate$_mediaQueries;
      t1._async_evaluate$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssMediaRule_closure0(t2 == null || t1._async_evaluate$_mergeMediaQueries$2(t2, node.queries) != null));
    },
    visitCssStyleRule$1: function(node) {
      return this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssStyleRule_closure0());
    },
    visitCssStylesheet$1: function(node) {
      var t1, cur;
      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(this);
      }
    },
    visitCssSupportsRule$1: function(node) {
      return this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssSupportsRule_closure0());
    }
  };
  E._ImportedCssVisitor_visitCssAtRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._ImportedCssVisitor_visitCssMediaRule_closure0.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule._is(node))
        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  E._ImportedCssVisitor_visitCssStyleRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E._ImportedCssVisitor_visitCssSupportsRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  E.EvaluateResult.prototype = {};
  E._ArgumentResults0.prototype = {};
  V._CloneCssVisitor.prototype = {
    visitCssAtRule$1: function(node) {
      var t1 = node.isChildless,
        rule = U.ModifiableCssAtRule$(node.name, node.span, t1, node.value);
      return t1 ? rule : this._visitChildren$2(rule, node);
    },
    visitCssComment$1: function(node) {
      return new R.ModifiableCssComment(node.text, node.span);
    },
    visitCssDeclaration$1: function(node) {
      return L.ModifiableCssDeclaration$(node.name, node.value, node.span, node.parsedAsCustomProperty, node.valueSpanForMap);
    },
    visitCssImport$1: function(node) {
      return F.ModifiableCssImport$(node.url, node.span, node.media, node.supports);
    },
    visitCssKeyframeBlock$1: function(node) {
      return this._visitChildren$2(U.ModifiableCssKeyframeBlock$(node.selector, node.span), node);
    },
    visitCssMediaRule$1: function(node) {
      return this._visitChildren$2(G.ModifiableCssMediaRule$(node.queries, node.span), node);
    },
    visitCssStyleRule$1: function(node) {
      var newSelector = this._oldToNewSelectors.$index(0, node.selector);
      if (newSelector == null)
        throw H.wrapException(P.StateError$(string$.The_Ex));
      return this._visitChildren$2(X.ModifiableCssStyleRule$(newSelector, node.span, node.originalSelector), node);
    },
    visitCssStylesheet$1: function(node) {
      return this._visitChildren$2(V.ModifiableCssStylesheet$(node.get$span()), node);
    },
    visitCssSupportsRule$1: function(node) {
      return this._visitChildren$2(B.ModifiableCssSupportsRule$(node.condition, node.span), node);
    },
    _visitChildren$1$2: function(newParent, oldParent) {
      var t1, t2, newChild;
      for (t1 = J.get$iterator$ax(oldParent.get$children(oldParent)); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        newChild = t2.accept$1(this);
        newChild.isGroupEnd = t2.get$isGroupEnd();
        newParent.addChild$1(newChild);
      }
      return newParent;
    },
    _visitChildren$2: function(newParent, oldParent) {
      return this._visitChildren$1$2(newParent, oldParent, type$.legacy_ModifiableCssParentNode);
    }
  };
  R.Evaluator.prototype = {};
  R._EvaluateVisitor.prototype = {
    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap: function(functions, importCache, logger, nodeImporter, sourceMap) {
      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        metaFunctions = [Q.BuiltInCallable$function("global-variable-exists", _s20_, new R._EvaluateVisitor_closure(_this), _s9_), Q.BuiltInCallable$function("variable-exists", "$name", new R._EvaluateVisitor_closure0(_this), _s9_), Q.BuiltInCallable$function("function-exists", _s20_, new R._EvaluateVisitor_closure1(_this), _s9_), Q.BuiltInCallable$function("mixin-exists", _s20_, new R._EvaluateVisitor_closure2(_this), _s9_), Q.BuiltInCallable$function("content-exists", "", new R._EvaluateVisitor_closure3(_this), _s9_), Q.BuiltInCallable$function("module-variables", "$module", new R._EvaluateVisitor_closure4(_this), _s9_), Q.BuiltInCallable$function("module-functions", "$module", new R._EvaluateVisitor_closure5(_this), _s9_), Q.BuiltInCallable$function("get-function", "$name, $css: false, $module: null", new R._EvaluateVisitor_closure6(_this), _s9_), Q.BuiltInCallable$function("call", "$function, $args...", new R._EvaluateVisitor_closure7(_this), _s9_)],
        t1 = type$.JSArray_legacy_BuiltInCallable,
        metaMixins = H.setRuntimeTypeInfo([Q.BuiltInCallable$mixin("load-css", "$url, $with: null", new R._EvaluateVisitor_closure8(_this), _s9_)], t1);
      t1 = H.setRuntimeTypeInfo([], t1);
      for (t2 = $.$get$global(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      metaModule = Q.BuiltInModule$("meta", t1, metaMixins, null, type$.legacy_BuiltInCallable);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_BuiltInCallable);
      for (t2 = $.$get$coreModules(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      t1.push(metaModule);
      t2 = t1.length;
      t3 = _this._builtInModules;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Callable);
      for (t2 = $.$get$globalFunctions(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      for (t2 = t1.length, t3 = _this._builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = $function.get$name($function);
        t4.toString;
        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2: function(_, importer, node) {
      return this._withWarnCallback$1$1(new R._EvaluateVisitor_run_closure(this, node, importer), type$.legacy_EvaluateResult);
    },
    runExpression$2: function(importer, expression) {
      return this._withWarnCallback$1$1(new R._EvaluateVisitor_runExpression_closure(this, importer, expression), type$.legacy_Value);
    },
    runStatement$2: function(importer, statement) {
      return this._withWarnCallback$1$1(new R._EvaluateVisitor_runStatement_closure(this, importer, statement), type$.void);
    },
    _withWarnCallback$1$1: function(callback, $T) {
      return N.withWarnCallback(new R._EvaluateVisitor__withWarnCallback_closure(this), callback, $T._eval$1("0*"));
    },
    _withFakeStylesheet$1$3: function(importer, nodeWithSpan, callback) {
      var oldStylesheet, t1, _this = this,
        oldImporter = _this._importer;
      _this._importer = importer;
      oldStylesheet = _this._stylesheet;
      _this._stylesheet = V.Stylesheet$(C.List_empty11, nodeWithSpan.get$span(), false);
      try {
        t1 = callback.call$0();
        return t1;
      } finally {
        _this._importer = oldImporter;
        _this._stylesheet = oldStylesheet;
      }
    },
    _withFakeStylesheet$3: function(importer, nodeWithSpan, callback) {
      return this._withFakeStylesheet$1$3(importer, nodeWithSpan, callback, type$.dynamic);
    },
    _loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var t1, _this = this,
        builtInModule = _this._builtInModules.$index(0, url);
      if (builtInModule != null) {
        if (configuration != null && !configuration.isImplicit) {
          t1 = namesInErrors ? "Built-in module " + H.S(url) + " can't be configured." : "Built-in modules can't be configured.";
          throw H.wrapException(_this._evaluate$_exception$2(t1, nodeWithSpan.get$span()));
        }
        _this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__loadModule_closure(callback, builtInModule));
        return;
      }
      _this._withStackFrame$3(stackFrame, nodeWithSpan, new R._EvaluateVisitor__loadModule_closure0(_this, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback));
    },
    _loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {
      return this._loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var message, existingNode, environment, extender, module, _this = this, t1 = {},
        url = stylesheet.span.file.url,
        t2 = _this._modules,
        alreadyLoaded = t2.$index(0, url);
      if (alreadyLoaded != null) {
        t1 = configuration == null;
        if (!(t1 ? _this._configuration : configuration).isImplicit) {
          message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;
          existingNode = _this._moduleNodes.$index(0, url);
          t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
          if (existingNode != null)
            t2.$indexSet(0, existingNode.get$span(), "original load");
          if (t1)
            t2.$indexSet(0, _this._configuration.nodeWithSpan.get$span(), "configuration");
          throw H.wrapException(t2.get$isEmpty(t2) ? _this._evaluate$_exception$1(message) : _this._multiSpanException$3(message, "new load", t2));
        }
        return alreadyLoaded;
      }
      environment = O.Environment$(_this._sourceMap);
      t1.css = null;
      extender = F.Extender$();
      _this._withEnvironment$2(environment, new R._EvaluateVisitor__execute_closure(t1, _this, importer, stylesheet, extender, configuration));
      module = O._EnvironmentModule__EnvironmentModule(environment, t1.css, extender, environment._forwardedModules);
      t2.$indexSet(0, url, module);
      _this._moduleNodes.$indexSet(0, url, nodeWithSpan);
      return module;
    },
    _execute$2: function(importer, stylesheet) {
      return this._execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _addOutOfOrderImports$0: function() {
      var t1, statements, _this = this;
      if (_this._outOfOrderImports == null)
        return _this._root.children;
      t1 = new Array(J.get$length$asx(_this._root.children._collection$_source) + _this._outOfOrderImports.length);
      t1.fixed$length = Array;
      statements = new G.FixedLengthListBuilder(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode), type$.FixedLengthListBuilder_legacy_ModifiableCssNode);
      statements.addRange$3(_this._root.children, 0, _this._endOfImports);
      statements.addAll$1(0, _this._outOfOrderImports);
      statements.addRange$2(_this._root.children, _this._endOfImports);
      return statements.build$0();
    },
    _combineCss$2$clone: function(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;
      if (!C.JSArray_methods.any$1(root.get$upstream(), new R._EvaluateVisitor__combineCss_closure())) {
        selectors = root.get$extender().get$simpleSelectors();
        unsatisfiedExtension = B.firstOrNull(root.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__combineCss_closure0(selectors)));
        if (unsatisfiedExtension != null)
          _this._throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module<Callable*>*>");
        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new R._EvaluateVisitor__combineCss_closure1(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._extendModules$1(sortedModules);
      t1 = type$.JSArray_legacy_CssNode;
      imports = H.setRuntimeTypeInfo([], t1);
      css = H.setRuntimeTypeInfo([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        t2 = cur.get$css(cur);
        statements = t2.get$children(t2);
        index = _this._indexAfterImports$1(statements);
        t2 = J.getInterceptor$ax(statements);
        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));
        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));
      }
      return new V.CssStylesheet(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode), root.get$css(root).get$span());
    },
    _combineCss$1: function(root) {
      return this._combineCss$2$clone(root, false);
    },
    _extendModules$1: function(sortedModules) {
      var t1, t2, originalSelectors, extenders, t3, t4, _i,
        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender),
        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__extendModules_closure(originalSelectors)));
        extenders = downstreamExtenders.$index(0, t2.get$url());
        if (extenders != null)
          t2.get$extender().addExtensions$1(extenders);
        t3 = t2.get$extender();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new R._EvaluateVisitor__extendModules_closure0()), t2.get$extender());
        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _throwForUnsatisfiedExtension$1: function(extension) {
      throw H.wrapException(E.SassException$(string$.The_ta + H.S(extension.target) + ' !optional" to avoid this error.', extension.span));
    },
    _topologicalModules$1: function(root) {
      var t1 = type$.legacy_Module_legacy_Callable,
        sorted = Q.QueueList$(null, t1);
      new R._EvaluateVisitor__topologicalModules_visitModule(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _indexAfterImports$1: function(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment, t3 = type$.legacy_CssImport, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1: function(node) {
      var t1, t2, _i;
      for (t1 = node.children, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(this);
      return null;
    },
    visitAtRootRule$1: function(node) {
      var root, innerCopy, outerCopy, cur, copy, _this = this, _null = null,
        t1 = node.query,
        query = t1 != null ? _this._adjustParseError$2(t1, new R._EvaluateVisitor_visitAtRootRule_closure(_this, _this._performInterpolation$2$warnForColor(t1, true))) : C.AtRootQuery_UsS,
        $parent = _this._evaluate$_parent,
        included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode);
      for (t1 = type$.legacy_CssStylesheet; !t1._is($parent);) {
        if (!query.excludes$1($parent))
          included.push($parent);
        $parent = $parent._parent;
      }
      root = _this._trimIncluded$1(included);
      if (root == _this._evaluate$_parent) {
        _this._evaluate$_environment.scope$1$2$when(new R._EvaluateVisitor_visitAtRootRule_closure0(_this, node), node.hasDeclarations, type$.Null);
        return _null;
      }
      innerCopy = included.length === 0 ? _null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();
      for (t1 = H.SubListIterable$(included, 1, _null, type$.legacy_ModifiableCssParentNode), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
        cur = t1.__internal$_current;
        copy = cur.copyWithoutChildren$0();
        copy.addChild$1(outerCopy);
      }
      if (outerCopy != null)
        root.addChild$1(outerCopy);
      _this._scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new R._EvaluateVisitor_visitAtRootRule_closure1(_this, node));
      return _null;
    },
    _trimIncluded$1: function(nodes) {
      var $parent, innermostContiguous, i, t2, root,
        t1 = nodes.length;
      if (t1 === 0)
        return this._root;
      $parent = this._evaluate$_parent;
      for (innermostContiguous = null, i = 0; i < t1; ++i) {
        for (; $parent != nodes[i]; innermostContiguous = null)
          $parent = $parent._parent;
        if (innermostContiguous == null)
          innermostContiguous = i;
        $parent = $parent._parent;
      }
      t2 = this._root;
      if ($parent != t2)
        return t2;
      root = nodes[innermostContiguous];
      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);
      return root;
    },
    _scopeForAtRoot$4: function(node, newParent, query, included) {
      var _this = this,
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure(_this, newParent, node),
        t1 = query._all || query._at_root_query$_rule;
      if (t1 !== query.include)
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure0(_this, scope);
      if (_this._mediaQueries != null && query.excludesName$1("media"))
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure1(_this, scope);
      if (_this._inKeyframes && query.excludesName$1("keyframes"))
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure2(_this, scope);
      return _this._inUnknownAtRule && !C.JSArray_methods.any$1(included, new R._EvaluateVisitor__scopeForAtRoot_closure3()) ? new R._EvaluateVisitor__scopeForAtRoot_closure4(_this, scope) : scope;
    },
    visitContentBlock$1: function(node) {
      return H.throwExpression(P.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1: function(node) {
      var $content = this._evaluate$_environment._content;
      if ($content == null)
        return null;
      this._runUserDefinedCallable$4(node.$arguments, $content, node, new R._EvaluateVisitor_visitContentRule_closure(this, $content));
      return null;
    },
    visitDebugRule$1: function(node) {
      var value = node.expression.accept$1(this),
        t1 = value instanceof D.SassString ? value.text : J.toString$0$(value);
      this._evaluate$_logger.debug$2(0, t1, node.span);
      return null;
    },
    visitDeclaration$1: function(node) {
      var t1, $name, t2, cssValue, t3, oldDeclarationName, _this = this;
      if (!(_this._styleRule != null && !_this._atRootExcludingStyleRule) && !_this._inUnknownAtRule && !_this._inKeyframes)
        throw H.wrapException(_this._evaluate$_exception$2(string$.Declarm, node.span));
      t1 = node.name;
      $name = _this._interpolationToValue$2$warnForColor(t1, true);
      t2 = _this._declarationName;
      if (t2 != null)
        $name = new F.CssValue(t2 + "-" + H.S($name.value), $name.span, type$.CssValue_legacy_String);
      t2 = node.value;
      cssValue = t2 == null ? null : new F.CssValue(t2.accept$1(_this), t2.get$span(), type$.CssValue_legacy_Value);
      if (cssValue != null) {
        t3 = cssValue.value;
        t3 = !t3.get$isBlank() || t3.get$asList().length === 0;
      } else
        t3 = false;
      if (t3) {
        t3 = _this._evaluate$_parent;
        t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
        t2 = _this._expressionNode$1(t2);
        t2 = t2 == null ? null : t2.get$span();
        t3.addChild$1(L.ModifiableCssDeclaration$($name, cssValue, node.span, t1, t2));
      } else if (J.startsWith$1$s($name.value, "--") && node.children == null)
        throw H.wrapException(_this._evaluate$_exception$2("Custom property values may not be empty.", t2.get$span()));
      if (node.children != null) {
        oldDeclarationName = _this._declarationName;
        _this._declarationName = $name.value;
        _this._evaluate$_environment.scope$1$2$when(new R._EvaluateVisitor_visitDeclaration_closure(_this, node), node.hasDeclarations, type$.Null);
        _this._declarationName = oldDeclarationName;
      }
      return null;
    },
    visitEachRule$1: function(node) {
      var _this = this,
        t1 = node.list,
        list = t1.accept$1(_this),
        nodeWithSpan = _this._expressionNode$1(t1),
        setVariables = node.variables.length === 1 ? new R._EvaluateVisitor_visitEachRule_closure(_this, node, nodeWithSpan) : new R._EvaluateVisitor_visitEachRule_closure0(_this, node, nodeWithSpan);
      return _this._evaluate$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitEachRule_closure1(_this, list, setVariables, node), true, type$.legacy_Value);
    },
    _setMultipleVariables$3: function(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._evaluate$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._evaluate$_environment.setLocalVariable$3(variables[i], C.C_SassNull0, nodeWithSpan);
    },
    visitErrorRule$1: function(node) {
      throw H.wrapException(this._evaluate$_exception$2(J.toString$0$(node.expression.accept$1(this)), node.span));
    },
    visitExtendRule$1: function(node) {
      var targetText, t1, t2, t3, _i, t4, _this = this;
      if (!(_this._styleRule != null && !_this._atRootExcludingStyleRule) || _this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.x40exten, node.span));
      targetText = _this._interpolationToValue$2$warnForColor(node.selector, true);
      for (t1 = _this._adjustParseError$2(targetText, new R._EvaluateVisitor_visitExtendRule_closure(_this, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector, _i = 0; _i < t2; ++_i) {
        t4 = t1[_i].components;
        if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector))
          throw H.wrapException(E.SassFormatException$("complex selectors may not be extended.", targetText.span));
        t4 = t3._as(C.JSArray_methods.get$first(t4)).components;
        if (t4.length !== 1)
          throw H.wrapException(E.SassFormatException$(string$.compou + C.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.span));
        _this._extender.addExtension$4(_this._styleRule.selector, C.JSArray_methods.get$first(t4), node, _this._mediaQueries);
      }
      return null;
    },
    visitAtRule$1: function(node) {
      var $name, t1, value, wasInKeyframes, wasInUnknownAtRule, _this = this;
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.At_rul, node.span));
      $name = _this._interpolationToValue$1(node.name);
      t1 = node.value;
      value = t1 == null ? null : _this._interpolationToValue$3$trim$warnForColor(t1, true, true);
      if (node.children == null) {
        _this._evaluate$_parent.addChild$1(U.ModifiableCssAtRule$($name, node.span, true, value));
        return null;
      }
      wasInKeyframes = _this._inKeyframes;
      wasInUnknownAtRule = _this._inUnknownAtRule;
      if (B.unvendor($name.value) === "keyframes")
        _this._inKeyframes = true;
      else
        _this._inUnknownAtRule = true;
      _this._withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$($name, node.span, false, value), new R._EvaluateVisitor_visitAtRule_closure(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitAtRule_closure0(), type$.legacy_ModifiableCssAtRule, type$.Null);
      _this._inUnknownAtRule = wasInUnknownAtRule;
      _this._inKeyframes = wasInKeyframes;
      return null;
    },
    visitForRule$1: function(node) {
      var _this = this, t1 = {},
        t2 = node.from,
        fromNumber = _this._addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure(_this, node)),
        t3 = node.to,
        toNumber = _this._addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure0(_this, node)),
        from = _this._addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure1(fromNumber)),
        to = t1.to = _this._addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure2(toNumber, fromNumber)),
        direction = from > to ? -1 : 1;
      if (from === (!node.isExclusive ? t1.to = to + direction : to))
        return null;
      return _this._evaluate$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitForRule_closure3(t1, _this, node, from, direction, fromNumber), true, type$.legacy_Value);
    },
    visitForwardRule$1: function(node) {
      var newConfiguration, t4, _i, variable, _this = this,
        _s8_ = "@forward",
        oldConfiguration = _this._configuration,
        adjustedConfiguration = oldConfiguration.throughForward$1(node),
        t1 = node.configuration,
        t2 = t1.length,
        t3 = node.url;
      if (t2 !== 0) {
        newConfiguration = _this._addForwardConfiguration$2(adjustedConfiguration, node);
        _this._loadModule$5$configuration(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure(_this, node), newConfiguration);
        t3 = type$.legacy_String;
        t4 = P.LinkedHashSet_LinkedHashSet(t3);
        for (_i = 0; _i < t2; ++_i) {
          variable = t1[_i];
          if (!variable.isGuarded)
            t4.add$1(0, variable.name);
        }
        _this._removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
        t3 = P.LinkedHashSet_LinkedHashSet(t3);
        for (_i = 0; _i < t2; ++_i)
          t3.add$1(0, t1[_i].name);
        _this._assertConfigurationIsEmpty$2$only(newConfiguration, t3);
      } else {
        _this._configuration = adjustedConfiguration;
        _this._loadModule$4(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure0(_this, node));
        _this._configuration = oldConfiguration;
      }
      return null;
    },
    _addForwardConfiguration$2: function(configuration, node) {
      var t2, t3, _i, variable, t4, t5,
        t1 = configuration._values,
        newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue), type$.legacy_String, type$.legacy_ConfiguredValue);
      for (t2 = node.configuration, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        variable = t2[_i];
        if (variable.isGuarded) {
          t4 = variable.name;
          t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
          if (t5 != null && !J.$eq$(t5.value, C.C_SassNull0)) {
            newValues.$indexSet(0, t4, t5);
            continue;
          }
        }
        t4 = variable.name;
        t5 = variable.expression;
        newValues.$indexSet(0, t4, new Z.ConfiguredValue(t5.accept$1(this).withoutSlash$0(), variable.span, this._expressionNode$1(t5)));
      }
      return new A.Configuration(newValues, node, false);
    },
    _removeUsedConfiguration$3$except: function(upstream, downstream, except) {
      var t1, t2, t3, t4, _i, $name;
      for (t1 = upstream._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._values, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!t4.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {
      configuration._values.forEach$1(0, new R._EvaluateVisitor__assertConfigurationIsEmpty_closure(this, only, nameInError));
    },
    _assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {
      return this._assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);
    },
    _assertConfigurationIsEmpty$1: function(configuration) {
      return this._assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);
    },
    _assertConfigurationIsEmpty$2$only: function(configuration, only) {
      return this._assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);
    },
    visitFunctionRule$1: function(node) {
      var t1 = this._evaluate$_environment,
        t2 = t1.closure$0(),
        t3 = t1._functions,
        index = t3.length - 1,
        t4 = node.name;
      t1._functionIndices.$indexSet(0, t4, index);
      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_Environment));
      return null;
    },
    visitIfRule$1: function(node) {
      var t1, t2, _i, clauseToCheck, _box_0 = {};
      _box_0.clause = node.lastClause;
      for (t1 = node.clauses, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        clauseToCheck = t1[_i];
        if (clauseToCheck.expression.accept$1(this).get$isTruthy()) {
          _box_0.clause = clauseToCheck;
          break;
        }
      }
      t1 = _box_0.clause;
      if (t1 == null)
        return null;
      return this._evaluate$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitIfRule_closure(_box_0, this), true, t1.hasDeclarations, type$.legacy_Value);
    },
    visitImportRule$1: function(node) {
      var t1, t2, t3, t4, t5, t6, _i, $import, t7, result, supports, t8, t9, resolvedSupports, mediaQuery, t10, result0, _this = this, _null = null;
      for (t1 = node.imports, t2 = t1.length, t3 = type$.legacy_CssMediaQuery, t4 = type$.CssValue_legacy_String, t5 = type$.legacy_StaticImport, t6 = type$.JSArray_legacy_ModifiableCssImport, _i = 0; _i < t2; ++_i) {
        $import = t1[_i];
        if ($import instanceof B.DynamicImport)
          _this._visitDynamicImport$1($import);
        else {
          t5._as($import);
          t7 = $import.url;
          result = _this._performInterpolation$2$warnForColor(t7, false);
          supports = $import.supports;
          if (supports instanceof L.SupportsDeclaration) {
            t8 = supports.name;
            t8 = H.S(_this._evaluate$_serialize$3$quote(t8.accept$1(_this), t8, true)) + ": ";
            t9 = supports.value;
            resolvedSupports = t8 + H.S(_this._evaluate$_serialize$3$quote(t9.accept$1(_this), t9, true));
          } else
            resolvedSupports = supports == null ? _null : _this._visitSupportsCondition$1(supports);
          t8 = $import.media;
          mediaQuery = t8 == null ? _null : _this._visitMediaQueries$1(t8);
          t8 = $import.span;
          t9 = resolvedSupports == null ? _null : new F.CssValue("supports(" + resolvedSupports + ")", supports.get$span(), t4);
          if (mediaQuery == null)
            t10 = _null;
          else {
            result0 = P.List_List$from(mediaQuery, false, t3);
            result0.fixed$length = Array;
            result0.immutable$list = Array;
            t10 = result0;
          }
          node = new F.ModifiableCssImport(new F.CssValue(result, t7.span, t4), t9, t10, t8);
          t7 = _this._evaluate$_parent;
          t8 = _this._root;
          if (t7 != t8)
            t7.addChild$1(node);
          else if (_this._endOfImports === J.get$length$asx(t8.children._collection$_source)) {
            t7 = _this._root;
            t7.toString;
            node._parent = t7;
            t7 = t7._children;
            node._indexInParent = t7.length;
            t7.push(node);
            _this._endOfImports = _this._endOfImports + 1;
          } else {
            t7 = _this._outOfOrderImports;
            (t7 == null ? _this._outOfOrderImports = H.setRuntimeTypeInfo([], t6) : t7).push(node);
          }
        }
      }
      return _null;
    },
    _visitDynamicImport$1: function($import) {
      return this._withStackFrame$3("@import", $import, new R._EvaluateVisitor__visitDynamicImport_closure(this, $import));
    },
    _loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {
      var tuple, error, error0, message, t1, t2, t3, exception, message0, _this = this;
      try {
        _this._importSpan = span;
        t1 = P.Uri_parse(url);
        t2 = _this._importer;
        if (baseUrl == null) {
          t3 = _this._stylesheet;
          t3 = t3 == null ? null : t3.span;
          t3 = t3 == null ? null : t3.file.url;
        } else
          t3 = baseUrl;
        tuple = _this._evaluate$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport);
        if (tuple != null)
          return tuple;
        if (C.JSString_methods.startsWith$1(url, "package:") && true)
          throw H.wrapException(string$.x22packa);
        else
          throw H.wrapException("Can't find stylesheet to import.");
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassException) {
          error = t1;
          t1 = _this._evaluate$_exception$2(error._span_exception$_message, error.get$span());
          throw H.wrapException(t1);
        } else {
          error0 = t1;
          message = null;
          try {
            message = H._asStringS(J.get$message$x(error0));
          } catch (exception) {
            H.unwrapException(exception);
            message0 = J.toString$0$(error0);
            message = message0;
          }
          t1 = _this._evaluate$_exception$1(message);
          throw H.wrapException(t1);
        }
      } finally {
        _this._importSpan = null;
      }
    },
    _loadStylesheet$3$baseUrl: function(url, span, baseUrl) {
      return this._loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _loadStylesheet$3$forImport: function(url, span, forImport) {
      return this._loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    visitIncludeRule$1: function(node) {
      var nodeWithSpan, t1, t2, contentCallable, _this = this,
        _s37_ = "Mixin doesn't accept a content block.",
        mixin = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitIncludeRule_closure(_this, node));
      if (mixin == null)
        throw H.wrapException(_this._evaluate$_exception$2("Undefined mixin.", node.span));
      nodeWithSpan = new B._FakeAstNode(new R._EvaluateVisitor_visitIncludeRule_closure0(node));
      if (mixin instanceof Q.BuiltInCallable) {
        if (node.content != null)
          throw H.wrapException(_this._evaluate$_exception$2(_s37_, node.span));
        _this._runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan);
      } else if (type$.legacy_UserDefinedCallable_legacy_Environment._is(mixin)) {
        t1 = node.content;
        t2 = t1 == null;
        if (!t2 && !type$.legacy_MixinRule._as(mixin.declaration).hasContent)
          throw H.wrapException(E.MultiSpanSassRuntimeException$(_s37_, node.get$spanWithoutContent(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate$_stackTrace$1(node.get$spanWithoutContent())));
        contentCallable = t2 ? null : new E.UserDefinedCallable(t1, _this._evaluate$_environment.closure$0(), type$.UserDefinedCallable_legacy_Environment);
        _this._runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new R._EvaluateVisitor_visitIncludeRule_closure1(_this, contentCallable, mixin, nodeWithSpan));
      } else
        throw H.wrapException(P.UnsupportedError$("Unknown callable type " + mixin.toString$0(0) + "."));
      return null;
    },
    visitMixinRule$1: function(node) {
      var t1 = this._evaluate$_environment,
        t2 = t1.closure$0(),
        t3 = t1._mixins,
        index = t3.length - 1,
        t4 = node.name;
      t1._mixinIndices.$indexSet(0, t4, index);
      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_Environment));
      return null;
    },
    visitLoudComment$1: function(node) {
      var t1, t2, _this = this;
      if (_this._inFunction)
        return null;
      t1 = _this._evaluate$_parent;
      t2 = _this._root;
      if (t1 == t2 && _this._endOfImports === J.get$length$asx(t2.children._collection$_source))
        _this._endOfImports = _this._endOfImports + 1;
      t1 = node.text;
      _this._evaluate$_parent.addChild$1(new R.ModifiableCssComment(_this._performInterpolation$1(t1), t1.span));
      return null;
    },
    visitMediaRule$1: function(node) {
      var queries, t1, mergedQueries, _this = this;
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.Media_, node.span));
      queries = _this._visitMediaQueries$1(node.query);
      t1 = _this._mediaQueries;
      mergedQueries = t1 == null ? null : _this._mergeMediaQueries$2(t1, queries);
      t1 = mergedQueries == null;
      if (!t1 && mergedQueries.length === 0)
        return null;
      t1 = t1 ? queries : mergedQueries;
      _this._withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new R._EvaluateVisitor_visitMediaRule_closure(_this, mergedQueries, queries, node), node.hasDeclarations, new R._EvaluateVisitor_visitMediaRule_closure0(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null);
      return null;
    },
    _visitMediaQueries$1: function(interpolation) {
      return this._adjustParseError$2(interpolation, new R._EvaluateVisitor__visitMediaQueries_closure(this, this._performInterpolation$2$warnForColor(interpolation, true)));
    },
    _mergeMediaQueries$2: function(queries1, queries2) {
      var t1, t2, t3, t4, t5, result,
        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery);
      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {
          result = t4.merge$1(t5.get$current(t5));
          if (result === C._SingletonCssMediaQueryMergeResult_empty)
            continue;
          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable)
            return null;
          queries.push(t3._as(result).query);
        }
      }
      return queries;
    },
    visitReturnRule$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitSilentComment$1: function(node) {
      return null;
    },
    visitStyleRule$1: function(node) {
      var t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, _this = this, t1 = {};
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.Style_, node.span));
      t2 = node.selector;
      selectorText = _this._interpolationToValue$3$trim$warnForColor(t2, true, true);
      if (_this._inKeyframes) {
        _this._withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(new F.CssValue(P.List_List$unmodifiable(_this._adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure(_this, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String), node.span), new R._EvaluateVisitor_visitStyleRule_closure0(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure1(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null);
        return null;
      }
      t1.parsedSelector = _this._adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure2(_this, selectorText));
      parsedSelector = _this._addExceptionSpan$2(t2, new R._EvaluateVisitor_visitStyleRule_closure3(t1, _this));
      t1.parsedSelector = parsedSelector;
      rule = X.ModifiableCssStyleRule$(_this._extender.addSelector$3(parsedSelector, t2.span, _this._mediaQueries), node.span, t1.parsedSelector);
      oldAtRootExcludingStyleRule = _this._atRootExcludingStyleRule;
      _this._atRootExcludingStyleRule = false;
      _this._withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitStyleRule_closure4(_this, rule, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure5(), type$.legacy_ModifiableCssStyleRule, type$.Null);
      _this._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      if (!(_this._styleRule != null && !oldAtRootExcludingStyleRule)) {
        t1 = _this._evaluate$_parent.children;
        t1 = !t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._evaluate$_parent.children;
        t1.get$last(t1).isGroupEnd = true;
      }
      return null;
    },
    visitSupportsRule$1: function(node) {
      var t1, _this = this;
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.Suppor, node.span));
      t1 = node.condition;
      _this._withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$(new F.CssValue(_this._visitSupportsCondition$1(t1), t1.get$span(), type$.CssValue_legacy_String), node.span), new R._EvaluateVisitor_visitSupportsRule_closure(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitSupportsRule_closure0(), type$.legacy_ModifiableCssSupportsRule, type$.Null);
      return null;
    },
    _visitSupportsCondition$1: function(condition) {
      var t1, t2, _this = this;
      if (condition instanceof U.SupportsOperation) {
        t1 = condition.left;
        t2 = condition.operator;
        return H.S(_this._parenthesize$2(t1, t2)) + " " + t2 + " " + H.S(_this._parenthesize$2(condition.right, t2));
      } else if (condition instanceof M.SupportsNegation)
        return "not " + H.S(_this._parenthesize$1(condition.condition));
      else if (condition instanceof X.SupportsInterpolation) {
        t1 = condition.expression;
        return _this._evaluate$_serialize$3$quote(t1.accept$1(_this), t1, false);
      } else if (condition instanceof L.SupportsDeclaration) {
        t1 = condition.name;
        t1 = "(" + H.S(_this._evaluate$_serialize$3$quote(t1.accept$1(_this), t1, true)) + ": ";
        t2 = condition.value;
        return t1 + H.S(_this._evaluate$_serialize$3$quote(t2.accept$1(_this), t2, true)) + ")";
      } else if (condition instanceof F.SupportsFunction)
        return _this._performInterpolation$1(condition.name) + "(" + _this._performInterpolation$1(condition.$arguments) + ")";
      else if (condition instanceof Y.SupportsAnything)
        return "(" + _this._performInterpolation$1(condition.contents) + ")";
      else
        return null;
    },
    _parenthesize$2: function(condition, operator) {
      var t1;
      if (!(condition instanceof M.SupportsNegation))
        if (condition instanceof U.SupportsOperation)
          t1 = operator == null || operator !== condition.operator;
        else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "(" + H.S(this._visitSupportsCondition$1(condition)) + ")";
      else
        return this._visitSupportsCondition$1(condition);
    },
    _parenthesize$1: function(condition) {
      return this._parenthesize$2(condition, null);
    },
    visitVariableDeclaration$1: function(node) {
      var t1, value, t2, _this = this, _null = null;
      if (node.isGuarded) {
        if (node.namespace == null && _this._evaluate$_environment._variables.length === 1) {
          t1 = _this._configuration._values;
          t1 = t1.get$isEmpty(t1) ? _null : t1.remove$1(0, node.name);
          if (t1 != null) {
            _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure(_this, node, t1));
            return _null;
          }
        }
        value = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure0(_this, node));
        if (value != null && !value.$eq(0, C.C_SassNull0))
          return _null;
      }
      if (node.isGlobal && !_this._evaluate$_environment.globalVariableExists$1(node.name)) {
        t1 = _this._evaluate$_environment._variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName(node.span) + ": null` at the root of the\nstylesheet.";
        t2 = node.span;
        _this._evaluate$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, _this._evaluate$_stackTrace$1(t2));
      }
      _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure1(_this, node, node.expression.accept$1(_this).withoutSlash$0()));
      return _null;
    },
    visitUseRule$1: function(node) {
      var configuration, t3, _i, variable, t4, t5, _this = this,
        t1 = node.configuration,
        t2 = t1.length;
      if (t2 === 0)
        configuration = C.Configuration_Map_empty_null_true;
      else {
        t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);
        for (_i = 0; _i < t2; ++_i) {
          variable = t1[_i];
          t4 = variable.name;
          t5 = variable.expression;
          t3.$indexSet(0, t4, new Z.ConfiguredValue(t5.accept$1(_this).withoutSlash$0(), variable.span, _this._expressionNode$1(t5)));
        }
        configuration = new A.Configuration(t3, node, false);
      }
      _this._loadModule$5$configuration(node.url, "@use", node, new R._EvaluateVisitor_visitUseRule_closure(_this, node), configuration);
      _this._assertConfigurationIsEmpty$1(configuration);
      return null;
    },
    visitWarnRule$1: function(node) {
      var _this = this,
        value = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitWarnRule_closure(_this, node)),
        t1 = value instanceof D.SassString ? value.text : _this._evaluate$_serialize$2(value, node.expression);
      _this._evaluate$_logger.warn$2$trace(0, t1, _this._evaluate$_stackTrace$1(node.span));
      return null;
    },
    visitWhileRule$1: function(node) {
      return this._evaluate$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitWhileRule_closure(this, node), true, node.hasDeclarations, type$.legacy_Value);
    },
    visitBinaryOperationExpression$1: function(node) {
      return this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitBinaryOperationExpression_closure(this, node));
    },
    visitValueExpression$1: function(node) {
      return node.value;
    },
    visitVariableExpression$1: function(node) {
      var result = this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableExpression_closure(this, node));
      if (result != null)
        return result;
      throw H.wrapException(this._evaluate$_exception$2("Undefined variable.", node.span));
    },
    visitUnaryOperationExpression$1: function(node) {
      var operand = node.operand.accept$1(this),
        t1 = node.operator;
      switch (t1) {
        case C.UnaryOperator_j2w:
          return operand.unaryPlus$0();
        case C.UnaryOperator_U4G:
          return operand.unaryMinus$0();
        case C.UnaryOperator_zDx:
          operand.toString;
          return new D.SassString("/" + N.serializeValue0(operand, false, true), false);
        case C.UnaryOperator_not_not:
          return operand.unaryNot$0();
        default:
          throw H.wrapException(P.StateError$("Unknown unary operator " + H.S(t1) + "."));
      }
    },
    visitBooleanExpression$1: function(node) {
      return node.value ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    visitIfExpression$1: function(node) {
      var condition, ifTrue, ifFalse, _this = this,
        pair = _this._evaluateMacroArguments$1(node),
        positional = pair.item1,
        named = pair.item2,
        t1 = J.getInterceptor$asx(positional);
      _this._verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration(), node);
      condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, "condition");
      ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, "if-true");
      ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, "if-false");
      return (condition.accept$1(_this).get$isTruthy() ? ifTrue : ifFalse).accept$1(_this);
    },
    visitNullExpression$1: function(node) {
      return C.C_SassNull0;
    },
    visitNumberExpression$1: function(node) {
      var t1 = node.value,
        t2 = node.unit;
      return t2 == null ? new N.UnitlessSassNumber(t1, null) : new L.SingleUnitSassNumber(t2, t1, null);
    },
    visitParenthesizedExpression$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitColorExpression$1: function(node) {
      return node.value;
    },
    visitListExpression$1: function(node) {
      var t1 = node.contents;
      return D.SassList$(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitListExpression_closure(this), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value*>")), node.separator, node.hasBrackets);
    },
    visitMapExpression$1: function(node) {
      var t2, t3, _i, pair, t4, keyValue, valueValue,
        t1 = type$.legacy_Value,
        map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1),
        keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode);
      for (t2 = node.pairs, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        pair = t2[_i];
        t4 = pair.item1;
        keyValue = t4.accept$1(this);
        valueValue = pair.item2.accept$1(this);
        if (map.containsKey$1(keyValue))
          throw H.wrapException(E.MultiSpanSassRuntimeException$("Duplicate key.", t4.get$span(), "second key", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), "first key"], type$.legacy_FileSpan, type$.legacy_String), this._evaluate$_stackTrace$1(t4.get$span())));
        map.$indexSet(0, keyValue, valueValue);
        keyNodes.$indexSet(0, keyValue, t4);
      }
      return new A.SassMap(H.ConstantMap_ConstantMap$from(map, t1, t1));
    },
    visitFunctionExpression$1: function(node) {
      var oldInFunction, result, _this = this, t1 = {},
        t2 = node.name,
        plainName = t2.get$asPlain();
      t1.$function = null;
      if ((plainName != null ? t1.$function = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure(_this, node, plainName)) : null) == null) {
        if (node.namespace != null)
          throw H.wrapException(_this._evaluate$_exception$2("Undefined function.", node.span));
        t1.$function = new L.PlainCssCallable(_this._performInterpolation$1(t2));
      }
      oldInFunction = _this._inFunction;
      _this._inFunction = true;
      result = _this._addErrorSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure0(t1, _this, node));
      _this._inFunction = oldInFunction;
      return result;
    },
    _getFunction$2$namespace: function($name, namespace) {
      var local = this._evaluate$_environment.getFunction$2$namespace($name, namespace);
      if (local != null || namespace != null)
        return local;
      return this._builtInFunctions.$index(0, $name);
    },
    _runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {
      var evaluated = this._evaluateArguments$1($arguments),
        t1 = callable.declaration.name,
        $name = t1 == null ? "@content" : t1 + "()";
      return this._withStackFrame$3($name, nodeWithSpan, new R._EvaluateVisitor__runUserDefinedCallable_closure(this, callable, evaluated, nodeWithSpan, run));
    },
    _runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {
      var result, t1, t2, t3, first, _i, argument, rest, _this = this;
      if (callable instanceof Q.BuiltInCallable) {
        result = _this._runBuiltInCallable$3($arguments, callable, nodeWithSpan);
        if (result == null)
          throw H.wrapException(_this._evaluate$_exception$2(string$.Custom, nodeWithSpan.get$span()));
        return result.withoutSlash$0();
      } else if (type$.legacy_UserDefinedCallable_legacy_Environment._is(callable))
        return _this._runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new R._EvaluateVisitor__runFunctionCallable_closure(_this, callable)).withoutSlash$0();
      else if (callable instanceof L.PlainCssCallable) {
        t1 = $arguments.named;
        if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)
          throw H.wrapException(_this._evaluate$_exception$2(string$.Plain_, nodeWithSpan.get$span()));
        t1 = H.S(callable.name) + "(";
        for (t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0; _i < t3; ++_i) {
          argument = t2[_i];
          if (first)
            first = false;
          else
            t1 += ", ";
          t1 += H.S(_this._evaluate$_serialize$3$quote(argument.accept$1(_this), argument, true));
        }
        t2 = $arguments.rest;
        rest = t2 == null ? null : t2.accept$1(_this);
        if (rest != null) {
          if (!first)
            t1 += ", ";
          t2 = t1 + H.S(_this._evaluate$_serialize$2(rest, t2));
          t1 = t2;
        }
        t1 += H.Primitives_stringFromCharCode(41);
        return new D.SassString(t1.charCodeAt(0) == 0 ? t1 : t1, false);
      } else
        return null;
    },
    _runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {
      var callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, _this = this,
        evaluated = _this._evaluateArguments$2$trackSpans($arguments, false),
        oldCallableNode = _this._callableNode;
      _this._callableNode = nodeWithSpan;
      namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);
      tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);
      overload = tuple.item1;
      callback = tuple.item2;
      _this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__runBuiltInCallable_closure(overload, evaluated, namedSet));
      declaredArguments = overload.$arguments;
      for (i = evaluated.positional.length, t1 = declaredArguments.length; i < t1; ++i) {
        argument = declaredArguments[i];
        t2 = evaluated.positional;
        t3 = evaluated.named.remove$1(0, argument.name);
        if (t3 == null) {
          t3 = argument.defaultValue;
          t3 = t3 == null ? null : t3.accept$1(_this);
        }
        t2.push(t3);
      }
      if (overload.restArgument != null) {
        if (evaluated.positional.length > t1) {
          rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);
          C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);
        } else
          rest = C.List_empty5;
        t1 = evaluated.named;
        argumentList = D.SassArgumentList$(rest, t1, evaluated.separator === C.ListSeparator_undecided ? C.ListSeparator_comma : evaluated.separator);
        evaluated.positional.push(argumentList);
      } else
        argumentList = null;
      result = null;
      try {
        result = callback.call$1(evaluated.positional);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SassRuntimeException._is(t1))
          throw exception;
        else if (t1 instanceof E.MultiSpanSassScriptException) {
          error = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, _this._evaluate$_stackTrace$1(nodeWithSpan.get$span())));
        } else if (t1 instanceof E.MultiSpanSassException) {
          error0 = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, _this._evaluate$_stackTrace$1(error0.get$span())));
        } else {
          error1 = t1;
          message = null;
          try {
            message = H._asStringS(J.get$message$x(error1));
          } catch (exception) {
            H.unwrapException(exception);
            message0 = J.toString$0$(error1);
            message = message0;
          }
          throw H.wrapException(_this._evaluate$_exception$2(message, nodeWithSpan.get$span()));
        }
      }
      _this._callableNode = oldCallableNode;
      if (argumentList == null)
        return result;
      t1 = evaluated.named;
      if (t1.get$isEmpty(t1))
        return result;
      if (argumentList._wereKeywordsAccessed)
        return result;
      t1 = evaluated.named;
      t1 = t1.get$keys(t1);
      t1 = "No " + B.pluralize("argument", t1.get$length(t1), null) + " named ";
      t2 = evaluated.named;
      throw H.wrapException(E.MultiSpanSassRuntimeException$(t1 + H.S(B.toSentence(t2.get$keys(t2).map$1$1(0, new R._EvaluateVisitor__runBuiltInCallable_closure0(), type$.legacy_Object), "or")) + ".", nodeWithSpan.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate$_stackTrace$1(nodeWithSpan.get$span())));
    },
    _evaluateArguments$2$trackSpans: function($arguments, trackSpans) {
      var t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, _this = this, _null = null;
      if (trackSpans == null)
        trackSpans = _this._sourceMap;
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);
      for (t2 = $arguments.positional, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t1.push(t2[_i].accept$1(_this));
      t4 = type$.legacy_String;
      t5 = type$.legacy_Value;
      t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);
      for (t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8); t8.moveNext$0();) {
        t9 = t8.get$current(t8);
        t6.$indexSet(0, t9.key, t9.value.accept$1(_this));
      }
      if (trackSpans) {
        t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode);
        for (_i = 0; _i < t3; ++_i)
          t8.push(_this._expressionNode$1(t2[_i]));
        positionalNodes = t8;
      } else
        positionalNodes = _null;
      if (trackSpans) {
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);
        for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t7 = t3.get$current(t3);
          t2.$indexSet(0, t7.key, _this._expressionNode$1(t7.value));
        }
        namedNodes = t2;
      } else
        namedNodes = _null;
      t2 = $arguments.rest;
      if (t2 == null)
        return new R._ArgumentResults(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided);
      rest = t2.accept$1(_this);
      restNodeForSpan = trackSpans ? _this._expressionNode$1(t2) : _null;
      if (rest instanceof A.SassMap) {
        _this._addRestMap$1$3(t6, rest, t2, t5);
        if (namedNodes != null) {
          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);
          for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString; t3.moveNext$0();)
            t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);
          namedNodes.addAll$1(0, t2);
        }
        separator = C.ListSeparator_undecided;
      } else if (rest instanceof D.SassList) {
        t2 = rest._list$_contents;
        C.JSArray_methods.addAll$1(t1, t2);
        if (positionalNodes != null)
          C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode));
        separator = rest.separator;
        if (rest instanceof D.SassArgumentList) {
          rest._wereKeywordsAccessed = true;
          rest._keywords.forEach$1(0, new R._EvaluateVisitor__evaluateArguments_closure(t6, namedNodes, restNodeForSpan));
        }
      } else {
        t1.push(rest);
        if (positionalNodes != null)
          positionalNodes.push(restNodeForSpan);
        separator = C.ListSeparator_undecided;
      }
      t2 = $arguments.keywordRest;
      if (t2 == null)
        return new R._ArgumentResults(t1, positionalNodes, t6, namedNodes, separator);
      keywordRest = t2.accept$1(_this);
      keywordRestNodeForSpan = trackSpans ? _this._expressionNode$1(t2) : _null;
      if (keywordRest instanceof A.SassMap) {
        _this._addRestMap$1$3(t6, keywordRest, t2, t5);
        if (namedNodes != null) {
          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);
          for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString; t3.moveNext$0();)
            t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);
          namedNodes.addAll$1(0, t2);
        }
        return new R._ArgumentResults(t1, positionalNodes, t6, namedNodes, separator);
      } else
        throw H.wrapException(_this._evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + ").", t2.get$span()));
    },
    _evaluateArguments$1: function($arguments) {
      return this._evaluateArguments$2$trackSpans($arguments, null);
    },
    _evaluateMacroArguments$1: function(invocation) {
      var t3, positional, named, rest, keywordRest, _this = this,
        t1 = invocation.$arguments,
        t2 = t1.rest;
      if (t2 == null)
        return new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);
      t3 = t1.positional;
      positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1("JSArray<1>"));
      t3 = type$.legacy_Expression;
      named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);
      rest = t2.accept$1(_this);
      if (rest instanceof A.SassMap)
        _this._addRestMap$1$4(named, rest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure(), t3);
      else if (rest instanceof D.SassList) {
        t2 = rest._list$_contents;
        C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new R._EvaluateVisitor__evaluateMacroArguments_closure0(), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Expression*>")));
        if (rest instanceof D.SassArgumentList) {
          rest._wereKeywordsAccessed = true;
          rest._keywords.forEach$1(0, new R._EvaluateVisitor__evaluateMacroArguments_closure1(named));
        }
      } else
        positional.push(new F.ValueExpression(rest, null));
      t1 = t1.keywordRest;
      if (t1 == null)
        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);
      keywordRest = t1.accept$1(_this);
      if (keywordRest instanceof A.SassMap) {
        _this._addRestMap$1$4(named, keywordRest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure2(), t3);
        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);
      } else
        throw H.wrapException(_this._evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + ").", invocation.span));
    },
    _addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {
      var t1 = {};
      t1.convert = convert;
      if (convert == null)
        t1.convert = new R._EvaluateVisitor__addRestMap_closure($T);
      map.contents.forEach$1(0, new R._EvaluateVisitor__addRestMap_closure0(t1, this, values, map, nodeWithSpan));
    },
    _addRestMap$1$3: function(values, map, nodeWithSpan, $T) {
      return this._addRestMap$1$4(values, map, nodeWithSpan, null, $T);
    },
    _verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {
      return this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__verifyArguments_closure($arguments, positional, named));
    },
    visitSelectorExpression$1: function(node) {
      var t1 = this._styleRule;
      if (t1 == null)
        return C.C_SassNull0;
      return t1.originalSelector.get$asSassList();
    },
    visitStringExpression$1: function(node) {
      var t1 = node.text.contents;
      return new D.SassString(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitStringExpression_closure(this), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$0(0), node.hasQuotes);
    },
    visitCssAtRule$1: function(node) {
      var wasInKeyframes, wasInUnknownAtRule, t1, _this = this;
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.At_rul, node.span));
      if (node.isChildless) {
        _this._evaluate$_parent.addChild$1(U.ModifiableCssAtRule$(node.name, node.span, true, node.value));
        return null;
      }
      wasInKeyframes = _this._inKeyframes;
      wasInUnknownAtRule = _this._inUnknownAtRule;
      t1 = node.name;
      if (B.unvendor(t1.get$value(t1)) === "keyframes")
        _this._inKeyframes = true;
      else
        _this._inUnknownAtRule = true;
      _this._withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$(t1, node.span, false, node.value), new R._EvaluateVisitor_visitCssAtRule_closure(_this, node), false, new R._EvaluateVisitor_visitCssAtRule_closure0(), type$.legacy_ModifiableCssAtRule, type$.Null);
      _this._inUnknownAtRule = wasInUnknownAtRule;
      _this._inKeyframes = wasInKeyframes;
    },
    visitCssComment$1: function(node) {
      var _this = this,
        t1 = _this._evaluate$_parent,
        t2 = _this._root;
      if (t1 == t2 && _this._endOfImports === J.get$length$asx(t2.children._collection$_source))
        _this._endOfImports = _this._endOfImports + 1;
      _this._evaluate$_parent.addChild$1(new R.ModifiableCssComment(node.text, node.span));
    },
    visitCssDeclaration$1: function(node) {
      var t1 = node.name;
      this._evaluate$_parent.addChild$1(L.ModifiableCssDeclaration$(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), "--"), node.valueSpanForMap));
    },
    visitCssImport$1: function(node) {
      var _this = this,
        modifiableNode = F.ModifiableCssImport$(node.url, node.span, node.media, node.supports),
        t1 = _this._evaluate$_parent,
        t2 = _this._root;
      if (t1 != t2)
        t1.addChild$1(modifiableNode);
      else if (_this._endOfImports === J.get$length$asx(t2.children._collection$_source)) {
        _this._root.addChild$1(modifiableNode);
        _this._endOfImports = _this._endOfImports + 1;
      } else {
        t1 = _this._outOfOrderImports;
        (t1 == null ? _this._outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t1).push(modifiableNode);
      }
    },
    visitCssKeyframeBlock$1: function(node) {
      this._withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(node.selector, node.span), new R._EvaluateVisitor_visitCssKeyframeBlock_closure(this, node), false, new R._EvaluateVisitor_visitCssKeyframeBlock_closure0(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null);
    },
    visitCssMediaRule$1: function(node) {
      var t1, mergedQueries, _this = this;
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.Media_, node.span));
      t1 = _this._mediaQueries;
      mergedQueries = t1 == null ? null : _this._mergeMediaQueries$2(t1, node.queries);
      t1 = mergedQueries == null;
      if (!t1 && mergedQueries.length === 0)
        return null;
      t1 = t1 ? node.queries : mergedQueries;
      _this._withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new R._EvaluateVisitor_visitCssMediaRule_closure(_this, mergedQueries, node), false, new R._EvaluateVisitor_visitCssMediaRule_closure0(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null);
    },
    visitCssStyleRule$1: function(node) {
      var t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule, _this = this;
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.Style_, node.span));
      t1 = node.selector;
      t2 = t1.value;
      t3 = _this._styleRule;
      t3 = t3 == null ? null : t3.originalSelector;
      originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !_this._atRootExcludingStyleRule);
      rule = X.ModifiableCssStyleRule$(_this._extender.addSelector$3(originalSelector, t1.span, _this._mediaQueries), node.span, originalSelector);
      oldAtRootExcludingStyleRule = _this._atRootExcludingStyleRule;
      _this._atRootExcludingStyleRule = false;
      _this._withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitCssStyleRule_closure(_this, rule, node), false, new R._EvaluateVisitor_visitCssStyleRule_closure0(), type$.legacy_ModifiableCssStyleRule, type$.Null);
      _this._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      if (!(_this._styleRule != null && !oldAtRootExcludingStyleRule)) {
        t1 = _this._evaluate$_parent.children;
        t1 = !t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._evaluate$_parent.children;
        t1.get$last(t1).isGroupEnd = true;
      }
    },
    visitCssStylesheet$1: function(node) {
      var t1;
      for (t1 = J.get$iterator$ax(node.get$children(node)); t1.moveNext$0();)
        t1.get$current(t1).accept$1(this);
    },
    visitCssSupportsRule$1: function(node) {
      var _this = this;
      if (_this._declarationName != null)
        throw H.wrapException(_this._evaluate$_exception$2(string$.Suppor, node.span));
      _this._withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$(node.condition, node.span), new R._EvaluateVisitor_visitCssSupportsRule_closure(_this, node), false, new R._EvaluateVisitor_visitCssSupportsRule_closure0(), type$.legacy_ModifiableCssSupportsRule, type$.Null);
    },
    _handleReturn$1$2: function(list, callback) {
      var t1, _i, result;
      for (t1 = list.length, _i = 0; _i < list.length; list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i) {
        result = callback.call$1(list[_i]);
        if (result != null)
          return result;
      }
      return null;
    },
    _handleReturn$2: function(list, callback) {
      return this._handleReturn$1$2(list, callback, type$.dynamic);
    },
    _withEnvironment$1$2: function(environment, callback) {
      var result,
        oldEnvironment = this._evaluate$_environment;
      this._evaluate$_environment = environment;
      result = callback.call$0();
      this._evaluate$_environment = oldEnvironment;
      return result;
    },
    _withEnvironment$2: function(environment, callback) {
      return this._withEnvironment$1$2(environment, callback, type$.dynamic);
    },
    _interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {
      var result = this._performInterpolation$2$warnForColor(interpolation, warnForColor),
        t1 = trim ? B.trimAscii(result, true) : result;
      return new F.CssValue(t1, interpolation.span, type$.CssValue_legacy_String);
    },
    _interpolationToValue$1: function(interpolation) {
      return this._interpolationToValue$3$trim$warnForColor(interpolation, false, false);
    },
    _interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {
      return this._interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);
    },
    _performInterpolation$2$warnForColor: function(interpolation, warnForColor) {
      var t1 = interpolation.contents;
      return new H.MappedListIterable(t1, new R._EvaluateVisitor__performInterpolation_closure(this, warnForColor), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$0(0);
    },
    _performInterpolation$1: function(interpolation) {
      return this._performInterpolation$2$warnForColor(interpolation, false);
    },
    _evaluate$_serialize$3$quote: function(value, nodeWithSpan, quote) {
      return this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__serialize_closure(value, quote));
    },
    _evaluate$_serialize$2: function(value, nodeWithSpan) {
      return this._evaluate$_serialize$3$quote(value, nodeWithSpan, true);
    },
    _expressionNode$1: function(expression) {
      var t1;
      if (!this._sourceMap)
        return null;
      if (expression instanceof S.VariableExpression) {
        t1 = this._evaluate$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);
        return t1 == null ? expression : t1;
      } else
        return expression;
    },
    _withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {
      var oldParent, result, _this = this;
      _this._addChild$2$through(node, through);
      oldParent = _this._evaluate$_parent;
      _this._evaluate$_parent = node;
      result = _this._evaluate$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1("0*"));
      _this._evaluate$_parent = oldParent;
      return result;
    },
    _withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {
      return this._withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);
    },
    _withParent$2$2: function(node, callback, $S, $T) {
      return this._withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);
    },
    _addChild$2$through: function(node, through) {
      var grandparent,
        $parent = this._evaluate$_parent;
      if (through != null) {
        for (; through.call$1($parent);)
          $parent = $parent._parent;
        if ($parent.get$hasFollowingSibling()) {
          grandparent = $parent._parent;
          $parent = $parent.copyWithoutChildren$0();
          grandparent.addChild$1($parent);
        }
      }
      $parent.addChild$1(node);
    },
    _addChild$1: function(node) {
      return this._addChild$2$through(node, null);
    },
    _withStyleRule$1$2: function(rule, callback) {
      var result,
        oldRule = this._styleRule;
      this._styleRule = rule;
      result = callback.call$0();
      this._styleRule = oldRule;
      return result;
    },
    _withStyleRule$2: function(rule, callback) {
      return this._withStyleRule$1$2(rule, callback, type$.dynamic);
    },
    _withMediaQueries$1$2: function(queries, callback) {
      var result,
        oldMediaQueries = this._mediaQueries;
      this._mediaQueries = queries;
      result = callback.call$0();
      this._mediaQueries = oldMediaQueries;
      return result;
    },
    _withMediaQueries$2: function(queries, callback) {
      return this._withMediaQueries$1$2(queries, callback, type$.dynamic);
    },
    _withStackFrame$1$3: function(member, nodeWithSpan, callback) {
      var oldMember, result, _this = this,
        t1 = _this._stack;
      t1.push(new S.Tuple2(_this._member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode));
      oldMember = _this._member;
      _this._member = member;
      result = callback.call$0();
      _this._member = oldMember;
      t1.pop();
      return result;
    },
    _withStackFrame$3: function(member, nodeWithSpan, callback) {
      return this._withStackFrame$1$3(member, nodeWithSpan, callback, type$.dynamic);
    },
    _stackFrame$2: function(member, span) {
      var url = span.file.url;
      return B.frameForSpan(span, member, url != null && this._evaluate$_importCache != null ? this._evaluate$_importCache.humanize$1(url) : url);
    },
    _evaluate$_stackTrace$1: function(span) {
      var t2, cur, _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);
      for (t2 = _this._stack, t2 = new H.MappedListIterable(t2, new R._EvaluateVisitor__stackTrace_closure(_this), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Frame*>")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      if (span != null)
        t1.push(_this._stackFrame$2(_this._member, span));
      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));
    },
    _evaluate$_stackTrace$0: function() {
      return this._evaluate$_stackTrace$1(null);
    },
    _warn$3$deprecation: function(message, span, deprecation) {
      return this._evaluate$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._evaluate$_stackTrace$1(span));
    },
    _warn$2: function(message, span) {
      return this._warn$3$deprecation(message, span, false);
    },
    _evaluate$_exception$2: function(message, span) {
      var t1 = span == null ? C.JSArray_methods.get$last(this._stack).item2.get$span() : span;
      return new E.SassRuntimeException(this._evaluate$_stackTrace$1(span), message, t1);
    },
    _evaluate$_exception$1: function(message) {
      return this._evaluate$_exception$2(message, null);
    },
    _multiSpanException$3: function(message, primaryLabel, secondaryLabels) {
      var t1 = C.JSArray_methods.get$last(this._stack).item2.get$span();
      return new E.MultiSpanSassRuntimeException(this._evaluate$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);
    },
    _adjustParseError$1$2: function(nodeWithSpan, callback) {
      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException) {
          error = t1;
          t1 = error;
          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);
          span = nodeWithSpan.get$span();
          t1 = span;
          t2 = span;
          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);
          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);
          t1 = span;
          t1 = Y.FileLocation$_(t1.file, t1._file$_start);
          t3 = error;
          t3 = G.SourceSpanException.prototype.get$span.call(t3);
          t3 = Y.FileLocation$_(t3.file, t3._file$_start);
          t4 = span;
          t4 = Y.FileLocation$_(t4.file, t4._file$_start);
          t5 = error;
          t5 = G.SourceSpanException.prototype.get$span.call(t5);
          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);
          throw H.wrapException(this._evaluate$_exception$2(error._span_exception$_message, syntheticSpan));
        } else
          throw exception;
      }
    },
    _adjustParseError$2: function(nodeWithSpan, callback) {
      return this._adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _addExceptionSpan$1$2: function(nodeWithSpan, callback) {
      var error, error0, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.MultiSpanSassScriptException) {
          error = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._evaluate$_stackTrace$1(nodeWithSpan.get$span())));
        } else if (t1 instanceof E.SassScriptException) {
          error0 = t1;
          throw H.wrapException(this._evaluate$_exception$2(error0.message, nodeWithSpan.get$span()));
        } else
          throw exception;
      }
    },
    _addExceptionSpan$2: function(nodeWithSpan, callback) {
      return this._addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _addErrorSpan$1$2: function(nodeWithSpan, callback) {
      var error, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SassRuntimeException._is(t1)) {
          error = t1;
          t1 = error.get$span();
          if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), "@error"))
            throw exception;
          throw H.wrapException(E.SassRuntimeException$(error._span_exception$_message, nodeWithSpan.get$span(), this._evaluate$_stackTrace$0()));
        } else
          throw exception;
      }
    },
    _addErrorSpan$2: function(nodeWithSpan, callback) {
      return this._addErrorSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    }
  };
  R._EvaluateVisitor_closure.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._evaluate$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  R._EvaluateVisitor_closure0.prototype = {
    call$1: function($arguments) {
      var variable = J.$index$asx($arguments, 0).assertString$1("name"),
        t1 = this.$this._evaluate$_environment,
        t2 = variable.text;
      t2.toString;
      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, "_", "-")) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  R._EvaluateVisitor_closure1.prototype = {
    call$1: function($arguments) {
      var module, t2, t3, t4,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this;
      t2 = t1._evaluate$_environment;
      t3 = variable.text;
      t3.toString;
      t4 = H.stringReplaceAllUnchecked(t3, "_", "-");
      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  R._EvaluateVisitor_closure2.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._evaluate$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  R._EvaluateVisitor_closure3.prototype = {
    call$1: function($arguments) {
      var t1 = this.$this._evaluate$_environment;
      if (!t1._inMixin)
        throw H.wrapException(E.SassScriptException$(string$.conten));
      return t1._content != null ? C.SassBoolean_true0 : C.SassBoolean_false0;
    },
    $signature: 22
  };
  R._EvaluateVisitor_closure4.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._evaluate$_environment._environment$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString(t4.key, true), t4.value);
      }
      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 36
  };
  R._EvaluateVisitor_closure5.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._evaluate$_environment._environment$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString(t4.key, true), new F.SassFunction(t4.value));
      }
      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 36
  };
  R._EvaluateVisitor_closure6.prototype = {
    call$1: function($arguments) {
      var module, callable,
        t1 = J.getInterceptor$asx($arguments),
        $name = t1.$index($arguments, 0).assertString$1("name"),
        css = t1.$index($arguments, 1).get$isTruthy();
      t1 = t1.$index($arguments, 2).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      if (css && module != null)
        throw H.wrapException(string$.x24css_a);
      if (css)
        callable = new L.PlainCssCallable($name.text);
      else {
        t1 = this.$this;
        callable = t1._addExceptionSpan$2(t1._callableNode, new R._EvaluateVisitor__closure1(t1, $name, module));
      }
      if (callable != null)
        return new F.SassFunction(callable);
      throw H.wrapException("Function not found: " + $name.toString$0(0));
    },
    $signature: 212
  };
  R._EvaluateVisitor__closure1.prototype = {
    call$0: function() {
      var t2,
        t1 = this.name.text;
      t1.toString;
      t1 = H.stringReplaceAllUnchecked(t1, "_", "-");
      t2 = this.module;
      t2 = t2 == null ? null : t2.text;
      return this.$this._getFunction$2$namespace(t1, t2);
    },
    $signature: 118
  };
  R._EvaluateVisitor_closure7.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable,
        t1 = J.getInterceptor$asx($arguments),
        $function = t1.$index($arguments, 0),
        args = type$.legacy_SassArgumentList._as(t1.$index($arguments, 1));
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);
      t2 = type$.legacy_String;
      t3 = type$.legacy_Expression;
      t4 = this.$this;
      t5 = t4._callableNode.get$span();
      t6 = t4._callableNode.get$span();
      args._wereKeywordsAccessed = true;
      t7 = args._keywords;
      if (t7.get$isEmpty(t7))
        t7 = null;
      else {
        t8 = type$.legacy_Value;
        t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);
        for (args._wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {
          t10 = t7.get$current(t7);
          t9.$indexSet(0, new D.SassString(t10.key, false), t10.value);
        }
        t7 = new F.ValueExpression(new A.SassMap(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._callableNode.get$span());
      }
      invocation = new X.ArgumentInvocation(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression(args, t6), t7, t5);
      if ($function instanceof D.SassString) {
        N.warn(string$.Passin + $function.toString$0(0) + ")) instead.", true);
        return t4.visitFunctionExpression$1(new F.FunctionExpression(null, X.Interpolation$(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._callableNode.get$span()), invocation, t4._callableNode.get$span()));
      }
      callable = $function.assertFunction$1("function").callable;
      if (type$.legacy_Callable._is(callable))
        return t4._runFunctionCallable$3(invocation, callable, t4._callableNode);
      else
        throw H.wrapException(E.SassScriptException$("The function " + H.S(callable.get$name(callable)) + string$.x20is_as));
    },
    $signature: 5
  };
  R._EvaluateVisitor_closure8.prototype = {
    call$1: function($arguments) {
      var withMap, values, configuration, t2, t3, _null = null,
        t1 = J.getInterceptor$asx($arguments),
        url = P.Uri_parse(t1.$index($arguments, 0).assertString$1("url").text);
      t1 = t1.$index($arguments, 1).get$realNull();
      t1 = t1 == null ? _null : t1.assertMap$1("with");
      withMap = t1 == null ? _null : t1.contents;
      if (withMap != null) {
        values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);
        t1 = this.$this;
        withMap.forEach$1(0, new R._EvaluateVisitor__closure(values, t1._callableNode.get$span()));
        configuration = new A.Configuration(values, t1._callableNode, false);
      } else
        configuration = C.Configuration_Map_empty_null_true;
      t1 = this.$this;
      t2 = t1._callableNode;
      t3 = t2.get$span();
      t3 = t3 == null ? _null : t3.file.url;
      t1._loadModule$7$baseUrl$configuration$namesInErrors(url, "load-css()", t2, new R._EvaluateVisitor__closure0(t1), t3, configuration, true);
      t1._assertConfigurationIsEmpty$2$nameInError(configuration, true);
      return _null;
    },
    $signature: 103
  };
  R._EvaluateVisitor__closure.prototype = {
    call$2: function(variable, value) {
      var $name,
        t1 = variable.assertString$1("with key").text;
      t1.toString;
      $name = H.stringReplaceAllUnchecked(t1, "_", "-");
      t1 = this.values;
      if (t1.containsKey$1($name))
        throw H.wrapException("The variable $" + $name + " was configured twice.");
      t1.$indexSet(0, $name, new Z.ConfiguredValue(value, this.span, null));
    },
    $signature: 46
  };
  R._EvaluateVisitor__closure0.prototype = {
    call$1: function(module) {
      var t1 = this.$this;
      return t1._combineCss$2$clone(module, true).accept$1(t1);
    },
    $signature: 193
  };
  R._EvaluateVisitor_run_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.node,
        t2 = t1.span,
        url = t2 == null ? null : t2.file.url;
      if (url != null)
        _this.$this._activeModules.$indexSet(0, url, null);
      t2 = _this.$this;
      return new E.EvaluateResult(t2._combineCss$1(t2._execute$2(_this.importer, t1)));
    },
    $signature: 237
  };
  R._EvaluateVisitor_runExpression_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.expression;
      return t1._withFakeStylesheet$3(this.importer, t2, new R._EvaluateVisitor_runExpression__closure(t1, t2));
    },
    $signature: 13
  };
  R._EvaluateVisitor_runExpression__closure.prototype = {
    call$0: function() {
      return this.expression.accept$1(this.$this);
    },
    $signature: 13
  };
  R._EvaluateVisitor_runStatement_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.statement;
      return t1._withFakeStylesheet$3(this.importer, t2, new R._EvaluateVisitor_runStatement__closure(t1, t2));
    },
    $signature: 1
  };
  R._EvaluateVisitor_runStatement__closure.prototype = {
    call$0: function() {
      return this.statement.accept$1(this.$this);
    },
    $signature: 1
  };
  R._EvaluateVisitor__withWarnCallback_closure.prototype = {
    call$2: function(message, deprecation) {
      var t1 = this.$this,
        t2 = t1._importSpan;
      return t1._warn$3$deprecation(message, t2 == null ? t1._callableNode.get$span() : t2, deprecation);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 72
  };
  R._EvaluateVisitor__loadModule_closure.prototype = {
    call$0: function() {
      return this.callback.call$1(this.builtInModule);
    },
    $signature: 1
  };
  R._EvaluateVisitor__loadModule_closure0.prototype = {
    call$0: function() {
      var module, error, error0, error1, error2, message, previousLoad, exception, _this = this,
        t1 = _this.$this,
        t2 = _this.nodeWithSpan,
        result = t1._loadStylesheet$3$baseUrl(J.toString$0$(_this.url), t2.get$span(), _this.baseUrl),
        importer = result.item1,
        stylesheet = result.item2,
        canonicalUrl = stylesheet.span.file.url,
        t3 = t1._activeModules;
      if (t3.containsKey$1(canonicalUrl)) {
        message = _this.namesInErrors ? "Module loop: " + H.S($.$get$context().prettyUri$1(canonicalUrl)) + " is already being loaded." : string$.Module;
        previousLoad = t3.$index(0, canonicalUrl);
        throw H.wrapException(previousLoad == null ? t1._evaluate$_exception$1(message) : t1._multiSpanException$3(message, "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
      }
      t3.$indexSet(0, canonicalUrl, t2);
      module = null;
      try {
        module = t1._execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, _this.configuration, _this.namesInErrors, t2);
      } finally {
        t3.remove$1(0, canonicalUrl);
      }
      try {
        _this.callback.call$1(module);
      } catch (exception) {
        t2 = H.unwrapException(exception);
        if (type$.legacy_SassRuntimeException._is(t2))
          throw exception;
        else if (t2 instanceof E.MultiSpanSassException) {
          error = t2;
          throw H.wrapException(E.MultiSpanSassRuntimeException$(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._evaluate$_stackTrace$1(error.get$span())));
        } else if (t2 instanceof E.SassException) {
          error0 = t2;
          throw H.wrapException(t1._evaluate$_exception$2(error0._span_exception$_message, error0.get$span()));
        } else if (t2 instanceof E.MultiSpanSassScriptException) {
          error1 = t2;
          throw H.wrapException(t1._multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));
        } else if (t2 instanceof E.SassScriptException) {
          error2 = t2;
          throw H.wrapException(t1._evaluate$_exception$1(error2.message));
        } else
          throw exception;
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor__execute_closure.prototype = {
    call$0: function() {
      var t2, t3, t4, css, _this = this,
        t1 = _this.$this,
        oldImporter = t1._importer,
        oldStylesheet = t1._stylesheet,
        oldRoot = t1._root,
        oldParent = t1._evaluate$_parent,
        oldEndOfImports = t1._endOfImports,
        oldOutOfOrderImports = t1._outOfOrderImports,
        oldExtender = t1._extender,
        oldStyleRule = t1._styleRule,
        oldMediaQueries = t1._mediaQueries,
        oldDeclarationName = t1._declarationName,
        oldInUnknownAtRule = t1._inUnknownAtRule,
        oldAtRootExcludingStyleRule = t1._atRootExcludingStyleRule,
        oldInKeyframes = t1._inKeyframes,
        oldConfiguration = t1._configuration;
      t1._importer = _this.importer;
      t2 = t1._stylesheet = _this.stylesheet;
      t3 = t2.span;
      t1._evaluate$_parent = t1._root = V.ModifiableCssStylesheet$(t3);
      t1._endOfImports = 0;
      t1._outOfOrderImports = null;
      t1._extender = _this.extender;
      t1._declarationName = t1._mediaQueries = t1._styleRule = null;
      t1._inKeyframes = t1._atRootExcludingStyleRule = t1._inUnknownAtRule = false;
      t4 = _this.configuration;
      if (t4 != null)
        t1._configuration = t4;
      t1.visitStylesheet$1(t2);
      css = t1._outOfOrderImports == null ? t1._root : new V.CssStylesheet(new P.UnmodifiableListView(t1._addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode), t3);
      _this._box_0.css = css;
      t1._importer = oldImporter;
      t1._stylesheet = oldStylesheet;
      t1._root = oldRoot;
      t1._evaluate$_parent = oldParent;
      t1._endOfImports = oldEndOfImports;
      t1._outOfOrderImports = oldOutOfOrderImports;
      t1._extender = oldExtender;
      t1._styleRule = oldStyleRule;
      t1._mediaQueries = oldMediaQueries;
      t1._declarationName = oldDeclarationName;
      t1._inUnknownAtRule = oldInUnknownAtRule;
      t1._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      t1._inKeyframes = oldInKeyframes;
      t1._configuration = oldConfiguration;
    },
    $signature: 0
  };
  R._EvaluateVisitor__combineCss_closure.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 122
  };
  R._EvaluateVisitor__combineCss_closure0.prototype = {
    call$1: function(target) {
      return !this.selectors.contains$1(0, target);
    },
    $signature: 18
  };
  R._EvaluateVisitor__combineCss_closure1.prototype = {
    call$1: function(module) {
      return module.cloneCss$0();
    },
    $signature: 127
  };
  R._EvaluateVisitor__extendModules_closure.prototype = {
    call$1: function(target) {
      return !this.originalSelectors.contains$1(0, target);
    },
    $signature: 18
  };
  R._EvaluateVisitor__extendModules_closure0.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender);
    },
    $signature: 210
  };
  R._EvaluateVisitor__topologicalModules_visitModule.prototype = {
    call$1: function(module) {
      var t1, t2, t3, _i, upstream;
      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        upstream = t1[_i];
        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))
          this.call$1(upstream);
      }
      this.sorted.addFirst$1(module);
    },
    $signature: 193
  };
  R._EvaluateVisitor_visitAtRootRule_closure.prototype = {
    call$0: function() {
      return V.AtRootQueryParser$(this.resolved, this.$this._evaluate$_logger, null).parse$0();
    },
    $signature: 113
  };
  R._EvaluateVisitor_visitAtRootRule_closure0.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitAtRootRule_closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  R._EvaluateVisitor__scopeForAtRoot_closure.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        oldParent = t1._evaluate$_parent;
      t1._evaluate$_parent = this.newParent;
      t1._evaluate$_environment.scope$1$2$when(callback, this.node.hasDeclarations, type$.void);
      t1._evaluate$_parent = oldParent;
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot_closure0.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        oldAtRootExcludingStyleRule = t1._atRootExcludingStyleRule;
      t1._atRootExcludingStyleRule = true;
      this.innerScope.call$1(callback);
      t1._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot_closure1.prototype = {
    call$1: function(callback) {
      return this.$this._withMediaQueries$2(null, new R._EvaluateVisitor__scopeForAtRoot__closure(this.innerScope, callback));
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot__closure.prototype = {
    call$0: function() {
      return this.innerScope.call$1(this.callback);
    },
    $signature: 0
  };
  R._EvaluateVisitor__scopeForAtRoot_closure2.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        wasInKeyframes = t1._inKeyframes;
      t1._inKeyframes = false;
      this.innerScope.call$1(callback);
      t1._inKeyframes = wasInKeyframes;
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot_closure3.prototype = {
    call$1: function($parent) {
      return type$.legacy_CssAtRule._is($parent);
    },
    $signature: 205
  };
  R._EvaluateVisitor__scopeForAtRoot_closure4.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        wasInUnknownAtRule = t1._inUnknownAtRule;
      t1._inUnknownAtRule = false;
      this.innerScope.call$1(callback);
      t1._inUnknownAtRule = wasInUnknownAtRule;
    },
    $signature: 34
  };
  R._EvaluateVisitor_visitContentRule_closure.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.content.declaration.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
      return null;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitDeclaration_closure.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitEachRule_closure.prototype = {
    call$1: function(value) {
      return this.$this._evaluate$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);
    },
    $signature: 68
  };
  R._EvaluateVisitor_visitEachRule_closure0.prototype = {
    call$1: function(value) {
      return this.$this._setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);
    },
    $signature: 68
  };
  R._EvaluateVisitor_visitEachRule_closure1.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._handleReturn$2(_this.list.get$asList(), new R._EvaluateVisitor_visitEachRule__closure(t1, _this.setVariables, _this.node));
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitEachRule__closure.prototype = {
    call$1: function(element) {
      var t1;
      this.setVariables.call$1(element);
      t1 = this.$this;
      return t1._handleReturn$2(this.node.children, new R._EvaluateVisitor_visitEachRule___closure(t1));
    },
    $signature: 64
  };
  R._EvaluateVisitor_visitEachRule___closure.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 61
  };
  R._EvaluateVisitor_visitExtendRule_closure.prototype = {
    call$0: function() {
      return D.SelectorList_SelectorList$parse(B.trimAscii(this.targetText.value, true), false, true, this.$this._evaluate$_logger);
    },
    $signature: 42
  };
  R._EvaluateVisitor_visitAtRule_closure.prototype = {
    call$0: function() {
      var t3, _i,
        t1 = this.$this,
        t2 = t1._styleRule;
      if (!(t2 != null && !t1._atRootExcludingStyleRule) || t1._inKeyframes)
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitAtRule__closure(t1, this.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitAtRule__closure.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitAtRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitForRule_closure.prototype = {
    call$0: function() {
      return this.node.from.accept$1(this.$this).assertNumber$0();
    },
    $signature: 191
  };
  R._EvaluateVisitor_visitForRule_closure0.prototype = {
    call$0: function() {
      return this.node.to.accept$1(this.$this).assertNumber$0();
    },
    $signature: 191
  };
  R._EvaluateVisitor_visitForRule_closure1.prototype = {
    call$0: function() {
      return this.fromNumber.assertInt$0();
    },
    $signature: 11
  };
  R._EvaluateVisitor_visitForRule_closure2.prototype = {
    call$0: function() {
      var t1 = this.fromNumber;
      return this.toNumber.coerce$2(t1.get$numeratorUnits(), t1.get$denominatorUnits()).assertInt$0();
    },
    $signature: 11
  };
  R._EvaluateVisitor_visitForRule_closure3.prototype = {
    call$0: function() {
      var i, t3, t4, t5, t6, t7, t8, result, _this = this,
        t1 = _this.$this,
        t2 = _this.node,
        nodeWithSpan = t1._expressionNode$1(t2.from);
      for (i = _this.from, t3 = _this._box_0, t4 = _this.direction, t5 = t2.variable, t6 = _this.fromNumber, t2 = t2.children; i !== t3.to; i += t4) {
        t7 = t1._evaluate$_environment;
        t8 = t6.get$numeratorUnits();
        t7.setLocalVariable$3(t5, T.SassNumber_SassNumber$withUnits(i, t6.get$denominatorUnits(), t8), nodeWithSpan);
        result = t1._handleReturn$2(t2, new R._EvaluateVisitor_visitForRule__closure(t1));
        if (result != null)
          return result;
      }
      return null;
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitForRule__closure.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 61
  };
  R._EvaluateVisitor_visitForwardRule_closure.prototype = {
    call$1: function(module) {
      this.$this._evaluate$_environment.forwardModule$2(module, this.node);
    },
    $signature: 117
  };
  R._EvaluateVisitor_visitForwardRule_closure0.prototype = {
    call$1: function(module) {
      this.$this._evaluate$_environment.forwardModule$2(module, this.node);
    },
    $signature: 117
  };
  R._EvaluateVisitor__assertConfigurationIsEmpty_closure.prototype = {
    call$2: function($name, value) {
      var t1 = this.only;
      if (t1 != null && !t1.contains$1(0, $name))
        return;
      t1 = this.nameInError ? "$" + H.S($name) + string$.x20was_n : string$.This_v;
      throw H.wrapException(this.$this._evaluate$_exception$2(t1, value.configurationSpan));
    },
    $signature: 200
  };
  R._EvaluateVisitor_visitIfRule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      return t1._handleReturn$2(this._box_0.clause.children, new R._EvaluateVisitor_visitIfRule__closure(t1));
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitIfRule__closure.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 61
  };
  R._EvaluateVisitor__visitDynamicImport_closure.prototype = {
    call$0: function() {
      var previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _null = null,
        _s34_ = "This file is already being loaded.",
        _box_0 = {},
        t1 = this.$this,
        t2 = this.$import,
        result = t1._loadStylesheet$3$forImport(t2.url, t2.span, true),
        importer = result.item1,
        stylesheet = result.item2,
        url = stylesheet.span.file.url,
        t3 = t1._activeModules;
      if (t3.containsKey$1(url)) {
        previousLoad = t3.$index(0, url);
        throw H.wrapException(previousLoad == null ? t1._evaluate$_exception$1(_s34_) : t1._multiSpanException$3(_s34_, "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
      }
      t3.$indexSet(0, url, t2);
      t2 = new P.UnmodifiableListView(stylesheet._uses, type$.UnmodifiableListView_legacy_UseRule);
      if (t2.get$length(t2) === 0) {
        t2 = new P.UnmodifiableListView(stylesheet._forwards, type$.UnmodifiableListView_legacy_ForwardRule);
        t2 = t2.get$length(t2) === 0;
      } else
        t2 = false;
      if (t2) {
        oldImporter = t1._importer;
        oldStylesheet = t1._stylesheet;
        t1._importer = importer;
        t1._stylesheet = stylesheet;
        t1.visitStylesheet$1(stylesheet);
        t1._importer = oldImporter;
        t1._stylesheet = oldStylesheet;
        t3.remove$1(0, url);
        return;
      }
      _box_0.children = null;
      t2 = t1._evaluate$_environment;
      t4 = type$.legacy_String;
      t5 = type$.legacy_Module_legacy_Callable;
      t6 = type$.legacy_AstNode;
      t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable);
      t8 = t2._variables;
      t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));
      t9 = t2._variableNodes;
      if (t9 == null)
        t9 = _null;
      else
        t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));
      t10 = t2._functions;
      t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));
      t11 = t2._mixins;
      t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));
      environment = O.Environment$_(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), _null, _null, _null, t7, t8, t9, t10, t11, t2._content);
      t1._withEnvironment$2(environment, new R._EvaluateVisitor__visitDynamicImport__closure(_box_0, t1, importer, stylesheet, environment));
      module = O._EnvironmentModule__EnvironmentModule(environment, new V.CssStylesheet(new P.UnmodifiableListView(C.List_empty0, type$.UnmodifiableListView_legacy_CssNode), Y.SourceFile$decoded(C.List_empty1, "<dummy module>").span$1(0)), C.C_EmptyExtender, environment._forwardedModules);
      t1._evaluate$_environment.importForwards$1(module);
      if (module.transitivelyContainsCss)
        t1._combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1);
      visitor = new R._ImportedCssVisitor(t1);
      for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)
        t1.get$current(t1).accept$1(visitor);
      t3.remove$1(0, url);
    },
    $signature: 0
  };
  R._EvaluateVisitor__visitDynamicImport__closure.prototype = {
    call$0: function() {
      var t2, t3, _this = this,
        t1 = _this.$this,
        oldImporter = t1._importer,
        oldStylesheet = t1._stylesheet,
        oldRoot = t1._root,
        oldParent = t1._evaluate$_parent,
        oldEndOfImports = t1._endOfImports,
        oldOutOfOrderImports = t1._outOfOrderImports,
        oldConfiguration = t1._configuration;
      t1._importer = _this.importer;
      t2 = t1._stylesheet = _this.stylesheet;
      t1._evaluate$_parent = t1._root = V.ModifiableCssStylesheet$(t2.span);
      t1._endOfImports = 0;
      t1._outOfOrderImports = null;
      t3 = new P.UnmodifiableListView(t2._forwards, type$.UnmodifiableListView_legacy_ForwardRule);
      if (!t3.get$isEmpty(t3))
        t1._configuration = _this.environment.toImplicitConfiguration$0();
      t1.visitStylesheet$1(t2);
      _this._box_0.children = t1._addOutOfOrderImports$0();
      t1._importer = oldImporter;
      t1._stylesheet = oldStylesheet;
      t1._root = oldRoot;
      t1._evaluate$_parent = oldParent;
      t1._endOfImports = oldEndOfImports;
      t1._outOfOrderImports = oldOutOfOrderImports;
      t1._configuration = oldConfiguration;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule_closure.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._evaluate$_environment.getMixin$2$namespace(t1.name, t1.namespace);
    },
    $signature: 118
  };
  R._EvaluateVisitor_visitIncludeRule_closure0.prototype = {
    call$0: function() {
      return this.node.get$spanWithoutContent();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 33
  };
  R._EvaluateVisitor_visitIncludeRule_closure1.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = t1._evaluate$_environment,
        oldContent = t2._content;
      t2._content = _this.contentCallable;
      new R._EvaluateVisitor_visitIncludeRule__closure(t1, _this.mixin, _this.nodeWithSpan).call$0();
      t2._content = oldContent;
      return null;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule__closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._evaluate$_environment,
        oldInMixin = t2._inMixin;
      t2._inMixin = true;
      new R._EvaluateVisitor_visitIncludeRule___closure(t1, this.mixin, this.nodeWithSpan).call$0();
      t2._inMixin = oldInMixin;
      return null;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule___closure.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, _i;
      for (t1 = this.mixin.declaration.children, t2 = t1.length, t3 = this.$this, t4 = this.nodeWithSpan, _i = 0; _i < t2; ++_i)
        t3._addErrorSpan$2(t4, new R._EvaluateVisitor_visitIncludeRule____closure(t3, t1[_i]));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule____closure.prototype = {
    call$0: function() {
      return this.statement.accept$1(this.$this);
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitMediaRule_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.mergedQueries;
      if (t2 == null)
        t2 = _this.queries;
      t1._withMediaQueries$2(t2, new R._EvaluateVisitor_visitMediaRule__closure(t1, _this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitMediaRule__closure.prototype = {
    call$0: function() {
      var t3, _i,
        t1 = this.$this,
        t2 = t1._styleRule;
      if (!(t2 != null && !t1._atRootExcludingStyleRule))
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitMediaRule___closure(t1, this.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitMediaRule___closure.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitMediaRule_closure0.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  R._EvaluateVisitor__visitMediaQueries_closure.prototype = {
    call$0: function() {
      return F.MediaQueryParser$(this.resolved, this.$this._evaluate$_logger, null).parse$0();
    },
    $signature: 114
  };
  R._EvaluateVisitor_visitStyleRule_closure.prototype = {
    call$0: function() {
      return E.KeyframeSelectorParser$(this.selectorText.value, this.$this._evaluate$_logger).parse$0();
    },
    $signature: 40
  };
  R._EvaluateVisitor_visitStyleRule_closure0.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitStyleRule_closure1.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitStyleRule_closure2.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = !t1._stylesheet.plainCss;
      return D.SelectorList_SelectorList$parse(this.selectorText.value, t2, t2, t1._evaluate$_logger);
    },
    $signature: 42
  };
  R._EvaluateVisitor_visitStyleRule_closure3.prototype = {
    call$0: function() {
      var t1 = this._box_0.parsedSelector,
        t2 = this.$this,
        t3 = t2._styleRule;
      t3 = t3 == null ? null : t3.originalSelector;
      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._atRootExcludingStyleRule);
    },
    $signature: 42
  };
  R._EvaluateVisitor_visitStyleRule_closure4.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._withStyleRule$2(this.rule, new R._EvaluateVisitor_visitStyleRule__closure(t1, this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitStyleRule__closure.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitStyleRule_closure5.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitSupportsRule_closure.prototype = {
    call$0: function() {
      var t3, _i,
        t1 = this.$this,
        t2 = t1._styleRule;
      if (!(t2 != null && !t1._atRootExcludingStyleRule))
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitSupportsRule__closure(t1, this.node), type$.legacy_ModifiableCssStyleRule, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitSupportsRule__closure.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitSupportsRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitVariableDeclaration_closure.prototype = {
    call$0: function() {
      var t1 = this.override;
      this.$this._evaluate$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitVariableDeclaration_closure0.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitVariableDeclaration_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.node;
      t1._evaluate$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitUseRule_closure.prototype = {
    call$1: function(module) {
      var t1 = this.node;
      this.$this._evaluate$_environment.addModule$3$namespace(module, t1, t1.namespace);
    },
    $signature: 117
  };
  R._EvaluateVisitor_visitWarnRule_closure.prototype = {
    call$0: function() {
      return this.node.expression.accept$1(this.$this);
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitWhileRule_closure.prototype = {
    call$0: function() {
      var t1, t2, t3, result;
      for (t1 = this.node, t2 = t1.condition, t3 = this.$this, t1 = t1.children; t2.accept$1(t3).get$isTruthy();) {
        result = t3._handleReturn$2(t1, new R._EvaluateVisitor_visitWhileRule__closure(t3));
        if (result != null)
          return result;
      }
      return null;
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitWhileRule__closure.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 61
  };
  R._EvaluateVisitor_visitBinaryOperationExpression_closure.prototype = {
    call$0: function() {
      var right, result,
        t1 = this.node,
        t2 = this.$this,
        left = t1.left.accept$1(t2);
      switch (t1.operator) {
        case C.BinaryOperator_kjl:
          right = t1.right.accept$1(t2);
          left.toString;
          t1 = N.serializeValue0(left, false, true) + "=";
          right.toString;
          return new D.SassString(t1 + N.serializeValue0(right, false, true), false);
        case C.BinaryOperator_or_or_1:
          return left.get$isTruthy() ? left : t1.right.accept$1(t2);
        case C.BinaryOperator_and_and_2:
          return left.get$isTruthy() ? t1.right.accept$1(t2) : left;
        case C.BinaryOperator_YlX:
          return J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true0 : C.SassBoolean_false0;
        case C.BinaryOperator_i5H:
          return !J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true0 : C.SassBoolean_false0;
        case C.BinaryOperator_AcR:
          return left.greaterThan$1(t1.right.accept$1(t2));
        case C.BinaryOperator_1da:
          return left.greaterThanOrEquals$1(t1.right.accept$1(t2));
        case C.BinaryOperator_8qt:
          return left.lessThan$1(t1.right.accept$1(t2));
        case C.BinaryOperator_33h:
          return left.lessThanOrEquals$1(t1.right.accept$1(t2));
        case C.BinaryOperator_AcR0:
          return left.plus$1(t1.right.accept$1(t2));
        case C.BinaryOperator_iyO:
          return left.minus$1(t1.right.accept$1(t2));
        case C.BinaryOperator_O1M:
          return left.times$1(t1.right.accept$1(t2));
        case C.BinaryOperator_RTB:
          right = t1.right.accept$1(t2);
          result = left.dividedBy$1(right);
          if (t1.allowsSlash && left instanceof T.SassNumber && right instanceof T.SassNumber)
            return type$.legacy_SassNumber._as(result).withSlash$2(left, right);
          else
            return result;
        case C.BinaryOperator_2ad:
          return left.modulo$1(t1.right.accept$1(t2));
        default:
          return null;
      }
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitVariableExpression_closure.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 13
  };
  R._EvaluateVisitor_visitListExpression_closure.prototype = {
    call$1: function(expression) {
      return expression.accept$1(this.$this);
    },
    $signature: 242
  };
  R._EvaluateVisitor_visitFunctionExpression_closure.prototype = {
    call$0: function() {
      var t1 = this.node.namespace,
        t2 = this.plainName;
      if (t1 == null)
        t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return this.$this._getFunction$2$namespace(t2, t1);
    },
    $signature: 118
  };
  R._EvaluateVisitor_visitFunctionExpression_closure0.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);
    },
    $signature: 13
  };
  R._EvaluateVisitor__runUserDefinedCallable_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.callable;
      return t1._withEnvironment$2(t2.environment.closure$0(), new R._EvaluateVisitor__runUserDefinedCallable__closure(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run));
    },
    $signature: 13
  };
  R._EvaluateVisitor__runUserDefinedCallable__closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._evaluate$_environment.scope$1$1(new R._EvaluateVisitor__runUserDefinedCallable___closure(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value);
    },
    $signature: 13
  };
  R._EvaluateVisitor__runUserDefinedCallable___closure.prototype = {
    call$0: function() {
      var declaredArguments, minLength, t8, t9, i, t10, t11, t12, argument, value, t13, rest, argumentList, result, argumentWord, argumentNames, _this = this, _null = null,
        t1 = _this.$this,
        t2 = _this.evaluated,
        t3 = t2.positional,
        t4 = t3.length,
        t5 = t2.named,
        t6 = _this.callable.declaration.$arguments,
        t7 = _this.nodeWithSpan;
      t1._verifyArguments$4(t4, t5, t6, t7);
      declaredArguments = t6.$arguments;
      t4 = declaredArguments.length;
      minLength = Math.min(t3.length, t4);
      for (t8 = t1._sourceMap, t9 = t2.positionalNodes, i = 0; i < minLength; ++i) {
        t10 = t1._evaluate$_environment;
        t11 = declaredArguments[i].name;
        t12 = t3[i].withoutSlash$0();
        t10.setLocalVariable$3(t11, t12, t8 ? t9[i] : _null);
      }
      for (i = t3.length, t9 = t2.namedNodes; i < t4; ++i) {
        argument = declaredArguments[i];
        t10 = argument.name;
        value = t5.remove$1(0, t10);
        if (value == null)
          value = argument.defaultValue.accept$1(t1);
        t11 = t1._evaluate$_environment;
        t12 = value.withoutSlash$0();
        if (t8) {
          t13 = t9.$index(0, t10);
          if (t13 == null)
            t13 = t1._expressionNode$1(argument.defaultValue);
        } else
          t13 = _null;
        t11.setLocalVariable$3(t10, t12, t13);
      }
      t8 = t6.restArgument;
      if (t8 != null) {
        rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty5;
        t2 = t2.separator;
        argumentList = D.SassArgumentList$(rest, t5, t2 === C.ListSeparator_undecided ? C.ListSeparator_comma : t2);
        t1._evaluate$_environment.setLocalVariable$3(t8, argumentList, t7);
      } else
        argumentList = _null;
      result = _this.run.call$0();
      if (argumentList == null)
        return result;
      if (t5.get$isEmpty(t5))
        return result;
      if (argumentList._wereKeywordsAccessed)
        return result;
      t2 = t5.get$keys(t5);
      argumentWord = B.pluralize("argument", t2.get$length(t2), _null);
      t5 = t5.get$keys(t5);
      argumentNames = B.toSentence(H.MappedIterable_MappedIterable(t5, new R._EvaluateVisitor__runUserDefinedCallable____closure(), H._instanceType(t5)._eval$1("Iterable.E"), type$.legacy_Object), "or");
      throw H.wrapException(E.MultiSpanSassRuntimeException$("No " + argumentWord + " named " + H.S(argumentNames) + ".", t7.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), t1._evaluate$_stackTrace$1(t7.get$span())));
    },
    $signature: 13
  };
  R._EvaluateVisitor__runUserDefinedCallable____closure.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  R._EvaluateVisitor__runFunctionCallable_closure.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, _i, $returnValue;
      for (t1 = this.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = this.$this, _i = 0; _i < t3; ++_i) {
        $returnValue = t2[_i].accept$1(t4);
        if ($returnValue instanceof F.Value)
          return $returnValue;
      }
      throw H.wrapException(t4._evaluate$_exception$2("Function finished without @return.", t1.span));
    },
    $signature: 13
  };
  R._EvaluateVisitor__runBuiltInCallable_closure.prototype = {
    call$0: function() {
      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);
    },
    $signature: 1
  };
  R._EvaluateVisitor__runBuiltInCallable_closure0.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  R._EvaluateVisitor__evaluateArguments_closure.prototype = {
    call$2: function(key, value) {
      var t1;
      this.named.$indexSet(0, key, value);
      t1 = this.namedNodes;
      if (t1 != null)
        t1.$indexSet(0, key, this.restNodeForSpan);
    },
    $signature: 80
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure.prototype = {
    call$1: function(value) {
      return new F.ValueExpression(value, null);
    },
    $signature: 47
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure0.prototype = {
    call$1: function(value) {
      return new F.ValueExpression(value, null);
    },
    $signature: 47
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure1.prototype = {
    call$2: function(key, value) {
      this.named.$indexSet(0, key, new F.ValueExpression(value, null));
    },
    $signature: 80
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure2.prototype = {
    call$1: function(value) {
      return new F.ValueExpression(value, null);
    },
    $signature: 47
  };
  R._EvaluateVisitor__addRestMap_closure.prototype = {
    call$1: function(value) {
      return this.T._eval$1("0*")._as(value);
    },
    $signature: function() {
      return this.T._eval$1("0*(Value*)");
    }
  };
  R._EvaluateVisitor__addRestMap_closure0.prototype = {
    call$2: function(key, value) {
      var _this = this;
      if (key instanceof D.SassString)
        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));
      else
        throw H.wrapException(_this.$this._evaluate$_exception$2(string$.Variab_ + H.S(key) + " is not a string in " + _this.map.toString$0(0) + ".", _this.nodeWithSpan.get$span()));
    },
    $signature: 46
  };
  R._EvaluateVisitor__verifyArguments_closure.prototype = {
    call$0: function() {
      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));
    },
    $signature: 1
  };
  R._EvaluateVisitor_visitStringExpression_closure.prototype = {
    call$1: function(value) {
      var t1, result;
      if (typeof value == "string")
        return value;
      type$.legacy_Expression._as(value);
      t1 = this.$this;
      result = value.accept$1(t1);
      return result instanceof D.SassString ? result.text : t1._evaluate$_serialize$3$quote(result, value, false);
    },
    $signature: 41
  };
  R._EvaluateVisitor_visitCssAtRule_closure.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssAtRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitCssKeyframeBlock_closure.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssKeyframeBlock_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitCssMediaRule_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.mergedQueries;
      if (t2 == null)
        t2 = _this.node.queries;
      t1._withMediaQueries$2(t2, new R._EvaluateVisitor_visitCssMediaRule__closure(t1, _this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssMediaRule__closure.prototype = {
    call$0: function() {
      var cur,
        t1 = this.$this,
        t2 = t1._styleRule;
      if (!(t2 != null && !t1._atRootExcludingStyleRule))
        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
          cur = t2.__internal$_current;
          cur.accept$1(t1);
        }
      else
        t1._withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssMediaRule___closure(t1, this.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssMediaRule___closure.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssMediaRule_closure0.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitCssStyleRule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._withStyleRule$2(this.rule, new R._EvaluateVisitor_visitCssStyleRule__closure(t1, this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssStyleRule__closure.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssStyleRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor_visitCssSupportsRule_closure.prototype = {
    call$0: function() {
      var cur,
        t1 = this.$this,
        t2 = t1._styleRule;
      if (!(t2 != null && !t1._atRootExcludingStyleRule))
        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
          cur = t2.__internal$_current;
          cur.accept$1(t1);
        }
      else
        t1._withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssSupportsRule__closure(t1, this.node), type$.legacy_ModifiableCssStyleRule, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssSupportsRule__closure.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssSupportsRule_closure0.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._EvaluateVisitor__performInterpolation_closure.prototype = {
    call$1: function(value) {
      var t1, result, t2, t3;
      if (typeof value == "string")
        return value;
      type$.legacy_Expression._as(value);
      t1 = this.$this;
      result = value.accept$1(t1);
      if (this.warnForColor && result instanceof K.SassColor && $.$get$namesByColor().containsKey$1(result)) {
        t2 = X.Interpolation$(H.setRuntimeTypeInfo([""], type$.JSArray_legacy_Object), null);
        t3 = $.$get$namesByColor();
        t1._warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whicw + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression(C.BinaryOperator_AcR0, new D.StringExpression(t2, true), value, false).toString$0(0) + "'.", value.get$span());
      }
      return t1._evaluate$_serialize$3$quote(result, value, false);
    },
    $signature: 41
  };
  R._EvaluateVisitor__serialize_closure.prototype = {
    call$0: function() {
      var t1 = this.value;
      t1.toString;
      return N.serializeValue0(t1, false, this.quote);
    },
    $signature: 12
  };
  R._EvaluateVisitor__stackTrace_closure.prototype = {
    call$1: function(tuple) {
      return this.$this._stackFrame$2(tuple.item1, tuple.item2.get$span());
    },
    $signature: 195
  };
  R._ImportedCssVisitor.prototype = {
    visitCssAtRule$1: function(node) {
      var t1 = node.isChildless ? null : new R._ImportedCssVisitor_visitCssAtRule_closure();
      this._visitor._addChild$2$through(node, t1);
    },
    visitCssComment$1: function(node) {
      return this._visitor._addChild$1(node);
    },
    visitCssDeclaration$1: function(node) {
    },
    visitCssImport$1: function(node) {
      var t1 = this._visitor,
        t2 = t1._evaluate$_parent,
        t3 = t1._root;
      if (t2 != t3)
        t1._addChild$1(node);
      else if (t1._endOfImports === J.get$length$asx(t3.children._collection$_source)) {
        t1._addChild$1(node);
        t1._endOfImports = t1._endOfImports + 1;
      } else {
        t2 = t1._outOfOrderImports;
        (t2 == null ? t1._outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t2).push(node);
      }
    },
    visitCssKeyframeBlock$1: function(node) {
    },
    visitCssMediaRule$1: function(node) {
      var t1 = this._visitor,
        t2 = t1._mediaQueries;
      t1._addChild$2$through(node, new R._ImportedCssVisitor_visitCssMediaRule_closure(t2 == null || t1._mergeMediaQueries$2(t2, node.queries) != null));
    },
    visitCssStyleRule$1: function(node) {
      return this._visitor._addChild$2$through(node, new R._ImportedCssVisitor_visitCssStyleRule_closure());
    },
    visitCssStylesheet$1: function(node) {
      var t1, cur;
      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(this);
      }
    },
    visitCssSupportsRule$1: function(node) {
      return this._visitor._addChild$2$through(node, new R._ImportedCssVisitor_visitCssSupportsRule_closure());
    }
  };
  R._ImportedCssVisitor_visitCssAtRule_closure.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._ImportedCssVisitor_visitCssMediaRule_closure.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule._is(node))
        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  R._ImportedCssVisitor_visitCssStyleRule_closure.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._ImportedCssVisitor_visitCssSupportsRule_closure.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule._is(node);
    },
    $signature: 7
  };
  R._ArgumentResults.prototype = {};
  F._FindDependenciesVisitor.prototype = {
    visitEachRule$1: function(node) {
    },
    visitForRule$1: function(node) {
    },
    visitIfRule$1: function(node) {
    },
    visitWhileRule$1: function(node) {
    },
    visitUseRule$1: function(node) {
      this._usesAndForwards.push(node.url);
    },
    visitForwardRule$1: function(node) {
      this._usesAndForwards.push(node.url);
    },
    visitImportRule$1: function(node) {
      var t1, t2, t3, _i, $import;
      for (t1 = node.imports, t2 = t1.length, t3 = this._imports, _i = 0; _i < t2; ++_i) {
        $import = t1[_i];
        if ($import instanceof B.DynamicImport)
          t3.push(P.Uri_parse($import.url));
      }
    }
  };
  D.RecursiveStatementVisitor.prototype = {
    visitAtRootRule$1: function(node) {
      return this.visitChildren$1(node);
    },
    visitAtRule$1: function(node) {
      return node.children == null ? null : this.visitChildren$1(node);
    },
    visitContentBlock$1: function(node) {
      return null;
    },
    visitContentRule$1: function(node) {
      this.visitArgumentInvocation$1(node.$arguments);
      return null;
    },
    visitDebugRule$1: function(node) {
      return null;
    },
    visitDeclaration$1: function(node) {
      return node.children == null ? null : this.visitChildren$1(node);
    },
    visitErrorRule$1: function(node) {
      return null;
    },
    visitExtendRule$1: function(node) {
      return null;
    },
    visitFunctionRule$1: function(node) {
      return null;
    },
    visitIncludeRule$1: function(node) {
      this.visitArgumentInvocation$1(node.$arguments);
      return null;
    },
    visitLoudComment$1: function(node) {
      return null;
    },
    visitMediaRule$1: function(node) {
      return this.visitChildren$1(node);
    },
    visitMixinRule$1: function(node) {
      return null;
    },
    visitReturnRule$1: function(node) {
      return null;
    },
    visitSilentComment$1: function(node) {
      return null;
    },
    visitStyleRule$1: function(node) {
      return this.visitChildren$1(node);
    },
    visitStylesheet$1: function(node) {
      return this.visitChildren$1(node);
    },
    visitSupportsRule$1: function(node) {
      return this.visitChildren$1(node);
    },
    visitVariableDeclaration$1: function(node) {
      return null;
    },
    visitWarnRule$1: function(node) {
      return null;
    },
    visitArgumentInvocation$1: function(invocation) {
      var t1, _i;
      for (t1 = invocation.positional.length, _i = 0; _i < t1; ++_i)
        ;
      for (t1 = invocation.named, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1);
    },
    visitChildren$1: function(node) {
      var t1;
      for (t1 = node.children, t1 = (t1 && C.JSArray_methods).get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1).accept$1(this);
      return null;
    }
  };
  N.serialize_closure.prototype = {
    call$1: function(codeUnit) {
      return codeUnit > 127;
    },
    $signature: 24
  };
  N._SerializeVisitor0.prototype = {
    visitCssStylesheet$1: function(node) {
      var t1, t2, t3, t4, previous, i, child, _this = this;
      for (t1 = _this._style !== C.OutputStyle_compressed, t2 = type$.legacy_CssComment, t3 = type$.legacy_CssParentNode, t4 = _this._serialize$_buffer, previous = null, i = 0; i < J.get$length$asx(node.get$children(node)); ++i) {
        child = J.$index$asx(node.get$children(node), i);
        if (_this._isInvisible$1(child))
          continue;
        if (previous != null) {
          if (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous))
            t4.writeCharCode$1(59);
          if (t1)
            t4.write$1(0, "\n");
          if (previous.get$isGroupEnd())
            if (t1)
              t4.write$1(0, "\n");
        }
        child.accept$1(_this);
        previous = child;
      }
      if (previous != null)
        t1 = (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous)) && t1;
      else
        t1 = false;
      if (t1)
        t4.writeCharCode$1(59);
    },
    visitCssComment$1: function(node) {
      this._serialize$_buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssComment_closure(this, node));
    },
    visitCssAtRule$1: function(node) {
      var t1, _this = this;
      _this._writeIndentation$0();
      t1 = _this._serialize$_buffer;
      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssAtRule_closure(_this, node));
      if (!node.isChildless) {
        if (_this._style !== C.OutputStyle_compressed)
          t1.writeCharCode$1(32);
        _this._serialize$_visitChildren$1(node.children);
      }
    },
    visitCssMediaRule$1: function(node) {
      var t1, _this = this;
      _this._writeIndentation$0();
      t1 = _this._serialize$_buffer;
      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssMediaRule_closure(_this, node));
      if (_this._style !== C.OutputStyle_compressed)
        t1.writeCharCode$1(32);
      _this._serialize$_visitChildren$1(node.children);
    },
    visitCssImport$1: function(node) {
      this._writeIndentation$0();
      this._serialize$_buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssImport_closure(this, node));
    },
    _writeImportUrl$1: function(url) {
      var urlContents, maybeQuote, _this = this;
      if (_this._style !== C.OutputStyle_compressed || J._codeUnitAt$1$s(url, 0) !== 117) {
        _this._serialize$_buffer.write$1(0, url);
        return;
      }
      urlContents = J.substring$2$s(url, 4, url.length - 1);
      maybeQuote = C.JSString_methods._codeUnitAt$1(urlContents, 0);
      if (maybeQuote === 39 || maybeQuote === 34)
        _this._serialize$_buffer.write$1(0, urlContents);
      else
        _this._visitQuotedString$1(urlContents);
    },
    visitCssKeyframeBlock$1: function(node) {
      var t1, _this = this;
      _this._writeIndentation$0();
      t1 = _this._serialize$_buffer;
      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssKeyframeBlock_closure(_this, node));
      if (_this._style !== C.OutputStyle_compressed)
        t1.writeCharCode$1(32);
      _this._serialize$_visitChildren$1(node.children);
    },
    _visitMediaQuery$1: function(query) {
      var t2, t3, _this = this,
        t1 = query.modifier;
      if (t1 != null) {
        t2 = _this._serialize$_buffer;
        t2.write$1(0, t1);
        t2.writeCharCode$1(32);
      }
      t1 = query.type;
      if (t1 != null) {
        t2 = _this._serialize$_buffer;
        t2.write$1(0, t1);
        if (query.features.length !== 0)
          t2.write$1(0, " and ");
      }
      t1 = query.features;
      t2 = _this._style === C.OutputStyle_compressed ? "and " : " and ";
      t3 = _this._serialize$_buffer;
      _this._writeBetween$3(t1, t2, t3.get$write(t3));
    },
    visitCssStyleRule$1: function(node) {
      var t1, _this = this;
      _this._writeIndentation$0();
      t1 = _this._serialize$_buffer;
      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssStyleRule_closure(_this, node));
      if (_this._style !== C.OutputStyle_compressed)
        t1.writeCharCode$1(32);
      _this._serialize$_visitChildren$1(node.children);
    },
    visitCssSupportsRule$1: function(node) {
      var t1, _this = this;
      _this._writeIndentation$0();
      t1 = _this._serialize$_buffer;
      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssSupportsRule_closure(_this, node));
      if (_this._style !== C.OutputStyle_compressed)
        t1.writeCharCode$1(32);
      _this._serialize$_visitChildren$1(node.children);
    },
    visitCssDeclaration$1: function(node) {
      var error, error0, t1, t2, exception, _this = this;
      _this._writeIndentation$0();
      t1 = node.name;
      _this._write$1(t1);
      t2 = _this._serialize$_buffer;
      t2.writeCharCode$1(58);
      if (J.startsWith$1$s(t1.get$value(t1), "--") && node.parsedAsCustomProperty)
        t2.forSpan$2(node.value.span, new N._SerializeVisitor_visitCssDeclaration_closure(_this, node));
      else {
        if (_this._style !== C.OutputStyle_compressed)
          t2.writeCharCode$1(32);
        try {
          t2.forSpan$2(node.valueSpanForMap, new N._SerializeVisitor_visitCssDeclaration_closure0(_this, node));
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.MultiSpanSassScriptException) {
            error = t1;
            throw H.wrapException(E.MultiSpanSassException$(error.message, node.value.span, error.primaryLabel, error.secondarySpans));
          } else if (t1 instanceof E.SassScriptException) {
            error0 = t1;
            throw H.wrapException(E.SassException$(error0.message, node.value.span));
          } else
            throw exception;
        }
      }
    },
    _writeFoldedValue$1: function(node) {
      var t1, t2, next, t3,
        scanner = X.StringScanner$(type$.legacy_SassString._as(node.value.value).text, null, null);
      for (t1 = scanner.string.length, t2 = this._serialize$_buffer; scanner._string_scanner$_position !== t1;) {
        next = scanner.readChar$0();
        if (next !== 10) {
          t2.writeCharCode$1(next);
          continue;
        }
        t2.writeCharCode$1(32);
        while (true) {
          t3 = scanner.peekChar$0();
          if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))
            break;
          scanner.readChar$0();
        }
      }
    },
    _writeReindentedValue$1: function(node) {
      var _this = this,
        t1 = node.value,
        value = type$.legacy_SassString._as(t1.value).text,
        minimumIndentation = _this._minimumIndentation$1(value);
      if (minimumIndentation == null) {
        _this._serialize$_buffer.write$1(0, value);
        return;
      } else if (minimumIndentation === -1) {
        t1 = _this._serialize$_buffer;
        t1.write$1(0, B.trimAsciiRight(value, true));
        t1.writeCharCode$1(32);
        return;
      }
      if (t1.span != null) {
        t1 = node.name.get$span();
        t1 = Y.FileLocation$_(t1.file, t1._file$_start);
        minimumIndentation = Math.min(minimumIndentation, t1.file.getColumn$1(t1.offset));
      }
      _this._writeWithIndent$2(value, minimumIndentation);
    },
    _minimumIndentation$1: function(text) {
      var character, t2, min, next, min0,
        scanner = Z.LineScanner$(text),
        t1 = scanner.string.length;
      while (true) {
        if (scanner._string_scanner$_position !== t1) {
          character = scanner.super$StringScanner$readChar();
          scanner._adjustLineAndColumn$1(character);
          t2 = character !== 10;
        } else
          t2 = false;
        if (!t2)
          break;
      }
      if (scanner._string_scanner$_position === t1)
        return scanner.peekChar$1(-1) === 10 ? -1 : null;
      for (min = null; scanner._string_scanner$_position !== t1;) {
        for (; scanner._string_scanner$_position !== t1;) {
          next = scanner.peekChar$0();
          if (next !== 32 && next !== 9)
            break;
          scanner._adjustLineAndColumn$1(scanner.super$StringScanner$readChar());
        }
        if (scanner._string_scanner$_position === t1 || scanner.scanChar$1(10))
          continue;
        min0 = scanner._line_scanner$_column;
        min = min == null ? min0 : Math.min(min, min0);
        while (true) {
          if (scanner._string_scanner$_position !== t1) {
            character = scanner.super$StringScanner$readChar();
            scanner._adjustLineAndColumn$1(character);
            t2 = character !== 10;
          } else
            t2 = false;
          if (!t2)
            break;
        }
      }
      return min == null ? -1 : min;
    },
    _writeWithIndent$2: function(text, minimumIndentation) {
      var t1, t2, t3, character, t4, lineStart, newlines, end,
        scanner = Z.LineScanner$(text);
      for (t1 = scanner.string, t2 = t1.length, t3 = this._serialize$_buffer; scanner._string_scanner$_position !== t2;) {
        character = scanner.super$StringScanner$readChar();
        scanner._adjustLineAndColumn$1(character);
        if (character === 10)
          break;
        t3.writeCharCode$1(character);
      }
      for (t4 = J.getInterceptor$s(t1); true;) {
        lineStart = scanner._string_scanner$_position;
        for (newlines = 1; true;) {
          if (scanner._string_scanner$_position === t2) {
            t3.writeCharCode$1(32);
            return;
          }
          character = scanner.super$StringScanner$readChar();
          scanner._adjustLineAndColumn$1(character);
          if (character === 32 || character === 9)
            continue;
          if (character !== 10)
            break;
          lineStart = scanner._string_scanner$_position;
          ++newlines;
        }
        this._writeTimes$2(10, newlines);
        this._writeIndentation$0();
        end = scanner._string_scanner$_position;
        t3.write$1(0, t4.substring$2(t1, lineStart + minimumIndentation, end));
        for (; true;) {
          if (scanner._string_scanner$_position === t2)
            return;
          character = scanner.super$StringScanner$readChar();
          scanner._adjustLineAndColumn$1(character);
          if (character === 10)
            break;
          t3.writeCharCode$1(character);
        }
      }
    },
    visitColor$1: function(value) {
      var $name, hexLength, t2, t3, _this = this,
        t1 = _this._style === C.OutputStyle_compressed;
      if (t1 && Math.abs(value.alpha - 1) < $.$get$epsilon()) {
        $name = $.$get$namesByColor().$index(0, value);
        hexLength = _this._canUseShortHex$1(value) ? 4 : 7;
        if ($name != null && $name.length <= hexLength)
          _this._serialize$_buffer.write$1(0, $name);
        else {
          t1 = _this._serialize$_buffer;
          if (_this._canUseShortHex$1(value)) {
            t1.writeCharCode$1(35);
            t1.writeCharCode$1(T.hexCharFor(value.get$red() & 15));
            t1.writeCharCode$1(T.hexCharFor(value.get$green() & 15));
            t1.writeCharCode$1(T.hexCharFor(value.get$blue() & 15));
          } else {
            t1.writeCharCode$1(35);
            _this._writeHexComponent$1(value.get$red());
            _this._writeHexComponent$1(value.get$green());
            _this._writeHexComponent$1(value.get$blue());
          }
        }
        return;
      }
      if (value.get$original() != null)
        _this._serialize$_buffer.write$1(0, value.get$original());
      else {
        t2 = $.$get$namesByColor();
        if (t2.containsKey$1(value) && !(Math.abs(value.alpha - 0) < $.$get$epsilon()))
          _this._serialize$_buffer.write$1(0, t2.$index(0, value));
        else {
          t2 = value.alpha;
          t3 = _this._serialize$_buffer;
          if (Math.abs(t2 - 1) < $.$get$epsilon()) {
            t3.writeCharCode$1(35);
            _this._writeHexComponent$1(value.get$red());
            _this._writeHexComponent$1(value.get$green());
            _this._writeHexComponent$1(value.get$blue());
          } else {
            t3.write$1(0, "rgba(" + H.S(value.get$red()));
            t3.write$1(0, t1 ? "," : ", ");
            t3.write$1(0, value.get$green());
            t3.write$1(0, t1 ? "," : ", ");
            t3.write$1(0, value.get$blue());
            t3.write$1(0, t1 ? "," : ", ");
            _this._writeNumber$1(t2);
            t3.writeCharCode$1(41);
          }
        }
      }
    },
    _canUseShortHex$1: function(color) {
      var t1 = color.get$red();
      if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {
        t1 = color.get$green();
        if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {
          t1 = color.get$blue();
          t1 = (t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4);
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    _writeHexComponent$1: function(color) {
      var t1 = this._serialize$_buffer;
      t1.writeCharCode$1(T.hexCharFor(C.JSInt_methods._shrOtherPositive$1(color, 4)));
      t1.writeCharCode$1(T.hexCharFor(color & 15));
    },
    visitList$1: function(value) {
      var t2, singleton, t3, t4, _this = this,
        t1 = value.hasBrackets;
      if (t1)
        _this._serialize$_buffer.writeCharCode$1(91);
      else if (value._list$_contents.length === 0) {
        if (!_this._serialize$_inspect)
          throw H.wrapException(E.SassScriptException$("() isn't a valid CSS value."));
        _this._serialize$_buffer.write$1(0, "()");
        return;
      }
      t2 = _this._serialize$_inspect;
      singleton = t2 && value._list$_contents.length === 1 && value.separator === C.ListSeparator_comma;
      if (singleton && !t1)
        _this._serialize$_buffer.writeCharCode$1(40);
      t3 = value._list$_contents;
      t3 = t2 ? t3 : new H.WhereIterable(t3, new N._SerializeVisitor_visitList_closure(), H._arrayInstanceType(t3)._eval$1("WhereIterable<1>"));
      if (value.separator === C.ListSeparator_space)
        t4 = " ";
      else
        t4 = _this._style === C.OutputStyle_compressed ? "," : ", ";
      _this._writeBetween$3(t3, t4, t2 ? new N._SerializeVisitor_visitList_closure0(_this, value) : new N._SerializeVisitor_visitList_closure1(_this));
      if (singleton) {
        t2 = _this._serialize$_buffer;
        t2.writeCharCode$1(44);
        if (!t1)
          t2.writeCharCode$1(41);
      }
      if (t1)
        _this._serialize$_buffer.writeCharCode$1(93);
    },
    _elementNeedsParens$2: function(separator, value) {
      var t1;
      if (value instanceof D.SassList) {
        if (value._list$_contents.length < 2)
          return false;
        if (value.hasBrackets)
          return false;
        t1 = value.separator;
        return separator === C.ListSeparator_comma ? t1 === C.ListSeparator_comma : t1 !== C.ListSeparator_undecided;
      }
      return false;
    },
    visitMap$1: function(map) {
      var t1, t2, _this = this;
      if (!_this._serialize$_inspect)
        throw H.wrapException(E.SassScriptException$(map.toString$0(0) + " isn't a valid CSS value."));
      t1 = _this._serialize$_buffer;
      t1.writeCharCode$1(40);
      t2 = map.contents;
      _this._writeBetween$3(t2.get$keys(t2), ", ", new N._SerializeVisitor_visitMap_closure(_this, map));
      t1.writeCharCode$1(41);
    },
    _writeMapElement$1: function(value) {
      var needsParens = value instanceof D.SassList && value.separator === C.ListSeparator_comma && !value.hasBrackets;
      if (needsParens)
        this._serialize$_buffer.writeCharCode$1(40);
      value.accept$1(this);
      if (needsParens)
        this._serialize$_buffer.writeCharCode$1(41);
    },
    visitNumber$1: function(value) {
      var _this = this,
        t1 = value.asSlash;
      if (t1 != null) {
        _this.visitNumber$1(t1.item1);
        _this._serialize$_buffer.writeCharCode$1(47);
        _this.visitNumber$1(t1.item2);
        return;
      }
      _this._writeNumber$1(value.value);
      if (!_this._serialize$_inspect) {
        if (J.get$length$asx(value.get$numeratorUnits()) > 1 || value.get$denominatorUnits().length !== 0)
          throw H.wrapException(E.SassScriptException$(value.toString$0(0) + " isn't a valid CSS value."));
        if (J.get$isNotEmpty$asx(value.get$numeratorUnits()))
          _this._serialize$_buffer.write$1(0, J.get$first$ax(value.get$numeratorUnits()));
      } else
        _this._serialize$_buffer.write$1(0, value.get$unitString());
    },
    _writeNumber$1: function(number) {
      var t1, text, text0, _this = this,
        integer = T.fuzzyIsInt(number) ? J.round$0$n(number) : null;
      if (integer != null) {
        t1 = integer >= 1e21 ? _this._removeExponent$1(C.JSInt_methods.toString$0(integer)) : C.JSInt_methods.toString$0(integer);
        _this._serialize$_buffer.write$1(0, t1);
        return;
      }
      text = number >= 1e21 ? _this._removeExponent$1(C.JSNumber_methods.toString$0(number)) : C.JSNumber_methods.toString$0(number);
      text0 = _this._style === C.OutputStyle_compressed && C.JSString_methods._codeUnitAt$1(text, 0) === 48 ? C.JSString_methods.substring$1(text, 1) : text;
      if (text.length < 12) {
        _this._serialize$_buffer.write$1(0, text0);
        return;
      }
      _this._writeDecimal$1(text0);
    },
    _removeExponent$1: function(text) {
      var buffer, exponent, t2, additionalZeroes, negative,
        t1 = text.length,
        i = 0;
      while (true) {
        if (!(i < t1)) {
          buffer = null;
          exponent = null;
          break;
        }
        c$0: {
          if (C.JSString_methods._codeUnitAt$1(text, i) !== 101)
            break c$0;
          buffer = new P.StringBuffer("");
          t2 = H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(text, 0));
          buffer._contents = t2;
          if (i > 2)
            buffer._contents = t2 + C.JSString_methods.substring$2(text, 2, i);
          exponent = P.int_parse(C.JSString_methods.substring$2(text, i + 1, t1), null);
          break;
        }
        ++i;
      }
      if (buffer == null)
        return text;
      if (exponent > 0) {
        t1 = buffer._contents;
        additionalZeroes = exponent - (t1.length - 1);
        for (i = 0; i < additionalZeroes; ++i)
          t1 = buffer._contents += H.Primitives_stringFromCharCode(48);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        negative = C.JSString_methods._codeUnitAt$1(text, 0) === 45;
        t1 = (negative ? H.Primitives_stringFromCharCode(45) : "") + "0.";
        for (i = -1; i > exponent; --i)
          t1 += H.Primitives_stringFromCharCode(48);
        if (negative) {
          t2 = buffer._contents;
          t2 = C.JSString_methods.substring$1(t2.charCodeAt(0) == 0 ? t2 : t2, 1);
        } else
          t2 = buffer;
        t2 = t1 + H.S(t2);
        return t2.charCodeAt(0) == 0 ? t2 : t2;
      }
    },
    _writeDecimal$1: function(text) {
      var t1, t2, textIndex, codeUnit, digits, t3, digitsIndex, digitsIndex0, textIndex0, newDigit, i;
      for (t1 = text.length, t2 = this._serialize$_buffer, textIndex = 0; textIndex < t1; ++textIndex) {
        codeUnit = C.JSString_methods._codeUnitAt$1(text, textIndex);
        if (codeUnit === 46) {
          if (textIndex === t1 - 2 && C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 48)
            return;
          t2.writeCharCode$1(codeUnit);
          ++textIndex;
          break;
        }
        t2.writeCharCode$1(codeUnit);
      }
      if (textIndex === t1)
        return;
      digits = new Uint8Array(10);
      t3 = digits.length;
      digitsIndex = 0;
      while (true) {
        if (!(textIndex < t1 && digitsIndex < t3))
          break;
        digitsIndex0 = digitsIndex + 1;
        textIndex0 = textIndex + 1;
        digits[digitsIndex] = C.JSString_methods._codeUnitAt$1(text, textIndex) - 48;
        digitsIndex = digitsIndex0;
        textIndex = textIndex0;
      }
      if (textIndex !== t1 && C.JSString_methods._codeUnitAt$1(text, textIndex) - 48 >= 5)
        for (; digitsIndex >= 0; digitsIndex = digitsIndex0) {
          digitsIndex0 = digitsIndex - 1;
          newDigit = digits[digitsIndex0] + 1;
          digits[digitsIndex0] = newDigit;
          if (newDigit !== 10)
            break;
        }
      while (true) {
        if (!(digitsIndex > 0 && digits[digitsIndex - 1] === 0))
          break;
        --digitsIndex;
      }
      for (i = 0; i < digitsIndex; ++i)
        t2.writeCharCode$1(48 + digits[i]);
    },
    _visitQuotedString$2$forceDoubleQuote: function(string, forceDoubleQuote) {
      var t1, includesSingleQuote, includesDoubleQuote, i, char, t2, next, quote, _this = this,
        buffer = forceDoubleQuote ? _this._serialize$_buffer : new P.StringBuffer("");
      if (forceDoubleQuote)
        buffer.writeCharCode$1(34);
      for (t1 = string.length, includesSingleQuote = false, includesDoubleQuote = false, i = 0; i < t1; ++i) {
        char = C.JSString_methods._codeUnitAt$1(string, i);
        switch (char) {
          case 39:
            if (forceDoubleQuote)
              buffer.writeCharCode$1(39);
            else {
              if (includesDoubleQuote) {
                _this._visitQuotedString$2$forceDoubleQuote(string, true);
                return;
              } else
                buffer.writeCharCode$1(39);
              includesSingleQuote = true;
            }
            break;
          case 34:
            if (forceDoubleQuote) {
              buffer.writeCharCode$1(92);
              buffer.writeCharCode$1(34);
            } else {
              if (includesSingleQuote) {
                _this._visitQuotedString$2$forceDoubleQuote(string, true);
                return;
              } else
                buffer.writeCharCode$1(34);
              includesDoubleQuote = true;
            }
            break;
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 16:
          case 17:
          case 18:
          case 19:
          case 20:
          case 21:
          case 22:
          case 23:
          case 24:
          case 25:
          case 26:
          case 27:
          case 28:
          case 29:
          case 30:
          case 31:
            buffer.writeCharCode$1(92);
            if (char > 15) {
              t2 = char >>> 4;
              buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
            }
            t2 = char & 15;
            buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
            t2 = i + 1;
            if (t1 === t2)
              break;
            next = C.JSString_methods._codeUnitAt$1(string, t2);
            if (T.isHex(next) || next === 32 || next === 9)
              buffer.writeCharCode$1(32);
            break;
          case 92:
            buffer.writeCharCode$1(92);
            buffer.writeCharCode$1(92);
            break;
          default:
            buffer.writeCharCode$1(char);
            break;
        }
      }
      if (forceDoubleQuote)
        buffer.writeCharCode$1(34);
      else {
        quote = includesDoubleQuote ? 39 : 34;
        t1 = _this._serialize$_buffer;
        t1.writeCharCode$1(quote);
        t1.write$1(0, buffer);
        t1.writeCharCode$1(quote);
      }
    },
    _visitQuotedString$1: function(string) {
      return this._visitQuotedString$2$forceDoubleQuote(string, false);
    },
    _visitUnquotedString$1: function(string) {
      var t1, t2, afterNewline, i, char;
      for (t1 = string.length, t2 = this._serialize$_buffer, afterNewline = false, i = 0; i < t1; ++i) {
        char = C.JSString_methods._codeUnitAt$1(string, i);
        switch (char) {
          case 10:
            t2.writeCharCode$1(32);
            afterNewline = true;
            break;
          case 32:
            if (!afterNewline)
              t2.writeCharCode$1(32);
            break;
          default:
            t2.writeCharCode$1(char);
            afterNewline = false;
            break;
        }
      }
    },
    visitComplexSelector$1: function(complex) {
      var t1, t2, t3, t4, lastComponent, _i, component, t5;
      for (t1 = complex.components, t2 = t1.length, t3 = this._serialize$_buffer, t4 = this._style === C.OutputStyle_compressed, lastComponent = null, _i = 0; _i < t2; ++_i, lastComponent = component) {
        component = t1[_i];
        if (lastComponent != null)
          if (!(t4 && lastComponent instanceof S.Combinator))
            t5 = !(t4 && component instanceof S.Combinator);
          else
            t5 = false;
        else
          t5 = false;
        if (t5)
          t3.write$1(0, " ");
        if (component instanceof X.CompoundSelector)
          this.visitCompoundSelector$1(component);
        else
          t3.write$1(0, component);
      }
    },
    visitCompoundSelector$1: function(compound) {
      var t2, t3, _i,
        t1 = this._serialize$_buffer,
        start = t1.get$length(t1);
      for (t2 = compound.components, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t2[_i].accept$1(this);
      if (t1.get$length(t1) === start)
        t1.writeCharCode$1(42);
    },
    visitSelectorList$1: function(list) {
      var complexes, t1, t2, t3, first, t4, _this = this;
      if (_this._serialize$_inspect)
        complexes = list.components;
      else {
        t1 = list.components;
        complexes = new H.WhereIterable(t1, new N._SerializeVisitor_visitSelectorList_closure(), H._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
      }
      for (t1 = J.get$iterator$ax(complexes), t2 = _this._style !== C.OutputStyle_compressed, t3 = _this._serialize$_buffer, first = true; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        if (first)
          first = false;
        else {
          t3.writeCharCode$1(44);
          if (t4.lineBreak) {
            if (t2)
              t3.write$1(0, "\n");
          } else if (t2)
            t3.writeCharCode$1(32);
        }
        _this.visitComplexSelector$1(t4);
      }
    },
    visitPseudoSelector$1: function(pseudo) {
      var t4, t5, t6,
        t1 = pseudo.selector,
        t2 = t1 == null,
        t3 = !t2;
      if (t3 && pseudo.name === "not" && t1.get$isInvisible())
        return;
      t4 = this._serialize$_buffer;
      t4.writeCharCode$1(58);
      if (!pseudo.isSyntacticClass)
        t4.writeCharCode$1(58);
      t4.write$1(0, pseudo.name);
      t5 = pseudo.argument;
      t6 = t5 == null;
      if (t6 && t2)
        return;
      t4.writeCharCode$1(40);
      if (!t6) {
        t4.write$1(0, t5);
        if (t3)
          t4.writeCharCode$1(32);
      }
      if (t3)
        this.visitSelectorList$1(t1);
      t4.writeCharCode$1(41);
    },
    _write$1: function(value) {
      return this._serialize$_buffer.forSpan$2(value.get$span(), new N._SerializeVisitor__write_closure(this, value));
    },
    _serialize$_visitChildren$1: function(children) {
      var _this = this, t1 = {},
        t2 = _this._serialize$_buffer;
      t2.writeCharCode$1(123);
      if (children.every$1(children, _this.get$_isInvisible())) {
        t2.writeCharCode$1(125);
        return;
      }
      _this._writeLineFeed$0();
      t1.previous = null;
      ++_this._indentation;
      new N._SerializeVisitor__visitChildren_closure(t1, _this, children).call$0();
      --_this._indentation;
      t1 = t1.previous;
      if ((type$.legacy_CssParentNode._is(t1) ? t1.get$isChildless() : !type$.legacy_CssComment._is(t1)) && _this._style !== C.OutputStyle_compressed)
        t2.writeCharCode$1(59);
      _this._writeLineFeed$0();
      _this._writeIndentation$0();
      t2.writeCharCode$1(125);
    },
    _writeLineFeed$0: function() {
      if (this._style !== C.OutputStyle_compressed)
        this._serialize$_buffer.write$1(0, "\n");
    },
    _writeIndentation$0: function() {
      var _this = this;
      if (_this._style === C.OutputStyle_compressed)
        return;
      _this._writeTimes$2(_this._indentCharacter, _this._indentation * _this._indentWidth);
    },
    _writeTimes$2: function(char, times) {
      var t1, i;
      for (t1 = this._serialize$_buffer, i = 0; i < times; ++i)
        t1.writeCharCode$1(char);
    },
    _writeBetween$1$3: function(iterable, text, callback) {
      var t1, t2, first, value;
      for (t1 = J.get$iterator$ax(iterable), t2 = this._serialize$_buffer, first = true; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (first)
          first = false;
        else
          t2.write$1(0, text);
        callback.call$1(value);
      }
    },
    _writeBetween$3: function(iterable, text, callback) {
      return this._writeBetween$1$3(iterable, text, callback, type$.dynamic);
    },
    _isInvisible$1: function(node) {
      if (this._serialize$_inspect)
        return false;
      if (this._style === C.OutputStyle_compressed && type$.legacy_CssComment._is(node) && J._codeUnitAt$1$s(node.text, 2) !== 33)
        return true;
      if (type$.legacy_CssParentNode._is(node)) {
        if (type$.legacy_CssAtRule._is(node))
          return false;
        if (type$.legacy_CssStyleRule._is(node) && node.selector.value.get$isInvisible())
          return true;
        return J.every$1$ax(node.get$children(node), this.get$_isInvisible());
      } else
        return false;
    }
  };
  N._SerializeVisitor_visitCssComment_closure.prototype = {
    call$0: function() {
      var t2, t3, minimumIndentation,
        t1 = this.$this;
      if (t1._style === C.OutputStyle_compressed && J._codeUnitAt$1$s(this.node.text, 2) !== 33)
        return;
      t2 = this.node;
      t3 = t2.text;
      minimumIndentation = t1._minimumIndentation$1(t3);
      if (minimumIndentation == null) {
        t1._writeIndentation$0();
        t1._serialize$_buffer.write$1(0, t3);
        return;
      }
      t2 = t2.span;
      if (t2 != null) {
        t2 = Y.FileLocation$_(t2.file, t2._file$_start);
        minimumIndentation = Math.min(minimumIndentation, t2.file.getColumn$1(t2.offset));
      }
      t1._writeIndentation$0();
      t1._writeWithIndent$2(t3, minimumIndentation);
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssAtRule_closure.prototype = {
    call$0: function() {
      var t3,
        t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.writeCharCode$1(64);
      t3 = this.node;
      t1._write$1(t3.name);
      t3 = t3.value;
      if (t3 != null) {
        t2.writeCharCode$1(32);
        t1._write$1(t3);
      }
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssMediaRule_closure.prototype = {
    call$0: function() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.write$1(0, "@media");
      t3 = t1._style === C.OutputStyle_compressed;
      if (t3) {
        t4 = C.JSArray_methods.get$first(this.node.queries);
        t4 = !(t4.modifier == null && t4.type == null);
      } else
        t4 = true;
      if (t4)
        t2.writeCharCode$1(32);
      t2 = t3 ? "," : ", ";
      t1._writeBetween$3(this.node.queries, t2, t1.get$_visitMediaQuery());
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssImport_closure.prototype = {
    call$0: function() {
      var t3, t4, t5, t6,
        t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.write$1(0, "@import");
      t3 = t1._style === C.OutputStyle_compressed;
      t4 = !t3;
      if (t4)
        t2.writeCharCode$1(32);
      t5 = this.node;
      t2.forSpan$2(t5.url.get$span(), new N._SerializeVisitor_visitCssImport__closure(t1, t5));
      t6 = t5.supports;
      if (t6 != null) {
        if (t4)
          t2.writeCharCode$1(32);
        t1._write$1(t6);
      }
      t5 = t5.media;
      if (t5 != null) {
        if (t4)
          t2.writeCharCode$1(32);
        t2 = t3 ? "," : ", ";
        t1._writeBetween$3(t5, t2, t1.get$_visitMediaQuery());
      }
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssImport__closure.prototype = {
    call$0: function() {
      var t1 = this.node.url;
      return this.$this._writeImportUrl$1(t1.get$value(t1));
    },
    $signature: 1
  };
  N._SerializeVisitor_visitCssKeyframeBlock_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._style === C.OutputStyle_compressed ? "," : ", ",
        t3 = t1._serialize$_buffer;
      return t1._writeBetween$3(this.node.selector.value, t2, t3.get$write(t3));
    },
    $signature: 1
  };
  N._SerializeVisitor_visitCssStyleRule_closure.prototype = {
    call$0: function() {
      var t1 = this.node.selector.value;
      t1.toString;
      return this.$this.visitSelectorList$1(t1);
    },
    $signature: 1
  };
  N._SerializeVisitor_visitCssSupportsRule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.write$1(0, "@supports");
      if (!(t1._style === C.OutputStyle_compressed && J.codeUnitAt$1$s(this.node.condition.value, 0) === 40))
        t2.writeCharCode$1(32);
      t1._write$1(this.node.condition);
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssDeclaration_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.node;
      if (t1._style === C.OutputStyle_compressed)
        t1._writeFoldedValue$1(t2);
      else
        t1._writeReindentedValue$1(t2);
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssDeclaration_closure0.prototype = {
    call$0: function() {
      return this.node.value.value.accept$1(this.$this);
    },
    $signature: 1
  };
  N._SerializeVisitor_visitList_closure.prototype = {
    call$1: function(element) {
      return !element.get$isBlank();
    },
    $signature: 53
  };
  N._SerializeVisitor_visitList_closure0.prototype = {
    call$1: function(element) {
      var t1 = this.$this,
        needsParens = t1._elementNeedsParens$2(this.value.separator, element);
      if (needsParens)
        t1._serialize$_buffer.writeCharCode$1(40);
      element.accept$1(t1);
      if (needsParens)
        t1._serialize$_buffer.writeCharCode$1(41);
    },
    $signature: 116
  };
  N._SerializeVisitor_visitList_closure1.prototype = {
    call$1: function(element) {
      element.accept$1(this.$this);
    },
    $signature: 116
  };
  N._SerializeVisitor_visitMap_closure.prototype = {
    call$1: function(key) {
      var t1 = this.$this;
      t1._writeMapElement$1(key);
      t1._serialize$_buffer.write$1(0, ": ");
      t1._writeMapElement$1(this.map.contents.$index(0, key));
    },
    $signature: 116
  };
  N._SerializeVisitor_visitSelectorList_closure.prototype = {
    call$1: function(complex) {
      return !complex.get$isInvisible();
    },
    $signature: 15
  };
  N._SerializeVisitor__write_closure.prototype = {
    call$0: function() {
      var t1 = this.value;
      return this.$this._serialize$_buffer.write$1(0, t1.get$value(t1));
    },
    $signature: 1
  };
  N._SerializeVisitor__visitChildren_closure.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, t5, t6, t7, i, child, t8;
      for (t1 = this.children._collection$_source, t2 = J.getInterceptor$asx(t1), t3 = this._box_0, t4 = this.$this, t5 = type$.legacy_CssComment, t6 = type$.legacy_CssParentNode, t7 = t4._serialize$_buffer, i = 0; i < t2.get$length(t1); ++i) {
        child = t2.elementAt$1(t1, i);
        if (t4._isInvisible$1(child))
          continue;
        t8 = t3.previous;
        if (t8 != null) {
          if (t6._is(t8) ? t8.get$isChildless() : !t5._is(t8))
            t7.writeCharCode$1(59);
          t8 = t4._style !== C.OutputStyle_compressed;
          if (t8)
            t7.write$1(0, "\n");
          if (t3.previous.get$isGroupEnd())
            if (t8)
              t7.write$1(0, "\n");
        }
        t3.previous = child;
        child.accept$1(t4);
      }
    },
    $signature: 0
  };
  N.OutputStyle.prototype = {
    toString$0: function(_) {
      return this._serialize$_name;
    }
  };
  N.LineFeed.prototype = {
    toString$0: function(_) {
      return "lf";
    }
  };
  N.SerializeResult.prototype = {};
  N.withWarnCallback_closure.prototype = {
    call$0: function() {
      return this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return this.T._eval$1("0*()");
    }
  };
  L.Entry.prototype = {
    compareTo$1: function(_, other) {
      var t1, t2, t3,
        res = this.target.compareTo$1(0, other.target);
      if (res !== 0)
        return res;
      t1 = this.source;
      t2 = J.toString$0$(t1.file.url);
      t3 = other.source;
      res = C.JSString_methods.compareTo$1(t2, J.toString$0$(t3.file.url));
      if (res !== 0)
        return res;
      return t1.compareTo$1(0, t3);
    },
    $isComparable: 1,
    get$source: function() {
      return this.source;
    },
    get$target: function() {
      return this.target;
    },
    get$identifierName: function() {
      return this.identifierName;
    }
  };
  T.Mapping.prototype = {};
  T.SingleMapping.prototype = {
    toJson$1$includeSourceContents: function(includeSourceContents) {
      var t1, t2, line, column, srcLine, srcColumn, srcUrlId, srcNameId, first, _i, entry, nextLine, i, t3, t4, _i0, segment, column0, t5, newUrlId, srcLine0, srcColumn0, srcNameId0, result, _this = this,
        buff = new P.StringBuffer("");
      for (t1 = _this.lines, t2 = t1.length, line = 0, column = 0, srcLine = 0, srcColumn = 0, srcUrlId = 0, srcNameId = 0, first = true, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        nextLine = entry.line;
        if (nextLine > line) {
          for (i = line; i < nextLine; ++i)
            buff._contents += ";";
          line = nextLine;
          column = 0;
          first = true;
        }
        for (t3 = entry.entries, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0, column = column0, first = false) {
          segment = t3[_i0];
          if (!first)
            buff._contents += ",";
          column0 = segment.column;
          t5 = L.encodeVlq(column0 - column);
          t5 = P.StringBuffer__writeAll(buff._contents, t5, "");
          buff._contents = t5;
          newUrlId = segment.sourceUrlId;
          if (newUrlId == null)
            continue;
          t5 = P.StringBuffer__writeAll(t5, L.encodeVlq(newUrlId - srcUrlId), "");
          buff._contents = t5;
          srcLine0 = segment.sourceLine;
          t5 = P.StringBuffer__writeAll(t5, L.encodeVlq(srcLine0 - srcLine), "");
          buff._contents = t5;
          srcColumn0 = segment.sourceColumn;
          t5 = P.StringBuffer__writeAll(t5, L.encodeVlq(srcColumn0 - srcColumn), "");
          buff._contents = t5;
          srcNameId0 = segment.sourceNameId;
          if (srcNameId0 == null) {
            srcUrlId = newUrlId;
            srcColumn = srcColumn0;
            srcLine = srcLine0;
            continue;
          }
          buff._contents = P.StringBuffer__writeAll(t5, L.encodeVlq(srcNameId0 - srcNameId), "");
          srcNameId = srcNameId0;
          srcUrlId = newUrlId;
          srcColumn = srcColumn0;
          srcLine = srcLine0;
        }
      }
      t1 = _this.sourceRoot;
      if (t1 == null)
        t1 = "";
      t2 = buff._contents;
      result = P.LinkedHashMap_LinkedHashMap$_literal(["version", 3, "sourceRoot", t1, "sources", _this.urls, "names", _this.names, "mappings", t2.charCodeAt(0) == 0 ? t2 : t2], type$.legacy_String, type$.legacy_Object);
      t1 = _this.targetUrl;
      if (t1 != null)
        result.$indexSet(0, "file", t1);
      if (includeSourceContents) {
        t1 = _this.files;
        t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>");
        result.$indexSet(0, "sourcesContent", P.List_List$from(new H.MappedListIterable(t1, new T.SingleMapping_toJson_closure(), t2), true, t2._eval$1("ListIterable.E")));
      }
      _this.extensions.forEach$1(0, new T.SingleMapping_toJson_closure0(result));
      return result;
    },
    toJson$0: function() {
      return this.toJson$1$includeSourceContents(false);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = H.getRuntimeType(_this).toString$0(0);
      t1 + " : [";
      t1 = t1 + " : [targetUrl: " + H.S(_this.targetUrl) + ", sourceRoot: " + H.S(_this.sourceRoot) + ", urls: " + H.S(_this.urls) + ", names: " + H.S(_this.names) + ", lines: " + H.S(_this.lines) + "]";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  T.SingleMapping_SingleMapping$fromEntries_closure.prototype = {
    call$0: function() {
      var t1 = this.urls;
      return t1.get$length(t1);
    },
    $signature: 11
  };
  T.SingleMapping_SingleMapping$fromEntries_closure0.prototype = {
    call$0: function() {
      return type$.legacy_FileLocation._as(this.sourceEntry.get$source()).file;
    },
    $signature: 124
  };
  T.SingleMapping_SingleMapping$fromEntries_closure1.prototype = {
    call$1: function(i) {
      return this.files.$index(0, i);
    },
    $signature: 245
  };
  T.SingleMapping_toJson_closure.prototype = {
    call$1: function(file) {
      return file == null ? null : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(file._decodedChars, 0, null), 0, null);
    },
    $signature: 246
  };
  T.SingleMapping_toJson_closure0.prototype = {
    call$2: function($name, value) {
      this.result.$indexSet(0, $name, value);
      return value;
    },
    $signature: 247
  };
  T.TargetLineEntry.prototype = {
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + ": " + this.line + " " + H.S(this.entries);
    }
  };
  T.TargetEntry.prototype = {
    toString$0: function(_) {
      var _this = this;
      return H.getRuntimeType(_this).toString$0(0) + ": (" + _this.column + ", " + H.S(_this.sourceUrlId) + ", " + H.S(_this.sourceLine) + ", " + H.S(_this.sourceColumn) + ", " + H.S(_this.sourceNameId) + ")";
    }
  };
  Y.SourceFile.prototype = {
    get$length: function(_) {
      return this._decodedChars.length;
    },
    get$lines: function() {
      return this._lineStarts.length;
    },
    SourceFile$decoded$2$url: function(decodedChars, url) {
      var t1, t2, t3, i, c, j;
      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
        c = t1[i];
        if (c === 13) {
          j = i + 1;
          if (j >= t2 || t1[j] !== 10)
            c = 10;
        }
        if (c === 10)
          t3.push(i + 1);
      }
    },
    span$2: function(start, end) {
      return Y._FileSpan$(this, start, end == null ? this._decodedChars.length : end);
    },
    span$1: function(start) {
      return this.span$2(start, null);
    },
    getLine$1: function(offset) {
      var t1, _this = this;
      if (offset < 0)
        throw H.wrapException(P.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw H.wrapException(P.RangeError$("Offset " + offset + string$.x20must_ + _this.get$length(_this) + "."));
      t1 = _this._lineStarts;
      if (offset < C.JSArray_methods.get$first(t1))
        return -1;
      if (offset >= C.JSArray_methods.get$last(t1))
        return t1.length - 1;
      if (_this._isNearCachedLine$1(offset))
        return _this._cachedLine;
      return _this._cachedLine = _this._binarySearch$1(offset) - 1;
    },
    _isNearCachedLine$1: function(offset) {
      var t2, t3,
        t1 = this._cachedLine;
      if (t1 == null)
        return false;
      t2 = this._lineStarts;
      if (offset < t2[t1])
        return false;
      t3 = t2.length;
      if (t1 >= t3 - 1 || offset < t2[t1 + 1])
        return true;
      if (t1 >= t3 - 2 || offset < t2[t1 + 2]) {
        this._cachedLine = t1 + 1;
        return true;
      }
      return false;
    },
    _binarySearch$1: function(offset) {
      var min, half,
        t1 = this._lineStarts,
        max = t1.length - 1;
      for (min = 0; min < max;) {
        half = min + C.JSInt_methods._tdivFast$1(max - min, 2);
        if (t1[half] > offset)
          max = half;
        else
          min = half + 1;
      }
      return max;
    },
    getColumn$1: function(offset) {
      var line, lineStart, _this = this;
      if (offset < 0)
        throw H.wrapException(P.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw H.wrapException(P.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + _this.get$length(_this) + "."));
      line = _this.getLine$1(offset);
      lineStart = _this._lineStarts[line];
      if (lineStart > offset)
        throw H.wrapException(P.RangeError$("Line " + H.S(line) + " comes after offset " + offset + "."));
      return offset - lineStart;
    },
    getOffset$1: function(line) {
      var t1, t2, result, t3;
      if (line < 0)
        throw H.wrapException(P.RangeError$("Line may not be negative, was " + H.S(line) + "."));
      else {
        t1 = this._lineStarts;
        t2 = t1.length;
        if (line >= t2)
          throw H.wrapException(P.RangeError$("Line " + H.S(line) + " must be less than the number of lines in the file, " + this.get$lines() + "."));
      }
      result = t1[line];
      if (result <= this._decodedChars.length) {
        t3 = line + 1;
        t1 = t3 < t2 && result >= t1[t3];
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.RangeError$("Line " + H.S(line) + " doesn't have 0 columns."));
      return result;
    }
  };
  Y.FileLocation.prototype = {
    get$sourceUrl: function(_) {
      return this.file.url;
    },
    get$line: function() {
      return this.file.getLine$1(this.offset);
    },
    get$column: function() {
      return this.file.getColumn$1(this.offset);
    },
    pointSpan$0: function() {
      var t1 = this.offset;
      return Y._FileSpan$(this.file, t1, t1);
    },
    get$offset: function() {
      return this.offset;
    }
  };
  Y._FileSpan.prototype = {
    get$sourceUrl: function(_) {
      return this.file.url;
    },
    get$length: function(_) {
      return this._end - this._file$_start;
    },
    get$start: function(_) {
      return Y.FileLocation$_(this.file, this._file$_start);
    },
    get$end: function(_) {
      return Y.FileLocation$_(this.file, this._end);
    },
    get$text: function() {
      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._end), 0, null);
    },
    get$context: function(_) {
      var _this = this,
        t1 = _this.file,
        endOffset = _this._end,
        endLine = t1.getLine$1(endOffset);
      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
        if (endOffset - _this._file$_start === 0)
          return endLine === t1._lineStarts.length - 1 ? "" : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);
      } else
        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);
      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);
    },
    _FileSpan$3: function(file, _start, _end) {
      var t3,
        t1 = this._end,
        t2 = this._file$_start;
      if (t1 < t2)
        throw H.wrapException(P.ArgumentError$("End " + t1 + " must come after start " + t2 + "."));
      else {
        t3 = this.file;
        if (t1 > t3._decodedChars.length)
          throw H.wrapException(P.RangeError$("End " + t1 + string$.x20must_ + t3.get$length(t3) + "."));
        else if (t2 < 0)
          throw H.wrapException(P.RangeError$("Start may not be negative, was " + t2 + "."));
      }
    },
    compareTo$1: function(_, other) {
      var result;
      if (!(other instanceof Y._FileSpan))
        return this.super$SourceSpanMixin$compareTo(0, other);
      result = C.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);
      return result === 0 ? C.JSInt_methods.compareTo$1(this._end, other._end) : result;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!type$.legacy_FileSpan._is(other))
        return _this.super$SourceSpanMixin$$eq(0, other);
      return _this._file$_start === other._file$_start && _this._end === other._end && J.$eq$(_this.file.url, other.file.url);
    },
    get$hashCode: function(_) {
      return Y.SourceSpanMixin.prototype.get$hashCode.call(this, this);
    },
    expand$1: function(_, other) {
      var start, _this = this,
        t1 = _this.file;
      if (!J.$eq$(t1.url, other.file.url))
        throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(_this.get$sourceUrl(_this)) + '" and  "' + H.S(other.get$sourceUrl(other)) + "\" don't match."));
      start = Math.min(_this._file$_start, other._file$_start);
      return Y._FileSpan$(t1, start, Math.max(_this._end, other._end));
    },
    $isFileSpan: 1,
    $isSourceSpanWithContext: 1
  };
  U.Highlighter.prototype = {
    highlight$0: function() {
      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, cur, t10, index, primary, _i, highlight, _this = this,
        t1 = _this._lines;
      _this._writeFileStart$1(C.JSArray_methods.get$first(t1).url);
      t2 = new Array(_this._maxMultilineSpans);
      t2.fixed$length = Array;
      highlightsByColumn = H.setRuntimeTypeInfo(t2, type$.JSArray_legacy__Highlight);
      for (t2 = _this._highlighter$_buffer, t3 = highlightsByColumn.length !== 0, t4 = _this._primaryColor, i = 0; i < t1.length; ++i) {
        line = t1[i];
        if (i > 0) {
          lastLine = t1[i - 1];
          t5 = lastLine.url;
          t6 = line.url;
          if (!J.$eq$(t5, t6)) {
            _this._writeSidebar$1$end($._glyphs.get$upEnd());
            t2._contents += "\n";
            _this._writeFileStart$1(t6);
          } else if (lastLine.number + 1 !== line.number) {
            _this._writeSidebar$1$text("...");
            t2._contents += "\n";
          }
        }
        for (t5 = line.highlights, t6 = new H.ReversedListIterable(t5, H._arrayInstanceType(t5)._eval$1("ReversedListIterable<1>")), t6 = new H.ListIterator(t6, t6.get$length(t6)), t7 = line.number, t8 = line.text, t9 = J.getInterceptor$s(t8); t6.moveNext$0();) {
          cur = t6.__internal$_current;
          t10 = cur.span;
          if (t10.get$start(t10).get$line() != t10.get$end(t10).get$line() && t10.get$start(t10).get$line() === t7 && _this._isOnlyWhitespace$1(t9.substring$2(t8, 0, t10.get$start(t10).get$column()))) {
            index = C.JSArray_methods.indexOf$1(highlightsByColumn, null);
            if (index < 0)
              H.throwExpression(P.ArgumentError$(H.S(highlightsByColumn) + " contains no null elements."));
            highlightsByColumn[index] = cur;
          }
        }
        _this._writeSidebar$1$line(t7);
        t2._contents += " ";
        _this._writeMultilineHighlights$2(line, highlightsByColumn);
        if (t3)
          t2._contents += " ";
        primary = C.JSArray_methods.firstWhere$2$orElse(t5, new U.Highlighter_highlight_closure(), new U.Highlighter_highlight_closure0());
        t6 = primary != null;
        if (t6) {
          t9 = primary.span;
          t10 = t9.get$start(t9).get$line() === t7 ? t9.get$start(t9).get$column() : 0;
          _this._writeHighlightedText$4$color(t8, t10, t9.get$end(t9).get$line() === t7 ? t9.get$end(t9).get$column() : t8.length, t4);
        } else
          _this._writeText$1(t8);
        t2._contents += "\n";
        if (t6)
          _this._writeIndicator$3(line, primary, highlightsByColumn);
        for (t6 = t5.length, _i = 0; _i < t5.length; t5.length === t6 || (0, H.throwConcurrentModificationError)(t5), ++_i) {
          highlight = t5[_i];
          if (highlight.isPrimary)
            continue;
          _this._writeIndicator$3(line, highlight, highlightsByColumn);
        }
      }
      _this._writeSidebar$1$end($._glyphs.get$upEnd());
      t1 = t2._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _writeFileStart$1: function(url) {
      var _this = this,
        t1 = !_this._multipleFiles || url == null,
        t2 = $._glyphs;
      if (t1)
        _this._writeSidebar$1$end(t2.get$downEnd());
      else {
        _this._writeSidebar$1$end(t2.get$topLeftCorner());
        _this._colorize$2$color(new U.Highlighter__writeFileStart_closure(_this), "\x1b[34m");
        _this._highlighter$_buffer._contents += " " + H.S($.$get$context().prettyUri$1(url));
      }
      _this._highlighter$_buffer._contents += "\n";
    },
    _writeMultilineHighlights$3$current: function(line, highlightsByColumn, current) {
      var t1, currentColor, t2, t3, t4, t5, foundCurrent, _i, highlight, t6, t7, startLine, endLine, _this = this, _null = null, _box_0 = {};
      _box_0.openedOnThisLine = false;
      _box_0.openedOnThisLineColor = null;
      t1 = current == null;
      if (t1)
        currentColor = _null;
      else
        currentColor = current.isPrimary ? _this._primaryColor : _this._secondaryColor;
      for (t2 = highlightsByColumn.length, t3 = _this._secondaryColor, t1 = !t1, t4 = _this._primaryColor, t5 = _this._highlighter$_buffer, foundCurrent = false, _i = 0; _i < t2; ++_i) {
        highlight = highlightsByColumn[_i];
        t6 = highlight == null;
        t7 = t6 ? _null : highlight.span;
        t7 = t7 == null ? _null : t7.get$start(t7);
        startLine = t7 == null ? _null : t7.get$line();
        t7 = t6 ? _null : highlight.span;
        t7 = t7 == null ? _null : t7.get$end(t7);
        endLine = t7 == null ? _null : t7.get$line();
        if (t1 && highlight === current) {
          _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor);
          foundCurrent = true;
        } else if (foundCurrent)
          _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor);
        else if (t6)
          if (_box_0.openedOnThisLine)
            _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor);
          else
            t5._contents += " ";
        else {
          t6 = highlight.isPrimary ? t4 : t3;
          _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t6);
        }
      }
    },
    _writeMultilineHighlights$2: function(line, highlightsByColumn) {
      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);
    },
    _writeHighlightedText$4$color: function(text, startColumn, endColumn, color) {
      var _this = this;
      _this._writeText$1(J.getInterceptor$s(text).substring$2(text, 0, startColumn));
      _this._colorize$2$color(new U.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color);
      _this._writeText$1(C.JSString_methods.substring$2(text, endColumn, text.length));
    },
    _writeIndicator$3: function(line, highlight, highlightsByColumn) {
      var t2, coversWholeLine, _this = this,
        color = highlight.isPrimary ? _this._primaryColor : _this._secondaryColor,
        t1 = highlight.span;
      if (t1.get$start(t1).get$line() == t1.get$end(t1).get$line()) {
        _this._writeSidebar$0();
        t1 = _this._highlighter$_buffer;
        t1._contents += " ";
        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
        if (highlightsByColumn.length !== 0)
          t1._contents += " ";
        _this._colorize$2$color(new U.Highlighter__writeIndicator_closure(_this, line, highlight), color);
        t1._contents += "\n";
      } else {
        t2 = line.number;
        if (t1.get$start(t1).get$line() === t2) {
          if (C.JSArray_methods.contains$1(highlightsByColumn, highlight))
            return;
          B.replaceFirstNull(highlightsByColumn, highlight);
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$2$color(new U.Highlighter__writeIndicator_closure0(_this, line, highlight), color);
          t1._contents += "\n";
        } else if (t1.get$end(t1).get$line() === t2) {
          coversWholeLine = t1.get$end(t1).get$column() === line.text.length;
          if (coversWholeLine && highlight.label == null) {
            B.replaceWithNull(highlightsByColumn, highlight);
            return;
          }
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$2$color(new U.Highlighter__writeIndicator_closure1(_this, coversWholeLine, line, highlight), color);
          t1._contents += "\n";
          B.replaceWithNull(highlightsByColumn, highlight);
        }
      }
    },
    _writeArrow$3$beginning: function(line, column, beginning) {
      var t2,
        t1 = beginning ? 0 : 1,
        tabs = this._countTabs$1(J.substring$2$s(line.text, 0, column + t1));
      t1 = this._highlighter$_buffer;
      t2 = t1._contents += C.JSString_methods.$mul($._glyphs.get$horizontalLine(), 1 + column + tabs * 3);
      t1._contents = t2 + "^";
    },
    _writeArrow$2: function(line, column) {
      return this._writeArrow$3$beginning(line, column, true);
    },
    _writeLabel$1: function(label) {
      if (label != null)
        this._highlighter$_buffer._contents += " " + label;
    },
    _writeText$1: function(text) {
      var t1, t2, cur;
      text.toString;
      t1 = new H.CodeUnits(text);
      t1 = new H.ListIterator(t1, t1.get$length(t1));
      t2 = this._highlighter$_buffer;
      for (; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        if (cur === 9)
          t2._contents += C.JSString_methods.$mul(" ", 4);
        else
          t2._contents += H.Primitives_stringFromCharCode(cur);
      }
    },
    _writeSidebar$3$end$line$text: function(end, line, text) {
      var t1 = {};
      t1.text = text;
      if (line != null)
        t1.text = C.JSInt_methods.toString$0(line + 1);
      this._colorize$2$color(new U.Highlighter__writeSidebar_closure(t1, this, end), "\x1b[34m");
    },
    _writeSidebar$1$end: function(end) {
      return this._writeSidebar$3$end$line$text(end, null, null);
    },
    _writeSidebar$1$text: function(text) {
      return this._writeSidebar$3$end$line$text(null, null, text);
    },
    _writeSidebar$1$line: function(line) {
      return this._writeSidebar$3$end$line$text(null, line, null);
    },
    _writeSidebar$0: function() {
      return this._writeSidebar$3$end$line$text(null, null, null);
    },
    _countTabs$1: function(text) {
      var t1, count, cur;
      for (t1 = new H.CodeUnits(text), t1 = new H.ListIterator(t1, t1.get$length(t1)), count = 0; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        if (cur === 9)
          ++count;
      }
      return count;
    },
    _isOnlyWhitespace$1: function(text) {
      var t1, cur;
      for (t1 = new H.CodeUnits(text), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        if (cur !== 32 && cur !== 9)
          return false;
      }
      return true;
    },
    _colorize$2$color: function(callback, color) {
      var t1 = this._primaryColor != null;
      if (t1 && color != null)
        this._highlighter$_buffer._contents += color;
      callback.call$0();
      if (t1 && color != null)
        this._highlighter$_buffer._contents += "\x1b[0m";
    }
  };
  U.Highlighter_closure.prototype = {
    call$0: function() {
      var t1 = this.color,
        t2 = J.getInterceptor$(t1);
      if (t2.$eq(t1, true))
        return "\x1b[31m";
      if (t2.$eq(t1, false))
        return null;
      return H._asStringS(t1);
    },
    $signature: 12
  };
  U.Highlighter$__closure.prototype = {
    call$1: function(line) {
      var t1 = line.highlights;
      t1 = new H.WhereIterable(t1, new U.Highlighter$___closure(), H._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
      return t1.get$length(t1);
    },
    $signature: 249
  };
  U.Highlighter$___closure.prototype = {
    call$1: function(highlight) {
      var t1 = highlight.span;
      return t1.get$start(t1).get$line() != t1.get$end(t1).get$line();
    },
    $signature: 115
  };
  U.Highlighter$__closure0.prototype = {
    call$1: function(line) {
      return line.url;
    },
    $signature: 251
  };
  U.Highlighter__collateLines_closure.prototype = {
    call$1: function(highlight) {
      return J.get$sourceUrl$x(highlight.get$span());
    },
    $signature: 43
  };
  U.Highlighter__collateLines_closure0.prototype = {
    call$2: function(highlight1, highlight2) {
      return highlight1.span.compareTo$1(0, highlight2.span);
    },
    $signature: 252
  };
  U.Highlighter__collateLines_closure1.prototype = {
    call$1: function(highlightsForFile) {
      var t1, t2, t3, t4, context, t5, linesBeforeSpan, url, lineNumber, _i, line, activeHighlights, highlightIndex, oldHighlightLength,
        lines = H.setRuntimeTypeInfo([], type$.JSArray_legacy__Line);
      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray_legacy__Highlight; t2.moveNext$0();) {
        t4 = t2.get$current(t2).span;
        context = t4.get$context(t4);
        t5 = C.JSString_methods.allMatches$1("\n", C.JSString_methods.substring$2(context, 0, B.findLineStart(context, t4.get$text(), t4.get$start(t4).get$column())));
        linesBeforeSpan = t5.get$length(t5);
        url = t4.get$sourceUrl(t4);
        lineNumber = t4.get$start(t4).get$line() - linesBeforeSpan;
        for (t4 = context.split("\n"), t5 = t4.length, _i = 0; _i < t5; ++_i) {
          line = t4[_i];
          if (lines.length === 0 || lineNumber > C.JSArray_methods.get$last(lines).number)
            lines.push(new U._Line(line, lineNumber, url, H.setRuntimeTypeInfo([], t3)));
          ++lineNumber;
        }
      }
      activeHighlights = H.setRuntimeTypeInfo([], t3);
      for (t2 = lines.length, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, H.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        if (!!activeHighlights.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeWhere"));
        C.JSArray_methods._removeWhere$2(activeHighlights, new U.Highlighter__collateLines__closure(line), true);
        oldHighlightLength = activeHighlights.length;
        for (t3 = t1.skip$1(highlightsForFile, highlightIndex), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t4 = t3.get$current(t3);
          t5 = t4.span;
          if (t5.get$start(t5).get$line() > line.number)
            break;
          if (!J.$eq$(t5.get$sourceUrl(t5), line.url))
            break;
          activeHighlights.push(t4);
        }
        highlightIndex += activeHighlights.length - oldHighlightLength;
        C.JSArray_methods.addAll$1(line.highlights, activeHighlights);
      }
      return lines;
    },
    $signature: 253
  };
  U.Highlighter__collateLines__closure.prototype = {
    call$1: function(highlight) {
      var t1 = highlight.span,
        t2 = this.line;
      return !J.$eq$(t1.get$sourceUrl(t1), t2.url) || t1.get$end(t1).get$line() < t2.number;
    },
    $signature: 115
  };
  U.Highlighter_highlight_closure.prototype = {
    call$1: function(highlight) {
      return highlight.isPrimary;
    },
    $signature: 115
  };
  U.Highlighter_highlight_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  U.Highlighter__writeFileStart_closure.prototype = {
    call$0: function() {
      this.$this._highlighter$_buffer._contents += C.JSString_methods.$mul($._glyphs.get$horizontalLine(), 2) + ">";
      return null;
    },
    $signature: 1
  };
  U.Highlighter__writeMultilineHighlights_closure.prototype = {
    call$0: function() {
      var t1 = $._glyphs;
      t1 = this.startLine === this.line.number ? t1.get$topLeftCorner() : t1.get$bottomLeftCorner();
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 0
  };
  U.Highlighter__writeMultilineHighlights_closure0.prototype = {
    call$0: function() {
      var t1 = $._glyphs;
      t1 = this.highlight == null ? t1.get$horizontalLine() : t1.get$cross();
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 0
  };
  U.Highlighter__writeMultilineHighlights_closure1.prototype = {
    call$0: function() {
      this.$this._highlighter$_buffer._contents += $._glyphs.get$horizontalLine();
      return null;
    },
    $signature: 1
  };
  U.Highlighter__writeMultilineHighlights_closure2.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this._box_0,
        t2 = t1.openedOnThisLine,
        t3 = $._glyphs,
        vertical = t2 ? t3.get$cross() : t3.get$verticalLine();
      if (_this.current != null)
        _this.$this._highlighter$_buffer._contents += vertical;
      else {
        t2 = _this.line;
        t3 = t2.number;
        if (_this.startLine === t3) {
          t2 = _this.$this;
          t2._colorize$2$color(new U.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor);
          t1.openedOnThisLine = true;
          if (t1.openedOnThisLineColor == null)
            t1.openedOnThisLineColor = _this.highlight.isPrimary ? t2._primaryColor : t2._secondaryColor;
        } else {
          if (_this.endLine === t3) {
            t3 = _this.highlight.span;
            t2 = t3.get$end(t3).get$column() === t2.text.length;
          } else
            t2 = false;
          t3 = _this.$this;
          if (t2) {
            t1 = _this.highlight.label == null ? $._glyphs.glyphOrAscii$2("\u2514", "\\") : vertical;
            t3._highlighter$_buffer._contents += t1;
          } else
            t3._colorize$2$color(new U.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor);
        }
      }
    },
    $signature: 0
  };
  U.Highlighter__writeMultilineHighlights__closure.prototype = {
    call$0: function() {
      var t1 = this._box_0.openedOnThisLine ? "\u252c" : "\u250c";
      this.$this._highlighter$_buffer._contents += $._glyphs.glyphOrAscii$2(t1, "/");
    },
    $signature: 0
  };
  U.Highlighter__writeMultilineHighlights__closure0.prototype = {
    call$0: function() {
      this.$this._highlighter$_buffer._contents += this.vertical;
    },
    $signature: 0
  };
  U.Highlighter__writeHighlightedText_closure.prototype = {
    call$0: function() {
      var _this = this;
      return _this.$this._writeText$1(C.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));
    },
    $signature: 1
  };
  U.Highlighter__writeIndicator_closure.prototype = {
    call$0: function() {
      var tabsBefore, tabsInside,
        t1 = this.$this,
        t2 = this.highlight,
        t3 = t2.span,
        t4 = t2.isPrimary ? "^" : $._glyphs.get$horizontalLineBold(),
        startColumn = t3.get$start(t3).get$column(),
        endColumn = t3.get$end(t3).get$column();
      t3 = this.line.text;
      tabsBefore = t1._countTabs$1(J.getInterceptor$s(t3).substring$2(t3, 0, startColumn));
      tabsInside = t1._countTabs$1(C.JSString_methods.substring$2(t3, startColumn, endColumn));
      startColumn += tabsBefore * 3;
      t3 = t1._highlighter$_buffer;
      t3._contents += C.JSString_methods.$mul(" ", startColumn);
      t3._contents += C.JSString_methods.$mul(t4, Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));
      t1._writeLabel$1(t2.label);
    },
    $signature: 0
  };
  U.Highlighter__writeIndicator_closure0.prototype = {
    call$0: function() {
      var t1 = this.highlight.span;
      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());
    },
    $signature: 1
  };
  U.Highlighter__writeIndicator_closure1.prototype = {
    call$0: function() {
      var t2, _this = this,
        t1 = _this.$this;
      if (_this.coversWholeLine)
        t1._highlighter$_buffer._contents += C.JSString_methods.$mul($._glyphs.get$horizontalLine(), 3);
      else {
        t2 = _this.highlight.span;
        t1._writeArrow$3$beginning(_this.line, Math.max(t2.get$end(t2).get$column() - 1, 0), false);
      }
      t1._writeLabel$1(_this.highlight.label);
    },
    $signature: 0
  };
  U.Highlighter__writeSidebar_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = this._box_0.text;
      if (t3 == null)
        t3 = "";
      t2._contents += C.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);
      t1 = this.end;
      t2._contents += t1 == null ? $._glyphs.get$verticalLine() : t1;
    },
    $signature: 0
  };
  U._Highlight.prototype = {
    toString$0: function(_) {
      var t1 = this.isPrimary ? "primary " : "",
        t2 = this.span;
      t2 = t1 + (H.S(t2.get$start(t2).get$line()) + ":" + t2.get$start(t2).get$column() + "-" + H.S(t2.get$end(t2).get$line()) + ":" + t2.get$end(t2).get$column());
      t1 = this.label;
      t1 = t1 != null ? t2 + (" (" + t1 + ")") : t2;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    get$span: function() {
      return this.span;
    }
  };
  U._Highlight_closure.prototype = {
    call$0: function() {
      var t2, t3, t4, t5,
        t1 = this.span;
      if (!(type$.legacy_SourceSpanWithContext._is(t1) && B.findLineStart(t1.get$context(t1), t1.get$text(), t1.get$start(t1).get$column()) != null)) {
        t2 = V.SourceLocation$(t1.get$start(t1).get$offset(), 0, 0, t1.get$sourceUrl(t1));
        t3 = t1.get$end(t1).get$offset();
        t4 = t1.get$sourceUrl(t1);
        t5 = B.countCodeUnits(t1.get$text(), 10);
        t1 = X.SourceSpanWithContext$(t2, V.SourceLocation$(t3, U._Highlight__lastLineLength(t1.get$text()), t5, t4), t1.get$text(), t1.get$text());
      }
      return U._Highlight__normalizeEndOfLine(U._Highlight__normalizeTrailingNewline(U._Highlight__normalizeNewlines(t1)));
    },
    $signature: 254
  };
  U._Line.prototype = {
    toString$0: function(_) {
      return "" + this.number + ': "' + H.S(this.text) + '" (' + C.JSArray_methods.join$1(this.highlights, ", ") + ")";
    }
  };
  V.SourceLocation.prototype = {
    distance$1: function(other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl(other)))
        throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(t1) + '" and "' + H.S(other.get$sourceUrl(other)) + "\" don't match."));
      return Math.abs(this.offset - other.get$offset());
    },
    compareTo$1: function(_, other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl(other)))
        throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(t1) + '" and "' + H.S(other.get$sourceUrl(other)) + "\" don't match."));
      return this.offset - other.get$offset();
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return type$.legacy_SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl(other)) && this.offset === other.get$offset();
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.sourceUrl) + this.offset;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = "<" + H.getRuntimeType(_this).toString$0(0) + ": " + _this.offset + " ",
        source = _this.sourceUrl;
      return t1 + (H.S(source == null ? "unknown source" : source) + ":" + (_this.line + 1) + ":" + (_this.column + 1)) + ">";
    },
    $isComparable: 1,
    get$sourceUrl: function(receiver) {
      return this.sourceUrl;
    },
    get$offset: function() {
      return this.offset;
    },
    get$line: function() {
      return this.line;
    },
    get$column: function() {
      return this.column;
    }
  };
  D.SourceLocationMixin.prototype = {
    distance$1: function(other) {
      var _this = this;
      if (!J.$eq$(_this.file.url, other.get$sourceUrl(other)))
        throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(_this.get$sourceUrl(_this)) + '" and "' + H.S(other.get$sourceUrl(other)) + "\" don't match."));
      return Math.abs(_this.offset - other.get$offset());
    },
    compareTo$1: function(_, other) {
      var _this = this;
      if (!J.$eq$(_this.file.url, other.get$sourceUrl(other)))
        throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(_this.get$sourceUrl(_this)) + '" and "' + H.S(other.get$sourceUrl(other)) + "\" don't match."));
      return _this.offset - other.get$offset();
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return type$.legacy_SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl(other)) && this.offset === other.get$offset();
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.file.url) + this.offset;
    },
    toString$0: function(_) {
      var t1 = this.offset,
        t2 = "<" + H.getRuntimeType(this).toString$0(0) + ": " + t1 + " ",
        t3 = this.file,
        source = t3.url;
      return t2 + (H.S(source == null ? "unknown source" : source) + ":" + (t3.getLine$1(t1) + 1) + ":" + (t3.getColumn$1(t1) + 1)) + ">";
    },
    $isComparable: 1,
    $isSourceLocation: 1
  };
  V.SourceSpanBase.prototype = {
    SourceSpanBase$3: function(start, end, text) {
      var t3,
        t1 = this.end,
        t2 = this.start;
      if (!J.$eq$(t1.get$sourceUrl(t1), t2.get$sourceUrl(t2)))
        throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(t2.get$sourceUrl(t2)) + '" and  "' + H.S(t1.get$sourceUrl(t1)) + "\" don't match."));
      else if (t1.get$offset() < t2.get$offset())
        throw H.wrapException(P.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + "."));
      else {
        t3 = this.text;
        if (t3.length !== t2.distance$1(t1))
          throw H.wrapException(P.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long."));
      }
    },
    get$start: function(receiver) {
      return this.start;
    },
    get$end: function(receiver) {
      return this.end;
    },
    get$text: function() {
      return this.text;
    }
  };
  G.SourceSpanException.prototype = {
    get$message: function(_) {
      return this._span_exception$_message;
    },
    get$span: function() {
      return this._span;
    },
    toString$1$color: function(_, color) {
      var _this = this;
      if (_this.get$span() == null)
        return _this._span_exception$_message;
      return "Error on " + _this.get$span().message$2$color(0, _this._span_exception$_message, color);
    },
    toString$0: function($receiver) {
      return this.toString$1$color($receiver, null);
    },
    $isException: 1
  };
  G.SourceSpanFormatException.prototype = {$isFormatException: 1,
    get$source: function() {
      return this.source;
    }
  };
  Y.SourceSpanMixin.prototype = {
    get$sourceUrl: function(_) {
      var t1 = this.get$start(this);
      return t1.get$sourceUrl(t1);
    },
    get$length: function(_) {
      var _this = this;
      return _this.get$end(_this).get$offset() - _this.get$start(_this).get$offset();
    },
    compareTo$1: function(_, other) {
      var _this = this,
        result = _this.get$start(_this).compareTo$1(0, other.get$start(other));
      return result === 0 ? _this.get$end(_this).compareTo$1(0, other.get$end(other)) : result;
    },
    message$2$color: function(_, message, color) {
      var t2, highlight, _this = this,
        t1 = "line " + (_this.get$start(_this).get$line() + 1) + ", column " + (_this.get$start(_this).get$column() + 1);
      if (_this.get$sourceUrl(_this) != null) {
        t2 = _this.get$sourceUrl(_this);
        t2 = t1 + (" of " + H.S($.$get$context().prettyUri$1(t2)));
        t1 = t2;
      }
      t1 += ": " + H.S(message);
      highlight = _this.highlight$1$color(color);
      if (highlight.length !== 0)
        t1 = t1 + "\n" + highlight;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    message$1: function($receiver, message) {
      return this.message$2$color($receiver, message, null);
    },
    highlight$1$color: function(color) {
      var _this = this;
      if (!type$.legacy_SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)
        return "";
      return U.Highlighter$(_this, color).highlight$0();
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return type$.legacy_SourceSpan._is(other) && _this.get$start(_this).$eq(0, other.get$start(other)) && _this.get$end(_this).$eq(0, other.get$end(other));
    },
    get$hashCode: function(_) {
      var t2, _this = this,
        t1 = _this.get$start(_this);
      t1 = t1.get$hashCode(t1);
      t2 = _this.get$end(_this);
      return t1 + 31 * t2.get$hashCode(t2);
    },
    toString$0: function(_) {
      var _this = this;
      return "<" + H.getRuntimeType(_this).toString$0(0) + ": from " + _this.get$start(_this).toString$0(0) + " to " + _this.get$end(_this).toString$0(0) + ' "' + _this.get$text() + '">';
    },
    $isComparable: 1,
    $isSourceSpan: 1
  };
  X.SourceSpanWithContext.prototype = {
    get$context: function(_) {
      return this._context;
    }
  };
  U.Chain.prototype = {
    toTrace$0: function() {
      var t1 = this.traces;
      return new Y.Trace(P.List_List$unmodifiable(new H.ExpandIterable(t1, new U.Chain_toTrace_closure(), H._arrayInstanceType(t1)._eval$1("ExpandIterable<1,Frame*>")), type$.legacy_Frame), new P._StringStackTrace(null));
    },
    toString$0: function(_) {
      var t1 = this.traces,
        t2 = H._arrayInstanceType(t1);
      return new H.MappedListIterable(t1, new U.Chain_toString_closure(new H.MappedListIterable(t1, new U.Chain_toString_closure0(), t2._eval$1("MappedListIterable<1,int*>")).fold$2(0, 0, H.instantiate1(P.math__max$closure(), type$.legacy_int))), t2._eval$1("MappedListIterable<1,String*>")).join$1(0, string$.x3d_____);
    },
    $isStackTrace: 1
  };
  U.Chain_Chain$parse_closure.prototype = {
    call$1: function(line) {
      return line.length !== 0;
    },
    $signature: 6
  };
  U.Chain_Chain$parse_closure0.prototype = {
    call$1: function(trace) {
      return new Y.Trace(P.List_List$unmodifiable(Y.Trace__parseVM(trace), type$.legacy_Frame), new P._StringStackTrace(trace));
    },
    $signature: 185
  };
  U.Chain_Chain$parse_closure1.prototype = {
    call$1: function(trace) {
      return Y.Trace$parseFriendly(trace);
    },
    $signature: 185
  };
  U.Chain_toTrace_closure.prototype = {
    call$1: function(trace) {
      return trace.get$frames();
    },
    $signature: 257
  };
  U.Chain_toString_closure0.prototype = {
    call$1: function(trace) {
      var t1 = trace.get$frames();
      return new H.MappedListIterable(t1, new U.Chain_toString__closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,int*>")).fold$2(0, 0, H.instantiate1(P.math__max$closure(), type$.legacy_int));
    },
    $signature: 258
  };
  U.Chain_toString__closure0.prototype = {
    call$1: function(frame) {
      return frame.get$location().length;
    },
    $signature: 184
  };
  U.Chain_toString_closure.prototype = {
    call$1: function(trace) {
      var t1 = trace.get$frames();
      return new H.MappedListIterable(t1, new U.Chain_toString__closure(this.longest), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$0(0);
    },
    $signature: 260
  };
  U.Chain_toString__closure.prototype = {
    call$1: function(frame) {
      return J.padRight$1$s(frame.get$location(), this.longest) + "  " + H.S(frame.get$member()) + "\n";
    },
    $signature: 183
  };
  A.Frame.prototype = {
    get$isCore: function() {
      return this.uri.get$scheme() === "dart";
    },
    get$library: function() {
      var t1 = this.uri;
      if (t1.get$scheme() === "data")
        return "data:...";
      return $.$get$context().prettyUri$1(t1);
    },
    get$$package: function() {
      var t1 = this.uri;
      if (t1.get$scheme() !== "package")
        return null;
      return C.JSArray_methods.get$first(t1.get$path(t1).split("/"));
    },
    get$location: function() {
      var t2, _this = this,
        t1 = _this.line;
      if (t1 == null)
        return _this.get$library();
      t2 = _this.column;
      if (t2 == null)
        return H.S(_this.get$library()) + " " + H.S(t1);
      return H.S(_this.get$library()) + " " + H.S(t1) + ":" + H.S(t2);
    },
    toString$0: function(_) {
      return H.S(this.get$location()) + " in " + H.S(this.member);
    },
    get$uri: function() {
      return this.uri;
    },
    get$line: function() {
      return this.line;
    },
    get$column: function() {
      return this.column;
    },
    get$member: function() {
      return this.member;
    }
  };
  A.Frame_Frame$parseVM_closure.prototype = {
    call$0: function() {
      var match, t2, t3, member, uri, lineAndColumn, line, _null = null,
        t1 = this.frame;
      if (t1 === "...")
        return new A.Frame(P._Uri__Uri(_null, _null, _null, _null), _null, _null, "...");
      match = $.$get$_vmFrame().firstMatch$1(t1);
      if (match == null)
        return new N.UnparsedFrame(P._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      t2 = t1[1];
      t3 = $.$get$_asyncBody();
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, t3, "<async>");
      member = H.stringReplaceAllUnchecked(t2, "<anonymous closure>", "<fn>");
      t2 = t1[2];
      uri = J.startsWith$1$s(t2, "<data:") ? P.Uri_Uri$dataFromString("", _null, _null) : P.Uri_parse(t2);
      lineAndColumn = t1[3].split(":");
      t1 = lineAndColumn.length;
      line = t1 > 1 ? P.int_parse(lineAndColumn[1], _null) : _null;
      return new A.Frame(uri, line, t1 > 2 ? P.int_parse(lineAndColumn[2], _null) : _null, member);
    },
    $signature: 60
  };
  A.Frame_Frame$parseV8_closure.prototype = {
    call$0: function() {
      var t2, t3, _s4_ = "<fn>",
        t1 = this.frame,
        match = $.$get$_v8Frame().firstMatch$1(t1);
      if (match == null)
        return new N.UnparsedFrame(P._Uri__Uri(null, "unparsed", null, null), t1);
      t1 = new A.Frame_Frame$parseV8_closure_parseLocation(t1);
      t2 = match._match;
      t3 = t2[2];
      if (t3 != null) {
        t2 = t2[1];
        t2.toString;
        t2 = H.stringReplaceAllUnchecked(t2, "<anonymous>", _s4_);
        t2 = H.stringReplaceAllUnchecked(t2, "Anonymous function", _s4_);
        return t1.call$2(t3, H.stringReplaceAllUnchecked(t2, "(anonymous function)", _s4_));
      } else
        return t1.call$2(t2[3], _s4_);
    },
    $signature: 60
  };
  A.Frame_Frame$parseV8_closure_parseLocation.prototype = {
    call$2: function($location, member) {
      var urlMatch, uri, line, _null = null,
        t1 = $.$get$_v8EvalLocation(),
        evalMatch = t1.firstMatch$1($location);
      for (; evalMatch != null;) {
        $location = evalMatch._match[1];
        evalMatch = t1.firstMatch$1($location);
      }
      if ($location === "native")
        return new A.Frame(P.Uri_parse("native"), _null, _null, member);
      urlMatch = $.$get$_v8UrlLocation().firstMatch$1($location);
      if (urlMatch == null)
        return new N.UnparsedFrame(P._Uri__Uri(_null, "unparsed", _null, _null), this.frame);
      t1 = urlMatch._match;
      uri = A.Frame__uriOrPathToUri(t1[1]);
      line = P.int_parse(t1[2], _null);
      t1 = t1[3];
      return new A.Frame(uri, line, t1 != null ? P.int_parse(t1, _null) : _null, member);
    },
    $signature: 263
  };
  A.Frame_Frame$_parseFirefoxEval_closure.prototype = {
    call$0: function() {
      var t2, member, uri, line, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxEvalLocation().firstMatch$1(t1);
      if (match == null)
        return new N.UnparsedFrame(P._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      t2 = t1[1];
      t2.toString;
      member = H.stringReplaceAllUnchecked(t2, "/<", "");
      uri = A.Frame__uriOrPathToUri(t1[2]);
      line = P.int_parse(t1[3], _null);
      return new A.Frame(uri, line, _null, member.length === 0 || member === "anonymous" ? "<fn>" : member);
    },
    $signature: 60
  };
  A.Frame_Frame$parseFirefox_closure.prototype = {
    call$0: function() {
      var t2, t3, uri, member, line, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxSafariFrame().firstMatch$1(t1);
      if (match == null)
        return new N.UnparsedFrame(P._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t2 = match._match;
      t3 = t2[3];
      if (J.contains$1$asx(t3, " line "))
        return A.Frame_Frame$_parseFirefoxEval(t1);
      uri = A.Frame__uriOrPathToUri(t3);
      t1 = t2[1];
      if (t1 != null) {
        t3 = C.JSString_methods.allMatches$1("/", t2[2]);
        member = J.$add$ansx(t1, C.JSArray_methods.join$0(P.List_List$filled(t3.get$length(t3), ".<fn>", false, type$.legacy_String)));
        if (member === "")
          member = "<fn>";
        member = C.JSString_methods.replaceFirst$2(member, $.$get$_initialDot(), "");
      } else
        member = "<fn>";
      t1 = t2[4];
      line = t1 === "" ? _null : P.int_parse(t1, _null);
      t1 = t2[5];
      return new A.Frame(uri, line, t1 == null || t1 === "" ? _null : P.int_parse(t1, _null), member);
    },
    $signature: 60
  };
  A.Frame_Frame$parseFriendly_closure.prototype = {
    call$0: function() {
      var t2, uri, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_friendlyFrame().firstMatch$1(t1);
      if (match == null)
        throw H.wrapException(P.FormatException$("Couldn't parse package:stack_trace stack trace line '" + H.S(t1) + "'.", _null, _null));
      t1 = match._match;
      t2 = t1[1];
      uri = t2 === "data:..." ? P.Uri_Uri$dataFromString("", _null, _null) : P.Uri_parse(t2);
      if (uri.get$scheme() === "") {
        t2 = $.$get$context();
        uri = t2.toUri$1(D.absolute(t2.style.pathFromUri$1(M._parseUri(uri))));
      }
      t2 = t1[2];
      line = t2 == null ? _null : P.int_parse(t2, _null);
      t2 = t1[3];
      column = t2 == null ? _null : P.int_parse(t2, _null);
      return new A.Frame(uri, line, column, t1[4]);
    },
    $signature: 60
  };
  T.LazyTrace.prototype = {
    get$_lazy_trace$_trace: function() {
      var t1 = this._lazy_trace$_inner;
      return t1 == null ? this._lazy_trace$_inner = this._thunk.call$0() : t1;
    },
    get$frames: function() {
      return this.get$_lazy_trace$_trace().get$frames();
    },
    get$terse: function() {
      return new T.LazyTrace(new T.LazyTrace_terse_closure(this));
    },
    toString$0: function(_) {
      return J.toString$0$(this.get$_lazy_trace$_trace());
    },
    $isStackTrace: 1,
    $isTrace: 1
  };
  T.LazyTrace_terse_closure.prototype = {
    call$0: function() {
      return this.$this.get$_lazy_trace$_trace().get$terse();
    },
    $signature: 180
  };
  Y.Trace.prototype = {
    get$terse: function() {
      return this.foldFrames$2$terse(new Y.Trace_terse_closure(), true);
    },
    foldFrames$2$terse: function(predicate, terse) {
      var newFrames, t1, cur, _box_0 = {};
      _box_0.predicate = predicate;
      _box_0.predicate = new Y.Trace_foldFrames_closure(predicate);
      newFrames = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);
      for (t1 = this.frames, t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        if (cur instanceof N.UnparsedFrame || !_box_0.predicate.call$1(cur))
          newFrames.push(cur);
        else if (newFrames.length === 0 || !_box_0.predicate.call$1(C.JSArray_methods.get$last(newFrames)))
          newFrames.push(new A.Frame(cur.get$uri(), cur.get$line(), cur.get$column(), cur.get$member()));
      }
      t1 = type$.MappedListIterable_of_legacy_Frame_and_legacy_Frame;
      newFrames = P.List_List$from(new H.MappedListIterable(newFrames, new Y.Trace_foldFrames_closure0(_box_0), t1), true, t1._eval$1("ListIterable.E"));
      if (newFrames.length > 1 && _box_0.predicate.call$1(C.JSArray_methods.get$first(newFrames)))
        C.JSArray_methods.removeAt$1(newFrames, 0);
      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(newFrames, H._arrayInstanceType(newFrames)._eval$1("ReversedListIterable<1>")), type$.legacy_Frame), new P._StringStackTrace(this.original._stackTrace));
    },
    toString$0: function(_) {
      var t1 = this.frames,
        t2 = H._arrayInstanceType(t1);
      return new H.MappedListIterable(t1, new Y.Trace_toString_closure(new H.MappedListIterable(t1, new Y.Trace_toString_closure0(), t2._eval$1("MappedListIterable<1,int*>")).fold$2(0, 0, H.instantiate1(P.math__max$closure(), type$.legacy_int))), t2._eval$1("MappedListIterable<1,String*>")).join$0(0);
    },
    $isStackTrace: 1,
    get$frames: function() {
      return this.frames;
    }
  };
  Y.Trace_Trace$from_closure.prototype = {
    call$0: function() {
      return Y.Trace_Trace$parse(this.trace.toString$0(0));
    },
    $signature: 180
  };
  Y.Trace__parseVM_closure.prototype = {
    call$1: function(line) {
      return line.length !== 0;
    },
    $signature: 6
  };
  Y.Trace__parseVM_closure0.prototype = {
    call$1: function(line) {
      return A.Frame_Frame$parseVM(line);
    },
    $signature: 54
  };
  Y.Trace$parseV8_closure.prototype = {
    call$1: function(line) {
      return !J.startsWith$1$s(line, $.$get$_v8TraceLine());
    },
    $signature: 6
  };
  Y.Trace$parseV8_closure0.prototype = {
    call$1: function(line) {
      return A.Frame_Frame$parseV8(line);
    },
    $signature: 54
  };
  Y.Trace$parseJSCore_closure.prototype = {
    call$1: function(line) {
      return line !== "\tat ";
    },
    $signature: 6
  };
  Y.Trace$parseJSCore_closure0.prototype = {
    call$1: function(line) {
      return A.Frame_Frame$parseV8(line);
    },
    $signature: 54
  };
  Y.Trace$parseFirefox_closure.prototype = {
    call$1: function(line) {
      return line.length !== 0 && line !== "[native code]";
    },
    $signature: 6
  };
  Y.Trace$parseFirefox_closure0.prototype = {
    call$1: function(line) {
      return A.Frame_Frame$parseFirefox(line);
    },
    $signature: 54
  };
  Y.Trace$parseFriendly_closure.prototype = {
    call$1: function(line) {
      return !J.startsWith$1$s(line, "=====");
    },
    $signature: 6
  };
  Y.Trace$parseFriendly_closure0.prototype = {
    call$1: function(line) {
      return A.Frame_Frame$parseFriendly(line);
    },
    $signature: 54
  };
  Y.Trace_terse_closure.prototype = {
    call$1: function(_) {
      return false;
    },
    $signature: 179
  };
  Y.Trace_foldFrames_closure.prototype = {
    call$1: function(frame) {
      if (this.oldPredicate.call$1(frame))
        return true;
      if (frame.get$isCore())
        return true;
      if (frame.get$$package() === "stack_trace")
        return true;
      if (!J.contains$1$asx(frame.get$member(), "<async>"))
        return false;
      return frame.get$line() == null;
    },
    $signature: 179
  };
  Y.Trace_foldFrames_closure0.prototype = {
    call$1: function(frame) {
      var t1, t2;
      if (frame instanceof N.UnparsedFrame || !this._box_0.predicate.call$1(frame))
        return frame;
      t1 = frame.get$library();
      t2 = $.$get$_terseRegExp();
      t1.toString;
      return new A.Frame(P.Uri_parse(H.stringReplaceAllUnchecked(t1, t2, "")), null, null, frame.get$member());
    },
    $signature: 267
  };
  Y.Trace_toString_closure0.prototype = {
    call$1: function(frame) {
      return frame.get$location().length;
    },
    $signature: 184
  };
  Y.Trace_toString_closure.prototype = {
    call$1: function(frame) {
      if (frame instanceof N.UnparsedFrame)
        return frame.toString$0(0) + "\n";
      return J.padRight$1$s(frame.get$location(), this.longest) + "  " + H.S(frame.get$member()) + "\n";
    },
    $signature: 183
  };
  N.UnparsedFrame.prototype = {
    toString$0: function(_) {
      return this.member;
    },
    $isFrame: 1,
    get$uri: function() {
      return this.uri;
    },
    get$line: function() {
      return null;
    },
    get$column: function() {
      return null;
    },
    get$isCore: function() {
      return false;
    },
    get$library: function() {
      return "unparsed";
    },
    get$$package: function() {
      return null;
    },
    get$location: function() {
      return "unparsed";
    },
    get$member: function() {
      return this.member;
    }
  };
  L._StreamTransformer.prototype = {
    bind$1: function(values) {
      var controller, _null = null, t1 = {},
        t2 = this.$ti;
      if (values.get$isBroadcast())
        controller = new P._SyncBroadcastStreamController(_null, _null, t2._eval$1("_SyncBroadcastStreamController<2*>"));
      else
        controller = P.StreamController_StreamController(_null, _null, _null, _null, true, t2._eval$1("2*"));
      t1.subscription = null;
      controller.set$onListen(new L._StreamTransformer_bind_closure(t1, this, values, controller));
      return controller.get$stream();
    }
  };
  L._StreamTransformer_bind_closure.prototype = {
    call$0: function() {
      var t2, t3, t4, t5, _this = this, t1 = {};
      t1.valuesDone = false;
      t2 = _this.values;
      t3 = _this.$this;
      t4 = _this.controller;
      t5 = _this._box_1;
      t5.subscription = t2.listen$3$onDone$onError(0, new L._StreamTransformer_bind__closure(t3, t4), new L._StreamTransformer_bind__closure0(t1, t3, t4), new L._StreamTransformer_bind__closure1(t3, t4));
      if (!t2.get$isBroadcast()) {
        t2 = t5.subscription;
        t4.set$onPause(t2.get$pause(t2));
        t2 = t5.subscription;
        t4.set$onResume(t2.get$resume(t2));
      }
      t4.set$onCancel(new L._StreamTransformer_bind__closure2(t5, t1));
    },
    $signature: 0
  };
  L._StreamTransformer_bind__closure.prototype = {
    call$1: function(value) {
      return this.$this._from_handlers$_handleData.call$2(value, this.controller);
    },
    $signature: function() {
      return this.$this.$ti._eval$1("~(1*)");
    }
  };
  L._StreamTransformer_bind__closure1.prototype = {
    call$2: function(error, stackTrace) {
      this.$this._from_handlers$_handleError.call$3(error, stackTrace, this.controller);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 133
  };
  L._StreamTransformer_bind__closure0.prototype = {
    call$0: function() {
      this._box_0.valuesDone = true;
      this.$this._from_handlers$_handleDone.call$1(this.controller);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  L._StreamTransformer_bind__closure2.prototype = {
    call$0: function() {
      var t1 = this._box_1,
        toCancel = t1.subscription;
      t1.subscription = null;
      if (!this._box_0.valuesDone)
        return toCancel.cancel$0();
      return null;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 268
  };
  R._debounceAggregate_closure.prototype = {
    call$2: function(value, sink) {
      var soFar, _this = this,
        t1 = _this._box_0,
        t2 = t1.timer;
      if (t2 != null)
        t2.cancel$0();
      soFar = _this.collect.call$2(value, t1.soFar);
      t1.soFar = soFar;
      if (t1.timer == null && _this.leading) {
        t1.emittedLatestAsLeading = true;
        sink.add$1(0, soFar);
      } else
        t1.emittedLatestAsLeading = false;
      t1.timer = P.Timer_Timer(_this.duration, new R._debounceAggregate__closure(t1, _this.trailing, sink));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: function() {
      return this.T._eval$1("@<0>")._bind$1(this.R)._eval$1("Null(1*,EventSink<2*>*)");
    }
  };
  R._debounceAggregate__closure.prototype = {
    call$0: function() {
      var t1 = this._box_0,
        t2 = t1.emittedLatestAsLeading;
      if (!t2)
        this.sink.add$1(0, t1.soFar);
      if (t1.shouldClose)
        this.sink.close$0(0);
      t1.timer = t1.soFar = null;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  R._debounceAggregate_closure0.prototype = {
    call$1: function(sink) {
      var t1 = this._box_0;
      if (t1.soFar != null && this.trailing)
        t1.shouldClose = true;
      else {
        t1 = t1.timer;
        if (t1 != null)
          t1.cancel$0();
        sink.close$0(0);
      }
    },
    $signature: function() {
      return this.R._eval$1("Null(EventSink<0*>*)");
    }
  };
  E.StringScannerException.prototype = {
    get$source: function() {
      return H._asStringS(this.source);
    }
  };
  Z.LineScanner.prototype = {
    get$_betweenCRLF: function() {
      return this.peekChar$1(-1) === 13 && this.peekChar$0() === 10;
    },
    scanChar$1: function(character) {
      if (!this.super$StringScanner$scanChar(character))
        return false;
      this._adjustLineAndColumn$1(character);
      return true;
    },
    _adjustLineAndColumn$1: function(character) {
      var t1, _this = this;
      if (character !== 10)
        t1 = character === 13 && _this.peekChar$0() !== 10;
      else
        t1 = true;
      if (t1) {
        ++_this._line_scanner$_line;
        _this._line_scanner$_column = 0;
      } else
        ++_this._line_scanner$_column;
    },
    scan$1: function(pattern) {
      var newlines, t1, t2, _this = this;
      if (!_this.super$StringScanner$scan(pattern))
        return false;
      newlines = _this._newlinesIn$1(_this.get$lastMatch().group$1(0, 0));
      t1 = _this._line_scanner$_line;
      t2 = newlines.length;
      _this._line_scanner$_line = t1 + t2;
      if (t2 === 0)
        _this._line_scanner$_column = _this._line_scanner$_column + _this.get$lastMatch().group$1(0, 0).length;
      else
        _this._line_scanner$_column = _this.get$lastMatch().group$1(0, 0).length - J.get$end$x(C.JSArray_methods.get$last(newlines));
      return true;
    },
    _newlinesIn$1: function(text) {
      var t1 = $.$get$_newlineRegExp().allMatches$1(0, text),
        newlines = P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
      if (this.get$_betweenCRLF())
        C.JSArray_methods.removeLast$0(newlines);
      return newlines;
    }
  };
  S.SpanScanner.prototype = {
    set$state: function(state) {
      if (!(state instanceof S._SpanScannerState) || state._scanner !== this)
        throw H.wrapException(P.ArgumentError$(string$.The_gi));
      this.set$position(state.position);
    },
    spanFrom$2: function(startState, endState) {
      var endPosition = endState == null ? this._string_scanner$_position : endState.position;
      return this._sourceFile.span$2(startState.position, endPosition);
    },
    spanFrom$1: function(startState) {
      return this.spanFrom$2(startState, null);
    },
    matches$1: function(pattern) {
      var t1, t2, _this = this;
      if (!_this.super$StringScanner$matches(pattern))
        return false;
      t1 = _this._string_scanner$_position;
      t2 = _this.get$lastMatch();
      _this._sourceFile.span$2(t1, t2.start + t2.pattern.length);
      return true;
    },
    error$3$length$position: function(_, message, $length, position) {
      var t2, match, _this = this,
        t1 = _this.string;
      B.validateErrorArgs(t1, null, position, $length);
      t2 = position == null && $length == null;
      match = t2 ? _this.get$lastMatch() : null;
      if (position == null)
        position = match == null ? _this._string_scanner$_position : match.start;
      if ($length == null)
        if (match == null)
          $length = 0;
        else {
          t2 = match.start;
          $length = t2 + match.pattern.length - t2;
        }
      throw H.wrapException(E.StringScannerException$(message, _this._sourceFile.span$2(position, position + $length), t1));
    },
    error$1: function($receiver, message) {
      return this.error$3$length$position($receiver, message, null, null);
    },
    error$2$position: function($receiver, message, position) {
      return this.error$3$length$position($receiver, message, null, position);
    },
    error$2$length: function($receiver, message, $length) {
      return this.error$3$length$position($receiver, message, $length, null);
    }
  };
  S._SpanScannerState.prototype = {};
  X.StringScanner.prototype = {
    set$position: function(position) {
      if (position < 0 || position > this.string.length)
        throw H.wrapException(P.ArgumentError$("Invalid position " + position));
      this._string_scanner$_position = position;
      this._lastMatch = null;
    },
    get$lastMatch: function() {
      var _this = this;
      if (_this._string_scanner$_position !== _this._lastMatchPosition)
        _this._lastMatch = null;
      return _this._lastMatch;
    },
    readChar$0: function() {
      var _this = this,
        t1 = _this._string_scanner$_position,
        t2 = _this.string;
      if (t1 === t2.length)
        _this.error$3$length$position(0, "expected more input.", 0, t1);
      return J.codeUnitAt$1$s(t2, _this._string_scanner$_position++);
    },
    peekChar$1: function(offset) {
      var index;
      if (offset == null)
        offset = 0;
      index = this._string_scanner$_position + offset;
      if (index < 0 || index >= this.string.length)
        return null;
      return J.codeUnitAt$1$s(this.string, index);
    },
    peekChar$0: function() {
      return this.peekChar$1(null);
    },
    scanChar$1: function(character) {
      var t1 = this._string_scanner$_position,
        t2 = this.string;
      if (t1 === t2.length)
        return false;
      if (J.codeUnitAt$1$s(t2, t1) !== character)
        return false;
      this._string_scanner$_position = t1 + 1;
      return true;
    },
    expectChar$2$name: function(character, $name) {
      if (this.scanChar$1(character))
        return;
      if ($name == null)
        if (character === 92)
          $name = '"\\"';
        else
          $name = character === 34 ? '"\\""' : '"' + H.Primitives_stringFromCharCode(character) + '"';
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
    },
    expectChar$1: function(character) {
      return this.expectChar$2$name(character, null);
    },
    scan$1: function(pattern) {
      var t1, _this = this,
        success = _this.matches$1(pattern);
      if (success) {
        t1 = _this._lastMatch;
        _this._lastMatchPosition = _this._string_scanner$_position = t1.start + t1.pattern.length;
      }
      return success;
    },
    expect$1: function(pattern) {
      var t1, $name;
      if (this.scan$1(pattern))
        return;
      t1 = H.stringReplaceAllUnchecked(pattern, "\\", "\\\\");
      $name = '"' + H.stringReplaceAllUnchecked(t1, '"', '\\"') + '"';
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
    },
    expectDone$0: function() {
      var t1 = this._string_scanner$_position;
      if (t1 === this.string.length)
        return;
      this.error$3$length$position(0, "expected no more input.", 0, t1);
    },
    matches$1: function(pattern) {
      var _this = this,
        t1 = C.JSString_methods.matchAsPrefix$2(pattern, _this.string, _this._string_scanner$_position);
      _this._lastMatch = t1;
      _this._lastMatchPosition = _this._string_scanner$_position;
      return t1 != null;
    },
    substring$1: function(_, start) {
      var end = this._string_scanner$_position;
      return J.substring$2$s(this.string, start, end);
    },
    error$3$length$position: function(_, message, $length, position) {
      var t1 = this.string;
      B.validateErrorArgs(t1, null, position, $length);
      throw H.wrapException(E.StringScannerException$(message, Y.SourceFile$fromString(t1, this.sourceUrl).span$2(position, position + $length), t1));
    }
  };
  A.AsciiGlyphSet.prototype = {
    glyphOrAscii$2: function(glyph, alternative) {
      return alternative;
    },
    get$horizontalLine: function() {
      return "-";
    },
    get$verticalLine: function() {
      return "|";
    },
    get$topLeftCorner: function() {
      return ",";
    },
    get$bottomLeftCorner: function() {
      return "'";
    },
    get$cross: function() {
      return "+";
    },
    get$upEnd: function() {
      return "'";
    },
    get$downEnd: function() {
      return ",";
    },
    get$horizontalLineBold: function() {
      return "=";
    }
  };
  K.UnicodeGlyphSet.prototype = {
    glyphOrAscii$2: function(glyph, alternative) {
      return glyph;
    },
    get$horizontalLine: function() {
      return "\u2500";
    },
    get$verticalLine: function() {
      return "\u2502";
    },
    get$topLeftCorner: function() {
      return "\u250c";
    },
    get$bottomLeftCorner: function() {
      return "\u2514";
    },
    get$cross: function() {
      return "\u253c";
    },
    get$upEnd: function() {
      return "\u2575";
    },
    get$downEnd: function() {
      return "\u2577";
    },
    get$horizontalLineBold: function() {
      return "\u2501";
    }
  };
  S.Tuple2.prototype = {
    toString$0: function(_) {
      return "[" + H.S(this.item1) + ", " + H.S(this.item2) + "]";
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof S.Tuple2 && J.$eq$(other.item1, this.item1) && J.$eq$(other.item2, this.item2);
    },
    get$hashCode: function(_) {
      var t1 = J.get$hashCode$(this.item1),
        t2 = J.get$hashCode$(this.item2);
      return A._finish(A._combine(A._combine(0, C.JSInt_methods.get$hashCode(t1)), C.JSInt_methods.get$hashCode(t2)));
    }
  };
  S.Tuple3.prototype = {
    toString$0: function(_) {
      return "[" + H.S(this.item1) + ", " + this.item2.toString$0(0) + ", " + H.S(this.item3) + "]";
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof S.Tuple3 && other.item1 == this.item1 && other.item2.$eq(0, this.item2) && J.$eq$(other.item3, this.item3);
    },
    get$hashCode: function(_) {
      var t3,
        t1 = J.get$hashCode$(this.item1),
        t2 = this.item2;
      t2 = t2.get$hashCode(t2);
      t3 = J.get$hashCode$(this.item3);
      return A._finish(A._combine(A._combine(A._combine(0, C.JSInt_methods.get$hashCode(t1)), C.JSInt_methods.get$hashCode(t2)), C.JSInt_methods.get$hashCode(t3)));
    }
  };
  E.WatchEvent.prototype = {
    toString$0: function(_) {
      return H.S(this.type) + " " + H.S(this.path);
    },
    get$path: function(receiver) {
      return this.path;
    }
  };
  E.ChangeType.prototype = {
    toString$0: function(_) {
      return this._watch_event$_name;
    }
  };
  Y.SupportsAnything0.prototype = {
    toString$0: function(_) {
      return "(" + this.contents.toString$0(0) + ")";
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  Z.Argument0.prototype = {
    toString$0: function(_) {
      var t1 = this.defaultValue,
        t2 = this.name;
      return t1 == null ? t2 : t2 + ": " + t1.toString$0(0);
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  B.ArgumentDeclaration0.prototype = {
    get$spanWithName: function() {
      var t3, t4,
        t1 = this.span,
        t2 = t1.file,
        text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2._decodedChars, 0, null), 0, null),
        i = Y.FileLocation$_(t2, t1._file$_start).offset - 1;
      while (true) {
        if (i > 0) {
          t3 = C.JSString_methods.codeUnitAt$1(text, i);
          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;
        } else
          t3 = false;
        if (!t3)
          break;
        --i;
      }
      t3 = C.JSString_methods.codeUnitAt$1(text, i);
      if (!(t3 === 95 || T.isAlphabetic1(t3) || t3 >= 128 || T.isDigit0(t3) || t3 === 45))
        return t1;
      --i;
      while (true) {
        if (i >= 0) {
          t3 = C.JSString_methods.codeUnitAt$1(text, i);
          if (t3 !== 95) {
            if (!(t3 >= 97 && t3 <= 122))
              t4 = t3 >= 65 && t3 <= 90;
            else
              t4 = true;
            t4 = t4 || t3 >= 128;
          } else
            t4 = true;
          if (!t4) {
            t4 = t3 >= 48 && t3 <= 57;
            t3 = t4 || t3 === 45;
          } else
            t3 = true;
        } else
          t3 = false;
        if (!t3)
          break;
        --i;
      }
      t3 = i + 1;
      t4 = C.JSString_methods.codeUnitAt$1(text, t3);
      if (!(t4 === 95 || T.isAlphabetic1(t4) || t4 >= 128))
        return t1;
      return B.SpanExtensions_trim0(t2.span$2(t3, Y.FileLocation$_(t2, t1._end).offset));
    },
    get$originalRestArgument: function() {
      var t1, text;
      if (this.restArgument == null)
        return null;
      t1 = this.span;
      text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null);
      return C.JSString_methods.substring$2(C.JSString_methods.substring$1(text, C.JSString_methods.lastIndexOf$1(text, "$")), 0, C.JSString_methods.indexOf$1(text, "."));
    },
    verify$2: function(positional, names) {
      var t1, t2, t3, namedUsed, i, argument, t4, unknownNames, _this = this,
        _s10_ = "invocation",
        _s8_ = "argument";
      for (t1 = _this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {
        argument = t1[i];
        if (i < positional) {
          t4 = argument.name;
          if (t3.containsKey$1(t4))
            throw H.wrapException(E.SassScriptException$0("Argument " + H.S(_this._argument_declaration$_originalArgumentName$1(t4)) + string$.x20was_p));
        } else {
          t4 = argument.name;
          if (t3.containsKey$1(t4))
            ++namedUsed;
          else if (argument.defaultValue == null)
            throw H.wrapException(E.MultiSpanSassScriptException$0("Missing argument " + H.S(_this._argument_declaration$_originalArgumentName$1(t4)) + ".", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String)));
        }
      }
      if (_this.restArgument != null)
        return;
      if (positional > t2) {
        t1 = "Only " + t2 + " ";
        throw H.wrapException(E.MultiSpanSassScriptException$0(t1 + (names.get$isEmpty(names) ? "" : "positional ") + B.pluralize0(_s8_, t2, null) + " allowed, but " + positional + " " + B.pluralize0("was", positional, "were") + " passed.", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String)));
      }
      if (namedUsed < t3.get$length(t3)) {
        t2 = type$.legacy_String;
        unknownNames = P.LinkedHashSet_LinkedHashSet$of(names, t2);
        unknownNames.removeAll$1(new H.MappedListIterable(t1, new B.ArgumentDeclaration_verify_closure1(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Object*>")));
        throw H.wrapException(E.MultiSpanSassScriptException$0("No " + B.pluralize0(_s8_, unknownNames._collection$_length, null) + " named " + H.S(B.toSentence0(unknownNames.map$1$1(0, new B.ArgumentDeclaration_verify_closure2(), type$.legacy_Object), "or")) + ".", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), "declaration"], type$.legacy_FileSpan, t2)));
      }
    },
    _argument_declaration$_originalArgumentName$1: function($name) {
      var t1, t2, _i, argument, t3, t4, text, end;
      if ($name === this.restArgument)
        return this.get$originalRestArgument();
      for (t1 = this.$arguments, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        argument = t1[_i];
        if (argument.name === $name) {
          t1 = argument.defaultValue;
          t2 = argument.span;
          t3 = t2.file;
          t4 = t2._file$_start;
          t2 = t2._end;
          if (t1 == null) {
            t1 = t3._decodedChars;
            t1 = P.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, H._checkValidRange(t4, t2, t1.length))), 0, null);
          } else {
            t1 = t3._decodedChars;
            text = P.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, H._checkValidRange(t4, t2, t1.length))), 0, null);
            t1 = C.JSString_methods.substring$2(text, 0, C.JSString_methods.indexOf$1(text, ":"));
            end = B._lastNonWhitespace0(t1, false);
            t1 = end == null ? "" : C.JSString_methods.substring$2(t1, 0, end + 1);
          }
          return t1;
        }
      }
      throw H.wrapException(P.ArgumentError$(string$.This_d + $name + '".'));
    },
    matches$2: function(positional, names) {
      var t1, t2, t3, namedUsed, i, argument;
      for (t1 = this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {
        argument = t1[i];
        if (i < positional) {
          if (t3.containsKey$1(argument.name))
            return false;
        } else if (t3.containsKey$1(argument.name))
          ++namedUsed;
        else if (argument.defaultValue == null)
          return false;
      }
      if (this.restArgument != null)
        return true;
      if (positional > t2)
        return false;
      if (namedUsed < t3.get$length(t3))
        return false;
      return true;
    },
    toString$0: function(_) {
      var t2, t3, _i,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      for (t2 = this.$arguments, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t1.push(J.toString$0$(t2[_i]));
      t2 = this.restArgument;
      if (t2 != null)
        t1.push(t2 + "...");
      return C.JSArray_methods.join$1(t1, ", ");
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  B.ArgumentDeclaration_verify_closure1.prototype = {
    call$1: function(argument) {
      return argument.name;
    },
    $signature: 269
  };
  B.ArgumentDeclaration_verify_closure2.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  X.ArgumentInvocation0.prototype = {
    get$isEmpty: function(_) {
      var t1;
      if (this.positional.length === 0) {
        t1 = this.named;
        t1 = t1.get$isEmpty(t1) && this.rest == null;
      } else
        t1 = false;
      return t1;
    },
    toString$0: function(_) {
      var t2, t3, _i, t4, _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);
      for (t2 = _this.positional, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t1.push(t2[_i]);
      for (t2 = _this.named, t3 = J.get$iterator$ax(t2.get$keys(t2)); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t1.push(H.S(t4) + ": " + H.S(t2.$index(0, t4)));
      }
      t2 = _this.rest;
      if (t2 != null)
        t1.push(t2.toString$0(0) + "...");
      t2 = _this.keywordRest;
      if (t2 != null)
        t1.push(t2.toString$0(0) + "...");
      return "(" + C.JSArray_methods.join$1(t1, ", ") + ")";
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  D.SassArgumentList0.prototype = {};
  B.AsyncImporter0.prototype = {};
  S.AsyncBuiltInCallable0.prototype = {
    callbackFor$2: function(positional, names) {
      return new S.Tuple2(this._async_built_in0$_arguments, this._async_built_in0$_callback, type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_FutureOr_legacy_Value_Function_legacy_List_legacy_Value_2);
    },
    $isAsyncCallable0: 1,
    get$name: function(receiver) {
      return this.name;
    }
  };
  S.AsyncBuiltInCallable$mixin_closure0.prototype = {
    call$1: function($arguments) {
      return this.$call$body$AsyncBuiltInCallable$mixin_closure0($arguments);
    },
    $call$body$AsyncBuiltInCallable$mixin_closure0: function($arguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.callback.call$1($arguments), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 176
  };
  X._compileStylesheet_closure2.prototype = {
    call$1: function(url) {
      var t1, t2, _null = null;
      if (url === "")
        t1 = P.Uri_Uri$dataFromString(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, _null), 0, _null), C.C_Utf8Codec, _null).get$_text();
      else {
        t1 = P.Uri_parse(url);
        t2 = this.importCache._async_import_cache0$_resultsCache.$index(0, t1);
        t2 = t2 == null ? _null : t2.get$sourceMapUrl();
        t1 = (t2 == null ? t1 : t2).toString$0(0);
      }
      return t1;
    },
    $signature: 4
  };
  X.CompileResult0.prototype = {};
  Q.AsyncEnvironment0.prototype = {
    closure$0: function() {
      var t5, t6, t7, _this = this,
        t1 = _this._async_environment0$_forwardedModules,
        t2 = _this._async_environment0$_forwardedModuleNodes,
        t3 = _this._async_environment0$_nestedForwardedModules,
        t4 = _this._async_environment0$_variables;
      t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));
      t5 = _this._async_environment0$_variableNodes;
      if (t5 == null)
        t5 = null;
      else
        t5 = H.setRuntimeTypeInfo(t5.slice(0), H._arrayInstanceType(t5));
      t6 = _this._async_environment0$_functions;
      t6 = H.setRuntimeTypeInfo(t6.slice(0), H._arrayInstanceType(t6));
      t7 = _this._async_environment0$_mixins;
      t7 = H.setRuntimeTypeInfo(t7.slice(0), H._arrayInstanceType(t7));
      return Q.AsyncEnvironment$_0(_this._async_environment0$_modules, _this._async_environment0$_namespaceNodes, _this._async_environment0$_globalModules, _this._async_environment0$_globalModuleNodes, t1, t2, t3, _this._async_environment0$_allModules, t4, t5, t6, t7, _this._async_environment0$_content);
    },
    addModule$3$namespace: function(module, nodeWithSpan, namespace) {
      var t1, t2, _this = this;
      if (namespace == null) {
        _this._async_environment0$_globalModules.add$1(0, module);
        _this._async_environment0$_globalModuleNodes.$indexSet(0, module, nodeWithSpan);
        _this._async_environment0$_allModules.push(module);
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.get$first(_this._async_environment0$_variables))); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          if (module.get$variables().containsKey$1(t2))
            throw H.wrapException(E.SassScriptException$0(string$.This_ma + H.S(t2) + '".'));
        }
      } else {
        t1 = _this._async_environment0$_modules;
        if (t1.containsKey$1(namespace))
          throw H.wrapException(E.MultiSpanSassScriptException$0(string$.There_ + namespace + '".', "new @use", P.LinkedHashMap_LinkedHashMap$_literal([_this._async_environment0$_namespaceNodes.$index(0, namespace).get$span(), "original @use"], type$.legacy_FileSpan, type$.legacy_String)));
        t1.$indexSet(0, namespace, module);
        _this._async_environment0$_namespaceNodes.$indexSet(0, namespace, nodeWithSpan);
        _this._async_environment0$_allModules.push(module);
      }
    },
    forwardModule$2: function(module, rule) {
      var view, t1, t2, _this = this;
      if (_this._async_environment0$_forwardedModules == null)
        _this._async_environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_AsyncCallable_2);
      if (_this._async_environment0$_forwardedModuleNodes == null)
        _this._async_environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_AsyncCallable_2, type$.legacy_AstNode_2);
      view = R.ForwardedModuleView_ifNecessary0(module, rule, type$.legacy_AsyncCallable_2);
      for (t1 = _this._async_environment0$_forwardedModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {
        t2 = t1._collection$_current;
        _this._async_environment0$_assertNoConflicts$6(view.get$variables(), t2.get$variables(), view, t2, "variable", rule);
        _this._async_environment0$_assertNoConflicts$6(view.get$functions(view), t2.get$functions(t2), view, t2, "function", rule);
        _this._async_environment0$_assertNoConflicts$6(view.get$mixins(), t2.get$mixins(), view, t2, "mixin", rule);
      }
      _this._async_environment0$_allModules.push(module);
      _this._async_environment0$_forwardedModules.add$1(0, view);
      _this._async_environment0$_forwardedModuleNodes.$indexSet(0, view, rule);
    },
    _async_environment0$_assertNoConflicts$6: function(newMembers, oldMembers, newModule, oldModule, type, newModuleNodeWithSpan) {
      var larger, smaller, t1, t2, $name;
      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {
        larger = oldMembers;
        smaller = newMembers;
      } else {
        larger = newMembers;
        smaller = oldMembers;
      }
      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === "variable"; t1.moveNext$0();) {
        $name = t1.get$current(t1);
        if (!larger.containsKey$1($name))
          continue;
        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))
          continue;
        if (t2)
          $name = "$" + H.S($name);
        throw H.wrapException(E.MultiSpanSassScriptException$0("Two forwarded modules both define a " + type + " named " + H.S($name) + ".", "new @forward", P.LinkedHashMap_LinkedHashMap$_literal([this._async_environment0$_forwardedModuleNodes.$index(0, oldModule).get$span(), "original @forward"], type$.legacy_FileSpan, type$.legacy_String)));
      }
    },
    importForwards$1: function(module) {
      var t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, t6, t7, _i, shadowed, t8, _this = this,
        t1 = module._async_environment0$_environment,
        forwarded = t1._async_environment0$_forwardedModules;
      if (forwarded == null)
        return;
      if (_this._async_environment0$_forwardedModules != null) {
        t2 = P.LinkedHashSet_LinkedHashSet(type$.legacy_Module_legacy_AsyncCallable_2);
        for (t3 = P._LinkedHashSetIterator$(forwarded, forwarded._collection$_modifications), t4 = _this._async_environment0$_globalModules; t3.moveNext$0();) {
          t5 = t3._collection$_current;
          if (!_this._async_environment0$_forwardedModules.contains$1(0, t5) || !t4.contains$1(0, t5))
            t2.add$1(0, t5);
        }
        forwarded = t2;
      }
      if (_this._async_environment0$_forwardedModules == null)
        _this._async_environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_AsyncCallable_2);
      if (_this._async_environment0$_forwardedModuleNodes == null)
        _this._async_environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_AsyncCallable_2, type$.legacy_AstNode_2);
      t2 = H._instanceType(forwarded)._eval$1("ExpandIterable<1,String*>");
      t3 = t2._eval$1("Iterable.E");
      forwardedVariableNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure3(), t2), t3);
      forwardedFunctionNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure4(), t2), t3);
      forwardedMixinNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure5(), t2), t3);
      t2 = _this._async_environment0$_variables;
      t3 = t2.length;
      if (t3 === 1) {
        for (t3 = _this._async_environment0$_globalModules, t4 = P.List_List$from(t3, true, H._instanceType(t3)._precomputed1), t5 = t4.length, t6 = type$.legacy_AsyncCallable_2, t7 = _this._async_environment0$_globalModuleNodes, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
          module = t4[_i];
          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);
          if (shadowed != null) {
            t3.remove$1(0, module);
            t8 = shadowed.variables;
            if (t8.get$isEmpty(t8)) {
              t8 = shadowed.functions;
              if (t8.get$isEmpty(t8)) {
                t8 = shadowed.mixins;
                if (t8.get$isEmpty(t8)) {
                  t8 = shadowed._shadowed_view0$_inner;
                  t8 = t8.get$css(t8);
                  t8 = J.get$isEmpty$asx(t8.get$children(t8));
                } else
                  t8 = false;
              } else
                t8 = false;
            } else
              t8 = false;
            if (!t8) {
              t3.add$1(0, shadowed);
              t7.$indexSet(0, shadowed, t7.remove$1(0, module));
            }
          }
        }
        t4 = _this._async_environment0$_forwardedModules;
        t4.toString;
        t4 = P.List_List$from(t4, true, H._instanceType(t4)._precomputed1);
        t5 = t4.length;
        _i = 0;
        for (; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
          module = t4[_i];
          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);
          if (shadowed != null) {
            _this._async_environment0$_forwardedModules.remove$1(0, module);
            t8 = shadowed.variables;
            if (t8.get$isEmpty(t8)) {
              t8 = shadowed.functions;
              if (t8.get$isEmpty(t8)) {
                t8 = shadowed.mixins;
                if (t8.get$isEmpty(t8)) {
                  t8 = shadowed._shadowed_view0$_inner;
                  t8 = t8.get$css(t8);
                  t8 = J.get$isEmpty$asx(t8.get$children(t8));
                } else
                  t8 = false;
              } else
                t8 = false;
            } else
              t8 = false;
            if (!t8) {
              _this._async_environment0$_forwardedModules.add$1(0, shadowed);
              t8 = _this._async_environment0$_forwardedModuleNodes;
              t8.$indexSet(0, shadowed, t8.remove$1(0, module));
            }
          }
        }
        t3.addAll$1(0, forwarded);
        t7.addAll$1(0, t1._async_environment0$_forwardedModuleNodes);
        _this._async_environment0$_forwardedModules.addAll$1(0, forwarded);
        _this._async_environment0$_forwardedModuleNodes.addAll$1(0, t1._async_environment0$_forwardedModuleNodes);
      } else {
        t1 = _this._async_environment0$_nestedForwardedModules;
        J.addAll$1$ax(C.JSArray_methods.get$last(t1 == null ? _this._async_environment0$_nestedForwardedModules = P.List_List$generate(t3 - 1, new Q.AsyncEnvironment_importForwards_closure6(), true, type$.legacy_List_legacy_Module_legacy_AsyncCallable_2) : t1), forwarded);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._async_environment0$_variableNodes, t4 = t3 != null, t5 = _this._async_environment0$_variableIndices; t1.moveNext$0();) {
        t6 = t1._collection$_current;
        t5.remove$1(0, t6);
        J.remove$1$ax(C.JSArray_methods.get$last(t2), t6);
        if (t4)
          J.remove$1$ax(C.JSArray_methods.get$last(t3), t6);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._async_environment0$_functionIndices, t3 = _this._async_environment0$_functions; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        t2.remove$1(0, t4);
        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._async_environment0$_mixinIndices, t3 = _this._async_environment0$_mixins; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        t2.remove$1(0, t4);
        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);
      }
    },
    getVariable$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._async_environment0$_getModule$1(namespace).get$variables().$index(0, $name);
      if (_this._async_environment0$_lastVariableName === $name) {
        t1 = J.$index$asx(_this._async_environment0$_variables[_this._async_environment0$_lastVariableIndex], $name);
        return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      t1 = _this._async_environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._async_environment0$_lastVariableName = $name;
        _this._async_environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._async_environment0$_variables[index], $name);
        return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_variableIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getVariableFromGlobalModule$1($name);
      _this._async_environment0$_lastVariableName = $name;
      _this._async_environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_variables[index], $name);
      return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;
    },
    getVariable$1: function($name) {
      return this.getVariable$2$namespace($name, null);
    },
    _async_environment0$_getVariableFromGlobalModule$1: function($name) {
      return this._async_environment0$_fromOneModule$3($name, "variable", new Q.AsyncEnvironment__getVariableFromGlobalModule_closure0($name));
    },
    getVariableNode$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._async_environment0$_getModule$1(namespace).get$variableNodes().$index(0, $name);
      if (_this._async_environment0$_lastVariableName === $name) {
        t1 = J.$index$asx(_this._async_environment0$_variableNodes[_this._async_environment0$_lastVariableIndex], $name);
        return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      t1 = _this._async_environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._async_environment0$_lastVariableName = $name;
        _this._async_environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._async_environment0$_variableNodes[index], $name);
        return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_variableIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getVariableNodeFromGlobalModule$1($name);
      _this._async_environment0$_lastVariableName = $name;
      _this._async_environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_variableNodes[index], $name);
      return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
    },
    _async_environment0$_getVariableNodeFromGlobalModule$1: function($name) {
      var t1, value;
      for (t1 = this._async_environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {
        value = t1._collection$_current.get$variableNodes().$index(0, $name);
        if (value != null)
          return value;
      }
      return null;
    },
    globalVariableExists$2$namespace: function($name, namespace) {
      if (namespace != null)
        return this._async_environment0$_getModule$1(namespace).get$variables().containsKey$1($name);
      if (C.JSArray_methods.get$first(this._async_environment0$_variables).containsKey$1($name))
        return true;
      return this._async_environment0$_getVariableFromGlobalModule$1($name) != null;
    },
    globalVariableExists$1: function($name) {
      return this.globalVariableExists$2$namespace($name, null);
    },
    _async_environment0$_variableIndex$1: function($name) {
      var t1, i;
      for (t1 = this._async_environment0$_variables, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    setVariable$5$global$namespace: function($name, value, nodeWithSpan, global, namespace) {
      var t1, moduleWithName, cur, t2, index, _this = this;
      if (namespace != null) {
        _this._async_environment0$_getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);
        return;
      }
      if (global || _this._async_environment0$_variables.length === 1) {
        _this._async_environment0$_variableIndices.putIfAbsent$2($name, new Q.AsyncEnvironment_setVariable_closure2(_this, $name));
        t1 = _this._async_environment0$_variables;
        if (!C.JSArray_methods.get$first(t1).containsKey$1($name)) {
          moduleWithName = _this._async_environment0$_fromOneModule$3($name, "variable", new Q.AsyncEnvironment_setVariable_closure3($name));
          if (moduleWithName != null) {
            moduleWithName.setVariable$3($name, value, nodeWithSpan);
            return;
          }
        }
        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, value);
        t1 = _this._async_environment0$_variableNodes;
        if (t1 != null)
          J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);
        return;
      }
      if (_this._async_environment0$_nestedForwardedModules != null && !_this._async_environment0$_variableIndices.containsKey$1($name) && _this._async_environment0$_variableIndex$1($name) == null) {
        t1 = _this._async_environment0$_nestedForwardedModules;
        t1.toString;
        t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
        t1 = new H.ListIterator(t1, t1.get$length(t1));
        for (; t1.moveNext$0();) {
          cur = t1.__internal$_current;
          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
            cur = t2.__internal$_current;
            if (cur.get$variables().containsKey$1($name)) {
              cur.setVariable$3($name, value, nodeWithSpan);
              return;
            }
          }
        }
      }
      index = _this._async_environment0$_lastVariableName === $name ? _this._async_environment0$_lastVariableIndex : _this._async_environment0$_variableIndices.putIfAbsent$2($name, new Q.AsyncEnvironment_setVariable_closure4(_this, $name));
      if (!_this._async_environment0$_inSemiGlobalScope && index === 0) {
        index = _this._async_environment0$_variables.length - 1;
        _this._async_environment0$_variableIndices.$indexSet(0, $name, index);
      }
      _this._async_environment0$_lastVariableName = $name;
      _this._async_environment0$_lastVariableIndex = index;
      J.$indexSet$ax(_this._async_environment0$_variables[index], $name, value);
      t1 = _this._async_environment0$_variableNodes;
      if (t1 != null)
        J.$indexSet$ax(t1[index], $name, nodeWithSpan);
    },
    setVariable$4$global: function($name, value, nodeWithSpan, global) {
      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);
    },
    setLocalVariable$3: function($name, value, nodeWithSpan) {
      var index, _this = this,
        t1 = _this._async_environment0$_variables,
        t2 = t1.length;
      _this._async_environment0$_lastVariableName = $name;
      index = _this._async_environment0$_lastVariableIndex = t2 - 1;
      _this._async_environment0$_variableIndices.$indexSet(0, $name, index);
      J.$indexSet$ax(t1[index], $name, value);
      t1 = _this._async_environment0$_variableNodes;
      if (t1 != null)
        J.$indexSet$ax(t1[index], $name, nodeWithSpan);
    },
    getFunction$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null) {
        t1 = _this._async_environment0$_getModule$1(namespace);
        return t1.get$functions(t1).$index(0, $name);
      }
      t1 = _this._async_environment0$_functionIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._async_environment0$_functions[index], $name);
        return t1 == null ? _this._async_environment0$_getFunctionFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_functionIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getFunctionFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_functions[index], $name);
      return t1 == null ? _this._async_environment0$_getFunctionFromGlobalModule$1($name) : t1;
    },
    _async_environment0$_getFunctionFromGlobalModule$1: function($name) {
      return this._async_environment0$_fromOneModule$3($name, "function", new Q.AsyncEnvironment__getFunctionFromGlobalModule_closure0($name));
    },
    _async_environment0$_functionIndex$1: function($name) {
      var t1, i;
      for (t1 = this._async_environment0$_functions, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    getMixin$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._async_environment0$_getModule$1(namespace).get$mixins().$index(0, $name);
      t1 = _this._async_environment0$_mixinIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._async_environment0$_mixins[index], $name);
        return t1 == null ? _this._async_environment0$_getMixinFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_mixinIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getMixinFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_mixins[index], $name);
      return t1 == null ? _this._async_environment0$_getMixinFromGlobalModule$1($name) : t1;
    },
    _async_environment0$_getMixinFromGlobalModule$1: function($name) {
      return this._async_environment0$_fromOneModule$3($name, "mixin", new Q.AsyncEnvironment__getMixinFromGlobalModule_closure0($name));
    },
    _async_environment0$_mixinIndex$1: function($name) {
      var t1, i;
      for (t1 = this._async_environment0$_mixins, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    withContent$2: function($content, callback) {
      return this.withContent$body$AsyncEnvironment0($content, callback);
    },
    withContent$body$AsyncEnvironment0: function($content, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, oldContent;
      var $async$withContent$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldContent = $async$self._async_environment0$_content;
              $async$self._async_environment0$_content = $content;
              $async$goto = 2;
              return P._asyncAwait(callback.call$0(), $async$withContent$2);
            case 2:
              // returning from await.
              $async$self._async_environment0$_content = oldContent;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$withContent$2, $async$completer);
    },
    asMixin$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, oldInMixin;
      var $async$asMixin$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldInMixin = $async$self._async_environment0$_inMixin;
              $async$self._async_environment0$_inMixin = true;
              $async$goto = 2;
              return P._asyncAwait(callback.call$0(), $async$asMixin$1);
            case 2:
              // returning from await.
              $async$self._async_environment0$_inMixin = oldInMixin;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$asMixin$1, $async$completer);
    },
    scope$1$3$semiGlobal$when: function(callback, semiGlobal, when, $T) {
      return this.scope$body$AsyncEnvironment0(callback, semiGlobal, when, $T, $T._eval$1("0*"));
    },
    scope$1$1: function(callback, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);
    },
    scope$1$2$when: function(callback, when, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);
    },
    scope$1$2$semiGlobal: function(callback, semiGlobal, $T) {
      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);
    },
    scope$body$AsyncEnvironment0: function(callback, semiGlobal, when, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, wasInSemiGlobalScope, wasInSemiGlobalScope0, $name, name0, name1, t1, t2, t3, t4, t5;
      var $async$scope$1$3$semiGlobal$when = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = !when ? 3 : 4;
              break;
            case 3:
              // then
              wasInSemiGlobalScope = $async$self._async_environment0$_inSemiGlobalScope;
              $async$self._async_environment0$_inSemiGlobalScope = semiGlobal;
              $async$handler = 5;
              $async$goto = 8;
              return P._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);
            case 8:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              $async$next = [1];
              // goto finally
              $async$goto = 6;
              break;
              $async$next.push(7);
              // goto finally
              $async$goto = 6;
              break;
            case 5:
              // uncaught
              $async$next = [2];
            case 6:
              // finally
              $async$handler = 2;
              $async$self._async_environment0$_inSemiGlobalScope = wasInSemiGlobalScope;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 7:
              // after finally
            case 4:
              // join
              semiGlobal = semiGlobal && $async$self._async_environment0$_inSemiGlobalScope;
              wasInSemiGlobalScope0 = $async$self._async_environment0$_inSemiGlobalScope;
              $async$self._async_environment0$_inSemiGlobalScope = semiGlobal;
              t1 = $async$self._async_environment0$_variables;
              t2 = type$.legacy_String;
              C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value_2));
              t3 = $async$self._async_environment0$_variableNodes;
              if (t3 != null)
                C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode_2));
              t3 = $async$self._async_environment0$_functions;
              t4 = type$.legacy_AsyncCallable_2;
              C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
              t5 = $async$self._async_environment0$_mixins;
              C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
              t4 = $async$self._async_environment0$_nestedForwardedModules;
              if (t4 != null)
                C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable_2));
              $async$handler = 9;
              $async$goto = 12;
              return P._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);
            case 12:
              // returning from await.
              t2 = $async$result;
              $async$returnValue = t2;
              $async$next = [1];
              // goto finally
              $async$goto = 10;
              break;
              $async$next.push(11);
              // goto finally
              $async$goto = 10;
              break;
            case 9:
              // uncaught
              $async$next = [2];
            case 10:
              // finally
              $async$handler = 2;
              $async$self._async_environment0$_inSemiGlobalScope = wasInSemiGlobalScope0;
              $async$self._async_environment0$_lastVariableIndex = $async$self._async_environment0$_lastVariableName = null;
              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = $async$self._async_environment0$_variableIndices; t1.moveNext$0();) {
                $name = t1.get$current(t1);
                t2.remove$1(0, $name);
              }
              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = $async$self._async_environment0$_functionIndices; t1.moveNext$0();) {
                name0 = t1.get$current(t1);
                t2.remove$1(0, name0);
              }
              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = $async$self._async_environment0$_mixinIndices; t1.moveNext$0();) {
                name1 = t1.get$current(t1);
                t2.remove$1(0, name1);
              }
              t1 = $async$self._async_environment0$_nestedForwardedModules;
              if (t1 != null)
                C.JSArray_methods.removeLast$0(t1);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 11:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$scope$1$3$semiGlobal$when, $async$completer);
    },
    toImplicitConfiguration$0: function() {
      var t2, t3, t4, t5, i, values, nodes, t6, t7,
        t1 = type$.legacy_String,
        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue_2);
      for (t2 = this._async_environment0$_variables, t3 = this._async_environment0$_variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode_2, i = 0; i < t2.length; ++i) {
        values = t2[i];
        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];
        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {
          t7 = t6.get$current(t6);
          configuration.$indexSet(0, t7, new Z.ConfiguredValue0(values.$index(0, t7), null, nodes.$index(0, t7)));
        }
      }
      return new A.Configuration0(configuration, null, true);
    },
    _async_environment0$_getModule$1: function(namespace) {
      var module = this._async_environment0$_modules.$index(0, namespace);
      if (module != null)
        return module;
      throw H.wrapException(E.SassScriptException$0('There is no module with the namespace "' + namespace + '".'));
    },
    _async_environment0$_fromOneModule$1$3: function($name, type, callback) {
      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,
        t1 = this._async_environment0$_nestedForwardedModules;
      if (t1 != null)
        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
          cur = t1.__internal$_current;
          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
            cur = t2.__internal$_current;
            value = callback.call$1(cur);
            if (value != null)
              return value;
          }
        }
      for (t1 = this._async_environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_AsyncCallable_2, value = null, identity = null; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        valueInModule = callback.call$1(t3);
        if (valueInModule == null)
          continue;
        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);
        if (identityFromModule.$eq(0, identity))
          continue;
        if (value != null) {
          t1 = "This " + type + string$.x20is_av;
          t2 = type + " use";
          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
          for (t4 = this._async_environment0$_globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
            t5 = t4.get$current(t4);
            if (callback.call$1(t5.key) != null)
              t3.$indexSet(0, t5.value.get$span(), "includes " + type);
          }
          throw H.wrapException(E.MultiSpanSassScriptException$0(t1, t2, t3));
        }
        identity = identityFromModule;
        value = valueInModule;
      }
      return value;
    },
    _async_environment0$_fromOneModule$3: function($name, type, callback) {
      return this._async_environment0$_fromOneModule$1$3($name, type, callback, type$.dynamic);
    }
  };
  Q.AsyncEnvironment_importForwards_closure3.prototype = {
    call$1: function(module) {
      var t1 = module.get$variables();
      return t1.get$keys(t1);
    },
    $signature: 112
  };
  Q.AsyncEnvironment_importForwards_closure4.prototype = {
    call$1: function(module) {
      var t1 = module.get$functions(module);
      return t1.get$keys(t1);
    },
    $signature: 112
  };
  Q.AsyncEnvironment_importForwards_closure5.prototype = {
    call$1: function(module) {
      var t1 = module.get$mixins();
      return t1.get$keys(t1);
    },
    $signature: 112
  };
  Q.AsyncEnvironment_importForwards_closure6.prototype = {
    call$1: function(_) {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable_2);
    },
    $signature: 272
  };
  Q.AsyncEnvironment__getVariableFromGlobalModule_closure0.prototype = {
    call$1: function(module) {
      return module.get$variables().$index(0, this.name);
    },
    $signature: 273
  };
  Q.AsyncEnvironment_setVariable_closure2.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._async_environment0$_lastVariableName = this.name;
      return t1._async_environment0$_lastVariableIndex = 0;
    },
    $signature: 11
  };
  Q.AsyncEnvironment_setVariable_closure3.prototype = {
    call$1: function(module) {
      return module.get$variables().containsKey$1(this.name) ? module : null;
    },
    $signature: 168
  };
  Q.AsyncEnvironment_setVariable_closure4.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._async_environment0$_variableIndex$1(this.name);
      return t2 == null ? t1._async_environment0$_variables.length - 1 : t2;
    },
    $signature: 11
  };
  Q.AsyncEnvironment__getFunctionFromGlobalModule_closure0.prototype = {
    call$1: function(module) {
      return module.get$functions(module).$index(0, this.name);
    },
    $signature: 166
  };
  Q.AsyncEnvironment__getMixinFromGlobalModule_closure0.prototype = {
    call$1: function(module) {
      return module.get$mixins().$index(0, this.name);
    },
    $signature: 166
  };
  Q._EnvironmentModule2.prototype = {
    get$url: function() {
      return this.css.get$span().file.url;
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      var t1, t2,
        module = this._async_environment0$_modulesByVariable.$index(0, $name);
      if (module != null) {
        module.setVariable$3($name, value, nodeWithSpan);
        return;
      }
      t1 = this._async_environment0$_environment;
      t2 = t1._async_environment0$_variables;
      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))
        throw H.wrapException(E.SassScriptException$0("Undefined variable."));
      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);
      t1 = t1._async_environment0$_variableNodes;
      if (t1 != null)
        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);
      return;
    },
    variableIdentity$1: function($name) {
      var module = this._async_environment0$_modulesByVariable.$index(0, $name);
      return module == null ? this : module.variableIdentity$1($name);
    },
    cloneCss$0: function() {
      var newCssAndExtender, _this = this,
        t1 = _this.css;
      if (J.get$isEmpty$asx(t1.get$children(t1)))
        return _this;
      newCssAndExtender = V.cloneCssStylesheet0(t1, _this.extender);
      return Q._EnvironmentModule$_2(_this._async_environment0$_environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._async_environment0$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);
    },
    toString$0: function(_) {
      var t1 = this.css;
      if (t1.get$span().file.url == null)
        t1 = "<unknown url>";
      else {
        t1 = t1.get$span();
        t1 = $.$get$context().prettyUri$1(t1.file.url);
      }
      return t1;
    },
    $isModule0: 1,
    get$upstream: function() {
      return this.upstream;
    },
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    },
    get$extender: function() {
      return this.extender;
    },
    get$css: function(receiver) {
      return this.css;
    },
    get$transitivelyContainsCss: function() {
      return this.transitivelyContainsCss;
    },
    get$transitivelyContainsExtensions: function() {
      return this.transitivelyContainsExtensions;
    }
  };
  Q._EnvironmentModule__EnvironmentModule_closure17.prototype = {
    call$1: function(module) {
      return module.get$variables();
    },
    $signature: 276
  };
  Q._EnvironmentModule__EnvironmentModule_closure18.prototype = {
    call$1: function(module) {
      return module.get$variableNodes();
    },
    $signature: 277
  };
  Q._EnvironmentModule__EnvironmentModule_closure19.prototype = {
    call$1: function(module) {
      return module.get$functions(module);
    },
    $signature: 215
  };
  Q._EnvironmentModule__EnvironmentModule_closure20.prototype = {
    call$1: function(module) {
      return module.get$mixins();
    },
    $signature: 215
  };
  Q._EnvironmentModule__EnvironmentModule_closure21.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 111
  };
  Q._EnvironmentModule__EnvironmentModule_closure22.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsExtensions();
    },
    $signature: 111
  };
  E._EvaluateVisitor2.prototype = {
    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap2: function(functions, importCache, logger, nodeImporter, sourceMap) {
      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        metaFunctions = [Q.BuiltInCallable$function0("global-variable-exists", _s20_, new E._EvaluateVisitor_closure29(_this), _s9_), Q.BuiltInCallable$function0("variable-exists", "$name", new E._EvaluateVisitor_closure30(_this), _s9_), Q.BuiltInCallable$function0("function-exists", _s20_, new E._EvaluateVisitor_closure31(_this), _s9_), Q.BuiltInCallable$function0("mixin-exists", _s20_, new E._EvaluateVisitor_closure32(_this), _s9_), Q.BuiltInCallable$function0("content-exists", "", new E._EvaluateVisitor_closure33(_this), _s9_), Q.BuiltInCallable$function0("module-variables", "$module", new E._EvaluateVisitor_closure34(_this), _s9_), Q.BuiltInCallable$function0("module-functions", "$module", new E._EvaluateVisitor_closure35(_this), _s9_), Q.BuiltInCallable$function0("get-function", "$name, $css: false, $module: null", new E._EvaluateVisitor_closure36(_this), _s9_), new S.AsyncBuiltInCallable0("call", L.ScssParser$0("@function call($function, $args...) {", null, _s9_).parseArgumentDeclaration$0(), new E._EvaluateVisitor_closure37(_this))],
        t1 = type$.JSArray_legacy_AsyncBuiltInCallable_2,
        metaMixins = H.setRuntimeTypeInfo([S.AsyncBuiltInCallable$mixin0("load-css", "$url, $with: null", new E._EvaluateVisitor_closure38(_this), _s9_)], t1);
      t1 = H.setRuntimeTypeInfo([], t1);
      for (t2 = $.$get$global6(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      metaModule = Q.BuiltInModule$0("meta", t1, metaMixins, null, type$.legacy_AsyncBuiltInCallable_2);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_AsyncBuiltInCallable_2);
      for (t2 = $.$get$coreModules0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      t1.push(metaModule);
      t2 = t1.length;
      t3 = _this._async_evaluate0$_builtInModules;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AsyncCallable);
      for (t2 = functions.length, _i = 0; _i < functions.length; functions.length === t2 || (0, H.throwConcurrentModificationError)(functions), ++_i)
        t1.push(functions[_i]);
      for (t2 = $.$get$globalFunctions0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      for (t2 = t1.length, t3 = _this._async_evaluate0$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = $function.get$name($function);
        t4.toString;
        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2: function(_, importer, node) {
      return this.run$body$_EvaluateVisitor0(_, importer, node);
    },
    run$body$_EvaluateVisitor0: function(_, importer, node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult_2),
        $async$returnValue, $async$self = this;
      var $async$run$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self._async_evaluate0$_withWarnCallback$1$1(new E._EvaluateVisitor_run_closure2($async$self, node, importer), type$.legacy_FutureOr_legacy_EvaluateResult_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$run$2, $async$completer);
    },
    _async_evaluate0$_withWarnCallback$1$1: function(callback, $T) {
      return N.withWarnCallback0(new E._EvaluateVisitor__withWarnCallback_closure2(this), callback, $T._eval$1("0*"));
    },
    _async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      return this._loadModule$body$_EvaluateVisitor0(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors);
    },
    _async_evaluate0$_loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _async_evaluate0$_loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {
      return this._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _loadModule$body$_EvaluateVisitor0: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, builtInModule;
      var $async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              builtInModule = $async$self._async_evaluate0$_builtInModules.$index(0, url);
              if (builtInModule != null) {
                if (configuration != null && !configuration.isImplicit) {
                  t1 = namesInErrors ? "Built-in module " + H.S(url) + " can't be configured." : "Built-in modules can't be configured.";
                  throw H.wrapException($async$self._async_evaluate0$_exception$2(t1, nodeWithSpan.get$span()));
                }
                $async$self._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__loadModule_closure5(callback, builtInModule));
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_withStackFrame$1$3(stackFrame, nodeWithSpan, new E._EvaluateVisitor__loadModule_closure6($async$self, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback), type$.Null), $async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors);
            case 3:
              // returning from await.
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors, $async$completer);
    },
    _async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      return this._execute$body$_EvaluateVisitor0(importer, stylesheet, configuration, namesInErrors, nodeWithSpan);
    },
    _async_evaluate0$_execute$2: function(importer, stylesheet) {
      return this._async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _execute$body$_EvaluateVisitor0: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Module_legacy_AsyncCallable_2),
        $async$returnValue, $async$self = this, message, existingNode, environment, extender, module, t1, url, t2, alreadyLoaded;
      var $async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              url = stylesheet.span.file.url;
              t2 = $async$self._async_evaluate0$_modules;
              alreadyLoaded = t2.$index(0, url);
              if (alreadyLoaded != null) {
                t1 = configuration == null;
                if (!(t1 ? $async$self._async_evaluate0$_configuration : configuration).isImplicit) {
                  message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;
                  existingNode = $async$self._async_evaluate0$_moduleNodes.$index(0, url);
                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
                  if (existingNode != null)
                    t2.$indexSet(0, existingNode.get$span(), "original load");
                  if (t1)
                    t2.$indexSet(0, $async$self._async_evaluate0$_configuration.nodeWithSpan.get$span(), "configuration");
                  throw H.wrapException(t2.get$isEmpty(t2) ? $async$self._async_evaluate0$_exception$1(message) : $async$self._async_evaluate0$_multiSpanException$3(message, "new load", t2));
                }
                $async$returnValue = alreadyLoaded;
                // goto return
                $async$goto = 1;
                break;
              }
              environment = Q.AsyncEnvironment$0($async$self._async_evaluate0$_sourceMap);
              t1.css = null;
              extender = F.Extender$0();
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_withEnvironment$1$2(environment, new E._EvaluateVisitor__execute_closure2(t1, $async$self, importer, stylesheet, extender, configuration), type$.Null), $async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan);
            case 3:
              // returning from await.
              module = Q._EnvironmentModule__EnvironmentModule2(environment, t1.css, extender, environment._async_environment0$_forwardedModules);
              t2.$indexSet(0, url, module);
              $async$self._async_evaluate0$_moduleNodes.$indexSet(0, url, nodeWithSpan);
              $async$returnValue = module;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan, $async$completer);
    },
    _async_evaluate0$_addOutOfOrderImports$0: function() {
      var t1, statements, _this = this;
      if (_this._async_evaluate0$_outOfOrderImports == null)
        return _this._async_evaluate0$_root.children;
      t1 = new Array(J.get$length$asx(_this._async_evaluate0$_root.children._collection$_source) + _this._async_evaluate0$_outOfOrderImports.length);
      t1.fixed$length = Array;
      statements = new G.FixedLengthListBuilder0(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode_2), type$.FixedLengthListBuilder_legacy_ModifiableCssNode_2);
      statements.addRange$3(_this._async_evaluate0$_root.children, 0, _this._async_evaluate0$_endOfImports);
      statements.addAll$1(0, _this._async_evaluate0$_outOfOrderImports);
      statements.addRange$2(_this._async_evaluate0$_root.children, _this._async_evaluate0$_endOfImports);
      return statements.build$0();
    },
    _async_evaluate0$_combineCss$2$clone: function(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;
      if (!C.JSArray_methods.any$1(root.get$upstream(), new E._EvaluateVisitor__combineCss_closure8())) {
        selectors = root.get$extender().get$simpleSelectors();
        unsatisfiedExtension = B.firstOrNull0(root.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__combineCss_closure9(selectors)));
        if (unsatisfiedExtension != null)
          _this._async_evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._async_evaluate0$_topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module0<AsyncCallable0*>*>");
        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new E._EvaluateVisitor__combineCss_closure10(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._async_evaluate0$_extendModules$1(sortedModules);
      t1 = type$.JSArray_legacy_CssNode_2;
      imports = H.setRuntimeTypeInfo([], t1);
      css = H.setRuntimeTypeInfo([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        t2 = cur.get$css(cur);
        statements = t2.get$children(t2);
        index = _this._async_evaluate0$_indexAfterImports$1(statements);
        t2 = J.getInterceptor$ax(statements);
        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));
        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));
      }
      return new V.CssStylesheet0(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode_2), root.get$css(root).get$span());
    },
    _async_evaluate0$_combineCss$1: function(root) {
      return this._async_evaluate0$_combineCss$2$clone(root, false);
    },
    _async_evaluate0$_extendModules$1: function(sortedModules) {
      var t1, t2, originalSelectors, extenders, t3, t4, _i,
        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender_2),
        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension_2);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__extendModules_closure5(originalSelectors)));
        extenders = downstreamExtenders.$index(0, t2.get$url());
        if (extenders != null)
          t2.get$extender().addExtensions$1(extenders);
        t3 = t2.get$extender();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new E._EvaluateVisitor__extendModules_closure6()), t2.get$extender());
        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._async_evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _async_evaluate0$_throwForUnsatisfiedExtension$1: function(extension) {
      throw H.wrapException(E.SassException$0(string$.The_ta + H.S(extension.target) + ' !optional" to avoid this error.', extension.span));
    },
    _async_evaluate0$_topologicalModules$1: function(root) {
      var t1 = type$.legacy_Module_legacy_AsyncCallable_2,
        sorted = Q.QueueList$(null, t1);
      new E._EvaluateVisitor__topologicalModules_visitModule2(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _async_evaluate0$_indexAfterImports$1: function(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment_2, t3 = type$.legacy_CssImport_2, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1: function(node) {
      return this.visitStylesheet$body$_EvaluateVisitor0(node);
    },
    visitStylesheet$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$visitStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.children, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].accept$1($async$self), $async$visitStylesheet$1);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitStylesheet$1, $async$completer);
    },
    visitAtRootRule$1: function(node) {
      return this.visitAtRootRule$body$_EvaluateVisitor0(node);
    },
    visitAtRootRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, root, innerCopy, outerCopy, cur, copy, t1, query, $parent, included, $async$temp1, $async$temp2;
      var $async$visitAtRootRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.query;
              $async$goto = t1 != null ? 3 : 5;
              break;
            case 3:
              // then
              $async$temp1 = t1;
              $async$temp2 = E;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$2$warnForColor(t1, true), $async$visitAtRootRule$1);
            case 6:
              // returning from await.
              $async$result = $async$self._async_evaluate0$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor_visitAtRootRule_closure8($async$self, $async$result));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$result = C.AtRootQuery_UsS0;
            case 4:
              // join
              query = $async$result;
              $parent = $async$self._async_evaluate0$_parent;
              included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode_2);
              for (t1 = type$.legacy_CssStylesheet_2; !t1._is($parent);) {
                if (!query.excludes$1($parent))
                  included.push($parent);
                $parent = $parent._node2$_parent;
              }
              root = $async$self._async_evaluate0$_trimIncluded$1(included);
              $async$goto = root == $async$self._async_evaluate0$_parent ? 7 : 8;
              break;
            case 7:
              // then
              $async$goto = 9;
              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(new E._EvaluateVisitor_visitAtRootRule_closure9($async$self, node), node.hasDeclarations, type$.Null), $async$visitAtRootRule$1);
            case 9:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              innerCopy = included.length === 0 ? null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();
              for (t1 = H.SubListIterable$(included, 1, null, type$.legacy_ModifiableCssParentNode_2), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
                cur = t1.__internal$_current;
                copy = cur.copyWithoutChildren$0();
                copy.addChild$1(outerCopy);
              }
              if (outerCopy != null)
                root.addChild$1(outerCopy);
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate0$_scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new E._EvaluateVisitor_visitAtRootRule_closure10($async$self, node)), $async$visitAtRootRule$1);
            case 10:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitAtRootRule$1, $async$completer);
    },
    _async_evaluate0$_trimIncluded$1: function(nodes) {
      var $parent, innermostContiguous, i, t2, root,
        t1 = nodes.length;
      if (t1 === 0)
        return this._async_evaluate0$_root;
      $parent = this._async_evaluate0$_parent;
      for (innermostContiguous = null, i = 0; i < t1; ++i) {
        for (; $parent != nodes[i]; innermostContiguous = null)
          $parent = $parent._node2$_parent;
        if (innermostContiguous == null)
          innermostContiguous = i;
        $parent = $parent._node2$_parent;
      }
      t2 = this._async_evaluate0$_root;
      if ($parent != t2)
        return t2;
      root = nodes[innermostContiguous];
      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);
      return root;
    },
    _async_evaluate0$_scopeForAtRoot$4: function(node, newParent, query, included) {
      var _this = this,
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure17(_this, newParent, node),
        t1 = query._at_root_query0$_all || query._at_root_query0$_rule;
      if (t1 !== query.include)
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure18(_this, scope);
      if (_this._async_evaluate0$_mediaQueries != null && query.excludesName$1("media"))
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure19(_this, scope);
      if (_this._async_evaluate0$_inKeyframes && query.excludesName$1("keyframes"))
        scope = new E._EvaluateVisitor__scopeForAtRoot_closure20(_this, scope);
      return _this._async_evaluate0$_inUnknownAtRule && !C.JSArray_methods.any$1(included, new E._EvaluateVisitor__scopeForAtRoot_closure21()) ? new E._EvaluateVisitor__scopeForAtRoot_closure22(_this, scope) : scope;
    },
    visitContentBlock$1: function(node) {
      return H.throwExpression(P.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1: function(node) {
      return this.visitContentRule$body$_EvaluateVisitor0(node);
    },
    visitContentRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, $content;
      var $async$visitContentRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $content = $async$self._async_evaluate0$_environment._async_environment0$_content;
              if ($content == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_runUserDefinedCallable$4(node.$arguments, $content, node, new E._EvaluateVisitor_visitContentRule_closure2($async$self, $content)), $async$visitContentRule$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitContentRule$1, $async$completer);
    },
    visitDebugRule$1: function(node) {
      return this.visitDebugRule$body$_EvaluateVisitor0(node);
    },
    visitDebugRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, value, t1;
      var $async$visitDebugRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitDebugRule$1);
            case 3:
              // returning from await.
              value = $async$result;
              t1 = value instanceof D.SassString0 ? value.text : J.toString$0$(value);
              $async$self._async_evaluate0$_logger.debug$2(0, t1, node.span);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitDebugRule$1, $async$completer);
    },
    visitDeclaration$1: function(node) {
      return this.visitDeclaration$body$_EvaluateVisitor0(node);
    },
    visitDeclaration$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, $name, t2, cssValue, t3, oldDeclarationName, $async$temp1;
      var $async$visitDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!($async$self._async_evaluate0$_styleRule != null && !$async$self._async_evaluate0$_atRootExcludingStyleRule) && !$async$self._async_evaluate0$_inUnknownAtRule && !$async$self._async_evaluate0$_inKeyframes)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Declarm, node.span));
              t1 = node.name;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$2$warnForColor(t1, true), $async$visitDeclaration$1);
            case 3:
              // returning from await.
              $name = $async$result;
              t2 = $async$self._async_evaluate0$_declarationName;
              if (t2 != null)
                $name = new F.CssValue0(t2 + "-" + H.S($name.get$value($name)), $name.get$span(), type$.CssValue_legacy_String_2);
              t2 = node.value;
              $async$goto = t2 == null ? 4 : 6;
              break;
            case 4:
              // then
              $async$result = null;
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$temp1 = F;
              $async$goto = 7;
              return P._asyncAwait(t2.accept$1($async$self), $async$visitDeclaration$1);
            case 7:
              // returning from await.
              $async$result = new $async$temp1.CssValue0($async$result, t2.get$span(), type$.CssValue_legacy_Value_2);
            case 5:
              // join
              cssValue = $async$result;
              if (cssValue != null) {
                t3 = cssValue.value;
                t3 = !t3.get$isBlank() || t3.get$asList().length === 0;
              } else
                t3 = false;
              if (t3) {
                t3 = $async$self._async_evaluate0$_parent;
                t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
                t2 = $async$self._async_evaluate0$_expressionNode$1(t2);
                t2 = t2 == null ? null : t2.get$span();
                t3.addChild$1(L.ModifiableCssDeclaration$0($name, cssValue, node.span, t1, t2));
              } else if (J.startsWith$1$s($name.get$value($name), "--") && node.children == null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2("Custom property values may not be empty.", t2.get$span()));
              $async$goto = node.children != null ? 8 : 9;
              break;
            case 8:
              // then
              oldDeclarationName = $async$self._async_evaluate0$_declarationName;
              $async$self._async_evaluate0$_declarationName = $name.get$value($name);
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(new E._EvaluateVisitor_visitDeclaration_closure2($async$self, node), node.hasDeclarations, type$.Null), $async$visitDeclaration$1);
            case 10:
              // returning from await.
              $async$self._async_evaluate0$_declarationName = oldDeclarationName;
            case 9:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitDeclaration$1, $async$completer);
    },
    visitEachRule$1: function(node) {
      return this.visitEachRule$body$_EvaluateVisitor0(node);
    },
    visitEachRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, list, nodeWithSpan, setVariables;
      var $async$visitEachRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.list;
              $async$goto = 3;
              return P._asyncAwait(t1.accept$1($async$self), $async$visitEachRule$1);
            case 3:
              // returning from await.
              list = $async$result;
              nodeWithSpan = $async$self._async_evaluate0$_expressionNode$1(t1);
              setVariables = node.variables.length === 1 ? new E._EvaluateVisitor_visitEachRule_closure8($async$self, node, nodeWithSpan) : new E._EvaluateVisitor_visitEachRule_closure9($async$self, node, nodeWithSpan);
              $async$returnValue = $async$self._async_evaluate0$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitEachRule_closure10($async$self, list, setVariables, node), true, type$.legacy_Value_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitEachRule$1, $async$completer);
    },
    _async_evaluate0$_setMultipleVariables$3: function(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._async_evaluate0$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._async_evaluate0$_environment.setLocalVariable$3(variables[i], C.C_SassNull, nodeWithSpan);
    },
    visitErrorRule$1: function(node) {
      return this.visitErrorRule$body$_EvaluateVisitor0(node);
    },
    visitErrorRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$self = this, $async$temp1, $async$temp2;
      var $async$visitErrorRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = H;
              $async$temp2 = J;
              $async$goto = 2;
              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitErrorRule$1);
            case 2:
              // returning from await.
              throw $async$temp1.wrapException($async$self._async_evaluate0$_exception$2($async$temp2.toString$0$($async$result), node.span));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitErrorRule$1, $async$completer);
    },
    visitExtendRule$1: function(node) {
      return this.visitExtendRule$body$_EvaluateVisitor0(node);
    },
    visitExtendRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, targetText, t1, t2, t3, _i, t4;
      var $async$visitExtendRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!($async$self._async_evaluate0$_styleRule != null && !$async$self._async_evaluate0$_atRootExcludingStyleRule) || $async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.x40exten, node.span));
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$2$warnForColor(node.selector, true), $async$visitExtendRule$1);
            case 3:
              // returning from await.
              targetText = $async$result;
              for (t1 = $async$self._async_evaluate0$_adjustParseError$2(targetText, new E._EvaluateVisitor_visitExtendRule_closure2($async$self, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector_2, _i = 0; _i < t2; ++_i) {
                t4 = t1[_i].components;
                if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector0))
                  throw H.wrapException(E.SassFormatException$0("complex selectors may not be extended.", targetText.get$span()));
                t4 = t3._as(C.JSArray_methods.get$first(t4)).components;
                if (t4.length !== 1)
                  throw H.wrapException(E.SassFormatException$0(string$.compou + C.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.get$span()));
                $async$self._async_evaluate0$_extender.addExtension$4($async$self._async_evaluate0$_styleRule.selector, C.JSArray_methods.get$first(t4), node, $async$self._async_evaluate0$_mediaQueries);
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitExtendRule$1, $async$completer);
    },
    visitAtRule$1: function(node) {
      return this.visitAtRule$body$_EvaluateVisitor0(node);
    },
    visitAtRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, $name, t1, value, wasInKeyframes, wasInUnknownAtRule;
      var $async$visitAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.At_rul, node.span));
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$1(node.name), $async$visitAtRule$1);
            case 3:
              // returning from await.
              $name = $async$result;
              t1 = node.value;
              $async$goto = t1 == null ? 4 : 6;
              break;
            case 4:
              // then
              $async$result = null;
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$3$trim$warnForColor(t1, true, true), $async$visitAtRule$1);
            case 7:
              // returning from await.
            case 5:
              // join
              value = $async$result;
              if (node.children == null) {
                $async$self._async_evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0($name, node.span, true, value));
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              wasInKeyframes = $async$self._async_evaluate0$_inKeyframes;
              wasInUnknownAtRule = $async$self._async_evaluate0$_inUnknownAtRule;
              if (B.unvendor0($name.get$value($name)) === "keyframes")
                $async$self._async_evaluate0$_inKeyframes = true;
              else
                $async$self._async_evaluate0$_inUnknownAtRule = true;
              $async$goto = 8;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0($name, node.span, false, value), new E._EvaluateVisitor_visitAtRule_closure5($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitAtRule_closure6(), type$.legacy_ModifiableCssAtRule_2, type$.Null), $async$visitAtRule$1);
            case 8:
              // returning from await.
              $async$self._async_evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
              $async$self._async_evaluate0$_inKeyframes = wasInKeyframes;
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitAtRule$1, $async$completer);
    },
    visitForRule$1: function(node) {
      return this.visitForRule$body$_EvaluateVisitor0(node);
    },
    visitForRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, fromNumber, t4, toNumber, from, to, direction;
      var $async$visitForRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = node.from;
              t3 = type$.legacy_SassNumber_2;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(t2, new E._EvaluateVisitor_visitForRule_closure14($async$self, node), t3), $async$visitForRule$1);
            case 3:
              // returning from await.
              fromNumber = $async$result;
              t4 = node.to;
              $async$goto = 4;
              return P._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(t4, new E._EvaluateVisitor_visitForRule_closure15($async$self, node), t3), $async$visitForRule$1);
            case 4:
              // returning from await.
              toNumber = $async$result;
              from = $async$self._async_evaluate0$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitForRule_closure16(fromNumber));
              to = t1.to = $async$self._async_evaluate0$_addExceptionSpan$2(t4, new E._EvaluateVisitor_visitForRule_closure17(toNumber, fromNumber));
              direction = from > to ? -1 : 1;
              if (from === (!node.isExclusive ? t1.to = to + direction : to)) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self._async_evaluate0$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitForRule_closure18(t1, $async$self, node, from, direction, fromNumber), true, type$.legacy_Value_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitForRule$1, $async$completer);
    },
    visitForwardRule$1: function(node) {
      return this.visitForwardRule$body$_EvaluateVisitor0(node);
    },
    visitForwardRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, newConfiguration, t4, _i, variable, oldConfiguration, adjustedConfiguration, t1, t2, t3;
      var $async$visitForwardRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldConfiguration = $async$self._async_evaluate0$_configuration;
              adjustedConfiguration = oldConfiguration.throughForward$1(node);
              t1 = node.configuration;
              t2 = t1.length;
              t3 = node.url;
              $async$goto = t2 !== 0 ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_addForwardConfiguration$2(adjustedConfiguration, node), $async$visitForwardRule$1);
            case 6:
              // returning from await.
              newConfiguration = $async$result;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate0$_loadModule$5$configuration(t3, "@forward", node, new E._EvaluateVisitor_visitForwardRule_closure5($async$self, node), newConfiguration), $async$visitForwardRule$1);
            case 7:
              // returning from await.
              t3 = type$.legacy_String;
              t4 = P.LinkedHashSet_LinkedHashSet(t3);
              for (_i = 0; _i < t2; ++_i) {
                variable = t1[_i];
                if (!variable.isGuarded)
                  t4.add$1(0, variable.name);
              }
              $async$self._async_evaluate0$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
              t3 = P.LinkedHashSet_LinkedHashSet(t3);
              for (_i = 0; _i < t2; ++_i)
                t3.add$1(0, t1[_i].name);
              $async$self._async_evaluate0$_assertConfigurationIsEmpty$2$only(newConfiguration, t3);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$self._async_evaluate0$_configuration = adjustedConfiguration;
              $async$goto = 8;
              return P._asyncAwait($async$self._async_evaluate0$_loadModule$4(t3, "@forward", node, new E._EvaluateVisitor_visitForwardRule_closure6($async$self, node)), $async$visitForwardRule$1);
            case 8:
              // returning from await.
              $async$self._async_evaluate0$_configuration = oldConfiguration;
            case 4:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitForwardRule$1, $async$completer);
    },
    _async_evaluate0$_addForwardConfiguration$2: function(configuration, node) {
      return this._addForwardConfiguration$body$_EvaluateVisitor0(configuration, node);
    },
    _addForwardConfiguration$body$_EvaluateVisitor0: function(configuration, node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Configuration_2),
        $async$returnValue, $async$self = this, t2, t3, _i, variable, t4, t5, t1, newValues, $async$temp1, $async$temp2, $async$temp3;
      var $async$_async_evaluate0$_addForwardConfiguration$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = configuration._configuration$_values;
              newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue_2), type$.legacy_String, type$.legacy_ConfiguredValue_2);
              t2 = node.configuration, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              variable = t2[_i];
              if (variable.isGuarded) {
                t4 = variable.name;
                t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
                if (t5 != null && !J.$eq$(t5.value, C.C_SassNull)) {
                  newValues.$indexSet(0, t4, t5);
                  // goto for update
                  $async$goto = 4;
                  break;
                }
              }
              t4 = variable.name;
              t5 = variable.expression;
              $async$temp1 = newValues;
              $async$temp2 = t4;
              $async$temp3 = Z;
              $async$goto = 6;
              return P._asyncAwait(t5.accept$1($async$self), $async$_async_evaluate0$_addForwardConfiguration$2);
            case 6:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue0($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate0$_expressionNode$1(t5)));
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = new A.Configuration0(newValues, node, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_addForwardConfiguration$2, $async$completer);
    },
    _async_evaluate0$_removeUsedConfiguration$3$except: function(upstream, downstream, except) {
      var t1, t2, t3, _i, $name;
      for (t1 = upstream._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!downstream._configuration$_values.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {
      configuration._configuration$_values.forEach$1(0, new E._EvaluateVisitor__assertConfigurationIsEmpty_closure2(this, only, nameInError));
    },
    _async_evaluate0$_assertConfigurationIsEmpty$1: function(configuration) {
      return this._async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);
    },
    _async_evaluate0$_assertConfigurationIsEmpty$2$only: function(configuration, only) {
      return this._async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);
    },
    _async_evaluate0$_assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {
      return this._async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);
    },
    visitFunctionRule$1: function(node) {
      return this.visitFunctionRule$body$_EvaluateVisitor0(node);
    },
    visitFunctionRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;
      var $async$visitFunctionRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate0$_environment;
              t2 = t1.closure$0();
              t3 = t1._async_environment0$_functions;
              index = t3.length - 1;
              t4 = node.name;
              t1._async_environment0$_functionIndices.$indexSet(0, t4, index);
              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment_2));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitFunctionRule$1, $async$completer);
    },
    visitIfRule$1: function(node) {
      return this.visitIfRule$body$_EvaluateVisitor0(node);
    },
    visitIfRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, _i, clauseToCheck, _box_0;
      var $async$visitIfRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              _box_0.clause = node.lastClause;
              t1 = node.clauses, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              clauseToCheck = t1[_i];
              $async$goto = 6;
              return P._asyncAwait(clauseToCheck.expression.accept$1($async$self), $async$visitIfRule$1);
            case 6:
              // returning from await.
              if ($async$result.get$isTruthy()) {
                _box_0.clause = clauseToCheck;
                // goto after for
                $async$goto = 5;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t1 = _box_0.clause;
              if (t1 == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitIfRule_closure2(_box_0, $async$self), true, t1.hasDeclarations, type$.legacy_Value_2), $async$visitIfRule$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitIfRule$1, $async$completer);
    },
    visitImportRule$1: function(node) {
      return this.visitImportRule$body$_EvaluateVisitor0(node);
    },
    visitImportRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, _i, $import;
      var $async$visitImportRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.imports, t2 = t1.length, t3 = type$.legacy_StaticImport_2, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $import = t1[_i];
              $async$goto = $import instanceof B.DynamicImport0 ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return P._asyncAwait($async$self._async_evaluate0$_visitDynamicImport$1($import), $async$visitImportRule$1);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate0$_visitStaticImport$1(t3._as($import)), $async$visitImportRule$1);
            case 10:
              // returning from await.
            case 7:
              // join
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitImportRule$1, $async$completer);
    },
    _async_evaluate0$_visitDynamicImport$1: function($import) {
      return this._async_evaluate0$_withStackFrame$1$3("@import", $import, new E._EvaluateVisitor__visitDynamicImport_closure2(this, $import), type$.void);
    },
    _async_evaluate0$_loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {
      return this._loadStylesheet$body$_EvaluateVisitor0(url, span, baseUrl, forImport);
    },
    _async_evaluate0$_loadStylesheet$3$baseUrl: function(url, span, baseUrl) {
      return this._async_evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _async_evaluate0$_loadStylesheet$3$forImport: function(url, span, forImport) {
      return this._async_evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    _loadStylesheet$body$_EvaluateVisitor0: function(url, span, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, stylesheet, tuple, error, error0, message, t1, t2, t3, exception, message0, $async$exception;
      var $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$self._async_evaluate0$_importSpan = span;
              $async$goto = $async$self._async_evaluate0$_nodeImporter != null ? 7 : 9;
              break;
            case 7:
              // then
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate0$_importLikeNode$2(url, forImport), $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport);
            case 10:
              // returning from await.
              stylesheet = $async$result;
              if (stylesheet != null) {
                $async$returnValue = new S.Tuple2(null, stylesheet, type$.Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2);
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
              }
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              t1 = P.Uri_parse(url);
              t2 = $async$self._async_evaluate0$_importer;
              if (baseUrl == null) {
                t3 = $async$self._async_evaluate0$_stylesheet;
                t3 = t3 == null ? null : t3.span;
                t3 = t3 == null ? null : t3.file.url;
              } else
                t3 = baseUrl;
              $async$goto = 11;
              return P._asyncAwait($async$self._async_evaluate0$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport), $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport);
            case 11:
              // returning from await.
              tuple = $async$result;
              if (tuple != null) {
                $async$returnValue = tuple;
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
              }
            case 8:
              // join
              if (C.JSString_methods.startsWith$1(url, "package:") && true)
                throw H.wrapException(string$.x22packa);
              else
                throw H.wrapException("Can't find stylesheet to import.");
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof E.SassException0) {
                error = t1;
                t1 = $async$self._async_evaluate0$_exception$2(error._span_exception$_message, error.get$span());
                throw H.wrapException(t1);
              } else {
                error0 = t1;
                message = null;
                try {
                  message = H._asStringS(J.get$message$x(error0));
                } catch (exception) {
                  H.unwrapException($async$exception);
                  message0 = J.toString$0$(error0);
                  message = message0;
                }
                t1 = $async$self._async_evaluate0$_exception$1(message);
                throw H.wrapException(t1);
              }
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              $async$self._async_evaluate0$_importSpan = null;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport, $async$completer);
    },
    _async_evaluate0$_importLikeNode$2: function(originalUrl, forImport) {
      return this._importLikeNode$body$_EvaluateVisitor(originalUrl, forImport);
    },
    _importLikeNode$body$_EvaluateVisitor: function(originalUrl, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet),
        $async$returnValue, $async$self = this, contents, url, t1, result;
      var $async$_async_evaluate0$_importLikeNode$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate0$_stylesheet.span;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_nodeImporter.loadAsync$3(originalUrl, t1.file.url, forImport), $async$_async_evaluate0$_importLikeNode$2);
            case 3:
              // returning from await.
              result = $async$result;
              if (result == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              contents = result.item1;
              url = result.item2;
              t1 = J.getInterceptor$s(url).startsWith$1(url, "file:") ? $.$get$context().style.pathFromUri$1(M._parseUri(url)) : url;
              $async$self._async_evaluate0$_includedFiles.add$1(0, t1);
              t1 = C.JSString_methods.startsWith$1(url, "file") ? M.Syntax_forPath0(url) : C.Syntax_SCSS0;
              $async$returnValue = V.Stylesheet_Stylesheet$parse0(contents, t1, $async$self._async_evaluate0$_logger, url);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_importLikeNode$2, $async$completer);
    },
    _async_evaluate0$_visitStaticImport$1: function($import) {
      return this._visitStaticImport$body$_EvaluateVisitor0($import);
    },
    _visitStaticImport$body$_EvaluateVisitor0: function($import) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, resolvedSupports, t1, mediaQuery, node, t2, url, supports, $async$temp1, $async$temp2;
      var $async$_async_evaluate0$_visitStaticImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$1($import.url), $async$_async_evaluate0$_visitStaticImport$1);
            case 3:
              // returning from await.
              url = $async$result;
              supports = $import.supports;
              $async$goto = supports instanceof L.SupportsDeclaration0 ? 4 : 6;
              break;
            case 4:
              // then
              $async$temp1 = H;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(supports.name), $async$_async_evaluate0$_visitStaticImport$1);
            case 7:
              // returning from await.
              $async$temp1 = $async$temp1.S($async$result) + ": ";
              $async$temp2 = H;
              $async$goto = 8;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(supports.value), $async$_async_evaluate0$_visitStaticImport$1);
            case 8:
              // returning from await.
              resolvedSupports = $async$temp1 + $async$temp2.S($async$result);
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$goto = supports == null ? 9 : 11;
              break;
            case 9:
              // then
              $async$result = null;
              // goto join
              $async$goto = 10;
              break;
            case 11:
              // else
              $async$goto = 12;
              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(supports), $async$_async_evaluate0$_visitStaticImport$1);
            case 12:
              // returning from await.
            case 10:
              // join
              resolvedSupports = $async$result;
            case 5:
              // join
              t1 = $import.media;
              $async$goto = t1 == null ? 13 : 15;
              break;
            case 13:
              // then
              $async$result = null;
              // goto join
              $async$goto = 14;
              break;
            case 15:
              // else
              $async$goto = 16;
              return P._asyncAwait($async$self._async_evaluate0$_visitMediaQueries$1(t1), $async$_async_evaluate0$_visitStaticImport$1);
            case 16:
              // returning from await.
            case 14:
              // join
              mediaQuery = $async$result;
              t1 = $import.span;
              node = F.ModifiableCssImport$0(url, t1, mediaQuery, resolvedSupports == null ? null : new F.CssValue0("supports(" + resolvedSupports + ")", supports.get$span(), type$.CssValue_legacy_String_2));
              t1 = $async$self._async_evaluate0$_parent;
              t2 = $async$self._async_evaluate0$_root;
              if (t1 != t2)
                t1.addChild$1(node);
              else if ($async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {
                $async$self._async_evaluate0$_root.addChild$1(node);
                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;
              } else {
                t1 = $async$self._async_evaluate0$_outOfOrderImports;
                (t1 == null ? $async$self._async_evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t1).push(node);
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_visitStaticImport$1, $async$completer);
    },
    visitIncludeRule$1: function(node) {
      return this.visitIncludeRule$body$_EvaluateVisitor0(node);
    },
    visitIncludeRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, nodeWithSpan, t1, t2, contentCallable, mixin;
      var $async$visitIncludeRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              mixin = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitIncludeRule_closure8($async$self, node));
              if (mixin == null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2("Undefined mixin.", node.span));
              nodeWithSpan = new B._FakeAstNode0(new E._EvaluateVisitor_visitIncludeRule_closure9(node));
              $async$goto = type$.legacy_AsyncBuiltInCallable_2._is(mixin) ? 3 : 5;
              break;
            case 3:
              // then
              if (node.content != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2("Mixin doesn't accept a content block.", node.span));
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan), $async$visitIncludeRule$1);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment_2._is(mixin) ? 7 : 9;
              break;
            case 7:
              // then
              t1 = node.content;
              t2 = t1 == null;
              if (!t2 && !type$.legacy_MixinRule_2._as(mixin.declaration).hasContent)
                throw H.wrapException(E.MultiSpanSassRuntimeException$0("Mixin doesn't accept a content block.", node.get$spanWithoutContent(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate0$_stackTrace$1(node.get$spanWithoutContent())));
              contentCallable = t2 ? null : new E.UserDefinedCallable0(t1, $async$self._async_evaluate0$_environment.closure$0(), type$.UserDefinedCallable_legacy_AsyncEnvironment_2);
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate0$_runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new E._EvaluateVisitor_visitIncludeRule_closure10($async$self, contentCallable, mixin, nodeWithSpan)), $async$visitIncludeRule$1);
            case 10:
              // returning from await.
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              throw H.wrapException(P.UnsupportedError$("Unknown callable type " + mixin.toString$0(0) + "."));
            case 8:
              // join
            case 4:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitIncludeRule$1, $async$completer);
    },
    visitMixinRule$1: function(node) {
      return this.visitMixinRule$body$_EvaluateVisitor0(node);
    },
    visitMixinRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;
      var $async$visitMixinRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate0$_environment;
              t2 = t1.closure$0();
              t3 = t1._async_environment0$_mixins;
              index = t3.length - 1;
              t4 = node.name;
              t1._async_environment0$_mixinIndices.$indexSet(0, t4, index);
              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment_2));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitMixinRule$1, $async$completer);
    },
    visitLoudComment$1: function(node) {
      return this.visitLoudComment$body$_EvaluateVisitor0(node);
    },
    visitLoudComment$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2;
      var $async$visitLoudComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_inFunction) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self._async_evaluate0$_parent;
              t2 = $async$self._async_evaluate0$_root;
              if (t1 == t2 && $async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))
                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;
              t1 = node.text;
              $async$temp1 = $async$self._async_evaluate0$_parent;
              $async$temp2 = R;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(t1), $async$visitLoudComment$1);
            case 3:
              // returning from await.
              $async$temp1.addChild$1(new $async$temp2.ModifiableCssComment0($async$result, t1.span));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitLoudComment$1, $async$completer);
    },
    visitMediaRule$1: function(node) {
      return this.visitMediaRule$body$_EvaluateVisitor0(node);
    },
    visitMediaRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, queries, t1, mergedQueries;
      var $async$visitMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Media_, node.span));
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_visitMediaQueries$1(node.query), $async$visitMediaRule$1);
            case 3:
              // returning from await.
              queries = $async$result;
              t1 = $async$self._async_evaluate0$_mediaQueries;
              mergedQueries = t1 == null ? null : $async$self._async_evaluate0$_mergeMediaQueries$2(t1, queries);
              t1 = mergedQueries == null;
              if (!t1 && mergedQueries.length === 0) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = t1 ? queries : mergedQueries;
              $async$goto = 4;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new E._EvaluateVisitor_visitMediaRule_closure5($async$self, mergedQueries, queries, node), node.hasDeclarations, new E._EvaluateVisitor_visitMediaRule_closure6(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null), $async$visitMediaRule$1);
            case 4:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitMediaRule$1, $async$completer);
    },
    _async_evaluate0$_visitMediaQueries$1: function(interpolation) {
      return this._visitMediaQueries$body$_EvaluateVisitor0(interpolation);
    },
    _visitMediaQueries$body$_EvaluateVisitor0: function(interpolation) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_List_legacy_CssMediaQuery_2),
        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;
      var $async$_async_evaluate0$_visitMediaQueries$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = interpolation;
              $async$temp2 = E;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$2$warnForColor(interpolation, true), $async$_async_evaluate0$_visitMediaQueries$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$self._async_evaluate0$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor__visitMediaQueries_closure2($async$self, $async$result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_visitMediaQueries$1, $async$completer);
    },
    _async_evaluate0$_mergeMediaQueries$2: function(queries1, queries2) {
      var t1, t2, t3, t4, t5, result,
        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery_2);
      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult_2; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {
          result = t4.merge$1(t5.get$current(t5));
          if (result === C._SingletonCssMediaQueryMergeResult_empty0)
            continue;
          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable0)
            return null;
          queries.push(t3._as(result).query);
        }
      }
      return queries;
    },
    visitReturnRule$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitSilentComment$1: function(node) {
      return this.visitSilentComment$body$_EvaluateVisitor0(node);
    },
    visitSilentComment$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue;
      var $async$visitSilentComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitSilentComment$1, $async$completer);
    },
    visitStyleRule$1: function(node) {
      return this.visitStyleRule$body$_EvaluateVisitor0(node);
    },
    visitStyleRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, t1;
      var $async$visitStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Style_, node.span));
              t2 = node.selector;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$3$trim$warnForColor(t2, true, true), $async$visitStyleRule$1);
            case 3:
              // returning from await.
              selectorText = $async$result;
              $async$goto = $async$self._async_evaluate0$_inKeyframes ? 4 : 5;
              break;
            case 4:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(new F.CssValue0(P.List_List$unmodifiable($async$self._async_evaluate0$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure20($async$self, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String_2), node.span), new E._EvaluateVisitor_visitStyleRule_closure21($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure22(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null), $async$visitStyleRule$1);
            case 6:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // join
              t1.parsedSelector = $async$self._async_evaluate0$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure23($async$self, selectorText));
              parsedSelector = $async$self._async_evaluate0$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitStyleRule_closure24(t1, $async$self));
              t1.parsedSelector = parsedSelector;
              rule = X.ModifiableCssStyleRule$0($async$self._async_evaluate0$_extender.addSelector$3(parsedSelector, t2.span, $async$self._async_evaluate0$_mediaQueries), node.span, t1.parsedSelector);
              oldAtRootExcludingStyleRule = $async$self._async_evaluate0$_atRootExcludingStyleRule;
              $async$self._async_evaluate0$_atRootExcludingStyleRule = false;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitStyleRule_closure25($async$self, rule, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure26(), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$visitStyleRule$1);
            case 7:
              // returning from await.
              $async$self._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              if (!($async$self._async_evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {
                t1 = $async$self._async_evaluate0$_parent.children;
                t1 = !t1.get$isEmpty(t1);
              } else
                t1 = false;
              if (t1) {
                t1 = $async$self._async_evaluate0$_parent.children;
                t1.get$last(t1).isGroupEnd = true;
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitStyleRule$1, $async$completer);
    },
    visitSupportsRule$1: function(node) {
      return this.visitSupportsRule$body$_EvaluateVisitor0(node);
    },
    visitSupportsRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;
      var $async$visitSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Suppor, node.span));
              t1 = node.condition;
              $async$temp1 = B;
              $async$temp2 = F;
              $async$goto = 4;
              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(t1), $async$visitSupportsRule$1);
            case 4:
              // returning from await.
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through($async$temp1.ModifiableCssSupportsRule$0(new $async$temp2.CssValue0($async$result, t1.get$span(), type$.CssValue_legacy_String_2), node.span), new E._EvaluateVisitor_visitSupportsRule_closure5($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitSupportsRule_closure6(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null), $async$visitSupportsRule$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitSupportsRule$1, $async$completer);
    },
    _async_evaluate0$_visitSupportsCondition$1: function(condition) {
      return this._visitSupportsCondition$body$_EvaluateVisitor0(condition);
    },
    _visitSupportsCondition$body$_EvaluateVisitor0: function(condition) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;
      var $async$_async_evaluate0$_visitSupportsCondition$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = condition instanceof U.SupportsOperation0 ? 3 : 5;
              break;
            case 3:
              // then
              t1 = condition.operator;
              $async$temp1 = H;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_parenthesize$2(condition.left, t1), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 6:
              // returning from await.
              $async$temp1 = $async$temp1.S($async$result) + " " + t1 + " ";
              $async$temp2 = H;
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate0$_parenthesize$2(condition.right, t1), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1 + $async$temp2.S($async$result);
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = condition instanceof M.SupportsNegation0 ? 8 : 10;
              break;
            case 8:
              // then
              $async$temp1 = H;
              $async$goto = 11;
              return P._asyncAwait($async$self._async_evaluate0$_parenthesize$1(condition.condition), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 11:
              // returning from await.
              $async$returnValue = "not " + $async$temp1.S($async$result);
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 9;
              break;
            case 10:
              // else
              $async$goto = condition instanceof X.SupportsInterpolation0 ? 12 : 14;
              break;
            case 12:
              // then
              $async$goto = 15;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$2$quote(condition.expression, false), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 15:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 13;
              break;
            case 14:
              // else
              $async$goto = condition instanceof L.SupportsDeclaration0 ? 16 : 18;
              break;
            case 16:
              // then
              $async$temp1 = H;
              $async$goto = 19;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(condition.name), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 19:
              // returning from await.
              $async$temp1 = "(" + $async$temp1.S($async$result) + ": ";
              $async$temp2 = H;
              $async$goto = 20;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(condition.value), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 20:
              // returning from await.
              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 17;
              break;
            case 18:
              // else
              $async$goto = condition instanceof F.SupportsFunction0 ? 21 : 23;
              break;
            case 21:
              // then
              $async$temp1 = H;
              $async$goto = 24;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(condition.name), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 24:
              // returning from await.
              $async$temp1 = $async$temp1.S($async$result) + "(";
              $async$temp2 = H;
              $async$goto = 25;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(condition.$arguments), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 25:
              // returning from await.
              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 22;
              break;
            case 23:
              // else
              $async$goto = condition instanceof Y.SupportsAnything0 ? 26 : 28;
              break;
            case 26:
              // then
              $async$temp1 = H;
              $async$goto = 29;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(condition.contents), $async$_async_evaluate0$_visitSupportsCondition$1);
            case 29:
              // returning from await.
              $async$returnValue = "(" + $async$temp1.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 27;
              break;
            case 28:
              // else
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 27:
              // join
            case 22:
              // join
            case 17:
              // join
            case 13:
              // join
            case 9:
              // join
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_visitSupportsCondition$1, $async$completer);
    },
    _async_evaluate0$_parenthesize$2: function(condition, operator) {
      return this._parenthesize$body$_EvaluateVisitor0(condition, operator);
    },
    _async_evaluate0$_parenthesize$1: function(condition) {
      return this._async_evaluate0$_parenthesize$2(condition, null);
    },
    _parenthesize$body$_EvaluateVisitor0: function(condition, operator) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$_async_evaluate0$_parenthesize$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!(condition instanceof M.SupportsNegation0))
                if (condition instanceof U.SupportsOperation0)
                  t1 = operator == null || operator !== condition.operator;
                else
                  t1 = false;
              else
                t1 = true;
              $async$goto = t1 ? 3 : 5;
              break;
            case 3:
              // then
              $async$temp1 = H;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(condition), $async$_async_evaluate0$_parenthesize$2);
            case 6:
              // returning from await.
              $async$returnValue = "(" + $async$temp1.S($async$result) + ")";
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = 7;
              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(condition), $async$_async_evaluate0$_parenthesize$2);
            case 7:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_parenthesize$2, $async$completer);
    },
    visitVariableDeclaration$1: function(node) {
      return this.visitVariableDeclaration$body$_EvaluateVisitor0(node);
    },
    visitVariableDeclaration$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, value, t2, $async$temp1, $async$temp2, $async$temp3;
      var $async$visitVariableDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (node.isGuarded) {
                if (node.namespace == null && $async$self._async_evaluate0$_environment._async_environment0$_variables.length === 1) {
                  t1 = $async$self._async_evaluate0$_configuration._configuration$_values;
                  t1 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, node.name);
                  if (t1 != null) {
                    $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure8($async$self, node, t1));
                    $async$returnValue = null;
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                }
                value = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure9($async$self, node));
                if (value != null && !value.$eq(0, C.C_SassNull)) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
              }
              if (node.isGlobal && !$async$self._async_evaluate0$_environment.globalVariableExists$1(node.name)) {
                t1 = $async$self._async_evaluate0$_environment._async_environment0$_variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName0(node.span) + ": null` at the root of the\nstylesheet.";
                t2 = node.span;
                $async$self._async_evaluate0$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, $async$self._async_evaluate0$_stackTrace$1(t2));
              }
              $async$temp1 = node;
              $async$temp2 = E;
              $async$temp3 = node;
              $async$goto = 3;
              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitVariableDeclaration$1);
            case 3:
              // returning from await.
              $async$self._async_evaluate0$_addExceptionSpan$2($async$temp1, new $async$temp2._EvaluateVisitor_visitVariableDeclaration_closure10($async$self, $async$temp3, $async$result.withoutSlash$0()));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitVariableDeclaration$1, $async$completer);
    },
    visitUseRule$1: function(node) {
      return this.visitUseRule$body$_EvaluateVisitor0(node);
    },
    visitUseRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, configuration, t3, _i, variable, t4, t5, t1, t2, $async$temp1, $async$temp2, $async$temp3;
      var $async$visitUseRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.configuration;
              t2 = t1.length;
              $async$goto = t2 === 0 ? 3 : 5;
              break;
            case 3:
              // then
              configuration = C.Configuration_Map_empty_null_true0;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);
              _i = 0;
            case 6:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 8;
                break;
              }
              variable = t1[_i];
              t4 = variable.name;
              t5 = variable.expression;
              $async$temp1 = t3;
              $async$temp2 = t4;
              $async$temp3 = Z;
              $async$goto = 9;
              return P._asyncAwait(t5.accept$1($async$self), $async$visitUseRule$1);
            case 9:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue0($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate0$_expressionNode$1(t5)));
            case 7:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 6;
              break;
            case 8:
              // after for
              configuration = new A.Configuration0(t3, node, false);
            case 4:
              // join
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate0$_loadModule$5$configuration(node.url, "@use", node, new E._EvaluateVisitor_visitUseRule_closure2($async$self, node), configuration), $async$visitUseRule$1);
            case 10:
              // returning from await.
              $async$self._async_evaluate0$_assertConfigurationIsEmpty$1(configuration);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitUseRule$1, $async$completer);
    },
    visitWarnRule$1: function(node) {
      return this.visitWarnRule$body$_EvaluateVisitor0(node);
    },
    visitWarnRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, value, t1;
      var $async$visitWarnRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitWarnRule_closure2($async$self, node), type$.legacy_Value_2), $async$visitWarnRule$1);
            case 3:
              // returning from await.
              value = $async$result;
              t1 = value instanceof D.SassString0 ? value.text : $async$self._async_evaluate0$_serialize$2(value, node.expression);
              $async$self._async_evaluate0$_logger.warn$2$trace(0, t1, $async$self._async_evaluate0$_stackTrace$1(node.span));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitWarnRule$1, $async$completer);
    },
    visitWhileRule$1: function(node) {
      return this._async_evaluate0$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitWhileRule_closure2(this, node), true, node.hasDeclarations, type$.legacy_Value_2);
    },
    visitBinaryOperationExpression$1: function(node) {
      return this._async_evaluate0$_addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitBinaryOperationExpression_closure2(this, node), type$.legacy_Value_2);
    },
    visitValueExpression$1: function(node) {
      return this.visitValueExpression$body$_EvaluateVisitor0(node);
    },
    visitValueExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue;
      var $async$visitValueExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = node.value;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitValueExpression$1, $async$completer);
    },
    visitVariableExpression$1: function(node) {
      return this.visitVariableExpression$body$_EvaluateVisitor0(node);
    },
    visitVariableExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, result;
      var $async$visitVariableExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              result = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableExpression_closure2($async$self, node));
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              throw H.wrapException($async$self._async_evaluate0$_exception$2("Undefined variable.", node.span));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitVariableExpression$1, $async$completer);
    },
    visitUnaryOperationExpression$1: function(node) {
      return this.visitUnaryOperationExpression$body$_EvaluateVisitor0(node);
    },
    visitUnaryOperationExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, operand, t1;
      var $async$visitUnaryOperationExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 3;
                return P._asyncAwait(node.operand.accept$1($async$self), $async$visitUnaryOperationExpression$1);
              case 3:
                // returning from await.
                operand = $async$result;
                t1 = node.operator;
                switch (t1) {
                  case C.UnaryOperator_j2w0:
                    $async$returnValue = operand.unaryPlus$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.UnaryOperator_U4G0:
                    $async$returnValue = operand.unaryMinus$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.UnaryOperator_zDx0:
                    operand.toString;
                    $async$returnValue = new D.SassString0("/" + N.serializeValue(operand, false, true), false);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.UnaryOperator_not_not0:
                    $async$returnValue = operand.unaryNot$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  default:
                    throw H.wrapException(P.StateError$("Unknown unary operator " + H.S(t1) + "."));
                }
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$visitUnaryOperationExpression$1, $async$completer);
    },
    visitBooleanExpression$1: function(node) {
      return this.visitBooleanExpression$body$_EvaluateVisitor0(node);
    },
    visitBooleanExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassBoolean_2),
        $async$returnValue;
      var $async$visitBooleanExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = node.value ? C.SassBoolean_true : C.SassBoolean_false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitBooleanExpression$1, $async$completer);
    },
    visitIfExpression$1: function(node) {
      return this.visitIfExpression$body$_EvaluateVisitor0(node);
    },
    visitIfExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, condition, ifTrue, ifFalse, pair, positional, named, t1;
      var $async$visitIfExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateMacroArguments$1(node), $async$visitIfExpression$1);
            case 3:
              // returning from await.
              pair = $async$result;
              positional = pair.item1;
              named = pair.item2;
              t1 = J.getInterceptor$asx(positional);
              $async$self._async_evaluate0$_verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration0(), node);
              condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, "condition");
              ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, "if-true");
              ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, "if-false");
              $async$goto = 5;
              return P._asyncAwait(condition.accept$1($async$self), $async$visitIfExpression$1);
            case 5:
              // returning from await.
              $async$goto = 4;
              return P._asyncAwait(($async$result.get$isTruthy() ? ifTrue : ifFalse).accept$1($async$self), $async$visitIfExpression$1);
            case 4:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitIfExpression$1, $async$completer);
    },
    visitNullExpression$1: function(node) {
      return this.visitNullExpression$body$_EvaluateVisitor0(node);
    },
    visitNullExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNull_2),
        $async$returnValue;
      var $async$visitNullExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = C.C_SassNull;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitNullExpression$1, $async$completer);
    },
    visitNumberExpression$1: function(node) {
      return this.visitNumberExpression$body$_EvaluateVisitor0(node);
    },
    visitNumberExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber_2),
        $async$returnValue, t1, t2;
      var $async$visitNumberExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.value;
              t2 = node.unit;
              $async$returnValue = t2 == null ? new N.UnitlessSassNumber0(t1, null) : new L.SingleUnitSassNumber0(t2, t1, null);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitNumberExpression$1, $async$completer);
    },
    visitParenthesizedExpression$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitColorExpression$1: function(node) {
      return this.visitColorExpression$body$_EvaluateVisitor0(node);
    },
    visitColorExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassColor_2),
        $async$returnValue;
      var $async$visitColorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = node.value;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitColorExpression$1, $async$completer);
    },
    visitListExpression$1: function(node) {
      return this.visitListExpression$body$_EvaluateVisitor0(node);
    },
    visitListExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassList_2),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$visitListExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = D;
              $async$goto = 3;
              return P._asyncAwait(B.mapAsync0(node.contents, new E._EvaluateVisitor_visitListExpression_closure2($async$self), type$.legacy_Expression_2, type$.legacy_Value_2), $async$visitListExpression$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.SassList$0($async$result, node.separator, node.hasBrackets);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitListExpression$1, $async$completer);
    },
    visitMapExpression$1: function(node) {
      return this.visitMapExpression$body$_EvaluateVisitor0(node);
    },
    visitMapExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassMap_2),
        $async$returnValue, $async$self = this, t2, t3, _i, pair, t4, keyValue, valueValue, t1, map, keyNodes;
      var $async$visitMapExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.legacy_Value_2;
              map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
              keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode_2);
              t2 = node.pairs, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              pair = t2[_i];
              t4 = pair.item1;
              $async$goto = 6;
              return P._asyncAwait(t4.accept$1($async$self), $async$visitMapExpression$1);
            case 6:
              // returning from await.
              keyValue = $async$result;
              $async$goto = 7;
              return P._asyncAwait(pair.item2.accept$1($async$self), $async$visitMapExpression$1);
            case 7:
              // returning from await.
              valueValue = $async$result;
              if (map.containsKey$1(keyValue))
                throw H.wrapException(E.MultiSpanSassRuntimeException$0("Duplicate key.", t4.get$span(), "second key", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), "first key"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate0$_stackTrace$1(t4.get$span())));
              map.$indexSet(0, keyValue, valueValue);
              keyNodes.$indexSet(0, keyValue, t4);
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = new A.SassMap0(H.ConstantMap_ConstantMap$from(map, t1, t1));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitMapExpression$1, $async$completer);
    },
    visitFunctionExpression$1: function(node) {
      return this.visitFunctionExpression$body$_EvaluateVisitor0(node);
    },
    visitFunctionExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, oldInFunction, result, t1, t2, plainName, $async$temp1, $async$temp2;
      var $async$visitFunctionExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = node.name;
              plainName = t2.get$asPlain();
              t1.$function = null;
              $async$goto = (plainName != null ? t1.$function = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure5($async$self, node, plainName)) : null) == null ? 3 : 4;
              break;
            case 3:
              // then
              if (node.namespace != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2("Undefined function.", node.span));
              $async$temp1 = t1;
              $async$temp2 = L;
              $async$goto = 5;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(t2), $async$visitFunctionExpression$1);
            case 5:
              // returning from await.
              $async$temp1.$function = new $async$temp2.PlainCssCallable0($async$result);
            case 4:
              // join
              oldInFunction = $async$self._async_evaluate0$_inFunction;
              $async$self._async_evaluate0$_inFunction = true;
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_addErrorSpan$1$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure6(t1, $async$self, node), type$.legacy_Value_2), $async$visitFunctionExpression$1);
            case 6:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate0$_inFunction = oldInFunction;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitFunctionExpression$1, $async$completer);
    },
    _async_evaluate0$_getFunction$2$namespace: function($name, namespace) {
      var local = this._async_evaluate0$_environment.getFunction$2$namespace($name, namespace);
      if (local != null || namespace != null)
        return local;
      return this._async_evaluate0$_builtInFunctions.$index(0, $name);
    },
    _async_evaluate0$_runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {
      return this._runUserDefinedCallable$body$_EvaluateVisitor0($arguments, callable, nodeWithSpan, run);
    },
    _runUserDefinedCallable$body$_EvaluateVisitor0: function($arguments, callable, nodeWithSpan, run) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, evaluated, t1, $name;
      var $async$_async_evaluate0$_runUserDefinedCallable$4 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateArguments$1($arguments), $async$_async_evaluate0$_runUserDefinedCallable$4);
            case 3:
              // returning from await.
              evaluated = $async$result;
              t1 = callable.declaration.name;
              $name = t1 == null ? "@content" : t1 + "()";
              $async$goto = 4;
              return P._asyncAwait($async$self._async_evaluate0$_withStackFrame$1$3($name, nodeWithSpan, new E._EvaluateVisitor__runUserDefinedCallable_closure2($async$self, callable, evaluated, nodeWithSpan, run), type$.legacy_Value_2), $async$_async_evaluate0$_runUserDefinedCallable$4);
            case 4:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_runUserDefinedCallable$4, $async$completer);
    },
    _async_evaluate0$_runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {
      return this._runFunctionCallable$body$_EvaluateVisitor0($arguments, callable, nodeWithSpan);
    },
    _runFunctionCallable$body$_EvaluateVisitor0: function($arguments, callable, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, result, t1, t2, t3, first, _i, argument, rest, $async$temp1;
      var $async$_async_evaluate0$_runFunctionCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = type$.legacy_AsyncBuiltInCallable_2._is(callable) ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return P._asyncAwait($async$self._async_evaluate0$_runBuiltInCallable$3($arguments, callable, nodeWithSpan), $async$_async_evaluate0$_runFunctionCallable$3);
            case 6:
              // returning from await.
              result = $async$result;
              if (result == null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Custom, nodeWithSpan.get$span()));
              $async$returnValue = result.withoutSlash$0();
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment_2._is(callable) ? 7 : 9;
              break;
            case 7:
              // then
              $async$goto = 10;
              return P._asyncAwait($async$self._async_evaluate0$_runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new E._EvaluateVisitor__runFunctionCallable_closure2($async$self, callable)), $async$_async_evaluate0$_runFunctionCallable$3);
            case 10:
              // returning from await.
              $async$returnValue = $async$result.withoutSlash$0();
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              $async$goto = callable instanceof L.PlainCssCallable0 ? 11 : 13;
              break;
            case 11:
              // then
              t1 = $arguments.named;
              if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Plain_, nodeWithSpan.get$span()));
              t1 = H.S(callable.name) + "(";
              t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0;
            case 14:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 16;
                break;
              }
              argument = t2[_i];
              if (first)
                first = false;
              else
                t1 += ", ";
              $async$temp1 = H;
              $async$goto = 17;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(argument), $async$_async_evaluate0$_runFunctionCallable$3);
            case 17:
              // returning from await.
              t1 += $async$temp1.S($async$result);
            case 15:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 14;
              break;
            case 16:
              // after for
              t2 = $arguments.rest;
              $async$goto = 18;
              return P._asyncAwait(t2 == null ? null : t2.accept$1($async$self), $async$_async_evaluate0$_runFunctionCallable$3);
            case 18:
              // returning from await.
              rest = $async$result;
              if (rest != null) {
                if (!first)
                  t1 += ", ";
                t2 = t1 + H.S($async$self._async_evaluate0$_serialize$2(rest, t2));
                t1 = t2;
              }
              t1 += H.Primitives_stringFromCharCode(41);
              $async$returnValue = new D.SassString0(t1.charCodeAt(0) == 0 ? t1 : t1, false);
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 12;
              break;
            case 13:
              // else
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // join
            case 8:
              // join
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_runFunctionCallable$3, $async$completer);
    },
    _async_evaluate0$_runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {
      return this._runBuiltInCallable$body$_EvaluateVisitor0($arguments, callable, nodeWithSpan);
    },
    _runBuiltInCallable$body$_EvaluateVisitor0: function($arguments, callable, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, evaluated, oldCallableNode, $async$exception;
      var $async$_async_evaluate0$_runBuiltInCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_evaluateArguments$2$trackSpans($arguments, false), $async$_async_evaluate0$_runBuiltInCallable$3);
            case 3:
              // returning from await.
              evaluated = $async$result;
              oldCallableNode = $async$self._async_evaluate0$_callableNode;
              $async$self._async_evaluate0$_callableNode = nodeWithSpan;
              namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);
              tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);
              overload = tuple.item1;
              callback = tuple.item2;
              $async$self._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__runBuiltInCallable_closure5(overload, evaluated, namedSet));
              declaredArguments = overload.$arguments;
              i = evaluated.positional.length, t1 = declaredArguments.length;
            case 4:
              // for condition
              if (!(i < t1)) {
                // goto after for
                $async$goto = 6;
                break;
              }
              argument = declaredArguments[i];
              t2 = evaluated.positional;
              t3 = evaluated.named.remove$1(0, argument.name);
              $async$goto = t3 == null ? 7 : 8;
              break;
            case 7:
              // then
              t3 = argument.defaultValue;
              $async$goto = 9;
              return P._asyncAwait(t3 == null ? null : t3.accept$1($async$self), $async$_async_evaluate0$_runBuiltInCallable$3);
            case 9:
              // returning from await.
              t3 = $async$result;
            case 8:
              // join
              t2.push(t3);
            case 5:
              // for update
              ++i;
              // goto for condition
              $async$goto = 4;
              break;
            case 6:
              // after for
              if (overload.restArgument != null) {
                if (evaluated.positional.length > t1) {
                  rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);
                  C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);
                } else
                  rest = C.List_empty16;
                t1 = evaluated.named;
                argumentList = D.SassArgumentList$0(rest, t1, evaluated.separator === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : evaluated.separator);
                evaluated.positional.push(argumentList);
              } else
                argumentList = null;
              result = null;
              $async$handler = 11;
              $async$goto = 14;
              return P._asyncAwait(callback.call$1(evaluated.positional), $async$_async_evaluate0$_runBuiltInCallable$3);
            case 14:
              // returning from await.
              result = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 13;
              break;
            case 11:
              // catch
              $async$handler = 10;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.legacy_SassRuntimeException_2._is(t1))
                throw $async$exception;
              else if (t1 instanceof E.MultiSpanSassScriptException0) {
                error = t1;
                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));
              } else if (t1 instanceof E.MultiSpanSassException0) {
                error0 = t1;
                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, $async$self._async_evaluate0$_stackTrace$1(error0.get$span())));
              } else {
                error1 = t1;
                message = null;
                try {
                  message = H._asStringS(J.get$message$x(error1));
                } catch (exception) {
                  H.unwrapException($async$exception);
                  message0 = J.toString$0$(error1);
                  message = message0;
                }
                throw H.wrapException($async$self._async_evaluate0$_exception$2(message, nodeWithSpan.get$span()));
              }
              // goto after finally
              $async$goto = 13;
              break;
            case 10:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 13:
              // after finally
              $async$self._async_evaluate0$_callableNode = oldCallableNode;
              if (argumentList == null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = evaluated.named;
              if (t1.get$isEmpty(t1)) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              if (argumentList._argument_list$_wereKeywordsAccessed) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = evaluated.named;
              t1 = t1.get$keys(t1);
              t1 = "No " + B.pluralize0("argument", t1.get$length(t1), null) + " named ";
              t2 = evaluated.named;
              throw H.wrapException(E.MultiSpanSassRuntimeException$0(t1 + H.S(B.toSentence0(t2.get$keys(t2).map$1$1(0, new E._EvaluateVisitor__runBuiltInCallable_closure6(), type$.legacy_Object), "or")) + ".", nodeWithSpan.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_runBuiltInCallable$3, $async$completer);
    },
    _async_evaluate0$_evaluateArguments$2$trackSpans: function($arguments, trackSpans) {
      return this._evaluateArguments$body$_EvaluateVisitor0($arguments, trackSpans);
    },
    _async_evaluate0$_evaluateArguments$1: function($arguments) {
      return this._async_evaluate0$_evaluateArguments$2$trackSpans($arguments, null);
    },
    _evaluateArguments$body$_EvaluateVisitor0: function($arguments, trackSpans) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy__ArgumentResults_2),
        $async$returnValue, $async$self = this, t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, $async$temp1, $async$temp2;
      var $async$_async_evaluate0$_evaluateArguments$2$trackSpans = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (trackSpans == null)
                trackSpans = $async$self._async_evaluate0$_sourceMap;
              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
              t2 = $arguments.positional, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$temp1 = t1;
              $async$goto = 6;
              return P._asyncAwait(t2[_i].accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);
            case 6:
              // returning from await.
              $async$temp1.push($async$result);
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t4 = type$.legacy_String;
              t5 = type$.legacy_Value_2;
              t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);
              t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8);
            case 7:
              // for condition
              if (!t8.moveNext$0()) {
                // goto after for
                $async$goto = 8;
                break;
              }
              t9 = t8.get$current(t8);
              $async$temp1 = t6;
              $async$temp2 = t9.key;
              $async$goto = 9;
              return P._asyncAwait(t9.value.accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);
            case 9:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, $async$result);
              // goto for condition
              $async$goto = 7;
              break;
            case 8:
              // after for
              if (trackSpans) {
                t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode_2);
                for (_i = 0; _i < t3; ++_i)
                  t8.push($async$self._async_evaluate0$_expressionNode$1(t2[_i]));
                positionalNodes = t8;
              } else
                positionalNodes = null;
              if (trackSpans) {
                t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);
                for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
                  t7 = t3.get$current(t3);
                  t2.$indexSet(0, t7.key, $async$self._async_evaluate0$_expressionNode$1(t7.value));
                }
                namedNodes = t2;
              } else
                namedNodes = null;
              t2 = $arguments.rest;
              if (t2 == null) {
                $async$returnValue = new E._ArgumentResults2(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided0);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 10;
              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);
            case 10:
              // returning from await.
              rest = $async$result;
              restNodeForSpan = trackSpans ? $async$self._async_evaluate0$_expressionNode$1(t2) : null;
              if (rest instanceof A.SassMap0) {
                $async$self._async_evaluate0$_addRestMap$1$3(t6, rest, t2, t5);
                if (namedNodes != null) {
                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);
                  for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString_2; t3.moveNext$0();)
                    t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);
                  namedNodes.addAll$1(0, t2);
                }
                separator = C.ListSeparator_undecided0;
              } else if (rest instanceof D.SassList0) {
                t2 = rest._list1$_contents;
                C.JSArray_methods.addAll$1(t1, t2);
                if (positionalNodes != null)
                  C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode_2));
                separator = rest.separator;
                if (rest instanceof D.SassArgumentList0) {
                  rest._argument_list$_wereKeywordsAccessed = true;
                  rest._argument_list$_keywords.forEach$1(0, new E._EvaluateVisitor__evaluateArguments_closure2(t6, namedNodes, restNodeForSpan));
                }
              } else {
                t1.push(rest);
                if (positionalNodes != null)
                  positionalNodes.push(restNodeForSpan);
                separator = C.ListSeparator_undecided0;
              }
              t2 = $arguments.keywordRest;
              if (t2 == null) {
                $async$returnValue = new E._ArgumentResults2(t1, positionalNodes, t6, namedNodes, separator);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 11;
              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);
            case 11:
              // returning from await.
              keywordRest = $async$result;
              keywordRestNodeForSpan = trackSpans ? $async$self._async_evaluate0$_expressionNode$1(t2) : null;
              if (keywordRest instanceof A.SassMap0) {
                $async$self._async_evaluate0$_addRestMap$1$3(t6, keywordRest, t2, t5);
                if (namedNodes != null) {
                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);
                  for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString_2; t3.moveNext$0();)
                    t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);
                  namedNodes.addAll$1(0, t2);
                }
                $async$returnValue = new E._ArgumentResults2(t1, positionalNodes, t6, namedNodes, separator);
                // goto return
                $async$goto = 1;
                break;
              } else
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + ").", t2.get$span()));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_evaluateArguments$2$trackSpans, $async$completer);
    },
    _async_evaluate0$_evaluateMacroArguments$1: function(invocation) {
      return this._evaluateMacroArguments$body$_EvaluateVisitor0(invocation);
    },
    _evaluateMacroArguments$body$_EvaluateVisitor0: function(invocation) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2),
        $async$returnValue, $async$self = this, t3, positional, named, rest, keywordRest, t1, t2;
      var $async$_async_evaluate0$_evaluateMacroArguments$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = invocation.$arguments;
              t2 = t1.rest;
              if (t2 == null) {
                $async$returnValue = new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);
                // goto return
                $async$goto = 1;
                break;
              }
              t3 = t1.positional;
              positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1("JSArray<1>"));
              t3 = type$.legacy_Expression_2;
              named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);
              $async$goto = 3;
              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate0$_evaluateMacroArguments$1);
            case 3:
              // returning from await.
              rest = $async$result;
              if (rest instanceof A.SassMap0)
                $async$self._async_evaluate0$_addRestMap$1$4(named, rest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure11(), t3);
              else if (rest instanceof D.SassList0) {
                t2 = rest._list1$_contents;
                C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new E._EvaluateVisitor__evaluateMacroArguments_closure12(), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Expression0*>")));
                if (rest instanceof D.SassArgumentList0) {
                  rest._argument_list$_wereKeywordsAccessed = true;
                  rest._argument_list$_keywords.forEach$1(0, new E._EvaluateVisitor__evaluateMacroArguments_closure13(named));
                }
              } else
                positional.push(new F.ValueExpression0(rest, null));
              t1 = t1.keywordRest;
              if (t1 == null) {
                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 4;
              return P._asyncAwait(t1.accept$1($async$self), $async$_async_evaluate0$_evaluateMacroArguments$1);
            case 4:
              // returning from await.
              keywordRest = $async$result;
              if (keywordRest instanceof A.SassMap0) {
                $async$self._async_evaluate0$_addRestMap$1$4(named, keywordRest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure14(), t3);
                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);
                // goto return
                $async$goto = 1;
                break;
              } else
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + ").", invocation.span));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_evaluateMacroArguments$1, $async$completer);
    },
    _async_evaluate0$_addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {
      var t1 = {};
      t1.convert = convert;
      if (convert == null)
        t1.convert = new E._EvaluateVisitor__addRestMap_closure5($T);
      map.contents.forEach$1(0, new E._EvaluateVisitor__addRestMap_closure6(t1, this, values, map, nodeWithSpan));
    },
    _async_evaluate0$_addRestMap$1$3: function(values, map, nodeWithSpan, $T) {
      return this._async_evaluate0$_addRestMap$1$4(values, map, nodeWithSpan, null, $T);
    },
    _async_evaluate0$_verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {
      return this._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__verifyArguments_closure2($arguments, positional, named));
    },
    visitSelectorExpression$1: function(node) {
      return this.visitSelectorExpression$body$_EvaluateVisitor0(node);
    },
    visitSelectorExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1;
      var $async$visitSelectorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate0$_styleRule;
              if (t1 == null) {
                $async$returnValue = C.C_SassNull;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = t1.originalSelector.get$asSassList();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitSelectorExpression$1, $async$completer);
    },
    visitStringExpression$1: function(node) {
      return this.visitStringExpression$body$_EvaluateVisitor0(node);
    },
    visitStringExpression$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassString_2),
        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;
      var $async$visitStringExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = D;
              $async$temp2 = J;
              $async$goto = 3;
              return P._asyncAwait(B.mapAsync0(node.text.contents, new E._EvaluateVisitor_visitStringExpression_closure2($async$self), type$.legacy_Object, type$.legacy_String), $async$visitStringExpression$1);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1.SassString0($async$temp2.join$0$ax($async$result), node.hasQuotes);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitStringExpression$1, $async$completer);
    },
    visitCssAtRule$1: function(node) {
      return this.visitCssAtRule$body$_EvaluateVisitor0(node);
    },
    visitCssAtRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, wasInKeyframes, wasInUnknownAtRule, t1;
      var $async$visitCssAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.At_rul, node.span));
              if (node.isChildless) {
                $async$self._async_evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0(node.name, node.span, true, node.value));
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              wasInKeyframes = $async$self._async_evaluate0$_inKeyframes;
              wasInUnknownAtRule = $async$self._async_evaluate0$_inUnknownAtRule;
              t1 = node.name;
              if (B.unvendor0(t1.get$value(t1)) === "keyframes")
                $async$self._async_evaluate0$_inKeyframes = true;
              else
                $async$self._async_evaluate0$_inUnknownAtRule = true;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0(t1, node.span, false, node.value), new E._EvaluateVisitor_visitCssAtRule_closure5($async$self, node), false, new E._EvaluateVisitor_visitCssAtRule_closure6(), type$.legacy_ModifiableCssAtRule_2, type$.Null), $async$visitCssAtRule$1);
            case 3:
              // returning from await.
              $async$self._async_evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
              $async$self._async_evaluate0$_inKeyframes = wasInKeyframes;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssAtRule$1, $async$completer);
    },
    visitCssComment$1: function(node) {
      return this.visitCssComment$body$_EvaluateVisitor0(node);
    },
    visitCssComment$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2;
      var $async$visitCssComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate0$_parent;
              t2 = $async$self._async_evaluate0$_root;
              if (t1 == t2 && $async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))
                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;
              $async$self._async_evaluate0$_parent.addChild$1(new R.ModifiableCssComment0(node.text, node.span));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssComment$1, $async$completer);
    },
    visitCssDeclaration$1: function(node) {
      return this.visitCssDeclaration$body$_EvaluateVisitor0(node);
    },
    visitCssDeclaration$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$visitCssDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.name;
              $async$self._async_evaluate0$_parent.addChild$1(L.ModifiableCssDeclaration$0(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), "--"), node.valueSpanForMap));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssDeclaration$1, $async$completer);
    },
    visitCssImport$1: function(node) {
      return this.visitCssImport$body$_EvaluateVisitor0(node);
    },
    visitCssImport$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, modifiableNode, t1, t2;
      var $async$visitCssImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              modifiableNode = F.ModifiableCssImport$0(node.url, node.span, node.media, node.supports);
              t1 = $async$self._async_evaluate0$_parent;
              t2 = $async$self._async_evaluate0$_root;
              if (t1 != t2)
                t1.addChild$1(modifiableNode);
              else if ($async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {
                $async$self._async_evaluate0$_root.addChild$1(modifiableNode);
                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;
              } else {
                t1 = $async$self._async_evaluate0$_outOfOrderImports;
                (t1 == null ? $async$self._async_evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t1).push(modifiableNode);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssImport$1, $async$completer);
    },
    visitCssKeyframeBlock$1: function(node) {
      return this.visitCssKeyframeBlock$body$_EvaluateVisitor0(node);
    },
    visitCssKeyframeBlock$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$visitCssKeyframeBlock$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(node.selector, node.span), new E._EvaluateVisitor_visitCssKeyframeBlock_closure5($async$self, node), false, new E._EvaluateVisitor_visitCssKeyframeBlock_closure6(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null), $async$visitCssKeyframeBlock$1);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssKeyframeBlock$1, $async$completer);
    },
    visitCssMediaRule$1: function(node) {
      return this.visitCssMediaRule$body$_EvaluateVisitor0(node);
    },
    visitCssMediaRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, mergedQueries;
      var $async$visitCssMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Media_, node.span));
              t1 = $async$self._async_evaluate0$_mediaQueries;
              mergedQueries = t1 == null ? null : $async$self._async_evaluate0$_mergeMediaQueries$2(t1, node.queries);
              t1 = mergedQueries == null;
              if (!t1 && mergedQueries.length === 0) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = t1 ? node.queries : mergedQueries;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new E._EvaluateVisitor_visitCssMediaRule_closure5($async$self, mergedQueries, node), false, new E._EvaluateVisitor_visitCssMediaRule_closure6(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null), $async$visitCssMediaRule$1);
            case 3:
              // returning from await.
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssMediaRule$1, $async$completer);
    },
    visitCssStyleRule$1: function(node) {
      return this.visitCssStyleRule$body$_EvaluateVisitor0(node);
    },
    visitCssStyleRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule;
      var $async$visitCssStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Style_, node.span));
              t1 = node.selector;
              t2 = t1.value;
              t3 = $async$self._async_evaluate0$_styleRule;
              t3 = t3 == null ? null : t3.originalSelector;
              originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !$async$self._async_evaluate0$_atRootExcludingStyleRule);
              rule = X.ModifiableCssStyleRule$0($async$self._async_evaluate0$_extender.addSelector$3(originalSelector, t1.span, $async$self._async_evaluate0$_mediaQueries), node.span, originalSelector);
              oldAtRootExcludingStyleRule = $async$self._async_evaluate0$_atRootExcludingStyleRule;
              $async$self._async_evaluate0$_atRootExcludingStyleRule = false;
              $async$goto = 2;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitCssStyleRule_closure5($async$self, rule, node), false, new E._EvaluateVisitor_visitCssStyleRule_closure6(), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$visitCssStyleRule$1);
            case 2:
              // returning from await.
              $async$self._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              if (!($async$self._async_evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {
                t1 = $async$self._async_evaluate0$_parent.children;
                t1 = !t1.get$isEmpty(t1);
              } else
                t1 = false;
              if (t1) {
                t1 = $async$self._async_evaluate0$_parent.children;
                t1.get$last(t1).isGroupEnd = true;
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssStyleRule$1, $async$completer);
    },
    visitCssStylesheet$1: function(node) {
      return this.visitCssStylesheet$body$_EvaluateVisitor0(node);
    },
    visitCssStylesheet$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$visitCssStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.get$iterator$ax(node.get$children(node));
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              $async$goto = 4;
              return P._asyncAwait(t1.get$current(t1).accept$1($async$self), $async$visitCssStylesheet$1);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssStylesheet$1, $async$completer);
    },
    visitCssSupportsRule$1: function(node) {
      return this.visitCssSupportsRule$body$_EvaluateVisitor0(node);
    },
    visitCssSupportsRule$body$_EvaluateVisitor0: function(node) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$visitCssSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Suppor, node.span));
              $async$goto = 2;
              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$0(node.condition, node.span), new E._EvaluateVisitor_visitCssSupportsRule_closure5($async$self, node), false, new E._EvaluateVisitor_visitCssSupportsRule_closure6(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null), $async$visitCssSupportsRule$1);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$visitCssSupportsRule$1, $async$completer);
    },
    _async_evaluate0$_handleReturn$1$2: function(list, callback) {
      return this._handleReturn$body$_EvaluateVisitor0(list, callback);
    },
    _async_evaluate0$_handleReturn$2: function(list, callback) {
      return this._async_evaluate0$_handleReturn$1$2(list, callback, type$.dynamic);
    },
    _handleReturn$body$_EvaluateVisitor0: function(list, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, t1, _i, result;
      var $async$_async_evaluate0$_handleReturn$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = list.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < list.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(callback.call$1(list[_i]), $async$_async_evaluate0$_handleReturn$1$2);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_handleReturn$1$2, $async$completer);
    },
    _async_evaluate0$_withEnvironment$1$2: function(environment, callback, $T) {
      return this._withEnvironment$body$_EvaluateVisitor0(environment, callback, $T, $T._eval$1("0*"));
    },
    _withEnvironment$body$_EvaluateVisitor0: function(environment, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result, oldEnvironment;
      var $async$_async_evaluate0$_withEnvironment$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldEnvironment = $async$self._async_evaluate0$_environment;
              $async$self._async_evaluate0$_environment = environment;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withEnvironment$1$2);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate0$_environment = oldEnvironment;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_withEnvironment$1$2, $async$completer);
    },
    _async_evaluate0$_interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {
      return this._interpolationToValue$body$_EvaluateVisitor0(interpolation, trim, warnForColor);
    },
    _async_evaluate0$_interpolationToValue$1: function(interpolation) {
      return this._async_evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, false);
    },
    _async_evaluate0$_interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {
      return this._async_evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);
    },
    _interpolationToValue$body$_EvaluateVisitor0: function(interpolation, trim, warnForColor) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CssValue_legacy_String_2),
        $async$returnValue, $async$self = this, result, t1;
      var $async$_async_evaluate0$_interpolationToValue$3$trim$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$2$warnForColor(interpolation, warnForColor), $async$_async_evaluate0$_interpolationToValue$3$trim$warnForColor);
            case 3:
              // returning from await.
              result = $async$result;
              t1 = trim ? B.trimAscii0(result, true) : result;
              $async$returnValue = new F.CssValue0(t1, interpolation.span, type$.CssValue_legacy_String_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_interpolationToValue$3$trim$warnForColor, $async$completer);
    },
    _async_evaluate0$_performInterpolation$2$warnForColor: function(interpolation, warnForColor) {
      return this._performInterpolation$body$_EvaluateVisitor0(interpolation, warnForColor);
    },
    _async_evaluate0$_performInterpolation$1: function(interpolation) {
      return this._async_evaluate0$_performInterpolation$2$warnForColor(interpolation, false);
    },
    _performInterpolation$body$_EvaluateVisitor0: function(interpolation, warnForColor) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$_async_evaluate0$_performInterpolation$2$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = J;
              $async$goto = 3;
              return P._asyncAwait(B.mapAsync0(interpolation.contents, new E._EvaluateVisitor__performInterpolation_closure2($async$self, warnForColor), type$.legacy_Object, type$.legacy_String), $async$_async_evaluate0$_performInterpolation$2$warnForColor);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.join$0$ax($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_performInterpolation$2$warnForColor, $async$completer);
    },
    _async_evaluate0$_evaluateToCss$2$quote: function(expression, quote) {
      return this._evaluateToCss$body$_EvaluateVisitor0(expression, quote);
    },
    _async_evaluate0$_evaluateToCss$1: function(expression) {
      return this._async_evaluate0$_evaluateToCss$2$quote(expression, true);
    },
    _evaluateToCss$body$_EvaluateVisitor0: function(expression, quote) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this;
      var $async$_async_evaluate0$_evaluateToCss$2$quote = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(expression.accept$1($async$self), $async$_async_evaluate0$_evaluateToCss$2$quote);
            case 3:
              // returning from await.
              $async$returnValue = $async$self._async_evaluate0$_serialize$3$quote($async$result, expression, quote);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_evaluateToCss$2$quote, $async$completer);
    },
    _async_evaluate0$_serialize$3$quote: function(value, nodeWithSpan, quote) {
      return this._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__serialize_closure2(value, quote));
    },
    _async_evaluate0$_serialize$2: function(value, nodeWithSpan) {
      return this._async_evaluate0$_serialize$3$quote(value, nodeWithSpan, true);
    },
    _async_evaluate0$_expressionNode$1: function(expression) {
      var t1;
      if (!this._async_evaluate0$_sourceMap)
        return null;
      if (expression instanceof S.VariableExpression0) {
        t1 = this._async_evaluate0$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);
        return t1 == null ? expression : t1;
      } else
        return expression;
    },
    _async_evaluate0$_withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {
      return this._withParent$body$_EvaluateVisitor0(node, callback, scopeWhen, through, $S, $T, $T._eval$1("0*"));
    },
    _async_evaluate0$_withParent$2$2: function(node, callback, $S, $T) {
      return this._async_evaluate0$_withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);
    },
    _async_evaluate0$_withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {
      return this._async_evaluate0$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);
    },
    _withParent$body$_EvaluateVisitor0: function(node, callback, scopeWhen, through, $S, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, oldParent, result;
      var $async$_async_evaluate0$_withParent$2$4$scopeWhen$through = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._async_evaluate0$_addChild$2$through(node, through);
              oldParent = $async$self._async_evaluate0$_parent;
              $async$self._async_evaluate0$_parent = node;
              $async$goto = 3;
              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1("0*")), $async$_async_evaluate0$_withParent$2$4$scopeWhen$through);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate0$_parent = oldParent;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_withParent$2$4$scopeWhen$through, $async$completer);
    },
    _async_evaluate0$_addChild$2$through: function(node, through) {
      var grandparent,
        $parent = this._async_evaluate0$_parent;
      if (through != null) {
        for (; through.call$1($parent);)
          $parent = $parent._node2$_parent;
        if ($parent.get$hasFollowingSibling()) {
          grandparent = $parent._node2$_parent;
          $parent = $parent.copyWithoutChildren$0();
          grandparent.addChild$1($parent);
        }
      }
      $parent.addChild$1(node);
    },
    _async_evaluate0$_addChild$1: function(node) {
      return this._async_evaluate0$_addChild$2$through(node, null);
    },
    _async_evaluate0$_withStyleRule$1$2: function(rule, callback, $T) {
      return this._withStyleRule$body$_EvaluateVisitor0(rule, callback, $T, $T._eval$1("0*"));
    },
    _withStyleRule$body$_EvaluateVisitor0: function(rule, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result, oldRule;
      var $async$_async_evaluate0$_withStyleRule$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldRule = $async$self._async_evaluate0$_styleRule;
              $async$self._async_evaluate0$_styleRule = rule;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withStyleRule$1$2);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate0$_styleRule = oldRule;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_withStyleRule$1$2, $async$completer);
    },
    _async_evaluate0$_withMediaQueries$1$2: function(queries, callback, $T) {
      return this._withMediaQueries$body$_EvaluateVisitor0(queries, callback, $T, $T._eval$1("0*"));
    },
    _withMediaQueries$body$_EvaluateVisitor0: function(queries, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result, oldMediaQueries;
      var $async$_async_evaluate0$_withMediaQueries$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldMediaQueries = $async$self._async_evaluate0$_mediaQueries;
              $async$self._async_evaluate0$_mediaQueries = queries;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withMediaQueries$1$2);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate0$_mediaQueries = oldMediaQueries;
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_withMediaQueries$1$2, $async$completer);
    },
    _async_evaluate0$_withStackFrame$1$3: function(member, nodeWithSpan, callback, $T) {
      return this._withStackFrame$body$_EvaluateVisitor0(member, nodeWithSpan, callback, $T, $T._eval$1("0*"));
    },
    _withStackFrame$body$_EvaluateVisitor0: function(member, nodeWithSpan, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, oldMember, result, t1;
      var $async$_async_evaluate0$_withStackFrame$1$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate0$_stack;
              t1.push(new S.Tuple2($async$self._async_evaluate0$_member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode_2));
              oldMember = $async$self._async_evaluate0$_member;
              $async$self._async_evaluate0$_member = member;
              $async$goto = 3;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withStackFrame$1$3);
            case 3:
              // returning from await.
              result = $async$result;
              $async$self._async_evaluate0$_member = oldMember;
              t1.pop();
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_withStackFrame$1$3, $async$completer);
    },
    _async_evaluate0$_stackFrame$2: function(member, span) {
      var url = span.file.url;
      return B.frameForSpan0(span, member, url != null && this._async_evaluate0$_importCache != null ? this._async_evaluate0$_importCache.humanize$1(url) : url);
    },
    _async_evaluate0$_stackTrace$1: function(span) {
      var t2, cur, _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);
      for (t2 = _this._async_evaluate0$_stack, t2 = new H.MappedListIterable(t2, new E._EvaluateVisitor__stackTrace_closure2(_this), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Frame*>")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      if (span != null)
        t1.push(_this._async_evaluate0$_stackFrame$2(_this._async_evaluate0$_member, span));
      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));
    },
    _async_evaluate0$_stackTrace$0: function() {
      return this._async_evaluate0$_stackTrace$1(null);
    },
    _async_evaluate0$_warn$3$deprecation: function(message, span, deprecation) {
      return this._async_evaluate0$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._async_evaluate0$_stackTrace$1(span));
    },
    _async_evaluate0$_warn$2: function(message, span) {
      return this._async_evaluate0$_warn$3$deprecation(message, span, false);
    },
    _async_evaluate0$_exception$2: function(message, span) {
      var t1 = span == null ? C.JSArray_methods.get$last(this._async_evaluate0$_stack).item2.get$span() : span;
      return new E.SassRuntimeException0(this._async_evaluate0$_stackTrace$1(span), message, t1);
    },
    _async_evaluate0$_exception$1: function(message) {
      return this._async_evaluate0$_exception$2(message, null);
    },
    _async_evaluate0$_multiSpanException$3: function(message, primaryLabel, secondaryLabels) {
      var t1 = C.JSArray_methods.get$last(this._async_evaluate0$_stack).item2.get$span();
      return new E.MultiSpanSassRuntimeException0(this._async_evaluate0$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);
    },
    _async_evaluate0$_adjustParseError$1$2: function(nodeWithSpan, callback) {
      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException0) {
          error = t1;
          t1 = error;
          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);
          span = nodeWithSpan.get$span();
          t1 = span;
          t2 = span;
          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);
          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);
          t1 = span;
          t1 = Y.FileLocation$_(t1.file, t1._file$_start);
          t3 = error;
          t3 = G.SourceSpanException.prototype.get$span.call(t3);
          t3 = Y.FileLocation$_(t3.file, t3._file$_start);
          t4 = span;
          t4 = Y.FileLocation$_(t4.file, t4._file$_start);
          t5 = error;
          t5 = G.SourceSpanException.prototype.get$span.call(t5);
          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);
          throw H.wrapException(this._async_evaluate0$_exception$2(error._span_exception$_message, syntheticSpan));
        } else
          throw exception;
      }
    },
    _async_evaluate0$_adjustParseError$2: function(nodeWithSpan, callback) {
      return this._async_evaluate0$_adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _async_evaluate0$_addExceptionSpan$1$2: function(nodeWithSpan, callback) {
      var error, error0, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.MultiSpanSassScriptException0) {
          error = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));
        } else if (t1 instanceof E.SassScriptException0) {
          error0 = t1;
          throw H.wrapException(this._async_evaluate0$_exception$2(error0.message, nodeWithSpan.get$span()));
        } else
          throw exception;
      }
    },
    _async_evaluate0$_addExceptionSpan$2: function(nodeWithSpan, callback) {
      return this._async_evaluate0$_addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _async_evaluate0$_addExceptionSpanAsync$1$2: function(nodeWithSpan, callback, $T) {
      return this._addExceptionSpanAsync$body$_EvaluateVisitor0(nodeWithSpan, callback, $T, $T._eval$1("0*"));
    },
    _addExceptionSpanAsync$body$_EvaluateVisitor0: function(nodeWithSpan, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, error0, t1, exception, $async$exception;
      var $async$_async_evaluate0$_addExceptionSpanAsync$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_addExceptionSpanAsync$1$2);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof E.MultiSpanSassScriptException0) {
                error = t1;
                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));
              } else if (t1 instanceof E.SassScriptException0) {
                error0 = t1;
                throw H.wrapException($async$self._async_evaluate0$_exception$2(error0.message, nodeWithSpan.get$span()));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_addExceptionSpanAsync$1$2, $async$completer);
    },
    _async_evaluate0$_addErrorSpan$1$2: function(nodeWithSpan, callback, $T) {
      return this._addErrorSpan$body$_EvaluateVisitor0(nodeWithSpan, callback, $T, $T._eval$1("0*"));
    },
    _addErrorSpan$body$_EvaluateVisitor0: function(nodeWithSpan, callback, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, t1, exception, $async$exception;
      var $async$_async_evaluate0$_addErrorSpan$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_addErrorSpan$1$2);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.legacy_SassRuntimeException_2._is(t1)) {
                error = t1;
                t1 = error.get$span();
                if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), "@error"))
                  throw $async$exception;
                throw H.wrapException(E.SassRuntimeException$0(error._span_exception$_message, nodeWithSpan.get$span(), $async$self._async_evaluate0$_stackTrace$0()));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_evaluate0$_addErrorSpan$1$2, $async$completer);
    }
  };
  E._EvaluateVisitor_closure29.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._async_evaluate0$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  E._EvaluateVisitor_closure30.prototype = {
    call$1: function($arguments) {
      var variable = J.$index$asx($arguments, 0).assertString$1("name"),
        t1 = this.$this._async_evaluate0$_environment,
        t2 = variable.text;
      t2.toString;
      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, "_", "-")) != null ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  E._EvaluateVisitor_closure31.prototype = {
    call$1: function($arguments) {
      var module, t2, t3, t4,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this;
      t2 = t1._async_evaluate0$_environment;
      t3 = variable.text;
      t3.toString;
      t4 = H.stringReplaceAllUnchecked(t3, "_", "-");
      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._async_evaluate0$_builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  E._EvaluateVisitor_closure32.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._async_evaluate0$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  E._EvaluateVisitor_closure33.prototype = {
    call$1: function($arguments) {
      var t1 = this.$this._async_evaluate0$_environment;
      if (!t1._async_environment0$_inMixin)
        throw H.wrapException(E.SassScriptException$0(string$.conten));
      return t1._async_environment0$_content != null ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  E._EvaluateVisitor_closure34.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._async_evaluate0$_environment._async_environment0$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value_2;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString0(t4.key, true), t4.value);
      }
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 37
  };
  E._EvaluateVisitor_closure35.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._async_evaluate0$_environment._async_environment0$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value_2;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString0(t4.key, true), new F.SassFunction0(t4.value));
      }
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 37
  };
  E._EvaluateVisitor_closure36.prototype = {
    call$1: function($arguments) {
      var module, callable,
        t1 = J.getInterceptor$asx($arguments),
        $name = t1.$index($arguments, 0).assertString$1("name"),
        css = t1.$index($arguments, 1).get$isTruthy();
      t1 = t1.$index($arguments, 2).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      if (css && module != null)
        throw H.wrapException(string$.x24css_a);
      if (css)
        callable = new L.PlainCssCallable0($name.text);
      else {
        t1 = this.$this;
        callable = t1._async_evaluate0$_addExceptionSpan$2(t1._async_evaluate0$_callableNode, new E._EvaluateVisitor__closure10(t1, $name, module));
      }
      if (callable != null)
        return new F.SassFunction0(callable);
      throw H.wrapException("Function not found: " + $name.toString$0(0));
    },
    $signature: 162
  };
  E._EvaluateVisitor__closure10.prototype = {
    call$0: function() {
      var t2,
        t1 = this.name.text;
      t1.toString;
      t1 = H.stringReplaceAllUnchecked(t1, "_", "-");
      t2 = this.module;
      t2 = t2 == null ? null : t2.text;
      return this.$this._async_evaluate0$_getFunction$2$namespace(t1, t2);
    },
    $signature: 108
  };
  E._EvaluateVisitor_closure37.prototype = {
    call$1: function($arguments) {
      return this.$call$body$_EvaluateVisitor_closure2($arguments);
    },
    $call$body$_EvaluateVisitor_closure2: function($arguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable, t1, $function, args;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$asx($arguments);
              $function = t1.$index($arguments, 0);
              args = type$.legacy_SassArgumentList_2._as(t1.$index($arguments, 1));
              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);
              t2 = type$.legacy_String;
              t3 = type$.legacy_Expression_2;
              t4 = $async$self.$this;
              t5 = t4._async_evaluate0$_callableNode.get$span();
              t6 = t4._async_evaluate0$_callableNode.get$span();
              args._argument_list$_wereKeywordsAccessed = true;
              t7 = args._argument_list$_keywords;
              if (t7.get$isEmpty(t7))
                t7 = null;
              else {
                t8 = type$.legacy_Value_2;
                t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);
                for (args._argument_list$_wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {
                  t10 = t7.get$current(t7);
                  t9.$indexSet(0, new D.SassString0(t10.key, false), t10.value);
                }
                t7 = new F.ValueExpression0(new A.SassMap0(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._async_evaluate0$_callableNode.get$span());
              }
              invocation = new X.ArgumentInvocation0(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression0(args, t6), t7, t5);
              $async$goto = $function instanceof D.SassString0 ? 3 : 4;
              break;
            case 3:
              // then
              N.warn0(string$.Passin + $function.toString$0(0) + ")) instead.", true);
              $async$goto = 5;
              return P._asyncAwait(t4.visitFunctionExpression$1(new F.FunctionExpression0(null, X.Interpolation$0(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._async_evaluate0$_callableNode.get$span()), invocation, t4._async_evaluate0$_callableNode.get$span())), $async$call$1);
            case 5:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              callable = $function.assertFunction$1("function").callable;
              $async$goto = type$.legacy_AsyncCallable_2._is(callable) ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return P._asyncAwait(t4._async_evaluate0$_runFunctionCallable$3(invocation, callable, t4._async_evaluate0$_callableNode), $async$call$1);
            case 9:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              throw H.wrapException(E.SassScriptException$0("The function " + H.S(callable.get$name(callable)) + string$.x20is_as));
            case 7:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 156
  };
  E._EvaluateVisitor_closure38.prototype = {
    call$1: function($arguments) {
      return this.$call$body$_EvaluateVisitor_closure1($arguments);
    },
    $call$body$_EvaluateVisitor_closure1: function($arguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, withMap, values, configuration, t2, t3, t1, url;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$asx($arguments);
              url = P.Uri_parse(t1.$index($arguments, 0).assertString$1("url").text);
              t1 = t1.$index($arguments, 1).get$realNull();
              t1 = t1 == null ? null : t1.assertMap$1("with");
              withMap = t1 == null ? null : t1.contents;
              if (withMap != null) {
                values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);
                t1 = $async$self.$this;
                withMap.forEach$1(0, new E._EvaluateVisitor__closure8(values, t1._async_evaluate0$_callableNode.get$span()));
                configuration = new A.Configuration0(values, t1._async_evaluate0$_callableNode, false);
              } else
                configuration = C.Configuration_Map_empty_null_true0;
              t1 = $async$self.$this;
              t2 = t1._async_evaluate0$_callableNode;
              t3 = t2.get$span();
              t3 = t3 == null ? null : t3.file.url;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, "load-css()", t2, new E._EvaluateVisitor__closure9(t1), t3, configuration, true), $async$call$1);
            case 3:
              // returning from await.
              t1._async_evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, true);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 176
  };
  E._EvaluateVisitor__closure8.prototype = {
    call$2: function(variable, value) {
      var $name,
        t1 = variable.assertString$1("with key").text;
      t1.toString;
      $name = H.stringReplaceAllUnchecked(t1, "_", "-");
      t1 = this.values;
      if (t1.containsKey$1($name))
        throw H.wrapException("The variable $" + $name + " was configured twice.");
      t1.$indexSet(0, $name, new Z.ConfiguredValue0(value, this.span, null));
    },
    $signature: 45
  };
  E._EvaluateVisitor__closure9.prototype = {
    call$1: function(module) {
      var t1 = this.$this;
      return t1._async_evaluate0$_combineCss$2$clone(module, true).accept$1(t1);
    },
    $signature: 152
  };
  E._EvaluateVisitor_run_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult_2),
        $async$returnValue, $async$self = this, t2, t1, url, $async$temp1, $async$temp2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node;
              url = t1.span.file.url;
              if (url != null) {
                t2 = $async$self.$this;
                t2._async_evaluate0$_activeModules.$indexSet(0, url, null);
                if (t2._async_evaluate0$_nodeImporter != null)
                  if (url.get$scheme() === "file")
                    t2._async_evaluate0$_includedFiles.add$1(0, $.$get$context().style.pathFromUri$1(M._parseUri(url)));
                  else if (url.toString$0(0) !== "stdin")
                    t2._async_evaluate0$_includedFiles.add$1(0, url.toString$0(0));
              }
              t2 = $async$self.$this;
              $async$temp1 = E;
              $async$temp2 = t2;
              $async$goto = 3;
              return P._asyncAwait(t2._async_evaluate0$_execute$2($async$self.importer, t1), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1.EvaluateResult0($async$temp2._async_evaluate0$_combineCss$1($async$result), t2._async_evaluate0$_includedFiles);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 287
  };
  E._EvaluateVisitor__withWarnCallback_closure2.prototype = {
    call$2: function(message, deprecation) {
      var t1 = this.$this,
        t2 = t1._async_evaluate0$_importSpan;
      return t1._async_evaluate0$_warn$3$deprecation(message, t2 == null ? t1._async_evaluate0$_callableNode.get$span() : t2, deprecation);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 72
  };
  E._EvaluateVisitor__loadModule_closure5.prototype = {
    call$0: function() {
      return this.callback.call$1(this.builtInModule);
    },
    $signature: 1
  };
  E._EvaluateVisitor__loadModule_closure6.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, module, error, error0, error1, error2, message, previousLoad, exception, t1, t2, result, importer, stylesheet, canonicalUrl, t3, $async$exception;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.nodeWithSpan;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate0$_loadStylesheet$3$baseUrl(J.toString$0$($async$self.url), t2.get$span(), $async$self.baseUrl), $async$call$0);
            case 2:
              // returning from await.
              result = $async$result;
              importer = result.item1;
              stylesheet = result.item2;
              canonicalUrl = stylesheet.span.file.url;
              t3 = t1._async_evaluate0$_activeModules;
              if (t3.containsKey$1(canonicalUrl)) {
                message = $async$self.namesInErrors ? "Module loop: " + H.S($.$get$context().prettyUri$1(canonicalUrl)) + " is already being loaded." : string$.Module;
                previousLoad = t3.$index(0, canonicalUrl);
                throw H.wrapException(previousLoad == null ? t1._async_evaluate0$_exception$1(message) : t1._async_evaluate0$_multiSpanException$3(message, "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
              }
              t3.$indexSet(0, canonicalUrl, t2);
              module = null;
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait(t1._async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, $async$self.configuration, $async$self.namesInErrors, t2), $async$call$0);
            case 6:
              // returning from await.
              module = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              t3.remove$1(0, canonicalUrl);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              $async$handler = 8;
              $async$goto = 11;
              return P._asyncAwait($async$self.callback.call$1(module), $async$call$0);
            case 11:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 10;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception = $async$currentError;
              t2 = H.unwrapException($async$exception);
              if (type$.legacy_SassRuntimeException_2._is(t2))
                throw $async$exception;
              else if (t2 instanceof E.MultiSpanSassException0) {
                error = t2;
                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._async_evaluate0$_stackTrace$1(error.get$span())));
              } else if (t2 instanceof E.SassException0) {
                error0 = t2;
                throw H.wrapException(t1._async_evaluate0$_exception$2(error0._span_exception$_message, error0.get$span()));
              } else if (t2 instanceof E.MultiSpanSassScriptException0) {
                error1 = t2;
                throw H.wrapException(t1._async_evaluate0$_multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));
              } else if (t2 instanceof E.SassScriptException0) {
                error2 = t2;
                throw H.wrapException(t1._async_evaluate0$_exception$1(error2.message));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 10;
              break;
            case 7:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 10:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor__execute_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, t4, css, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldExtender, oldStyleRule, oldMediaQueries, oldDeclarationName, oldInUnknownAtRule, oldAtRootExcludingStyleRule, oldInKeyframes, oldConfiguration;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldImporter = t1._async_evaluate0$_importer;
              oldStylesheet = t1._async_evaluate0$_stylesheet;
              oldRoot = t1._async_evaluate0$_root;
              oldParent = t1._async_evaluate0$_parent;
              oldEndOfImports = t1._async_evaluate0$_endOfImports;
              oldOutOfOrderImports = t1._async_evaluate0$_outOfOrderImports;
              oldExtender = t1._async_evaluate0$_extender;
              oldStyleRule = t1._async_evaluate0$_styleRule;
              oldMediaQueries = t1._async_evaluate0$_mediaQueries;
              oldDeclarationName = t1._async_evaluate0$_declarationName;
              oldInUnknownAtRule = t1._async_evaluate0$_inUnknownAtRule;
              oldAtRootExcludingStyleRule = t1._async_evaluate0$_atRootExcludingStyleRule;
              oldInKeyframes = t1._async_evaluate0$_inKeyframes;
              oldConfiguration = t1._async_evaluate0$_configuration;
              t1._async_evaluate0$_importer = $async$self.importer;
              t2 = t1._async_evaluate0$_stylesheet = $async$self.stylesheet;
              t3 = t2.span;
              t1._async_evaluate0$_parent = t1._async_evaluate0$_root = V.ModifiableCssStylesheet$0(t3);
              t1._async_evaluate0$_endOfImports = 0;
              t1._async_evaluate0$_outOfOrderImports = null;
              t1._async_evaluate0$_extender = $async$self.extender;
              t1._async_evaluate0$_declarationName = t1._async_evaluate0$_mediaQueries = t1._async_evaluate0$_styleRule = null;
              t1._async_evaluate0$_inKeyframes = t1._async_evaluate0$_atRootExcludingStyleRule = t1._async_evaluate0$_inUnknownAtRule = false;
              t4 = $async$self.configuration;
              if (t4 != null)
                t1._async_evaluate0$_configuration = t4;
              $async$goto = 2;
              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);
            case 2:
              // returning from await.
              css = t1._async_evaluate0$_outOfOrderImports == null ? t1._async_evaluate0$_root : new V.CssStylesheet0(new P.UnmodifiableListView(t1._async_evaluate0$_addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode_2), t3);
              $async$self._box_0.css = css;
              t1._async_evaluate0$_importer = oldImporter;
              t1._async_evaluate0$_stylesheet = oldStylesheet;
              t1._async_evaluate0$_root = oldRoot;
              t1._async_evaluate0$_parent = oldParent;
              t1._async_evaluate0$_endOfImports = oldEndOfImports;
              t1._async_evaluate0$_outOfOrderImports = oldOutOfOrderImports;
              t1._async_evaluate0$_extender = oldExtender;
              t1._async_evaluate0$_styleRule = oldStyleRule;
              t1._async_evaluate0$_mediaQueries = oldMediaQueries;
              t1._async_evaluate0$_declarationName = oldDeclarationName;
              t1._async_evaluate0$_inUnknownAtRule = oldInUnknownAtRule;
              t1._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              t1._async_evaluate0$_inKeyframes = oldInKeyframes;
              t1._async_evaluate0$_configuration = oldConfiguration;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor__combineCss_closure8.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 111
  };
  E._EvaluateVisitor__combineCss_closure9.prototype = {
    call$1: function(target) {
      return !this.selectors.contains$1(0, target);
    },
    $signature: 19
  };
  E._EvaluateVisitor__combineCss_closure10.prototype = {
    call$1: function(module) {
      return module.cloneCss$0();
    },
    $signature: 168
  };
  E._EvaluateVisitor__extendModules_closure5.prototype = {
    call$1: function(target) {
      return !this.originalSelectors.contains$1(0, target);
    },
    $signature: 19
  };
  E._EvaluateVisitor__extendModules_closure6.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender_2);
    },
    $signature: 150
  };
  E._EvaluateVisitor__topologicalModules_visitModule2.prototype = {
    call$1: function(module) {
      var t1, t2, t3, _i, upstream;
      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        upstream = t1[_i];
        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))
          this.call$1(upstream);
      }
      this.sorted.addFirst$1(module);
    },
    $signature: 152
  };
  E._EvaluateVisitor_visitAtRootRule_closure8.prototype = {
    call$0: function() {
      return V.AtRootQueryParser$0(this.resolved, this.$this._async_evaluate0$_logger, null).parse$0();
    },
    $signature: 125
  };
  E._EvaluateVisitor_visitAtRootRule_closure9.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitAtRootRule_closure10.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  E._EvaluateVisitor__scopeForAtRoot_closure17.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, oldParent;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldParent = t1._async_evaluate0$_parent;
              t1._async_evaluate0$_parent = $async$self.newParent;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate0$_environment.scope$1$2$when(callback, $async$self.node.hasDeclarations, type$.void), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate0$_parent = oldParent;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot_closure18.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, oldAtRootExcludingStyleRule;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldAtRootExcludingStyleRule = t1._async_evaluate0$_atRootExcludingStyleRule;
              t1._async_evaluate0$_atRootExcludingStyleRule = true;
              $async$goto = 2;
              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot_closure19.prototype = {
    call$1: function(callback) {
      return this.$this._async_evaluate0$_withMediaQueries$1$2(null, new E._EvaluateVisitor__scopeForAtRoot__closure2(this.innerScope, callback), type$.Null);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot__closure2.prototype = {
    call$0: function() {
      return this.innerScope.call$1(this.callback);
    },
    $signature: 2
  };
  E._EvaluateVisitor__scopeForAtRoot_closure20.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, wasInKeyframes;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              wasInKeyframes = t1._async_evaluate0$_inKeyframes;
              t1._async_evaluate0$_inKeyframes = false;
              $async$goto = 2;
              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate0$_inKeyframes = wasInKeyframes;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor__scopeForAtRoot_closure21.prototype = {
    call$1: function($parent) {
      return type$.legacy_CssAtRule_2._is($parent);
    },
    $signature: 146
  };
  E._EvaluateVisitor__scopeForAtRoot_closure22.prototype = {
    call$1: function(callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, wasInUnknownAtRule;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              wasInUnknownAtRule = t1._async_evaluate0$_inUnknownAtRule;
              t1._async_evaluate0$_inUnknownAtRule = false;
              $async$goto = 2;
              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  E._EvaluateVisitor_visitContentRule_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.content.declaration.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitDeclaration_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitEachRule_closure8.prototype = {
    call$1: function(value) {
      return this.$this._async_evaluate0$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);
    },
    $signature: 78
  };
  E._EvaluateVisitor_visitEachRule_closure9.prototype = {
    call$1: function(value) {
      return this.$this._async_evaluate0$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);
    },
    $signature: 78
  };
  E._EvaluateVisitor_visitEachRule_closure10.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._async_evaluate0$_handleReturn$2(_this.list.get$asList(), new E._EvaluateVisitor_visitEachRule__closure2(t1, _this.setVariables, _this.node));
    },
    $signature: 31
  };
  E._EvaluateVisitor_visitEachRule__closure2.prototype = {
    call$1: function(element) {
      var t1;
      this.setVariables.call$1(element);
      t1 = this.$this;
      return t1._async_evaluate0$_handleReturn$2(this.node.children, new E._EvaluateVisitor_visitEachRule___closure2(t1));
    },
    $signature: 294
  };
  E._EvaluateVisitor_visitEachRule___closure2.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 77
  };
  E._EvaluateVisitor_visitExtendRule_closure2.prototype = {
    call$0: function() {
      var t1 = this.targetText;
      return D.SelectorList_SelectorList$parse0(B.trimAscii0(t1.get$value(t1), true), false, true, this.$this._async_evaluate0$_logger);
    },
    $signature: 44
  };
  E._EvaluateVisitor_visitAtRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t3, _i, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate0$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) || t1._async_evaluate0$_inKeyframes ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return P._asyncAwait(t1._async_evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitAtRule__closure2(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitAtRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitAtRule_closure6.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitForRule_closure14.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber_2),
        $async$returnValue, $async$self = this;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.node.from.accept$1($async$self.$this), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.assertNumber$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 138
  };
  E._EvaluateVisitor_visitForRule_closure15.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber_2),
        $async$returnValue, $async$self = this;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.node.to.accept$1($async$self.$this), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.assertNumber$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 138
  };
  E._EvaluateVisitor_visitForRule_closure16.prototype = {
    call$0: function() {
      return this.fromNumber.assertInt$0();
    },
    $signature: 11
  };
  E._EvaluateVisitor_visitForRule_closure17.prototype = {
    call$0: function() {
      var t1 = this.fromNumber;
      return this.toNumber.coerce$2(t1.get$numeratorUnits(), t1.get$denominatorUnits()).assertInt$0();
    },
    $signature: 11
  };
  E._EvaluateVisitor_visitForRule_closure18.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, i, t3, t4, t5, t6, t7, t8, result, t1, t2, nodeWithSpan;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.node;
              nodeWithSpan = t1._async_evaluate0$_expressionNode$1(t2.from);
              i = $async$self.from, t3 = $async$self._box_0, t4 = $async$self.direction, t5 = t2.variable, t6 = $async$self.fromNumber, t2 = t2.children;
            case 3:
              // for condition
              if (!(i !== t3.to)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t7 = t1._async_evaluate0$_environment;
              t8 = t6.get$numeratorUnits();
              t7.setLocalVariable$3(t5, T.SassNumber_SassNumber$withUnits0(i, t6.get$denominatorUnits(), t8), nodeWithSpan);
              $async$goto = 6;
              return P._asyncAwait(t1._async_evaluate0$_handleReturn$2(t2, new E._EvaluateVisitor_visitForRule__closure2(t1)), $async$call$0);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              i += t4;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 31
  };
  E._EvaluateVisitor_visitForRule__closure2.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 77
  };
  E._EvaluateVisitor_visitForwardRule_closure5.prototype = {
    call$1: function(module) {
      this.$this._async_evaluate0$_environment.forwardModule$2(module, this.node);
    },
    $signature: 101
  };
  E._EvaluateVisitor_visitForwardRule_closure6.prototype = {
    call$1: function(module) {
      this.$this._async_evaluate0$_environment.forwardModule$2(module, this.node);
    },
    $signature: 101
  };
  E._EvaluateVisitor__assertConfigurationIsEmpty_closure2.prototype = {
    call$2: function($name, value) {
      var t1 = this.only;
      if (t1 != null && !t1.contains$1(0, $name))
        return;
      t1 = this.nameInError ? "$" + H.S($name) + string$.x20was_n : string$.This_v;
      throw H.wrapException(this.$this._async_evaluate0$_exception$2(t1, value.configurationSpan));
    },
    $signature: 136
  };
  E._EvaluateVisitor_visitIfRule_closure2.prototype = {
    call$0: function() {
      var t1 = this.$this;
      return t1._async_evaluate0$_handleReturn$2(this._box_0.clause.children, new E._EvaluateVisitor_visitIfRule__closure2(t1));
    },
    $signature: 31
  };
  E._EvaluateVisitor_visitIfRule__closure2.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 77
  };
  E._EvaluateVisitor__visitDynamicImport_closure2.prototype = {
    call$0: function() {
      return this.$call$body$_EvaluateVisitor__visitDynamicImport_closure0();
    },
    $call$body$_EvaluateVisitor__visitDynamicImport_closure0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _box_0, t1, t2, result, importer, stylesheet, url, t3;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              t1 = $async$self.$this;
              t2 = $async$self.$import;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate0$_loadStylesheet$3$forImport(t2.url, t2.span, true), $async$call$0);
            case 3:
              // returning from await.
              result = $async$result;
              importer = result.item1;
              stylesheet = result.item2;
              url = stylesheet.span.file.url;
              t3 = t1._async_evaluate0$_activeModules;
              if (t3.containsKey$1(url)) {
                previousLoad = t3.$index(0, url);
                throw H.wrapException(previousLoad == null ? t1._async_evaluate0$_exception$1("This file is already being loaded.") : t1._async_evaluate0$_multiSpanException$3("This file is already being loaded.", "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
              }
              t3.$indexSet(0, url, t2);
              t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_uses, type$.UnmodifiableListView_legacy_UseRule_2);
              if (t2.get$length(t2) === 0) {
                t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);
                t2 = t2.get$length(t2) === 0;
              } else
                t2 = false;
              $async$goto = t2 ? 4 : 5;
              break;
            case 4:
              // then
              oldImporter = t1._async_evaluate0$_importer;
              oldStylesheet = t1._async_evaluate0$_stylesheet;
              t1._async_evaluate0$_importer = importer;
              t1._async_evaluate0$_stylesheet = stylesheet;
              $async$goto = 6;
              return P._asyncAwait(t1.visitStylesheet$1(stylesheet), $async$call$0);
            case 6:
              // returning from await.
              t1._async_evaluate0$_importer = oldImporter;
              t1._async_evaluate0$_stylesheet = oldStylesheet;
              t3.remove$1(0, url);
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // join
              _box_0.children = null;
              t2 = t1._async_evaluate0$_environment;
              t4 = type$.legacy_String;
              t5 = type$.legacy_Module_legacy_AsyncCallable_2;
              t6 = type$.legacy_AstNode_2;
              t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable_2);
              t8 = t2._async_environment0$_variables;
              t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));
              t9 = t2._async_environment0$_variableNodes;
              if (t9 == null)
                t9 = null;
              else
                t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));
              t10 = t2._async_environment0$_functions;
              t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));
              t11 = t2._async_environment0$_mixins;
              t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));
              environment = Q.AsyncEnvironment$_0(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), null, null, null, t7, t8, t9, t10, t11, t2._async_environment0$_content);
              $async$goto = 7;
              return P._asyncAwait(t1._async_evaluate0$_withEnvironment$1$2(environment, new E._EvaluateVisitor__visitDynamicImport__closure2(_box_0, t1, importer, stylesheet, environment), type$.Null), $async$call$0);
            case 7:
              // returning from await.
              module = Q._EnvironmentModule__EnvironmentModule2(environment, new V.CssStylesheet0(new P.UnmodifiableListView(C.List_empty12, type$.UnmodifiableListView_legacy_CssNode_2), Y.SourceFile$decoded(C.List_empty1, "<dummy module>").span$1(0)), C.C_EmptyExtender0, environment._async_environment0$_forwardedModules);
              t1._async_evaluate0$_environment.importForwards$1(module);
              $async$goto = module.transitivelyContainsCss ? 8 : 9;
              break;
            case 8:
              // then
              $async$goto = 10;
              return P._asyncAwait(t1._async_evaluate0$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1), $async$call$0);
            case 10:
              // returning from await.
            case 9:
              // join
              visitor = new E._ImportedCssVisitor2(t1);
              for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)
                t1.get$current(t1).accept$1(visitor);
              t3.remove$1(0, url);
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor__visitDynamicImport__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldConfiguration;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldImporter = t1._async_evaluate0$_importer;
              oldStylesheet = t1._async_evaluate0$_stylesheet;
              oldRoot = t1._async_evaluate0$_root;
              oldParent = t1._async_evaluate0$_parent;
              oldEndOfImports = t1._async_evaluate0$_endOfImports;
              oldOutOfOrderImports = t1._async_evaluate0$_outOfOrderImports;
              oldConfiguration = t1._async_evaluate0$_configuration;
              t1._async_evaluate0$_importer = $async$self.importer;
              t2 = t1._async_evaluate0$_stylesheet = $async$self.stylesheet;
              t1._async_evaluate0$_parent = t1._async_evaluate0$_root = V.ModifiableCssStylesheet$0(t2.span);
              t1._async_evaluate0$_endOfImports = 0;
              t1._async_evaluate0$_outOfOrderImports = null;
              t3 = new P.UnmodifiableListView(t2._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);
              if (!t3.get$isEmpty(t3))
                t1._async_evaluate0$_configuration = $async$self.environment.toImplicitConfiguration$0();
              $async$goto = 2;
              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);
            case 2:
              // returning from await.
              $async$self._box_0.children = t1._async_evaluate0$_addOutOfOrderImports$0();
              t1._async_evaluate0$_importer = oldImporter;
              t1._async_evaluate0$_stylesheet = oldStylesheet;
              t1._async_evaluate0$_root = oldRoot;
              t1._async_evaluate0$_parent = oldParent;
              t1._async_evaluate0$_endOfImports = oldEndOfImports;
              t1._async_evaluate0$_outOfOrderImports = oldOutOfOrderImports;
              t1._async_evaluate0$_configuration = oldConfiguration;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule_closure8.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate0$_environment.getMixin$2$namespace(t1.name, t1.namespace);
    },
    $signature: 108
  };
  E._EvaluateVisitor_visitIncludeRule_closure9.prototype = {
    call$0: function() {
      return this.node.get$spanWithoutContent();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 33
  };
  E._EvaluateVisitor_visitIncludeRule_closure10.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate0$_environment.withContent$2($async$self.contentCallable, new E._EvaluateVisitor_visitIncludeRule__closure2(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(t1._async_evaluate0$_environment.asMixin$1(new E._EvaluateVisitor_visitIncludeRule___closure2(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule___closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, t4, t5, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.mixin.declaration.children, t2 = t1.length, t3 = $async$self.$this, t4 = $async$self.nodeWithSpan, t5 = type$.legacy_Value_2, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t3._async_evaluate0$_addErrorSpan$1$2(t4, new E._EvaluateVisitor_visitIncludeRule____closure2(t3, t1[_i]), t5), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitIncludeRule____closure2.prototype = {
    call$0: function() {
      return this.statement.accept$1(this.$this);
    },
    $signature: 31
  };
  E._EvaluateVisitor_visitMediaRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.mergedQueries;
              if (t2 == null)
                t2 = $async$self.queries;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate0$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitMediaRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitMediaRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t3, _i, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate0$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return P._asyncAwait(t1._async_evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitMediaRule___closure2(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitMediaRule___closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitMediaRule_closure6.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule_2._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  E._EvaluateVisitor__visitMediaQueries_closure2.prototype = {
    call$0: function() {
      return F.MediaQueryParser$0(this.resolved, this.$this._async_evaluate0$_logger, null).parse$0();
    },
    $signature: 100
  };
  E._EvaluateVisitor_visitStyleRule_closure20.prototype = {
    call$0: function() {
      var t1 = this.selectorText;
      return E.KeyframeSelectorParser$0(t1.get$value(t1), this.$this._async_evaluate0$_logger).parse$0();
    },
    $signature: 40
  };
  E._EvaluateVisitor_visitStyleRule_closure21.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitStyleRule_closure22.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitStyleRule_closure23.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this.selectorText;
      t1 = t1.get$value(t1);
      t2 = this.$this;
      t3 = !t2._async_evaluate0$_stylesheet.plainCss;
      return D.SelectorList_SelectorList$parse0(t1, t3, t3, t2._async_evaluate0$_logger);
    },
    $signature: 44
  };
  E._EvaluateVisitor_visitStyleRule_closure24.prototype = {
    call$0: function() {
      var t1 = this._box_0.parsedSelector,
        t2 = this.$this,
        t3 = t2._async_evaluate0$_styleRule;
      t3 = t3 == null ? null : t3.originalSelector;
      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._async_evaluate0$_atRootExcludingStyleRule);
    },
    $signature: 44
  };
  E._EvaluateVisitor_visitStyleRule_closure25.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate0$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitStyleRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitStyleRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitStyleRule_closure26.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitSupportsRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t3, _i, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate0$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return P._asyncAwait(t1._async_evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitSupportsRule__closure2(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitSupportsRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitSupportsRule_closure6.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitVariableDeclaration_closure8.prototype = {
    call$0: function() {
      var t1 = this.override;
      this.$this._async_evaluate0$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);
    },
    $signature: 0
  };
  E._EvaluateVisitor_visitVariableDeclaration_closure9.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 21
  };
  E._EvaluateVisitor_visitVariableDeclaration_closure10.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.node;
      t1._async_evaluate0$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._async_evaluate0$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);
    },
    $signature: 0
  };
  E._EvaluateVisitor_visitUseRule_closure2.prototype = {
    call$1: function(module) {
      var t1 = this.node;
      this.$this._async_evaluate0$_environment.addModule$3$namespace(module, t1, t1.namespace);
    },
    $signature: 101
  };
  E._EvaluateVisitor_visitWarnRule_closure2.prototype = {
    call$0: function() {
      return this.node.expression.accept$1(this.$this);
    },
    $signature: 31
  };
  E._EvaluateVisitor_visitWhileRule_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, result;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node, t2 = t1.condition, t3 = $async$self.$this, t1 = t1.children;
            case 3:
              // for condition
              $async$goto = 5;
              return P._asyncAwait(t2.accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
              if (!$async$result.get$isTruthy()) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t3._async_evaluate0$_handleReturn$2(t1, new E._EvaluateVisitor_visitWhileRule__closure2(t3)), $async$call$0);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 31
  };
  E._EvaluateVisitor_visitWhileRule__closure2.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 77
  };
  E._EvaluateVisitor_visitBinaryOperationExpression_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, right, result, t1, t2, left, $async$temp1, $async$temp2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node;
              t2 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(t1.left.accept$1(t2), $async$call$0);
            case 3:
              // returning from await.
              left = $async$result;
            case 4:
              // switch
              switch (t1.operator) {
                case C.BinaryOperator_kjl0:
                  // goto case
                  $async$goto = 6;
                  break;
                case C.BinaryOperator_or_or_10:
                  // goto case
                  $async$goto = 7;
                  break;
                case C.BinaryOperator_and_and_20:
                  // goto case
                  $async$goto = 8;
                  break;
                case C.BinaryOperator_YlX0:
                  // goto case
                  $async$goto = 9;
                  break;
                case C.BinaryOperator_i5H0:
                  // goto case
                  $async$goto = 10;
                  break;
                case C.BinaryOperator_AcR1:
                  // goto case
                  $async$goto = 11;
                  break;
                case C.BinaryOperator_1da0:
                  // goto case
                  $async$goto = 12;
                  break;
                case C.BinaryOperator_8qt0:
                  // goto case
                  $async$goto = 13;
                  break;
                case C.BinaryOperator_33h0:
                  // goto case
                  $async$goto = 14;
                  break;
                case C.BinaryOperator_AcR2:
                  // goto case
                  $async$goto = 15;
                  break;
                case C.BinaryOperator_iyO0:
                  // goto case
                  $async$goto = 16;
                  break;
                case C.BinaryOperator_O1M0:
                  // goto case
                  $async$goto = 17;
                  break;
                case C.BinaryOperator_RTB0:
                  // goto case
                  $async$goto = 18;
                  break;
                case C.BinaryOperator_2ad0:
                  // goto case
                  $async$goto = 19;
                  break;
                default:
                  // goto default
                  $async$goto = 20;
                  break;
              }
              break;
            case 6:
              // case
              $async$goto = 21;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 21:
              // returning from await.
              right = $async$result;
              left.toString;
              t1 = N.serializeValue(left, false, true) + "=";
              right.toString;
              $async$returnValue = new D.SassString0(t1 + N.serializeValue(right, false, true), false);
              // goto return
              $async$goto = 1;
              break;
            case 7:
              // case
              $async$goto = left.get$isTruthy() ? 22 : 24;
              break;
            case 22:
              // then
              $async$result = left;
              // goto join
              $async$goto = 23;
              break;
            case 24:
              // else
              $async$goto = 25;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 25:
              // returning from await.
            case 23:
              // join
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // case
              $async$goto = left.get$isTruthy() ? 26 : 28;
              break;
            case 26:
              // then
              $async$goto = 29;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 29:
              // returning from await.
              // goto join
              $async$goto = 27;
              break;
            case 28:
              // else
              $async$result = left;
            case 27:
              // join
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 9:
              // case
              $async$temp1 = J;
              $async$temp2 = left;
              $async$goto = 30;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 30:
              // returning from await.
              $async$returnValue = $async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true : C.SassBoolean_false;
              // goto return
              $async$goto = 1;
              break;
            case 10:
              // case
              $async$temp1 = J;
              $async$temp2 = left;
              $async$goto = 31;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 31:
              // returning from await.
              $async$returnValue = !$async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true : C.SassBoolean_false;
              // goto return
              $async$goto = 1;
              break;
            case 11:
              // case
              $async$temp1 = left;
              $async$goto = 32;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 32:
              // returning from await.
              $async$returnValue = $async$temp1.greaterThan$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // case
              $async$temp1 = left;
              $async$goto = 33;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 33:
              // returning from await.
              $async$returnValue = $async$temp1.greaterThanOrEquals$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 13:
              // case
              $async$temp1 = left;
              $async$goto = 34;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 34:
              // returning from await.
              $async$returnValue = $async$temp1.lessThan$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 14:
              // case
              $async$temp1 = left;
              $async$goto = 35;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 35:
              // returning from await.
              $async$returnValue = $async$temp1.lessThanOrEquals$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 15:
              // case
              $async$temp1 = left;
              $async$goto = 36;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 36:
              // returning from await.
              $async$returnValue = $async$temp1.plus$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 16:
              // case
              $async$temp1 = left;
              $async$goto = 37;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 37:
              // returning from await.
              $async$returnValue = $async$temp1.minus$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 17:
              // case
              $async$temp1 = left;
              $async$goto = 38;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 38:
              // returning from await.
              $async$returnValue = $async$temp1.times$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 18:
              // case
              $async$goto = 39;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 39:
              // returning from await.
              right = $async$result;
              result = left.dividedBy$1(right);
              if (t1.allowsSlash && left instanceof T.SassNumber0 && right instanceof T.SassNumber0) {
                $async$returnValue = type$.legacy_SassNumber_2._as(result).withSlash$2(left, right);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 19:
              // case
              $async$temp1 = left;
              $async$goto = 40;
              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 40:
              // returning from await.
              $async$returnValue = $async$temp1.modulo$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 20:
              // default
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // after switch
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 31
  };
  E._EvaluateVisitor_visitVariableExpression_closure2.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 21
  };
  E._EvaluateVisitor_visitListExpression_closure2.prototype = {
    call$1: function(expression) {
      return expression.accept$1(this.$this);
    },
    $signature: 303
  };
  E._EvaluateVisitor_visitFunctionExpression_closure5.prototype = {
    call$0: function() {
      var t1 = this.node.namespace,
        t2 = this.plainName;
      if (t1 == null)
        t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return this.$this._async_evaluate0$_getFunction$2$namespace(t2, t1);
    },
    $signature: 108
  };
  E._EvaluateVisitor_visitFunctionExpression_closure6.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._async_evaluate0$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);
    },
    $signature: 31
  };
  E._EvaluateVisitor__runUserDefinedCallable_closure2.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.callable;
      return t1._async_evaluate0$_withEnvironment$1$2(t2.environment.closure$0(), new E._EvaluateVisitor__runUserDefinedCallable__closure2(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run), type$.legacy_Value_2);
    },
    $signature: 31
  };
  E._EvaluateVisitor__runUserDefinedCallable__closure2.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._async_evaluate0$_environment.scope$1$1(new E._EvaluateVisitor__runUserDefinedCallable___closure2(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value_2);
    },
    $signature: 31
  };
  E._EvaluateVisitor__runUserDefinedCallable___closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, declaredArguments, minLength, t8, i, t9, t10, t11, argument, value, t12, rest, argumentList, result, argumentWord, argumentNames, t1, t2, t3, t4, t5, t6, t7;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.evaluated;
              t3 = t2.positional;
              t4 = t3.length;
              t5 = t2.named;
              t6 = $async$self.callable.declaration.$arguments;
              t7 = $async$self.nodeWithSpan;
              t1._async_evaluate0$_verifyArguments$4(t4, t5, t6, t7);
              declaredArguments = t6.$arguments;
              t4 = declaredArguments.length;
              minLength = Math.min(t3.length, t4);
              for (t8 = t1._async_evaluate0$_sourceMap, i = 0; i < minLength; ++i) {
                t9 = t1._async_evaluate0$_environment;
                t10 = declaredArguments[i].name;
                t11 = t3[i].withoutSlash$0();
                t9.setLocalVariable$3(t10, t11, t8 ? t2.positionalNodes[i] : null);
              }
              i = t3.length;
            case 3:
              // for condition
              if (!(i < t4)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              argument = declaredArguments[i];
              t9 = argument.name;
              value = t5.remove$1(0, t9);
              $async$goto = value == null ? 6 : 7;
              break;
            case 6:
              // then
              $async$goto = 8;
              return P._asyncAwait(argument.defaultValue.accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
              value = $async$result;
            case 7:
              // join
              t10 = t1._async_evaluate0$_environment;
              t11 = value.withoutSlash$0();
              if (t8) {
                t12 = t2.namedNodes.$index(0, t9);
                if (t12 == null)
                  t12 = t1._async_evaluate0$_expressionNode$1(argument.defaultValue);
              } else
                t12 = null;
              t10.setLocalVariable$3(t9, t11, t12);
            case 4:
              // for update
              ++i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t8 = t6.restArgument;
              if (t8 != null) {
                rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty16;
                t2 = t2.separator;
                argumentList = D.SassArgumentList$0(rest, t5, t2 === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : t2);
                t1._async_evaluate0$_environment.setLocalVariable$3(t8, argumentList, t7);
              } else
                argumentList = null;
              $async$goto = 9;
              return P._asyncAwait($async$self.run.call$0(), $async$call$0);
            case 9:
              // returning from await.
              result = $async$result;
              if (argumentList == null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              if (t5.get$isEmpty(t5)) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              if (argumentList._argument_list$_wereKeywordsAccessed) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = t5.get$keys(t5);
              argumentWord = B.pluralize0("argument", t2.get$length(t2), null);
              t5 = t5.get$keys(t5);
              argumentNames = B.toSentence0(H.MappedIterable_MappedIterable(t5, new E._EvaluateVisitor__runUserDefinedCallable____closure2(), H._instanceType(t5)._eval$1("Iterable.E"), type$.legacy_Object), "or");
              throw H.wrapException(E.MultiSpanSassRuntimeException$0("No " + argumentWord + " named " + H.S(argumentNames) + ".", t7.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), t1._async_evaluate0$_stackTrace$1(t7.get$span())));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 31
  };
  E._EvaluateVisitor__runUserDefinedCallable____closure2.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  E._EvaluateVisitor__runFunctionCallable_closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, _i, $returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = $async$self.$this, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t2[_i].accept$1(t4), $async$call$0);
            case 6:
              // returning from await.
              $returnValue = $async$result;
              if ($returnValue instanceof F.Value0) {
                $async$returnValue = $returnValue;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              throw H.wrapException(t4._async_evaluate0$_exception$2("Function finished without @return.", t1.span));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 31
  };
  E._EvaluateVisitor__runBuiltInCallable_closure5.prototype = {
    call$0: function() {
      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);
    },
    $signature: 1
  };
  E._EvaluateVisitor__runBuiltInCallable_closure6.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  E._EvaluateVisitor__evaluateArguments_closure2.prototype = {
    call$2: function(key, value) {
      var t1;
      this.named.$indexSet(0, key, value);
      t1 = this.namedNodes;
      if (t1 != null)
        t1.$indexSet(0, key, this.restNodeForSpan);
    },
    $signature: 76
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure11.prototype = {
    call$1: function(value) {
      return new F.ValueExpression0(value, null);
    },
    $signature: 48
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure12.prototype = {
    call$1: function(value) {
      return new F.ValueExpression0(value, null);
    },
    $signature: 48
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure13.prototype = {
    call$2: function(key, value) {
      this.named.$indexSet(0, key, new F.ValueExpression0(value, null));
    },
    $signature: 76
  };
  E._EvaluateVisitor__evaluateMacroArguments_closure14.prototype = {
    call$1: function(value) {
      return new F.ValueExpression0(value, null);
    },
    $signature: 48
  };
  E._EvaluateVisitor__addRestMap_closure5.prototype = {
    call$1: function(value) {
      return this.T._eval$1("0*")._as(value);
    },
    $signature: function() {
      return this.T._eval$1("0*(Value0*)");
    }
  };
  E._EvaluateVisitor__addRestMap_closure6.prototype = {
    call$2: function(key, value) {
      var _this = this;
      if (key instanceof D.SassString0)
        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));
      else
        throw H.wrapException(_this.$this._async_evaluate0$_exception$2(string$.Variab_ + H.S(key) + " is not a string in " + _this.map.toString$0(0) + ".", _this.nodeWithSpan.get$span()));
    },
    $signature: 45
  };
  E._EvaluateVisitor__verifyArguments_closure2.prototype = {
    call$0: function() {
      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));
    },
    $signature: 1
  };
  E._EvaluateVisitor_visitStringExpression_closure2.prototype = {
    call$1: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, result;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (typeof value == "string") {
                $async$returnValue = value;
                // goto return
                $async$goto = 1;
                break;
              }
              type$.legacy_Expression_2._as(value);
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(value.accept$1(t1), $async$call$1);
            case 3:
              // returning from await.
              result = $async$result;
              $async$returnValue = result instanceof D.SassString0 ? result.text : t1._async_evaluate0$_serialize$3$quote(result, value, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 79
  };
  E._EvaluateVisitor_visitCssAtRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssAtRule_closure6.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitCssKeyframeBlock_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssKeyframeBlock_closure6.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitCssMediaRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.mergedQueries;
              if (t2 == null)
                t2 = $async$self.node.queries;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate0$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitCssMediaRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssMediaRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, cur, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate0$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));
            case 5:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 6;
                break;
              }
              cur = t2.__internal$_current;
              $async$goto = 7;
              return P._asyncAwait(cur.accept$1(t1), $async$call$0);
            case 7:
              // returning from await.
              // goto for condition
              $async$goto = 5;
              break;
            case 6:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 8;
              return P._asyncAwait(t1._async_evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssMediaRule___closure2(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);
            case 8:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssMediaRule___closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssMediaRule_closure6.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule_2._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitCssStyleRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return P._asyncAwait(t1._async_evaluate0$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitCssStyleRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssStyleRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssStyleRule_closure6.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor_visitCssSupportsRule_closure5.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, cur, t1, t2;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._async_evaluate0$_styleRule;
              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));
            case 5:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 6;
                break;
              }
              cur = t2.__internal$_current;
              $async$goto = 7;
              return P._asyncAwait(cur.accept$1(t1), $async$call$0);
            case 7:
              // returning from await.
              // goto for condition
              $async$goto = 5;
              break;
            case 6:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 8;
              return P._asyncAwait(t1._async_evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssSupportsRule__closure2(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);
            case 8:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssSupportsRule__closure2.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, cur;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              cur = t1.__internal$_current;
              $async$goto = 4;
              return P._asyncAwait(cur.accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  E._EvaluateVisitor_visitCssSupportsRule_closure6.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._EvaluateVisitor__performInterpolation_closure2.prototype = {
    call$1: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),
        $async$returnValue, $async$self = this, t1, result, t2, t3;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (typeof value == "string") {
                $async$returnValue = value;
                // goto return
                $async$goto = 1;
                break;
              }
              type$.legacy_Expression_2._as(value);
              t1 = $async$self.$this;
              $async$goto = 3;
              return P._asyncAwait(value.accept$1(t1), $async$call$1);
            case 3:
              // returning from await.
              result = $async$result;
              if ($async$self.warnForColor && result instanceof K.SassColor0 && $.$get$namesByColor0().containsKey$1(result)) {
                t2 = X.Interpolation$0(H.setRuntimeTypeInfo([""], type$.JSArray_legacy_Object), null);
                t3 = $.$get$namesByColor0();
                t1._async_evaluate0$_warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whicw + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression0(C.BinaryOperator_AcR2, new D.StringExpression0(t2, true), value, false).toString$0(0) + "'.", value.get$span());
              }
              $async$returnValue = t1._async_evaluate0$_serialize$3$quote(result, value, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 79
  };
  E._EvaluateVisitor__serialize_closure2.prototype = {
    call$0: function() {
      var t1 = this.value;
      t1.toString;
      return N.serializeValue(t1, false, this.quote);
    },
    $signature: 12
  };
  E._EvaluateVisitor__stackTrace_closure2.prototype = {
    call$1: function(tuple) {
      return this.$this._async_evaluate0$_stackFrame$2(tuple.item1, tuple.item2.get$span());
    },
    $signature: 132
  };
  E._ImportedCssVisitor2.prototype = {
    visitCssAtRule$1: function(node) {
      var t1 = node.isChildless ? null : new E._ImportedCssVisitor_visitCssAtRule_closure2();
      this._async_evaluate0$_visitor._async_evaluate0$_addChild$2$through(node, t1);
    },
    visitCssComment$1: function(node) {
      return this._async_evaluate0$_visitor._async_evaluate0$_addChild$1(node);
    },
    visitCssDeclaration$1: function(node) {
    },
    visitCssImport$1: function(node) {
      var t1 = this._async_evaluate0$_visitor,
        t2 = t1._async_evaluate0$_parent,
        t3 = t1._async_evaluate0$_root;
      if (t2 != t3)
        t1._async_evaluate0$_addChild$1(node);
      else if (t1._async_evaluate0$_endOfImports === J.get$length$asx(t3.children._collection$_source)) {
        t1._async_evaluate0$_addChild$1(node);
        t1._async_evaluate0$_endOfImports = t1._async_evaluate0$_endOfImports + 1;
      } else {
        t2 = t1._async_evaluate0$_outOfOrderImports;
        (t2 == null ? t1._async_evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t2).push(node);
      }
    },
    visitCssKeyframeBlock$1: function(node) {
    },
    visitCssMediaRule$1: function(node) {
      var t1 = this._async_evaluate0$_visitor,
        t2 = t1._async_evaluate0$_mediaQueries;
      t1._async_evaluate0$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssMediaRule_closure2(t2 == null || t1._async_evaluate0$_mergeMediaQueries$2(t2, node.queries) != null));
    },
    visitCssStyleRule$1: function(node) {
      return this._async_evaluate0$_visitor._async_evaluate0$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssStyleRule_closure2());
    },
    visitCssStylesheet$1: function(node) {
      var t1, cur;
      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(this);
      }
    },
    visitCssSupportsRule$1: function(node) {
      return this._async_evaluate0$_visitor._async_evaluate0$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssSupportsRule_closure2());
    }
  };
  E._ImportedCssVisitor_visitCssAtRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._ImportedCssVisitor_visitCssMediaRule_closure2.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule_2._is(node))
        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  E._ImportedCssVisitor_visitCssStyleRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E._ImportedCssVisitor_visitCssSupportsRule_closure2.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  E.EvaluateResult0.prototype = {};
  E._ArgumentResults2.prototype = {};
  O.AsyncImportCache0.prototype = {
    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      return this.canonicalize$body$AsyncImportCache0(url, baseImporter, baseUrl, forImport);
    },
    canonicalize$body$AsyncImportCache0: function(url, baseImporter, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri),
        $async$returnValue, $async$self = this, resolvedUrl, canonicalUrl;
      var $async$canonicalize$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = baseImporter != null ? 3 : 4;
              break;
            case 3:
              // then
              resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;
              $async$goto = 5;
              return P._asyncAwait($async$self._async_import_cache0$_canonicalize$3(baseImporter, resolvedUrl, forImport), $async$canonicalize$4$baseImporter$baseUrl$forImport);
            case 5:
              // returning from await.
              canonicalUrl = $async$result;
              if (canonicalUrl != null) {
                $async$returnValue = new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2);
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // join
              $async$goto = 6;
              return P._asyncAwait(B.putIfAbsentAsync0($async$self._async_import_cache0$_canonicalizeCache, new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new O.AsyncImportCache_canonicalize_closure0($async$self, url, forImport), type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri), $async$canonicalize$4$baseImporter$baseUrl$forImport);
            case 6:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$canonicalize$4$baseImporter$baseUrl$forImport, $async$completer);
    },
    _async_import_cache0$_canonicalize$3: function(importer, url, forImport) {
      return this._canonicalize$body$AsyncImportCache0(importer, url, forImport);
    },
    _canonicalize$body$AsyncImportCache0: function(importer, url, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Uri),
        $async$returnValue, $async$self = this, result;
      var $async$_async_import_cache0$_canonicalize$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(forImport ? B.inImportRule0(new O.AsyncImportCache__canonicalize_closure0(importer, url)) : importer.canonicalize$1(url), $async$_async_import_cache0$_canonicalize$3);
            case 3:
              // returning from await.
              result = $async$result;
              if ((result == null ? null : result.get$scheme()) === "")
                $async$self._async_import_cache0$_logger.warn$2$deprecation(0, "Importer " + H.S(importer) + " canonicalized " + url.toString$0(0) + " to " + H.S(result) + string$.x2e_Rela, true);
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_async_import_cache0$_canonicalize$3, $async$completer);
    },
    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      return this.import$body$AsyncImportCache0(url, baseImporter, baseUrl, forImport);
    },
    import$body$AsyncImportCache0: function(url, baseImporter, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2),
        $async$returnValue, $async$self = this, t1, stylesheet, tuple;
      var $async$import$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport), $async$import$4$baseImporter$baseUrl$forImport);
            case 3:
              // returning from await.
              tuple = $async$result;
              if (tuple == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = tuple.item1;
              $async$goto = 4;
              return P._asyncAwait($async$self.importCanonical$3(t1, tuple.item2, tuple.item3), $async$import$4$baseImporter$baseUrl$forImport);
            case 4:
              // returning from await.
              stylesheet = $async$result;
              if (stylesheet == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$import$4$baseImporter$baseUrl$forImport, $async$completer);
    },
    importCanonical$3: function(importer, canonicalUrl, originalUrl) {
      return this.importCanonical$body$AsyncImportCache0(importer, canonicalUrl, originalUrl);
    },
    importCanonical$body$AsyncImportCache0: function(importer, canonicalUrl, originalUrl) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet),
        $async$returnValue, $async$self = this;
      var $async$importCanonical$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(B.putIfAbsentAsync0($async$self._async_import_cache0$_importCache, canonicalUrl, new O.AsyncImportCache_importCanonical_closure0($async$self, importer, canonicalUrl, originalUrl), type$.legacy_Uri, type$.legacy_Stylesheet), $async$importCanonical$3);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$importCanonical$3, $async$completer);
    },
    humanize$1: function(canonicalUrl) {
      var t2, url,
        t1 = this._async_import_cache0$_canonicalizeCache;
      t1 = t1.get$values(t1);
      t2 = H._instanceType(t1);
      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new O.AsyncImportCache_humanize_closure2(canonicalUrl), t2._eval$1("WhereIterable<Iterable.E>")), new O.AsyncImportCache_humanize_closure3(), t2._eval$1("MappedIterable<Iterable.E,Uri*>")), new O.AsyncImportCache_humanize_closure4(), type$.legacy_Uri, type$.dynamic);
      if (url == null)
        return canonicalUrl;
      t1 = $.$get$url();
      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());
    }
  };
  O.AsyncImportCache_canonicalize_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri),
        $async$returnValue, $async$self = this, t1, t2, t3, _i, importer, canonicalUrl;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this, t2 = $async$self.url, t3 = $async$self.forImport, _i = 0;
            case 3:
              // for condition
              if (!false) {
                // goto after for
                $async$goto = 5;
                break;
              }
              importer = C.List_empty23[_i];
              $async$goto = 6;
              return P._asyncAwait(t1._async_import_cache0$_canonicalize$3(importer, t2, t3), $async$call$0);
            case 6:
              // returning from await.
              canonicalUrl = $async$result;
              if (canonicalUrl != null) {
                $async$returnValue = new S.Tuple3(importer, canonicalUrl, t2, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2);
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 307
  };
  O.AsyncImportCache__canonicalize_closure0.prototype = {
    call$0: function() {
      return this.importer.canonicalize$1(this.url);
    },
    $signature: 175
  };
  O.AsyncImportCache_importCanonical_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, t1, result;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.canonicalUrl;
              $async$goto = 3;
              return P._asyncAwait($async$self.importer.load$1(0, t1), $async$call$0);
            case 3:
              // returning from await.
              result = $async$result;
              if (result == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = $async$self.$this;
              t2._async_import_cache0$_resultsCache.$indexSet(0, t1, result);
              t3 = result.contents;
              t4 = result.syntax;
              t5 = $async$self.originalUrl;
              t1 = t5 == null ? t1 : t5.resolveUri$1(t1);
              $async$returnValue = V.Stylesheet_Stylesheet$parse0(t3, t4, t2._async_import_cache0$_logger, t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 308
  };
  O.AsyncImportCache_humanize_closure2.prototype = {
    call$1: function(tuple) {
      var t1 = tuple == null ? null : tuple.item2;
      return J.$eq$(t1, this.canonicalUrl);
    },
    $signature: 309
  };
  O.AsyncImportCache_humanize_closure3.prototype = {
    call$1: function(tuple) {
      return tuple.item3;
    },
    $signature: 310
  };
  O.AsyncImportCache_humanize_closure4.prototype = {
    call$1: function(url) {
      return J.get$length$asx(J.get$path$x(url));
    },
    $signature: 43
  };
  V.AtRootQueryParser0.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new V.AtRootQueryParser_parse_closure0(this));
    }
  };
  V.AtRootQueryParser_parse_closure0.prototype = {
    call$0: function() {
      var include, atRules,
        t1 = this.$this,
        t2 = t1.scanner;
      t2.expectChar$1(40);
      t1.whitespace$0();
      include = t1.scanIdentifier$1("with");
      if (!include)
        t1.expectIdentifier$2$name("without", '"with" or "without"');
      t1.whitespace$0();
      t2.expectChar$1(58);
      t1.whitespace$0();
      atRules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);
      do {
        atRules.add$1(0, t1.identifier$0().toLowerCase());
        t1.whitespace$0();
      } while (t1.lookingAtIdentifier$0());
      t2.expectChar$1(41);
      t2.expectDone$0();
      return new V.AtRootQuery0(include, atRules, atRules.contains$1(0, "all"), atRules.contains$1(0, "rule"));
    },
    $signature: 125
  };
  V.AtRootQuery0.prototype = {
    excludes$1: function(node) {
      var t1, _this = this;
      if (_this._at_root_query0$_all)
        return !_this.include;
      if (type$.legacy_CssStyleRule_2._is(node))
        return _this._at_root_query0$_rule !== _this.include;
      if (type$.legacy_CssMediaRule_2._is(node))
        return _this.excludesName$1("media");
      if (type$.legacy_CssSupportsRule_2._is(node))
        return _this.excludesName$1("supports");
      if (type$.legacy_CssAtRule_2._is(node)) {
        t1 = node.name;
        return _this.excludesName$1(t1.get$value(t1).toLowerCase());
      }
      return false;
    },
    excludesName$1: function($name) {
      var t1 = this._at_root_query0$_all || this.names.contains$1(0, $name);
      return t1 !== this.include;
    }
  };
  V.AtRootRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitAtRootRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var buffer = new P.StringBuffer("@at-root "),
        t1 = this.query;
      if (t1 != null)
        buffer._contents = "@at-root " + (t1.toString$0(0) + " ");
      t1 = this.children;
      return buffer.toString$0(0) + " {" + (t1 && C.JSArray_methods).join$1(t1, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  U.ModifiableCssAtRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssAtRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    copyWithoutChildren$0: function() {
      var _this = this;
      return U.ModifiableCssAtRule$0(_this.name, _this.span, _this.isChildless, _this.value);
    },
    addChild$1: function(child) {
      this.super$ModifiableCssParentNode$addChild0(child);
    },
    $isCssAtRule0: 1,
    get$isChildless: function() {
      return this.isChildless;
    },
    get$span: function() {
      return this.span;
    }
  };
  U.AtRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitAtRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = "@" + this.name.toString$0(0),
        buffer = new P.StringBuffer(t1),
        t2 = this.value;
      if (t2 != null)
        buffer._contents = t1 + (" " + t2.toString$0(0));
      t1 = this.children;
      return t1 == null ? buffer.toString$0(0) + ";" : buffer.toString$0(0) + " {" + C.JSArray_methods.join$1(t1, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  N.AttributeSelector0.prototype = {
    accept$1$1: function(visitor) {
      var t2, _this = this,
        t1 = visitor._buffer;
      t1.writeCharCode$1(91);
      t1.write$1(0, _this.name);
      t2 = _this.op;
      if (t2 != null) {
        t1.write$1(0, t2);
        t2 = _this.value;
        if (G.Parser_isIdentifier0(t2) && !J.startsWith$1$s(t2, "--")) {
          t1.write$1(0, t2);
          t2 = _this.modifier;
          if (t2 != null)
            t1.writeCharCode$1(32);
        } else {
          visitor._serialize0$_visitQuotedString$1(t2);
          t2 = _this.modifier;
          if (t2 != null)
            if (visitor._serialize0$_style !== C.OutputStyle_compressed0)
              t1.writeCharCode$1(32);
        }
        if (t2 != null)
          t1.write$1(0, t2);
      }
      t1.writeCharCode$1(93);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof N.AttributeSelector0 && other.name.$eq(0, _this.name) && other.op == _this.op && other.value == _this.value && other.modifier == _this.modifier;
    },
    get$hashCode: function(_) {
      var _this = this,
        t1 = _this.name;
      return (C.JSString_methods.get$hashCode(t1.name) ^ J.get$hashCode$(t1.namespace) ^ J.get$hashCode$(_this.op) ^ J.get$hashCode$(_this.value) ^ J.get$hashCode$(_this.modifier)) >>> 0;
    }
  };
  N.AttributeOperator0.prototype = {
    toString$0: function(_) {
      return this._attribute0$_text;
    }
  };
  V.BinaryOperationExpression0.prototype = {
    get$span: function() {
      var right,
        left = this.left;
      for (; left instanceof V.BinaryOperationExpression0;)
        left = left.left;
      right = this.right;
      for (; right instanceof V.BinaryOperationExpression0;)
        right = right.right;
      return B.spanForList0(H.setRuntimeTypeInfo([left, right], type$.JSArray_legacy_AstNode_2));
    },
    accept$1$1: function(visitor) {
      return visitor.visitBinaryOperationExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t2, right, rightNeedsParens, _this = this,
        left = _this.left,
        leftNeedsParens = left instanceof V.BinaryOperationExpression0 && left.operator.precedence < _this.operator.precedence,
        t1 = leftNeedsParens ? H.Primitives_stringFromCharCode(40) : "";
      t1 += H.S(left);
      if (leftNeedsParens)
        t1 += H.Primitives_stringFromCharCode(41);
      t2 = _this.operator;
      t1 = t1 + H.Primitives_stringFromCharCode(32) + t2.operator + H.Primitives_stringFromCharCode(32);
      right = _this.right;
      rightNeedsParens = right instanceof V.BinaryOperationExpression0 && right.operator.precedence <= t2.precedence;
      if (rightNeedsParens)
        t1 += H.Primitives_stringFromCharCode(40);
      t1 += H.S(right);
      if (rightNeedsParens)
        t1 += H.Primitives_stringFromCharCode(41);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isExpression0: 1,
    $isAstNode0: 1
  };
  V.BinaryOperator0.prototype = {
    toString$0: function(_) {
      return this.name;
    }
  };
  Z.BooleanExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitBooleanExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return String(this.value);
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  Z.closure263.prototype = {
    call$0: function() {
      var $constructor = P.allowInterop(new Z._closure34());
      B.injectSuperclass(C.SassBoolean_true, $constructor);
      self.Object.defineProperty(C.SassBoolean_true.constructor, "name", {value: "SassBoolean"});
      B.forwardToString($constructor);
      $constructor.prototype.getValue = P.allowInteropCaptureThis(new Z._closure35());
      $constructor.TRUE = C.SassBoolean_true;
      $constructor.FALSE = C.SassBoolean_false;
      return $constructor;
    },
    $signature: 129
  };
  Z._closure34.prototype = {
    call$1: function(_) {
      throw H.wrapException("new sass.types.Boolean() isn't allowed.\nUse sass.types.Boolean.TRUE or sass.types.Boolean.FALSE instead.");
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 96
  };
  Z._closure35.prototype = {
    call$1: function(thisArg) {
      return thisArg === C.SassBoolean_true;
    },
    $signature: 23
  };
  Z.SassBoolean0.prototype = {
    get$isTruthy: function() {
      return this.value;
    },
    accept$1$1: function(visitor) {
      return visitor._buffer.write$1(0, String(this.value));
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unaryNot$0: function() {
      return this.value ? C.SassBoolean_false : C.SassBoolean_true;
    }
  };
  Q.BuiltInCallable0.prototype = {
    callbackFor$2: function(positional, names) {
      var t1, t2, fuzzyMatch, minMismatchDistance, _i, overload, t3, mismatchDistance, t4;
      for (t1 = this._built_in$_overloads, t2 = t1.length, fuzzyMatch = null, minMismatchDistance = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        overload = t1[_i];
        t3 = overload.item1;
        if (t3.matches$2(positional, names))
          return overload;
        mismatchDistance = t3.$arguments.length - positional;
        if (minMismatchDistance != null) {
          t3 = Math.abs(mismatchDistance);
          t4 = Math.abs(minMismatchDistance);
          if (t3 > t4)
            continue;
          if (t3 === t4 && mismatchDistance < 0)
            continue;
        }
        minMismatchDistance = mismatchDistance;
        fuzzyMatch = overload;
      }
      return fuzzyMatch;
    },
    withName$1: function($name) {
      return new Q.BuiltInCallable0($name, this._built_in$_overloads);
    },
    $isAsyncCallable0: 1,
    $isAsyncBuiltInCallable0: 1,
    $isCallable0: 1,
    get$name: function(receiver) {
      return this.name;
    }
  };
  Q.BuiltInCallable$mixin_closure0.prototype = {
    call$1: function($arguments) {
      this.callback.call$1($arguments);
      return null;
    },
    $signature: 98
  };
  Q.BuiltInModule0.prototype = {
    get$upstream: function() {
      return C.List_empty14;
    },
    get$variableNodes: function() {
      return C.Map_empty7;
    },
    get$extender: function() {
      return C.C_EmptyExtender0;
    },
    get$css: function(_) {
      return new V.CssStylesheet0(C.List_empty12, Y.SourceFile$decoded(C.List_empty1, this.url).span$2(0, 0));
    },
    get$transitivelyContainsCss: function() {
      return false;
    },
    get$transitivelyContainsExtensions: function() {
      return false;
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      if (!this.variables.containsKey$1($name))
        throw H.wrapException(E.SassScriptException$0("Undefined variable."));
      throw H.wrapException(E.SassScriptException$0("Cannot modify built-in variable."));
    },
    variableIdentity$1: function($name) {
      return this;
    },
    cloneCss$0: function() {
      return this;
    },
    $isModule0: 1,
    get$url: function() {
      return this.url;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    },
    get$variables: function() {
      return this.variables;
    }
  };
  M.CallableDeclaration0.prototype = {
    get$span: function() {
      return this.span;
    }
  };
  Y.Chokidar0.prototype = {};
  Y.ChokidarOptions0.prototype = {};
  Y.ChokidarWatcher0.prototype = {};
  X.ClassSelector0.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof X.ClassSelector0 && other.name === this.name;
    },
    accept$1$1: function(visitor) {
      var t1 = visitor._buffer;
      t1.writeCharCode$1(46);
      t1.write$1(0, this.name);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    addSuffix$1: function(suffix) {
      return new X.ClassSelector0(this.name + suffix);
    },
    get$hashCode: function(_) {
      return C.JSString_methods.get$hashCode(this.name);
    }
  };
  V._CloneCssVisitor0.prototype = {
    visitCssAtRule$1: function(node) {
      var t1 = node.isChildless,
        rule = U.ModifiableCssAtRule$0(node.name, node.span, t1, node.value);
      return t1 ? rule : this._clone_css$_visitChildren$2(rule, node);
    },
    visitCssComment$1: function(node) {
      return new R.ModifiableCssComment0(node.text, node.span);
    },
    visitCssDeclaration$1: function(node) {
      return L.ModifiableCssDeclaration$0(node.name, node.value, node.span, node.parsedAsCustomProperty, node.valueSpanForMap);
    },
    visitCssImport$1: function(node) {
      return F.ModifiableCssImport$0(node.url, node.span, node.media, node.supports);
    },
    visitCssKeyframeBlock$1: function(node) {
      return this._clone_css$_visitChildren$2(U.ModifiableCssKeyframeBlock$0(node.selector, node.span), node);
    },
    visitCssMediaRule$1: function(node) {
      return this._clone_css$_visitChildren$2(G.ModifiableCssMediaRule$0(node.queries, node.span), node);
    },
    visitCssStyleRule$1: function(node) {
      var newSelector = this._clone_css$_oldToNewSelectors.$index(0, node.selector);
      if (newSelector == null)
        throw H.wrapException(P.StateError$(string$.The_Ex));
      return this._clone_css$_visitChildren$2(X.ModifiableCssStyleRule$0(newSelector, node.span, node.originalSelector), node);
    },
    visitCssStylesheet$1: function(node) {
      return this._clone_css$_visitChildren$2(V.ModifiableCssStylesheet$0(node.get$span()), node);
    },
    visitCssSupportsRule$1: function(node) {
      return this._clone_css$_visitChildren$2(B.ModifiableCssSupportsRule$0(node.condition, node.span), node);
    },
    _clone_css$_visitChildren$1$2: function(newParent, oldParent) {
      var t1, t2, newChild;
      for (t1 = J.get$iterator$ax(oldParent.get$children(oldParent)); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        newChild = t2.accept$1(this);
        newChild.isGroupEnd = t2.get$isGroupEnd();
        newParent.addChild$1(newChild);
      }
      return newParent;
    },
    _clone_css$_visitChildren$2: function(newParent, oldParent) {
      return this._clone_css$_visitChildren$1$2(newParent, oldParent, type$.legacy_ModifiableCssParentNode_2);
    }
  };
  K.ColorExpression0.prototype = {
    get$span: function() {
      return this.value.originalSpan;
    },
    accept$1$1: function(visitor) {
      return visitor.visitColorExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return N.serializeValue(this.value, true, true);
    },
    $isExpression0: 1,
    $isAstNode0: 1
  };
  K.closure159.prototype = {
    call$1: function($arguments) {
      return K._rgb0("rgb", $arguments);
    },
    $signature: 3
  };
  K.closure160.prototype = {
    call$1: function($arguments) {
      return K._rgb0("rgb", $arguments);
    },
    $signature: 3
  };
  K.closure161.prototype = {
    call$1: function($arguments) {
      return K._rgbTwoArg0("rgb", $arguments);
    },
    $signature: 3
  };
  K.closure162.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels0("rgb", H.setRuntimeTypeInfo(["$red", "$green", "$blue"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString0 ? parsed : K._rgb0("rgb", type$.legacy_List_legacy_Value_2._as(parsed));
    },
    $signature: 3
  };
  K.closure163.prototype = {
    call$1: function($arguments) {
      return K._rgb0("rgba", $arguments);
    },
    $signature: 3
  };
  K.closure164.prototype = {
    call$1: function($arguments) {
      return K._rgb0("rgba", $arguments);
    },
    $signature: 3
  };
  K.closure165.prototype = {
    call$1: function($arguments) {
      return K._rgbTwoArg0("rgba", $arguments);
    },
    $signature: 3
  };
  K.closure166.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels0("rgba", H.setRuntimeTypeInfo(["$red", "$green", "$blue"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString0 ? parsed : K._rgb0("rgba", type$.legacy_List_legacy_Value_2._as(parsed));
    },
    $signature: 3
  };
  K.closure167.prototype = {
    call$1: function($arguments) {
      var color, t2,
        t1 = J.getInterceptor$asx($arguments),
        weight = t1.$index($arguments, 1).assertNumber$1("weight");
      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {
        if (weight.value !== 100 || !weight.hasUnit$1("%"))
          throw H.wrapException(string$.Only_oa);
        return K._functionString0("invert", t1.take$1($arguments, 1));
      }
      color = t1.$index($arguments, 0).assertColor$1("color");
      t1 = color.get$red();
      t2 = color.get$green();
      return K._mixColors0(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);
    },
    $signature: 3
  };
  K.closure168.prototype = {
    call$1: function($arguments) {
      return K._hsl0("hsl", $arguments);
    },
    $signature: 3
  };
  K.closure169.prototype = {
    call$1: function($arguments) {
      return K._hsl0("hsl", $arguments);
    },
    $signature: 3
  };
  K.closure170.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())
        return K._functionString0("hsl", $arguments);
      else
        throw H.wrapException(E.SassScriptException$0("Missing argument $lightness."));
    },
    $signature: 17
  };
  K.closure171.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels0("hsl", H.setRuntimeTypeInfo(["$hue", "$saturation", "$lightness"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString0 ? parsed : K._hsl0("hsl", type$.legacy_List_legacy_Value_2._as(parsed));
    },
    $signature: 3
  };
  K.closure172.prototype = {
    call$1: function($arguments) {
      return K._hsl0("hsla", $arguments);
    },
    $signature: 3
  };
  K.closure173.prototype = {
    call$1: function($arguments) {
      return K._hsl0("hsla", $arguments);
    },
    $signature: 3
  };
  K.closure174.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())
        return K._functionString0("hsla", $arguments);
      else
        throw H.wrapException(E.SassScriptException$0("Missing argument $lightness."));
    },
    $signature: 17
  };
  K.closure175.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels0("hsla", H.setRuntimeTypeInfo(["$hue", "$saturation", "$lightness"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      return parsed instanceof D.SassString0 ? parsed : K._hsl0("hsla", type$.legacy_List_legacy_Value_2._as(parsed));
    },
    $signature: 3
  };
  K.closure176.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber0)
        return K._functionString0("grayscale", $arguments);
      return t1.$index($arguments, 0).assertColor$1("color").changeHsl$1$saturation(0);
    },
    $signature: 3
  };
  K.closure177.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        degrees = t1.$index($arguments, 1).assertNumber$1("degrees");
      K._checkAngle0(degrees, null);
      return color.changeHsl$1$hue(color.get$hue() + degrees.value);
    },
    $signature: 29
  };
  K.closure178.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() + amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 29
  };
  K.closure179.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() - amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 29
  };
  K.closure180.prototype = {
    call$1: function($arguments) {
      return new D.SassString0("saturate(" + N.serializeValue(J.$index$asx($arguments, 0).assertNumber$1("amount"), false, true) + ")", false);
    },
    $signature: 17
  };
  K.closure181.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() + amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 29
  };
  K.closure182.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        color = t1.$index($arguments, 0).assertColor$1("color"),
        amount = t1.$index($arguments, 1).assertNumber$1("amount");
      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() - amount.valueInRange$3(0, 100, "amount"), 0, 100));
    },
    $signature: 29
  };
  K.closure183.prototype = {
    call$1: function($arguments) {
      var color,
        argument = J.$index$asx($arguments, 0);
      if (argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0()))
        return K._functionString0("alpha", $arguments);
      color = argument.assertColor$1("color");
      return new N.UnitlessSassNumber0(color.alpha, null);
    },
    $signature: 3
  };
  K.closure184.prototype = {
    call$1: function($arguments) {
      var t1,
        argList = J.$index$asx($arguments, 0).get$asList();
      if (argList.length !== 0 && C.JSArray_methods.every$1(argList, new K._closure23()))
        return K._functionString0("alpha", $arguments);
      t1 = argList.length;
      if (t1 === 0)
        throw H.wrapException(E.SassScriptException$0("Missing argument $color."));
      else
        throw H.wrapException(E.SassScriptException$0("Only 1 argument allowed, but " + t1 + " were passed."));
    },
    $signature: 17
  };
  K._closure23.prototype = {
    call$1: function(argument) {
      return argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0());
    },
    $signature: 55
  };
  K.closure185.prototype = {
    call$1: function($arguments) {
      var color,
        t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber0)
        return K._functionString0("opacity", $arguments);
      color = t1.$index($arguments, 0).assertColor$1("color");
      return new N.UnitlessSassNumber0(color.alpha, null);
    },
    $signature: 3
  };
  K.closure214.prototype = {
    call$1: function($arguments) {
      var result, color, t2,
        t1 = J.getInterceptor$asx($arguments),
        weight = t1.$index($arguments, 1).assertNumber$1("weight");
      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {
        if (weight.value !== 100 || !weight.hasUnit$1("%"))
          throw H.wrapException(string$.Only_oa);
        result = K._functionString0("invert", t1.take$1($arguments, 1));
        N.warn0("Passing a number (" + H.S(t1.$index($arguments, 0)) + string$.x29x20to_ci + result.toString$0(0), true);
        return result;
      }
      color = t1.$index($arguments, 0).assertColor$1("color");
      t1 = color.get$red();
      t2 = color.get$green();
      return K._mixColors0(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);
    },
    $signature: 3
  };
  K.closure215.prototype = {
    call$1: function($arguments) {
      var result,
        t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {
        result = K._functionString0("grayscale", t1.take$1($arguments, 1));
        N.warn0("Passing a number (" + H.S(t1.$index($arguments, 0)) + string$.x29x20to_cg + result.toString$0(0), true);
        return result;
      }
      return t1.$index($arguments, 0).assertColor$1("color").changeHsl$1$saturation(0);
    },
    $signature: 3
  };
  K.closure216.prototype = {
    call$1: function($arguments) {
      return K._hwb0($arguments);
    },
    $signature: 3
  };
  K.closure217.prototype = {
    call$1: function($arguments) {
      var parsed = K._parseChannels0("hwb", H.setRuntimeTypeInfo(["$hue", "$whiteness", "$blackness"], type$.JSArray_legacy_String), J.get$first$ax($arguments));
      if (parsed instanceof D.SassString0)
        throw H.wrapException(E.SassScriptException$0('Expected numeric channels, got "' + parsed.toString$0(0) + '".'));
      else
        return K._hwb0(type$.legacy_List_legacy_Value_2._as(parsed));
    },
    $signature: 3
  };
  K.closure218.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$whiteness();
      return new L.SingleUnitSassNumber0("%", t1, null);
    },
    $signature: 10
  };
  K.closure219.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$blackness();
      return new L.SingleUnitSassNumber0("%", t1, null);
    },
    $signature: 10
  };
  K.closure220.prototype = {
    call$1: function($arguments) {
      var result, color,
        argument = J.$index$asx($arguments, 0);
      if (argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0())) {
        result = K._functionString0("alpha", $arguments);
        N.warn0(string$.Using_ + result.toString$0(0), true);
        return result;
      }
      color = argument.assertColor$1("color");
      return new N.UnitlessSassNumber0(color.alpha, null);
    },
    $signature: 3
  };
  K.closure221.prototype = {
    call$1: function($arguments) {
      var result,
        t1 = J.getInterceptor$asx($arguments);
      if (C.JSArray_methods.every$1(t1.$index($arguments, 0).get$asList(), new K._closure28())) {
        result = K._functionString0("alpha", $arguments);
        N.warn0(string$.Using_ + result.toString$0(0), true);
        return result;
      }
      throw H.wrapException(E.SassScriptException$0("Only 1 argument allowed, but " + t1.get$length($arguments) + " were passed."));
    },
    $signature: 17
  };
  K._closure28.prototype = {
    call$1: function(argument) {
      return argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0());
    },
    $signature: 55
  };
  K.closure222.prototype = {
    call$1: function($arguments) {
      var result, color,
        t1 = J.getInterceptor$asx($arguments);
      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {
        result = K._functionString0("opacity", $arguments);
        N.warn0("Passing a number (" + H.S(t1.$index($arguments, 0)) + string$.x20to_co + result.toString$0(0), true);
        return result;
      }
      color = t1.$index($arguments, 0).assertColor$1("color");
      return new N.UnitlessSassNumber0(color.alpha, null);
    },
    $signature: 3
  };
  K.closure197.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$red();
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  K.closure196.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$green();
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  K.closure195.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$blue();
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  K.closure194.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return K._mixColors0(t1.$index($arguments, 0).assertColor$1("color1"), t1.$index($arguments, 1).assertColor$1("color2"), t1.$index($arguments, 2).assertNumber$1("weight"));
    },
    $signature: 29
  };
  K.closure193.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$hue();
      return new L.SingleUnitSassNumber0("deg", t1, null);
    },
    $signature: 10
  };
  K.closure192.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$saturation();
      return new L.SingleUnitSassNumber0("%", t1, null);
    },
    $signature: 10
  };
  K.closure191.prototype = {
    call$1: function($arguments) {
      var t1 = J.get$first$ax($arguments).assertColor$1("color").get$lightness();
      return new L.SingleUnitSassNumber0("%", t1, null);
    },
    $signature: 10
  };
  K.closure190.prototype = {
    call$1: function($arguments) {
      var color = J.$index$asx($arguments, 0).assertColor$1("color");
      return color.changeHsl$1$hue(color.get$hue() + 180);
    },
    $signature: 29
  };
  K.closure188.prototype = {
    call$1: function($arguments) {
      return K._updateComponents0($arguments, true, false, false);
    },
    $signature: 29
  };
  K.closure187.prototype = {
    call$1: function($arguments) {
      return K._updateComponents0($arguments, false, false, true);
    },
    $signature: 29
  };
  K.closure186.prototype = {
    call$1: function($arguments) {
      return K._updateComponents0($arguments, false, true, false);
    },
    $signature: 29
  };
  K.closure189.prototype = {
    call$1: function($arguments) {
      var color = J.$index$asx($arguments, 0).assertColor$1("color"),
        t1 = new K.closure_hexString0();
      return new D.SassString0("#" + H.S(t1.call$1(T.fuzzyRound0(color.alpha * 255))) + H.S(t1.call$1(color.get$red())) + H.S(t1.call$1(color.get$green())) + H.S(t1.call$1(color.get$blue())), false);
    },
    $signature: 17
  };
  K.closure_hexString0.prototype = {
    call$1: function(component) {
      return C.JSString_methods.padLeft$2(J.toRadixString$1$n(component, 16), 2, "0").toUpperCase();
    },
    $signature: 84
  };
  K._updateComponents_getParam0.prototype = {
    call$4$assertPercent$checkPercent: function($name, max, assertPercent, checkPercent) {
      var t2,
        t1 = this.keywords.remove$1(0, $name),
        number = t1 == null ? null : t1.assertNumber$1($name);
      if (number == null)
        return null;
      t1 = this.scale;
      t2 = !t1;
      if (t2 && checkPercent)
        K._checkPercent0(number, $name);
      if (!t2 || assertPercent)
        number.assertUnit$2("%", $name);
      if (t1)
        max = 100;
      return number.valueInRange$3(this.change ? 0 : -max, max, $name);
    },
    call$2: function($name, max) {
      return this.call$4$assertPercent$checkPercent($name, max, false, false);
    },
    call$3$checkPercent: function($name, max, checkPercent) {
      return this.call$4$assertPercent$checkPercent($name, max, false, checkPercent);
    },
    call$3$assertPercent: function($name, max, assertPercent) {
      return this.call$4$assertPercent$checkPercent($name, max, assertPercent, false);
    },
    $signature: 141
  };
  K._updateComponents_closure0.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  K._updateComponents_updateValue0.prototype = {
    call$3: function(current, param, max) {
      var t1;
      if (param == null)
        return current;
      if (this.change)
        return param;
      if (this.adjust)
        return C.JSNumber_methods.clamp$2(current + param, 0, max);
      t1 = param > 0 ? max - current : current;
      return current + t1 * (param / 100);
    },
    $signature: 142
  };
  K._updateComponents_updateRgb0.prototype = {
    call$2: function(current, param) {
      return T.fuzzyRound0(this.updateValue.call$3(current, param, 255));
    },
    $signature: 143
  };
  K._functionString_closure0.prototype = {
    call$1: function(argument) {
      argument.toString;
      return N.serializeValue(argument, false, true);
    },
    $signature: 318
  };
  K._removedColorFunction_closure0.prototype = {
    call$1: function($arguments) {
      var t1 = this.name,
        t2 = J.getInterceptor$asx($arguments),
        t3 = "The function " + t1 + string$.x28__isn + H.S(t2.$index($arguments, 0)) + ", $" + this.argument + ": ";
      throw H.wrapException(E.SassScriptException$0(t3 + (this.negative ? "-" : "") + H.S(t2.$index($arguments, 1)) + string$.x29x0a_Mor + t1));
    },
    $signature: 98
  };
  K._removeUnits_closure1.prototype = {
    call$1: function(unit) {
      return " * 1" + H.S(unit);
    },
    $signature: 4
  };
  K._removeUnits_closure2.prototype = {
    call$1: function(unit) {
      return " / 1" + H.S(unit);
    },
    $signature: 4
  };
  K._parseChannels_closure0.prototype = {
    call$1: function(value) {
      return value.get$isVar();
    },
    $signature: 55
  };
  K._NodeSassColor.prototype = {};
  K.closure253.prototype = {
    call$6: function(thisArg, redOrArgb, green, blue, alpha, dartValue) {
      var red, t1, t2, t3, t4;
      if (dartValue != null) {
        J.set$dartValue$x(thisArg, dartValue);
        return;
      }
      if (green == null) {
        H._asIntS(redOrArgb);
        alpha = C.JSInt_methods._shrOtherPositive$1(redOrArgb, 24) / 255;
        red = C.JSInt_methods.$mod(C.JSInt_methods._shrOtherPositive$1(redOrArgb, 16), 256);
        green = C.JSInt_methods.$mod(C.JSInt_methods._shrOtherPositive$1(redOrArgb, 8), 256);
        blue = C.JSInt_methods.$mod(redOrArgb, 256);
      } else
        red = redOrArgb;
      t1 = C.JSNumber_methods.round$0(J.clamp$2$n(red, 0, 255));
      t2 = C.JSNumber_methods.round$0(C.JSNumber_methods.clamp$2(green, 0, 255));
      t3 = C.JSNumber_methods.round$0(J.clamp$2$n(blue, 0, 255));
      t4 = alpha == null ? null : C.JSNumber_methods.clamp$2(alpha, 0, 1);
      J.set$dartValue$x(thisArg, K.SassColor$rgb0(t1, t2, t3, t4 == null ? 1 : t4, null));
    },
    call$2: function(thisArg, redOrArgb) {
      return this.call$6(thisArg, redOrArgb, null, null, null, null);
    },
    call$3: function(thisArg, redOrArgb, green) {
      return this.call$6(thisArg, redOrArgb, green, null, null, null);
    },
    call$4: function(thisArg, redOrArgb, green, blue) {
      return this.call$6(thisArg, redOrArgb, green, blue, null, null);
    },
    call$5: function(thisArg, redOrArgb, green, blue, alpha) {
      return this.call$6(thisArg, redOrArgb, green, blue, alpha, null);
    },
    "call*": "call$6",
    $requiredArgCount: 2,
    $defaultValues: function() {
      return [null, null, null, null];
    },
    $signature: 479
  };
  K.closure254.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg).get$red();
    },
    $signature: 95
  };
  K.closure255.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg).get$green();
    },
    $signature: 95
  };
  K.closure256.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg).get$blue();
    },
    $signature: 95
  };
  K.closure257.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg).alpha;
    },
    $signature: 321
  };
  K.closure258.prototype = {
    call$2: function(thisArg, value) {
      var t1 = J.getInterceptor$x(thisArg);
      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$red(C.JSNumber_methods.round$0(J.clamp$2$n(value, 0, 255))));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 75
  };
  K.closure259.prototype = {
    call$2: function(thisArg, value) {
      var t1 = J.getInterceptor$x(thisArg);
      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$green(C.JSNumber_methods.round$0(J.clamp$2$n(value, 0, 255))));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 75
  };
  K.closure260.prototype = {
    call$2: function(thisArg, value) {
      var t1 = J.getInterceptor$x(thisArg);
      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$blue(C.JSNumber_methods.round$0(J.clamp$2$n(value, 0, 255))));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 75
  };
  K.closure261.prototype = {
    call$2: function(thisArg, value) {
      var t1 = J.getInterceptor$x(thisArg);
      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$alpha(J.clamp$2$n(value, 0, 1)));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 75
  };
  K.closure262.prototype = {
    call$1: function(thisArg) {
      return J.toString$0$(J.get$dartValue$x(thisArg));
    },
    $signature: 323
  };
  K.SassColor0.prototype = {
    get$red: function() {
      if (this._color0$_red == null)
        this._color0$_hslToRgb$0();
      return this._color0$_red;
    },
    get$green: function() {
      if (this._color0$_green == null)
        this._color0$_hslToRgb$0();
      return this._color0$_green;
    },
    get$blue: function() {
      if (this._color0$_blue == null)
        this._color0$_hslToRgb$0();
      return this._color0$_blue;
    },
    get$hue: function() {
      if (this._color0$_hue == null)
        this._color0$_rgbToHsl$0();
      return this._color0$_hue;
    },
    get$saturation: function() {
      if (this._color0$_saturation == null)
        this._color0$_rgbToHsl$0();
      return this._color0$_saturation;
    },
    get$lightness: function() {
      if (this._color0$_lightness == null)
        this._color0$_rgbToHsl$0();
      return this._color0$_lightness;
    },
    get$whiteness: function() {
      var t1 = this.get$red(),
        t2 = this.get$green();
      return Math.min(Math.min(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;
    },
    get$blackness: function() {
      var t1 = this.get$red(),
        t2 = this.get$green();
      return 100 - Math.max(Math.max(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;
    },
    get$original: function() {
      var t1 = this.originalSpan;
      return t1 == null ? null : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null);
    },
    accept$1$1: function(visitor) {
      return visitor.visitColor$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertColor$1: function($name) {
      return this;
    },
    changeRgb$4$alpha$blue$green$red: function(alpha, blue, green, red) {
      var _this = this,
        t1 = red == null ? _this.get$red() : red,
        t2 = green == null ? _this.get$green() : green,
        t3 = blue == null ? _this.get$blue() : blue;
      return K.SassColor$rgb0(t1, t2, t3, alpha == null ? _this.alpha : alpha, null);
    },
    changeRgb$3$blue$green$red: function(blue, green, red) {
      return this.changeRgb$4$alpha$blue$green$red(null, blue, green, red);
    },
    changeRgb$1$alpha: function(alpha) {
      return this.changeRgb$4$alpha$blue$green$red(alpha, null, null, null);
    },
    changeRgb$1$blue: function(blue) {
      return this.changeRgb$4$alpha$blue$green$red(null, blue, null, null);
    },
    changeRgb$1$green: function(green) {
      return this.changeRgb$4$alpha$blue$green$red(null, null, green, null);
    },
    changeRgb$1$red: function(red) {
      return this.changeRgb$4$alpha$blue$green$red(null, null, null, red);
    },
    changeHsl$4$alpha$hue$lightness$saturation: function(alpha, hue, lightness, saturation) {
      var _this = this,
        t1 = hue == null ? _this.get$hue() : hue,
        t2 = saturation == null ? _this.get$saturation() : saturation,
        t3 = lightness == null ? _this.get$lightness() : lightness;
      return K.SassColor$hsl0(t1, t2, t3, alpha == null ? _this.alpha : alpha);
    },
    changeHsl$1$saturation: function(saturation) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, null, saturation);
    },
    changeHsl$1$lightness: function(lightness) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, lightness, null);
    },
    changeHsl$1$hue: function(hue) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, hue, null, null);
    },
    changeAlpha$1: function(alpha) {
      var _this = this;
      return new K.SassColor0(_this._color0$_red, _this._color0$_green, _this._color0$_blue, _this._color0$_hue, _this._color0$_saturation, _this._color0$_lightness, T.fuzzyAssertRange0(alpha, 0, 1, "alpha"), null);
    },
    plus$1: function(other) {
      if (!(other instanceof T.SassNumber0) && !(other instanceof K.SassColor0))
        return this.super$Value$plus0(other);
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " + " + H.S(other) + '".'));
    },
    minus$1: function(other) {
      if (!(other instanceof T.SassNumber0) && !(other instanceof K.SassColor0))
        return this.super$Value$minus0(other);
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " - " + H.S(other) + '".'));
    },
    dividedBy$1: function(other) {
      if (!(other instanceof T.SassNumber0) && !(other instanceof K.SassColor0))
        return this.super$Value$dividedBy0(other);
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " / " + H.S(other) + '".'));
    },
    modulo$1: function(other) {
      return H.throwExpression(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " % " + H.S(other) + '".'));
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof K.SassColor0 && other.get$red() == _this.get$red() && other.get$green() == _this.get$green() && other.get$blue() == _this.get$blue() && other.alpha === _this.alpha;
    },
    get$hashCode: function(_) {
      var _this = this;
      return J.get$hashCode$(_this.get$red()) ^ J.get$hashCode$(_this.get$green()) ^ J.get$hashCode$(_this.get$blue()) ^ C.JSNumber_methods.get$hashCode(_this.alpha);
    },
    _color0$_rgbToHsl$0: function() {
      var t2, t3, _this = this,
        scaledRed = _this.get$red() / 255,
        scaledGreen = _this.get$green() / 255,
        scaledBlue = _this.get$blue() / 255,
        max = Math.max(Math.max(scaledRed, scaledGreen), scaledBlue),
        min = Math.min(Math.min(scaledRed, scaledGreen), scaledBlue),
        delta = max - min,
        t1 = max === min;
      if (t1)
        _this._color0$_hue = 0;
      else if (max === scaledRed)
        _this._color0$_hue = C.JSDouble_methods.$mod(60 * (scaledGreen - scaledBlue) / delta, 360);
      else if (max === scaledGreen)
        _this._color0$_hue = C.JSNumber_methods.$mod(120 + 60 * (scaledBlue - scaledRed) / delta, 360);
      else if (max === scaledBlue)
        _this._color0$_hue = C.JSNumber_methods.$mod(240 + 60 * (scaledRed - scaledGreen) / delta, 360);
      t2 = max + min;
      t3 = 50 * t2;
      _this._color0$_lightness = t3;
      if (t1)
        _this._color0$_saturation = 0;
      else {
        t1 = 100 * delta;
        if (t3 < 50)
          _this._color0$_saturation = t1 / t2;
        else
          _this._color0$_saturation = t1 / (2 - max - min);
      }
    },
    _color0$_hslToRgb$0: function() {
      var _this = this,
        scaledHue = _this.get$hue() / 360,
        scaledSaturation = _this.get$saturation() / 100,
        scaledLightness = _this.get$lightness() / 100,
        m2 = scaledLightness <= 0.5 ? scaledLightness * (scaledSaturation + 1) : scaledLightness + scaledSaturation - scaledLightness * scaledSaturation,
        m1 = scaledLightness * 2 - m2;
      _this._color0$_red = T.fuzzyRound0(K.SassColor__hueToRgb0(m1, m2, scaledHue + 0.3333333333333333) * 255);
      _this._color0$_green = T.fuzzyRound0(K.SassColor__hueToRgb0(m1, m2, scaledHue) * 255);
      _this._color0$_blue = T.fuzzyRound0(K.SassColor__hueToRgb0(m1, m2, scaledHue - 0.3333333333333333) * 255);
    }
  };
  K.SassColor_SassColor$hwb_toRgb0.prototype = {
    call$1: function(hue) {
      return T.fuzzyRound0((K.SassColor__hueToRgb0(0, 1, hue) * this.factor + this._box_0.scaledWhiteness) * 255);
    },
    $signature: 39
  };
  R.ModifiableCssComment0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssComment$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    $isCssComment0: 1,
    get$span: function() {
      return this.span;
    }
  };
  U._compileStylesheet_closure1.prototype = {
    call$1: function(url) {
      var t1, t2, _null = null;
      if (url === "")
        t1 = P.Uri_Uri$dataFromString(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, _null), 0, _null), C.C_Utf8Codec, _null).get$_text();
      else {
        t1 = P.Uri_parse(url);
        t2 = this.importCache._import_cache$_resultsCache.$index(0, t1);
        t2 = t2 == null ? _null : t2.get$sourceMapUrl();
        t1 = (t2 == null ? t1 : t2).toString$0(0);
      }
      return t1;
    },
    $signature: 4
  };
  S.ComplexSassNumber0.prototype = {
    get$hasUnits: function() {
      return true;
    },
    hasUnit$1: function(unit) {
      return false;
    },
    compatibleWithUnit$1: function(unit) {
      return false;
    },
    withValue$1: function(value) {
      return new S.ComplexSassNumber0(this.numeratorUnits, this.denominatorUnits, value, null);
    },
    withSlash$2: function(numerator, denominator) {
      return new S.ComplexSassNumber0(this.numeratorUnits, this.denominatorUnits, this.value, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber_2));
    },
    get$numeratorUnits: function() {
      return this.numeratorUnits;
    },
    get$denominatorUnits: function() {
      return this.denominatorUnits;
    }
  };
  S.ComplexSelector0.prototype = {
    get$minSpecificity: function() {
      if (this._complex0$_minSpecificity == null)
        this._complex0$_computeSpecificity$0();
      return this._complex0$_minSpecificity;
    },
    get$maxSpecificity: function() {
      if (this._complex0$_maxSpecificity == null)
        this._complex0$_computeSpecificity$0();
      return this._complex0$_maxSpecificity;
    },
    get$isInvisible: function() {
      var t1 = this._complex0$_isInvisible;
      if (t1 != null)
        return t1;
      return this._complex0$_isInvisible = C.JSArray_methods.any$1(this.components, new S.ComplexSelector_isInvisible_closure0());
    },
    accept$1$1: function(visitor) {
      return visitor.visitComplexSelector$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    _complex0$_computeSpecificity$0: function() {
      var t1, t2, component, t3, _this = this,
        _i = _this._complex0$_maxSpecificity = _this._complex0$_minSpecificity = 0;
      for (t1 = _this.components, t2 = t1.length; _i < t2; ++_i) {
        component = t1[_i];
        if (component instanceof X.CompoundSelector0) {
          t3 = _this._complex0$_minSpecificity;
          if (component._compound0$_minSpecificity == null)
            component._compound0$_computeSpecificity$0();
          _this._complex0$_minSpecificity = t3 + component._compound0$_minSpecificity;
          t3 = _this._complex0$_maxSpecificity;
          if (component._compound0$_maxSpecificity == null)
            component._compound0$_computeSpecificity$0();
          _this._complex0$_maxSpecificity = t3 + component._compound0$_maxSpecificity;
        }
      }
    },
    get$hashCode: function(_) {
      return C.C_ListEquality.hash$1(this.components);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof S.ComplexSelector0 && C.C_ListEquality.equals$2(0, this.components, other.components);
    }
  };
  S.ComplexSelector_isInvisible_closure0.prototype = {
    call$1: function(component) {
      return component instanceof X.CompoundSelector0 && component.get$isInvisible();
    },
    $signature: 93
  };
  S.Combinator0.prototype = {
    toString$0: function(_) {
      return this._complex0$_text;
    },
    $isComplexSelectorComponent0: 1
  };
  X.CompoundSelector0.prototype = {
    get$isInvisible: function() {
      return C.JSArray_methods.any$1(this.components, new X.CompoundSelector_isInvisible_closure0());
    },
    accept$1$1: function(visitor) {
      return visitor.visitCompoundSelector$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    _compound0$_computeSpecificity$0: function() {
      var t1, t2, simple, _this = this,
        _i = _this._compound0$_maxSpecificity = _this._compound0$_minSpecificity = 0;
      for (t1 = _this.components, t2 = t1.length; _i < t2; ++_i) {
        simple = t1[_i];
        _this._compound0$_minSpecificity = _this._compound0$_minSpecificity + simple.get$minSpecificity();
        _this._compound0$_maxSpecificity = _this._compound0$_maxSpecificity + simple.get$maxSpecificity();
      }
    },
    get$hashCode: function(_) {
      return C.C_ListEquality.hash$1(this.components);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof X.CompoundSelector0 && C.C_ListEquality.equals$2(0, this.components, other.components);
    },
    $isComplexSelectorComponent0: 1
  };
  X.CompoundSelector_isInvisible_closure0.prototype = {
    call$1: function(component) {
      return component.get$isInvisible();
    },
    $signature: 19
  };
  A.Configuration0.prototype = {
    throughForward$1: function($forward) {
      var t1, t2,
        newValues = this._configuration$_values;
      if (newValues.get$isEmpty(newValues))
        return C.Configuration_Map_empty_null_true0;
      t1 = $forward.prefix;
      if (t1 != null)
        newValues = new R.UnprefixedMapView0(newValues, t1, type$.UnprefixedMapView_legacy_ConfiguredValue_2);
      t1 = $forward.shownVariables;
      if (t1 != null)
        newValues = new K.LimitedMapView0(newValues, t1._base.intersection$1(new M.MapKeySet(newValues, type$.MapKeySet_legacy_Object)), type$.LimitedMapView_of_legacy_String_and_legacy_ConfiguredValue_2);
      else {
        t1 = $forward.hiddenVariables;
        if (t1 == null)
          t2 = null;
        else {
          t2 = t1._base;
          t2 = t2.get$isNotEmpty(t2);
        }
        if (t2 === true)
          newValues = K.LimitedMapView$blocklist0(newValues, t1, type$.legacy_String, type$.legacy_ConfiguredValue_2);
      }
      return this.isImplicit ? new A.Configuration0(newValues, null, true) : new A.Configuration0(newValues, this.nodeWithSpan, false);
    }
  };
  Z.ConfiguredValue0.prototype = {};
  Z.ConfiguredVariable0.prototype = {
    toString$0: function(_) {
      var t1 = "$" + this.name + ": " + H.S(this.expression);
      return t1 + (this.isGuarded ? " !default" : "");
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  Y.ContentBlock0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitContentBlock$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t2,
        t1 = this.$arguments;
      t1 = t1.$arguments.length === 0 && t1.restArgument == null ? "" : " using (" + t1.toString$0(0) + ")";
      t2 = this.children;
      return t1 + (" {" + (t2 && C.JSArray_methods).join$1(t2, " ") + "}");
    }
  };
  Q.ContentRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitContentRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.$arguments;
      return t1.get$isEmpty(t1) ? "@content;" : "@content(" + t1.toString$0(0) + ");";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  Q.closure227.prototype = {
    call$1: function($function) {
      return $function.name;
    },
    $signature: 325
  };
  Q.CssParser0.prototype = {
    get$plainCss: function() {
      return true;
    },
    silentComment$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      this.super$Parser$silentComment0();
      this.error$2(0, string$.Silent, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    atRule$2$root: function(child, root) {
      var $name, urlStart, next, url, urlSpan, queries, t2, t3, t4, t5, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$1(64);
      $name = _this.interpolatedIdentifier$0();
      _this.whitespace$0();
      switch ($name.get$asPlain()) {
        case "at-root":
        case "content":
        case "debug":
        case "each":
        case "error":
        case "extend":
        case "for":
        case "function":
        case "if":
        case "include":
        case "mixin":
        case "return":
        case "warn":
        case "while":
          _this.almostAnyValue$0();
          _this.error$2(0, "This at-rule isn't allowed in plain CSS.", t1.spanFrom$1(start));
          break;
        case "charset":
          _this.string$0();
          if (!root)
            _this.error$2(0, "This at-rule is not allowed here.", t1.spanFrom$1(start));
          return null;
        case "import":
          urlStart = new S._SpanScannerState(t1, t1._string_scanner$_position);
          next = t1.peekChar$0();
          url = next === 117 || next === 85 ? _this.dynamicUrl$0() : new D.StringExpression0(_this.interpolatedString$0().asInterpolation$1$static(true), false);
          urlSpan = t1.spanFrom$1(urlStart);
          _this.whitespace$0();
          queries = _this.tryImportQueries$0();
          _this.expectStatementSeparator$1("@import rule");
          t2 = X.Interpolation$0(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), urlSpan);
          t3 = t1.spanFrom$1(urlStart);
          t4 = queries == null;
          t5 = t4 ? null : queries.item1;
          t2 = H.setRuntimeTypeInfo([new Q.StaticImport0(t2, t5, t4 ? null : queries.item2, t3)], type$.JSArray_legacy_Import_2);
          t1 = t1.spanFrom$1(start);
          return new B.ImportRule0(P.List_List$unmodifiable(t2, type$.legacy_Import_2), t1);
        case "media":
          return _this.mediaRule$1(start);
        case "-moz-document":
          return _this.mozDocumentRule$2(start, $name);
        case "supports":
          return _this.supportsRule$1(start);
        default:
          return _this.unknownAtRule$2(start, $name);
      }
    },
    identifierLike$0: function() {
      var t2, $arguments, t3, t4, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        identifier = _this.interpolatedIdentifier$0(),
        plain = identifier.get$asPlain(),
        specialFunction = _this.trySpecialFunction$2(plain.toLowerCase(), start);
      if (specialFunction != null)
        return specialFunction;
      t2 = t1._string_scanner$_position;
      if (!t1.scanChar$1(40))
        return new D.StringExpression0(identifier, false);
      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);
      if (!t1.scanChar$1(41)) {
        do {
          _this.whitespace$0();
          $arguments.push(_this.expression$1$singleEquals(true));
          _this.whitespace$0();
        } while (t1.scanChar$1(44));
        t1.expectChar$1(41);
      }
      if ($.$get$_disallowedFunctionNames0().contains$1(0, plain))
        _this.error$2(0, string$.This_f, t1.spanFrom$1(start));
      t3 = X.Interpolation$0(H.setRuntimeTypeInfo([new D.StringExpression0(identifier, false)], type$.JSArray_legacy_Object), identifier.span);
      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      t4 = type$.legacy_Expression_2;
      return new F.FunctionExpression0(null, t3, new X.ArgumentInvocation0(P.List_List$unmodifiable($arguments, t4), H.ConstantMap_ConstantMap$from(C.Map_empty9, type$.legacy_String, t4), null, null, t2), t1.spanFrom$1(start));
    }
  };
  Q.DebugRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitDebugRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "@debug " + H.S(this.expression) + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  L.ModifiableCssDeclaration0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssDeclaration$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return H.S(this.name) + ": " + this.value.toString$0(0) + ";";
    },
    get$span: function() {
      return this.span;
    }
  };
  L.Declaration0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitDeclaration$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    get$span: function() {
      return this.span;
    }
  };
  L.SupportsDeclaration0.prototype = {
    toString$0: function(_) {
      return "(" + H.S(this.name) + ": " + H.S(this.value) + ")";
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  B.DynamicImport0.prototype = {
    toString$0: function(_) {
      return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([this.url], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain();
    },
    $isImport0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  V.EachRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitEachRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.variables,
        t2 = this.children;
      return "@each " + new H.MappedListIterable(t1, new V.EachRule_toString_closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$1(0, ", ") + " in " + H.S(this.list) + " {" + (t2 && C.JSArray_methods).join$1(t2, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  V.EachRule_toString_closure0.prototype = {
    call$1: function(variable) {
      return C.JSString_methods.$add("$", variable);
    },
    $signature: 4
  };
  T.EmptyExtender0.prototype = {
    get$isEmpty: function(_) {
      return true;
    },
    get$simpleSelectors: function() {
      return C.C_EmptyUnmodifiableSet0;
    },
    extensionsWhereTarget$1: function(callback) {
      return C.List_empty13;
    },
    addExtensions$1: function(extenders) {
      throw H.wrapException(P.UnsupportedError$(string$.addExt));
    },
    clone$0: function() {
      return C.Tuple2_EmptyExtender_Map_empty0;
    },
    $isExtender0: 1
  };
  O.Environment0.prototype = {
    closure$0: function() {
      var t5, t6, t7, _this = this,
        t1 = _this._environment0$_forwardedModules,
        t2 = _this._environment0$_forwardedModuleNodes,
        t3 = _this._environment0$_nestedForwardedModules,
        t4 = _this._environment0$_variables;
      t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));
      t5 = _this._environment0$_variableNodes;
      if (t5 == null)
        t5 = null;
      else
        t5 = H.setRuntimeTypeInfo(t5.slice(0), H._arrayInstanceType(t5));
      t6 = _this._environment0$_functions;
      t6 = H.setRuntimeTypeInfo(t6.slice(0), H._arrayInstanceType(t6));
      t7 = _this._environment0$_mixins;
      t7 = H.setRuntimeTypeInfo(t7.slice(0), H._arrayInstanceType(t7));
      return O.Environment$_0(_this._environment0$_modules, _this._environment0$_namespaceNodes, _this._environment0$_globalModules, _this._environment0$_globalModuleNodes, t1, t2, t3, _this._environment0$_allModules, t4, t5, t6, t7, _this._environment0$_content);
    },
    addModule$3$namespace: function(module, nodeWithSpan, namespace) {
      var t1, t2, _this = this;
      if (namespace == null) {
        _this._environment0$_globalModules.add$1(0, module);
        _this._environment0$_globalModuleNodes.$indexSet(0, module, nodeWithSpan);
        _this._environment0$_allModules.push(module);
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.get$first(_this._environment0$_variables))); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          if (module.get$variables().containsKey$1(t2))
            throw H.wrapException(E.SassScriptException$0(string$.This_ma + H.S(t2) + '".'));
        }
      } else {
        t1 = _this._environment0$_modules;
        if (t1.containsKey$1(namespace))
          throw H.wrapException(E.MultiSpanSassScriptException$0(string$.There_ + namespace + '".', "new @use", P.LinkedHashMap_LinkedHashMap$_literal([_this._environment0$_namespaceNodes.$index(0, namespace).get$span(), "original @use"], type$.legacy_FileSpan, type$.legacy_String)));
        t1.$indexSet(0, namespace, module);
        _this._environment0$_namespaceNodes.$indexSet(0, namespace, nodeWithSpan);
        _this._environment0$_allModules.push(module);
      }
    },
    forwardModule$2: function(module, rule) {
      var view, t1, t2, _this = this;
      if (_this._environment0$_forwardedModules == null)
        _this._environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable_2);
      if (_this._environment0$_forwardedModuleNodes == null)
        _this._environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable_2, type$.legacy_AstNode_2);
      view = R.ForwardedModuleView_ifNecessary0(module, rule, type$.legacy_Callable_2);
      for (t1 = _this._environment0$_forwardedModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {
        t2 = t1._collection$_current;
        _this._environment0$_assertNoConflicts$6(view.get$variables(), t2.get$variables(), view, t2, "variable", rule);
        _this._environment0$_assertNoConflicts$6(view.get$functions(view), t2.get$functions(t2), view, t2, "function", rule);
        _this._environment0$_assertNoConflicts$6(view.get$mixins(), t2.get$mixins(), view, t2, "mixin", rule);
      }
      _this._environment0$_allModules.push(module);
      _this._environment0$_forwardedModules.add$1(0, view);
      _this._environment0$_forwardedModuleNodes.$indexSet(0, view, rule);
    },
    _environment0$_assertNoConflicts$6: function(newMembers, oldMembers, newModule, oldModule, type, newModuleNodeWithSpan) {
      var larger, smaller, t1, t2, $name;
      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {
        larger = oldMembers;
        smaller = newMembers;
      } else {
        larger = newMembers;
        smaller = oldMembers;
      }
      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === "variable"; t1.moveNext$0();) {
        $name = t1.get$current(t1);
        if (!larger.containsKey$1($name))
          continue;
        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))
          continue;
        if (t2)
          $name = "$" + H.S($name);
        throw H.wrapException(E.MultiSpanSassScriptException$0("Two forwarded modules both define a " + type + " named " + H.S($name) + ".", "new @forward", P.LinkedHashMap_LinkedHashMap$_literal([this._environment0$_forwardedModuleNodes.$index(0, oldModule).get$span(), "original @forward"], type$.legacy_FileSpan, type$.legacy_String)));
      }
    },
    importForwards$1: function(module) {
      var t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, t6, t7, _i, shadowed, t8, _this = this,
        t1 = module._environment0$_environment,
        forwarded = t1._environment0$_forwardedModules;
      if (forwarded == null)
        return;
      if (_this._environment0$_forwardedModules != null) {
        t2 = P.LinkedHashSet_LinkedHashSet(type$.legacy_Module_legacy_Callable_2);
        for (t3 = P._LinkedHashSetIterator$(forwarded, forwarded._collection$_modifications), t4 = _this._environment0$_globalModules; t3.moveNext$0();) {
          t5 = t3._collection$_current;
          if (!_this._environment0$_forwardedModules.contains$1(0, t5) || !t4.contains$1(0, t5))
            t2.add$1(0, t5);
        }
        forwarded = t2;
      }
      if (_this._environment0$_forwardedModules == null)
        _this._environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable_2);
      if (_this._environment0$_forwardedModuleNodes == null)
        _this._environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable_2, type$.legacy_AstNode_2);
      t2 = H._instanceType(forwarded)._eval$1("ExpandIterable<1,String*>");
      t3 = t2._eval$1("Iterable.E");
      forwardedVariableNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure3(), t2), t3);
      forwardedFunctionNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure4(), t2), t3);
      forwardedMixinNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure5(), t2), t3);
      t2 = _this._environment0$_variables;
      t3 = t2.length;
      if (t3 === 1) {
        for (t3 = _this._environment0$_globalModules, t4 = P.List_List$from(t3, true, H._instanceType(t3)._precomputed1), t5 = t4.length, t6 = type$.legacy_Callable_2, t7 = _this._environment0$_globalModuleNodes, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
          module = t4[_i];
          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);
          if (shadowed != null) {
            t3.remove$1(0, module);
            t8 = shadowed.variables;
            if (t8.get$isEmpty(t8)) {
              t8 = shadowed.functions;
              if (t8.get$isEmpty(t8)) {
                t8 = shadowed.mixins;
                if (t8.get$isEmpty(t8)) {
                  t8 = shadowed._shadowed_view0$_inner;
                  t8 = t8.get$css(t8);
                  t8 = J.get$isEmpty$asx(t8.get$children(t8));
                } else
                  t8 = false;
              } else
                t8 = false;
            } else
              t8 = false;
            if (!t8) {
              t3.add$1(0, shadowed);
              t7.$indexSet(0, shadowed, t7.remove$1(0, module));
            }
          }
        }
        t4 = _this._environment0$_forwardedModules;
        t4.toString;
        t4 = P.List_List$from(t4, true, H._instanceType(t4)._precomputed1);
        t5 = t4.length;
        _i = 0;
        for (; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {
          module = t4[_i];
          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);
          if (shadowed != null) {
            _this._environment0$_forwardedModules.remove$1(0, module);
            t8 = shadowed.variables;
            if (t8.get$isEmpty(t8)) {
              t8 = shadowed.functions;
              if (t8.get$isEmpty(t8)) {
                t8 = shadowed.mixins;
                if (t8.get$isEmpty(t8)) {
                  t8 = shadowed._shadowed_view0$_inner;
                  t8 = t8.get$css(t8);
                  t8 = J.get$isEmpty$asx(t8.get$children(t8));
                } else
                  t8 = false;
              } else
                t8 = false;
            } else
              t8 = false;
            if (!t8) {
              _this._environment0$_forwardedModules.add$1(0, shadowed);
              t8 = _this._environment0$_forwardedModuleNodes;
              t8.$indexSet(0, shadowed, t8.remove$1(0, module));
            }
          }
        }
        t3.addAll$1(0, forwarded);
        t7.addAll$1(0, t1._environment0$_forwardedModuleNodes);
        _this._environment0$_forwardedModules.addAll$1(0, forwarded);
        _this._environment0$_forwardedModuleNodes.addAll$1(0, t1._environment0$_forwardedModuleNodes);
      } else {
        t1 = _this._environment0$_nestedForwardedModules;
        J.addAll$1$ax(C.JSArray_methods.get$last(t1 == null ? _this._environment0$_nestedForwardedModules = P.List_List$generate(t3 - 1, new O.Environment_importForwards_closure6(), true, type$.legacy_List_legacy_Module_legacy_Callable_2) : t1), forwarded);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._environment0$_variableNodes, t4 = t3 != null, t5 = _this._environment0$_variableIndices; t1.moveNext$0();) {
        t6 = t1._collection$_current;
        t5.remove$1(0, t6);
        J.remove$1$ax(C.JSArray_methods.get$last(t2), t6);
        if (t4)
          J.remove$1$ax(C.JSArray_methods.get$last(t3), t6);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._environment0$_functionIndices, t3 = _this._environment0$_functions; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        t2.remove$1(0, t4);
        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);
      }
      for (t1 = P._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._environment0$_mixinIndices, t3 = _this._environment0$_mixins; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        t2.remove$1(0, t4);
        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);
      }
    },
    getVariable$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._environment0$_getModule$1(namespace).get$variables().$index(0, $name);
      if (_this._environment0$_lastVariableName === $name) {
        t1 = J.$index$asx(_this._environment0$_variables[_this._environment0$_lastVariableIndex], $name);
        return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      t1 = _this._environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._environment0$_lastVariableName = $name;
        _this._environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._environment0$_variables[index], $name);
        return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_variableIndex$1($name);
      if (index == null)
        return _this._environment0$_getVariableFromGlobalModule$1($name);
      _this._environment0$_lastVariableName = $name;
      _this._environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_variables[index], $name);
      return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;
    },
    getVariable$1: function($name) {
      return this.getVariable$2$namespace($name, null);
    },
    _environment0$_getVariableFromGlobalModule$1: function($name) {
      return this._environment0$_fromOneModule$3($name, "variable", new O.Environment__getVariableFromGlobalModule_closure0($name));
    },
    getVariableNode$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._environment0$_getModule$1(namespace).get$variableNodes().$index(0, $name);
      if (_this._environment0$_lastVariableName === $name) {
        t1 = J.$index$asx(_this._environment0$_variableNodes[_this._environment0$_lastVariableIndex], $name);
        return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      t1 = _this._environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._environment0$_lastVariableName = $name;
        _this._environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._environment0$_variableNodes[index], $name);
        return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_variableIndex$1($name);
      if (index == null)
        return _this._environment0$_getVariableNodeFromGlobalModule$1($name);
      _this._environment0$_lastVariableName = $name;
      _this._environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_variableNodes[index], $name);
      return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
    },
    _environment0$_getVariableNodeFromGlobalModule$1: function($name) {
      var t1, value;
      for (t1 = this._environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {
        value = t1._collection$_current.get$variableNodes().$index(0, $name);
        if (value != null)
          return value;
      }
      return null;
    },
    globalVariableExists$2$namespace: function($name, namespace) {
      if (namespace != null)
        return this._environment0$_getModule$1(namespace).get$variables().containsKey$1($name);
      if (C.JSArray_methods.get$first(this._environment0$_variables).containsKey$1($name))
        return true;
      return this._environment0$_getVariableFromGlobalModule$1($name) != null;
    },
    globalVariableExists$1: function($name) {
      return this.globalVariableExists$2$namespace($name, null);
    },
    _environment0$_variableIndex$1: function($name) {
      var t1, i;
      for (t1 = this._environment0$_variables, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    setVariable$5$global$namespace: function($name, value, nodeWithSpan, global, namespace) {
      var t1, moduleWithName, cur, t2, index, _this = this;
      if (namespace != null) {
        _this._environment0$_getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);
        return;
      }
      if (global || _this._environment0$_variables.length === 1) {
        _this._environment0$_variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure2(_this, $name));
        t1 = _this._environment0$_variables;
        if (!C.JSArray_methods.get$first(t1).containsKey$1($name)) {
          moduleWithName = _this._environment0$_fromOneModule$3($name, "variable", new O.Environment_setVariable_closure3($name));
          if (moduleWithName != null) {
            moduleWithName.setVariable$3($name, value, nodeWithSpan);
            return;
          }
        }
        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, value);
        t1 = _this._environment0$_variableNodes;
        if (t1 != null)
          J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);
        return;
      }
      if (_this._environment0$_nestedForwardedModules != null && !_this._environment0$_variableIndices.containsKey$1($name) && _this._environment0$_variableIndex$1($name) == null) {
        t1 = _this._environment0$_nestedForwardedModules;
        t1.toString;
        t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
        t1 = new H.ListIterator(t1, t1.get$length(t1));
        for (; t1.moveNext$0();) {
          cur = t1.__internal$_current;
          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
            cur = t2.__internal$_current;
            if (cur.get$variables().containsKey$1($name)) {
              cur.setVariable$3($name, value, nodeWithSpan);
              return;
            }
          }
        }
      }
      index = _this._environment0$_lastVariableName === $name ? _this._environment0$_lastVariableIndex : _this._environment0$_variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure4(_this, $name));
      if (!_this._environment0$_inSemiGlobalScope && index === 0) {
        index = _this._environment0$_variables.length - 1;
        _this._environment0$_variableIndices.$indexSet(0, $name, index);
      }
      _this._environment0$_lastVariableName = $name;
      _this._environment0$_lastVariableIndex = index;
      J.$indexSet$ax(_this._environment0$_variables[index], $name, value);
      t1 = _this._environment0$_variableNodes;
      if (t1 != null)
        J.$indexSet$ax(t1[index], $name, nodeWithSpan);
    },
    setVariable$4$global: function($name, value, nodeWithSpan, global) {
      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);
    },
    setLocalVariable$3: function($name, value, nodeWithSpan) {
      var index, _this = this,
        t1 = _this._environment0$_variables,
        t2 = t1.length;
      _this._environment0$_lastVariableName = $name;
      index = _this._environment0$_lastVariableIndex = t2 - 1;
      _this._environment0$_variableIndices.$indexSet(0, $name, index);
      J.$indexSet$ax(t1[index], $name, value);
      t1 = _this._environment0$_variableNodes;
      if (t1 != null)
        J.$indexSet$ax(t1[index], $name, nodeWithSpan);
    },
    getFunction$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null) {
        t1 = _this._environment0$_getModule$1(namespace);
        return t1.get$functions(t1).$index(0, $name);
      }
      t1 = _this._environment0$_functionIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._environment0$_functions[index], $name);
        return t1 == null ? _this._environment0$_getFunctionFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_functionIndex$1($name);
      if (index == null)
        return _this._environment0$_getFunctionFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_functions[index], $name);
      return t1 == null ? _this._environment0$_getFunctionFromGlobalModule$1($name) : t1;
    },
    _environment0$_getFunctionFromGlobalModule$1: function($name) {
      return this._environment0$_fromOneModule$3($name, "function", new O.Environment__getFunctionFromGlobalModule_closure0($name));
    },
    _environment0$_functionIndex$1: function($name) {
      var t1, i;
      for (t1 = this._environment0$_functions, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    getMixin$2$namespace: function($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._environment0$_getModule$1(namespace).get$mixins().$index(0, $name);
      t1 = _this._environment0$_mixinIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._environment0$_mixins[index], $name);
        return t1 == null ? _this._environment0$_getMixinFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_mixinIndex$1($name);
      if (index == null)
        return _this._environment0$_getMixinFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_mixins[index], $name);
      return t1 == null ? _this._environment0$_getMixinFromGlobalModule$1($name) : t1;
    },
    _environment0$_getMixinFromGlobalModule$1: function($name) {
      return this._environment0$_fromOneModule$3($name, "mixin", new O.Environment__getMixinFromGlobalModule_closure0($name));
    },
    _environment0$_mixinIndex$1: function($name) {
      var t1, i;
      for (t1 = this._environment0$_mixins, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    scope$1$3$semiGlobal$when: function(callback, semiGlobal, when) {
      var wasInSemiGlobalScope, wasInSemiGlobalScope0, $name, name0, name1, t1, t2, t3, t4, t5, _this = this;
      if (!when) {
        wasInSemiGlobalScope = _this._environment0$_inSemiGlobalScope;
        _this._environment0$_inSemiGlobalScope = semiGlobal;
        try {
          t1 = callback.call$0();
          return t1;
        } finally {
          _this._environment0$_inSemiGlobalScope = wasInSemiGlobalScope;
        }
      }
      semiGlobal = semiGlobal && _this._environment0$_inSemiGlobalScope;
      wasInSemiGlobalScope0 = _this._environment0$_inSemiGlobalScope;
      _this._environment0$_inSemiGlobalScope = semiGlobal;
      t1 = _this._environment0$_variables;
      t2 = type$.legacy_String;
      C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value_2));
      t3 = _this._environment0$_variableNodes;
      if (t3 != null)
        C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode_2));
      t3 = _this._environment0$_functions;
      t4 = type$.legacy_Callable_2;
      C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
      t5 = _this._environment0$_mixins;
      C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));
      t4 = _this._environment0$_nestedForwardedModules;
      if (t4 != null)
        C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable_2));
      try {
        t2 = callback.call$0();
        return t2;
      } finally {
        _this._environment0$_inSemiGlobalScope = wasInSemiGlobalScope0;
        _this._environment0$_lastVariableIndex = _this._environment0$_lastVariableName = null;
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = _this._environment0$_variableIndices; t1.moveNext$0();) {
          $name = t1.get$current(t1);
          t2.remove$1(0, $name);
        }
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = _this._environment0$_functionIndices; t1.moveNext$0();) {
          name0 = t1.get$current(t1);
          t2.remove$1(0, name0);
        }
        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = _this._environment0$_mixinIndices; t1.moveNext$0();) {
          name1 = t1.get$current(t1);
          t2.remove$1(0, name1);
        }
        t1 = _this._environment0$_nestedForwardedModules;
        if (t1 != null)
          C.JSArray_methods.removeLast$0(t1);
      }
    },
    scope$1$1: function(callback, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);
    },
    scope$1$2$when: function(callback, when, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);
    },
    scope$1$2$semiGlobal: function(callback, semiGlobal, $T) {
      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);
    },
    toImplicitConfiguration$0: function() {
      var t2, t3, t4, t5, i, values, nodes, t6, t7,
        t1 = type$.legacy_String,
        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue_2);
      for (t2 = this._environment0$_variables, t3 = this._environment0$_variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode_2, i = 0; i < t2.length; ++i) {
        values = t2[i];
        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];
        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {
          t7 = t6.get$current(t6);
          configuration.$indexSet(0, t7, new Z.ConfiguredValue0(values.$index(0, t7), null, nodes.$index(0, t7)));
        }
      }
      return new A.Configuration0(configuration, null, true);
    },
    _environment0$_getModule$1: function(namespace) {
      var module = this._environment0$_modules.$index(0, namespace);
      if (module != null)
        return module;
      throw H.wrapException(E.SassScriptException$0('There is no module with the namespace "' + namespace + '".'));
    },
    _environment0$_fromOneModule$1$3: function($name, type, callback) {
      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,
        t1 = this._environment0$_nestedForwardedModules;
      if (t1 != null)
        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
          cur = t1.__internal$_current;
          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
            cur = t2.__internal$_current;
            value = callback.call$1(cur);
            if (value != null)
              return value;
          }
        }
      for (t1 = this._environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_Callable_2, value = null, identity = null; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        valueInModule = callback.call$1(t3);
        if (valueInModule == null)
          continue;
        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);
        if (identityFromModule.$eq(0, identity))
          continue;
        if (value != null) {
          t1 = "This " + type + string$.x20is_av;
          t2 = type + " use";
          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
          for (t4 = this._environment0$_globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
            t5 = t4.get$current(t4);
            if (callback.call$1(t5.key) != null)
              t3.$indexSet(0, t5.value.get$span(), "includes " + type);
          }
          throw H.wrapException(E.MultiSpanSassScriptException$0(t1, t2, t3));
        }
        identity = identityFromModule;
        value = valueInModule;
      }
      return value;
    },
    _environment0$_fromOneModule$3: function($name, type, callback) {
      return this._environment0$_fromOneModule$1$3($name, type, callback, type$.dynamic);
    }
  };
  O.Environment_importForwards_closure3.prototype = {
    call$1: function(module) {
      var t1 = module.get$variables();
      return t1.get$keys(t1);
    },
    $signature: 92
  };
  O.Environment_importForwards_closure4.prototype = {
    call$1: function(module) {
      var t1 = module.get$functions(module);
      return t1.get$keys(t1);
    },
    $signature: 92
  };
  O.Environment_importForwards_closure5.prototype = {
    call$1: function(module) {
      var t1 = module.get$mixins();
      return t1.get$keys(t1);
    },
    $signature: 92
  };
  O.Environment_importForwards_closure6.prototype = {
    call$1: function(_) {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable_2);
    },
    $signature: 327
  };
  O.Environment__getVariableFromGlobalModule_closure0.prototype = {
    call$1: function(module) {
      return module.get$variables().$index(0, this.name);
    },
    $signature: 328
  };
  O.Environment_setVariable_closure2.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._environment0$_lastVariableName = this.name;
      return t1._environment0$_lastVariableIndex = 0;
    },
    $signature: 11
  };
  O.Environment_setVariable_closure3.prototype = {
    call$1: function(module) {
      return module.get$variables().containsKey$1(this.name) ? module : null;
    },
    $signature: 197
  };
  O.Environment_setVariable_closure4.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._environment0$_variableIndex$1(this.name);
      return t2 == null ? t1._environment0$_variables.length - 1 : t2;
    },
    $signature: 11
  };
  O.Environment__getFunctionFromGlobalModule_closure0.prototype = {
    call$1: function(module) {
      return module.get$functions(module).$index(0, this.name);
    },
    $signature: 196
  };
  O.Environment__getMixinFromGlobalModule_closure0.prototype = {
    call$1: function(module) {
      return module.get$mixins().$index(0, this.name);
    },
    $signature: 196
  };
  O._EnvironmentModule1.prototype = {
    get$url: function() {
      return this.css.get$span().file.url;
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      var t1, t2,
        module = this._environment0$_modulesByVariable.$index(0, $name);
      if (module != null) {
        module.setVariable$3($name, value, nodeWithSpan);
        return;
      }
      t1 = this._environment0$_environment;
      t2 = t1._environment0$_variables;
      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))
        throw H.wrapException(E.SassScriptException$0("Undefined variable."));
      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);
      t1 = t1._environment0$_variableNodes;
      if (t1 != null)
        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);
      return;
    },
    variableIdentity$1: function($name) {
      var module = this._environment0$_modulesByVariable.$index(0, $name);
      return module == null ? this : module.variableIdentity$1($name);
    },
    cloneCss$0: function() {
      var newCssAndExtender, _this = this,
        t1 = _this.css;
      if (J.get$isEmpty$asx(t1.get$children(t1)))
        return _this;
      newCssAndExtender = V.cloneCssStylesheet0(t1, _this.extender);
      return O._EnvironmentModule$_1(_this._environment0$_environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._environment0$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);
    },
    toString$0: function(_) {
      var t1 = this.css;
      if (t1.get$span().file.url == null)
        t1 = "<unknown url>";
      else {
        t1 = t1.get$span();
        t1 = $.$get$context().prettyUri$1(t1.file.url);
      }
      return t1;
    },
    $isModule0: 1,
    get$upstream: function() {
      return this.upstream;
    },
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    },
    get$extender: function() {
      return this.extender;
    },
    get$css: function(receiver) {
      return this.css;
    },
    get$transitivelyContainsCss: function() {
      return this.transitivelyContainsCss;
    },
    get$transitivelyContainsExtensions: function() {
      return this.transitivelyContainsExtensions;
    }
  };
  O._EnvironmentModule__EnvironmentModule_closure11.prototype = {
    call$1: function(module) {
      return module.get$variables();
    },
    $signature: 331
  };
  O._EnvironmentModule__EnvironmentModule_closure12.prototype = {
    call$1: function(module) {
      return module.get$variableNodes();
    },
    $signature: 332
  };
  O._EnvironmentModule__EnvironmentModule_closure13.prototype = {
    call$1: function(module) {
      return module.get$functions(module);
    },
    $signature: 194
  };
  O._EnvironmentModule__EnvironmentModule_closure14.prototype = {
    call$1: function(module) {
      return module.get$mixins();
    },
    $signature: 194
  };
  O._EnvironmentModule__EnvironmentModule_closure15.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 102
  };
  O._EnvironmentModule__EnvironmentModule_closure16.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsExtensions();
    },
    $signature: 102
  };
  D.ErrorRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitErrorRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "@error " + H.S(this.expression) + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  R._EvaluateVisitor1.prototype = {
    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap1: function(functions, importCache, logger, nodeImporter, sourceMap) {
      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        metaFunctions = [Q.BuiltInCallable$function0("global-variable-exists", _s20_, new R._EvaluateVisitor_closure19(_this), _s9_), Q.BuiltInCallable$function0("variable-exists", "$name", new R._EvaluateVisitor_closure20(_this), _s9_), Q.BuiltInCallable$function0("function-exists", _s20_, new R._EvaluateVisitor_closure21(_this), _s9_), Q.BuiltInCallable$function0("mixin-exists", _s20_, new R._EvaluateVisitor_closure22(_this), _s9_), Q.BuiltInCallable$function0("content-exists", "", new R._EvaluateVisitor_closure23(_this), _s9_), Q.BuiltInCallable$function0("module-variables", "$module", new R._EvaluateVisitor_closure24(_this), _s9_), Q.BuiltInCallable$function0("module-functions", "$module", new R._EvaluateVisitor_closure25(_this), _s9_), Q.BuiltInCallable$function0("get-function", "$name, $css: false, $module: null", new R._EvaluateVisitor_closure26(_this), _s9_), Q.BuiltInCallable$function0("call", "$function, $args...", new R._EvaluateVisitor_closure27(_this), _s9_)],
        t1 = type$.JSArray_legacy_BuiltInCallable_2,
        metaMixins = H.setRuntimeTypeInfo([Q.BuiltInCallable$mixin0("load-css", "$url, $with: null", new R._EvaluateVisitor_closure28(_this), _s9_)], t1);
      t1 = H.setRuntimeTypeInfo([], t1);
      for (t2 = $.$get$global6(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      metaModule = Q.BuiltInModule$0("meta", t1, metaMixins, null, type$.legacy_BuiltInCallable_2);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_BuiltInCallable_2);
      for (t2 = $.$get$coreModules0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      t1.push(metaModule);
      t2 = t1.length;
      t3 = _this._evaluate0$_builtInModules;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Callable_2);
      for (t2 = new H.ListIterator(functions, functions.get$length(functions)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (t2 = $.$get$globalFunctions0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      for (_i = 0; _i < 9; ++_i)
        t1.push(metaFunctions[_i]);
      for (t2 = t1.length, t3 = _this._evaluate0$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = $function.get$name($function);
        t4.toString;
        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2: function(_, importer, node) {
      return this._evaluate0$_withWarnCallback$1$1(new R._EvaluateVisitor_run_closure1(this, node, importer), type$.legacy_EvaluateResult_2);
    },
    _evaluate0$_withWarnCallback$1$1: function(callback, $T) {
      return N.withWarnCallback0(new R._EvaluateVisitor__withWarnCallback_closure1(this), callback, $T._eval$1("0*"));
    },
    _evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var t1, _this = this,
        builtInModule = _this._evaluate0$_builtInModules.$index(0, url);
      if (builtInModule != null) {
        if (configuration != null && !configuration.isImplicit) {
          t1 = namesInErrors ? "Built-in module " + H.S(url) + " can't be configured." : "Built-in modules can't be configured.";
          throw H.wrapException(_this._evaluate0$_exception$2(t1, nodeWithSpan.get$span()));
        }
        _this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__loadModule_closure3(callback, builtInModule));
        return;
      }
      _this._evaluate0$_withStackFrame$3(stackFrame, nodeWithSpan, new R._EvaluateVisitor__loadModule_closure4(_this, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback));
    },
    _evaluate0$_loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _evaluate0$_loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {
      return this._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var message, existingNode, environment, extender, module, _this = this, t1 = {},
        url = stylesheet.span.file.url,
        t2 = _this._evaluate0$_modules,
        alreadyLoaded = t2.$index(0, url);
      if (alreadyLoaded != null) {
        t1 = configuration == null;
        if (!(t1 ? _this._evaluate0$_configuration : configuration).isImplicit) {
          message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;
          existingNode = _this._evaluate0$_moduleNodes.$index(0, url);
          t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);
          if (existingNode != null)
            t2.$indexSet(0, existingNode.get$span(), "original load");
          if (t1)
            t2.$indexSet(0, _this._evaluate0$_configuration.nodeWithSpan.get$span(), "configuration");
          throw H.wrapException(t2.get$isEmpty(t2) ? _this._evaluate0$_exception$1(message) : _this._evaluate0$_multiSpanException$3(message, "new load", t2));
        }
        return alreadyLoaded;
      }
      environment = O.Environment$0(_this._evaluate0$_sourceMap);
      t1.css = null;
      extender = F.Extender$0();
      _this._evaluate0$_withEnvironment$2(environment, new R._EvaluateVisitor__execute_closure1(t1, _this, importer, stylesheet, extender, configuration));
      module = O._EnvironmentModule__EnvironmentModule1(environment, t1.css, extender, environment._environment0$_forwardedModules);
      t2.$indexSet(0, url, module);
      _this._evaluate0$_moduleNodes.$indexSet(0, url, nodeWithSpan);
      return module;
    },
    _evaluate0$_execute$2: function(importer, stylesheet) {
      return this._evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _evaluate0$_addOutOfOrderImports$0: function() {
      var t1, statements, _this = this;
      if (_this._evaluate0$_outOfOrderImports == null)
        return _this._evaluate0$_root.children;
      t1 = new Array(J.get$length$asx(_this._evaluate0$_root.children._collection$_source) + _this._evaluate0$_outOfOrderImports.length);
      t1.fixed$length = Array;
      statements = new G.FixedLengthListBuilder0(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode_2), type$.FixedLengthListBuilder_legacy_ModifiableCssNode_2);
      statements.addRange$3(_this._evaluate0$_root.children, 0, _this._evaluate0$_endOfImports);
      statements.addAll$1(0, _this._evaluate0$_outOfOrderImports);
      statements.addRange$2(_this._evaluate0$_root.children, _this._evaluate0$_endOfImports);
      return statements.build$0();
    },
    _evaluate0$_combineCss$2$clone: function(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;
      if (!C.JSArray_methods.any$1(root.get$upstream(), new R._EvaluateVisitor__combineCss_closure5())) {
        selectors = root.get$extender().get$simpleSelectors();
        unsatisfiedExtension = B.firstOrNull0(root.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__combineCss_closure6(selectors)));
        if (unsatisfiedExtension != null)
          _this._evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._evaluate0$_topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module0<Callable0*>*>");
        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new R._EvaluateVisitor__combineCss_closure7(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._evaluate0$_extendModules$1(sortedModules);
      t1 = type$.JSArray_legacy_CssNode_2;
      imports = H.setRuntimeTypeInfo([], t1);
      css = H.setRuntimeTypeInfo([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        t2 = cur.get$css(cur);
        statements = t2.get$children(t2);
        index = _this._evaluate0$_indexAfterImports$1(statements);
        t2 = J.getInterceptor$ax(statements);
        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));
        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));
      }
      return new V.CssStylesheet0(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode_2), root.get$css(root).get$span());
    },
    _evaluate0$_combineCss$1: function(root) {
      return this._evaluate0$_combineCss$2$clone(root, false);
    },
    _evaluate0$_extendModules$1: function(sortedModules) {
      var t1, t2, originalSelectors, extenders, t3, t4, _i,
        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender_2),
        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension_2);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__extendModules_closure3(originalSelectors)));
        extenders = downstreamExtenders.$index(0, t2.get$url());
        if (extenders != null)
          t2.get$extender().addExtensions$1(extenders);
        t3 = t2.get$extender();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new R._EvaluateVisitor__extendModules_closure4()), t2.get$extender());
        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _evaluate0$_throwForUnsatisfiedExtension$1: function(extension) {
      throw H.wrapException(E.SassException$0(string$.The_ta + H.S(extension.target) + ' !optional" to avoid this error.', extension.span));
    },
    _evaluate0$_topologicalModules$1: function(root) {
      var t1 = type$.legacy_Module_legacy_Callable_2,
        sorted = Q.QueueList$(null, t1);
      new R._EvaluateVisitor__topologicalModules_visitModule1(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _evaluate0$_indexAfterImports$1: function(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment_2, t3 = type$.legacy_CssImport_2, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1: function(node) {
      var t1, t2, _i;
      for (t1 = node.children, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(this);
      return null;
    },
    visitAtRootRule$1: function(node) {
      var root, innerCopy, outerCopy, cur, copy, _this = this, _null = null,
        t1 = node.query,
        query = t1 != null ? _this._evaluate0$_adjustParseError$2(t1, new R._EvaluateVisitor_visitAtRootRule_closure5(_this, _this._evaluate0$_performInterpolation$2$warnForColor(t1, true))) : C.AtRootQuery_UsS0,
        $parent = _this._evaluate0$_parent,
        included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode_2);
      for (t1 = type$.legacy_CssStylesheet_2; !t1._is($parent);) {
        if (!query.excludes$1($parent))
          included.push($parent);
        $parent = $parent._node2$_parent;
      }
      root = _this._evaluate0$_trimIncluded$1(included);
      if (root == _this._evaluate0$_parent) {
        _this._evaluate0$_environment.scope$1$2$when(new R._EvaluateVisitor_visitAtRootRule_closure6(_this, node), node.hasDeclarations, type$.Null);
        return _null;
      }
      innerCopy = included.length === 0 ? _null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();
      for (t1 = H.SubListIterable$(included, 1, _null, type$.legacy_ModifiableCssParentNode_2), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
        cur = t1.__internal$_current;
        copy = cur.copyWithoutChildren$0();
        copy.addChild$1(outerCopy);
      }
      if (outerCopy != null)
        root.addChild$1(outerCopy);
      _this._evaluate0$_scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new R._EvaluateVisitor_visitAtRootRule_closure7(_this, node));
      return _null;
    },
    _evaluate0$_trimIncluded$1: function(nodes) {
      var $parent, innermostContiguous, i, t2, root,
        t1 = nodes.length;
      if (t1 === 0)
        return this._evaluate0$_root;
      $parent = this._evaluate0$_parent;
      for (innermostContiguous = null, i = 0; i < t1; ++i) {
        for (; $parent != nodes[i]; innermostContiguous = null)
          $parent = $parent._node2$_parent;
        if (innermostContiguous == null)
          innermostContiguous = i;
        $parent = $parent._node2$_parent;
      }
      t2 = this._evaluate0$_root;
      if ($parent != t2)
        return t2;
      root = nodes[innermostContiguous];
      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);
      return root;
    },
    _evaluate0$_scopeForAtRoot$4: function(node, newParent, query, included) {
      var _this = this,
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure11(_this, newParent, node),
        t1 = query._at_root_query0$_all || query._at_root_query0$_rule;
      if (t1 !== query.include)
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure12(_this, scope);
      if (_this._evaluate0$_mediaQueries != null && query.excludesName$1("media"))
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure13(_this, scope);
      if (_this._evaluate0$_inKeyframes && query.excludesName$1("keyframes"))
        scope = new R._EvaluateVisitor__scopeForAtRoot_closure14(_this, scope);
      return _this._evaluate0$_inUnknownAtRule && !C.JSArray_methods.any$1(included, new R._EvaluateVisitor__scopeForAtRoot_closure15()) ? new R._EvaluateVisitor__scopeForAtRoot_closure16(_this, scope) : scope;
    },
    visitContentBlock$1: function(node) {
      return H.throwExpression(P.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1: function(node) {
      var $content = this._evaluate0$_environment._environment0$_content;
      if ($content == null)
        return null;
      this._evaluate0$_runUserDefinedCallable$4(node.$arguments, $content, node, new R._EvaluateVisitor_visitContentRule_closure1(this, $content));
      return null;
    },
    visitDebugRule$1: function(node) {
      var value = node.expression.accept$1(this),
        t1 = value instanceof D.SassString0 ? value.text : J.toString$0$(value);
      this._evaluate0$_logger.debug$2(0, t1, node.span);
      return null;
    },
    visitDeclaration$1: function(node) {
      var t1, $name, t2, cssValue, t3, oldDeclarationName, _this = this;
      if (!(_this._evaluate0$_styleRule != null && !_this._evaluate0$_atRootExcludingStyleRule) && !_this._evaluate0$_inUnknownAtRule && !_this._evaluate0$_inKeyframes)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Declarm, node.span));
      t1 = node.name;
      $name = _this._evaluate0$_interpolationToValue$2$warnForColor(t1, true);
      t2 = _this._evaluate0$_declarationName;
      if (t2 != null)
        $name = new F.CssValue0(t2 + "-" + H.S($name.value), $name.span, type$.CssValue_legacy_String_2);
      t2 = node.value;
      cssValue = t2 == null ? null : new F.CssValue0(t2.accept$1(_this), t2.get$span(), type$.CssValue_legacy_Value_2);
      if (cssValue != null) {
        t3 = cssValue.value;
        t3 = !t3.get$isBlank() || t3.get$asList().length === 0;
      } else
        t3 = false;
      if (t3) {
        t3 = _this._evaluate0$_parent;
        t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
        t2 = _this._evaluate0$_expressionNode$1(t2);
        t2 = t2 == null ? null : t2.get$span();
        t3.addChild$1(L.ModifiableCssDeclaration$0($name, cssValue, node.span, t1, t2));
      } else if (J.startsWith$1$s($name.value, "--") && node.children == null)
        throw H.wrapException(_this._evaluate0$_exception$2("Custom property values may not be empty.", t2.get$span()));
      if (node.children != null) {
        oldDeclarationName = _this._evaluate0$_declarationName;
        _this._evaluate0$_declarationName = $name.value;
        _this._evaluate0$_environment.scope$1$2$when(new R._EvaluateVisitor_visitDeclaration_closure1(_this, node), node.hasDeclarations, type$.Null);
        _this._evaluate0$_declarationName = oldDeclarationName;
      }
      return null;
    },
    visitEachRule$1: function(node) {
      var _this = this,
        t1 = node.list,
        list = t1.accept$1(_this),
        nodeWithSpan = _this._evaluate0$_expressionNode$1(t1),
        setVariables = node.variables.length === 1 ? new R._EvaluateVisitor_visitEachRule_closure5(_this, node, nodeWithSpan) : new R._EvaluateVisitor_visitEachRule_closure6(_this, node, nodeWithSpan);
      return _this._evaluate0$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitEachRule_closure7(_this, list, setVariables, node), true, type$.legacy_Value_2);
    },
    _evaluate0$_setMultipleVariables$3: function(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._evaluate0$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._evaluate0$_environment.setLocalVariable$3(variables[i], C.C_SassNull, nodeWithSpan);
    },
    visitErrorRule$1: function(node) {
      throw H.wrapException(this._evaluate0$_exception$2(J.toString$0$(node.expression.accept$1(this)), node.span));
    },
    visitExtendRule$1: function(node) {
      var targetText, t1, t2, t3, _i, t4, _this = this;
      if (!(_this._evaluate0$_styleRule != null && !_this._evaluate0$_atRootExcludingStyleRule) || _this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.x40exten, node.span));
      targetText = _this._evaluate0$_interpolationToValue$2$warnForColor(node.selector, true);
      for (t1 = _this._evaluate0$_adjustParseError$2(targetText, new R._EvaluateVisitor_visitExtendRule_closure1(_this, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector_2, _i = 0; _i < t2; ++_i) {
        t4 = t1[_i].components;
        if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector0))
          throw H.wrapException(E.SassFormatException$0("complex selectors may not be extended.", targetText.span));
        t4 = t3._as(C.JSArray_methods.get$first(t4)).components;
        if (t4.length !== 1)
          throw H.wrapException(E.SassFormatException$0(string$.compou + C.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.span));
        _this._evaluate0$_extender.addExtension$4(_this._evaluate0$_styleRule.selector, C.JSArray_methods.get$first(t4), node, _this._evaluate0$_mediaQueries);
      }
      return null;
    },
    visitAtRule$1: function(node) {
      var $name, t1, value, wasInKeyframes, wasInUnknownAtRule, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.At_rul, node.span));
      $name = _this._evaluate0$_interpolationToValue$1(node.name);
      t1 = node.value;
      value = t1 == null ? null : _this._evaluate0$_interpolationToValue$3$trim$warnForColor(t1, true, true);
      if (node.children == null) {
        _this._evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0($name, node.span, true, value));
        return null;
      }
      wasInKeyframes = _this._evaluate0$_inKeyframes;
      wasInUnknownAtRule = _this._evaluate0$_inUnknownAtRule;
      if (B.unvendor0($name.value) === "keyframes")
        _this._evaluate0$_inKeyframes = true;
      else
        _this._evaluate0$_inUnknownAtRule = true;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0($name, node.span, false, value), new R._EvaluateVisitor_visitAtRule_closure3(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitAtRule_closure4(), type$.legacy_ModifiableCssAtRule_2, type$.Null);
      _this._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
      _this._evaluate0$_inKeyframes = wasInKeyframes;
      return null;
    },
    visitForRule$1: function(node) {
      var _this = this, t1 = {},
        t2 = node.from,
        fromNumber = _this._evaluate0$_addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure9(_this, node)),
        t3 = node.to,
        toNumber = _this._evaluate0$_addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure10(_this, node)),
        from = _this._evaluate0$_addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure11(fromNumber)),
        to = t1.to = _this._evaluate0$_addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure12(toNumber, fromNumber)),
        direction = from > to ? -1 : 1;
      if (from === (!node.isExclusive ? t1.to = to + direction : to))
        return null;
      return _this._evaluate0$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitForRule_closure13(t1, _this, node, from, direction, fromNumber), true, type$.legacy_Value_2);
    },
    visitForwardRule$1: function(node) {
      var newConfiguration, t4, _i, variable, _this = this,
        _s8_ = "@forward",
        oldConfiguration = _this._evaluate0$_configuration,
        adjustedConfiguration = oldConfiguration.throughForward$1(node),
        t1 = node.configuration,
        t2 = t1.length,
        t3 = node.url;
      if (t2 !== 0) {
        newConfiguration = _this._evaluate0$_addForwardConfiguration$2(adjustedConfiguration, node);
        _this._evaluate0$_loadModule$5$configuration(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure3(_this, node), newConfiguration);
        t3 = type$.legacy_String;
        t4 = P.LinkedHashSet_LinkedHashSet(t3);
        for (_i = 0; _i < t2; ++_i) {
          variable = t1[_i];
          if (!variable.isGuarded)
            t4.add$1(0, variable.name);
        }
        _this._evaluate0$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
        t3 = P.LinkedHashSet_LinkedHashSet(t3);
        for (_i = 0; _i < t2; ++_i)
          t3.add$1(0, t1[_i].name);
        _this._evaluate0$_assertConfigurationIsEmpty$2$only(newConfiguration, t3);
      } else {
        _this._evaluate0$_configuration = adjustedConfiguration;
        _this._evaluate0$_loadModule$4(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure4(_this, node));
        _this._evaluate0$_configuration = oldConfiguration;
      }
      return null;
    },
    _evaluate0$_addForwardConfiguration$2: function(configuration, node) {
      var t2, t3, _i, variable, t4, t5,
        t1 = configuration._configuration$_values,
        newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue_2), type$.legacy_String, type$.legacy_ConfiguredValue_2);
      for (t2 = node.configuration, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        variable = t2[_i];
        if (variable.isGuarded) {
          t4 = variable.name;
          t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
          if (t5 != null && !J.$eq$(t5.value, C.C_SassNull)) {
            newValues.$indexSet(0, t4, t5);
            continue;
          }
        }
        t4 = variable.name;
        t5 = variable.expression;
        newValues.$indexSet(0, t4, new Z.ConfiguredValue0(t5.accept$1(this).withoutSlash$0(), variable.span, this._evaluate0$_expressionNode$1(t5)));
      }
      return new A.Configuration0(newValues, node, false);
    },
    _evaluate0$_removeUsedConfiguration$3$except: function(upstream, downstream, except) {
      var t1, t2, t3, t4, _i, $name;
      for (t1 = upstream._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._configuration$_values, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!t4.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _evaluate0$_assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {
      configuration._configuration$_values.forEach$1(0, new R._EvaluateVisitor__assertConfigurationIsEmpty_closure1(this, only, nameInError));
    },
    _evaluate0$_assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {
      return this._evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);
    },
    _evaluate0$_assertConfigurationIsEmpty$1: function(configuration) {
      return this._evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);
    },
    _evaluate0$_assertConfigurationIsEmpty$2$only: function(configuration, only) {
      return this._evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);
    },
    visitFunctionRule$1: function(node) {
      var t1 = this._evaluate0$_environment,
        t2 = t1.closure$0(),
        t3 = t1._environment0$_functions,
        index = t3.length - 1,
        t4 = node.name;
      t1._environment0$_functionIndices.$indexSet(0, t4, index);
      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_Environment_2));
      return null;
    },
    visitIfRule$1: function(node) {
      var t1, t2, _i, clauseToCheck, _box_0 = {};
      _box_0.clause = node.lastClause;
      for (t1 = node.clauses, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        clauseToCheck = t1[_i];
        if (clauseToCheck.expression.accept$1(this).get$isTruthy()) {
          _box_0.clause = clauseToCheck;
          break;
        }
      }
      t1 = _box_0.clause;
      if (t1 == null)
        return null;
      return this._evaluate0$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitIfRule_closure1(_box_0, this), true, t1.hasDeclarations, type$.legacy_Value_2);
    },
    visitImportRule$1: function(node) {
      var t1, t2, t3, t4, t5, t6, _i, $import, t7, result, supports, t8, t9, resolvedSupports, mediaQuery, t10, result0, _this = this, _null = null;
      for (t1 = node.imports, t2 = t1.length, t3 = type$.legacy_CssMediaQuery_2, t4 = type$.CssValue_legacy_String_2, t5 = type$.legacy_StaticImport_2, t6 = type$.JSArray_legacy_ModifiableCssImport_2, _i = 0; _i < t2; ++_i) {
        $import = t1[_i];
        if ($import instanceof B.DynamicImport0)
          _this._evaluate0$_visitDynamicImport$1($import);
        else {
          t5._as($import);
          t7 = $import.url;
          result = _this._evaluate0$_performInterpolation$2$warnForColor(t7, false);
          supports = $import.supports;
          if (supports instanceof L.SupportsDeclaration0) {
            t8 = supports.name;
            t8 = H.S(_this._evaluate0$_serialize$3$quote(t8.accept$1(_this), t8, true)) + ": ";
            t9 = supports.value;
            resolvedSupports = t8 + H.S(_this._evaluate0$_serialize$3$quote(t9.accept$1(_this), t9, true));
          } else
            resolvedSupports = supports == null ? _null : _this._evaluate0$_visitSupportsCondition$1(supports);
          t8 = $import.media;
          mediaQuery = t8 == null ? _null : _this._evaluate0$_visitMediaQueries$1(t8);
          t8 = $import.span;
          t9 = resolvedSupports == null ? _null : new F.CssValue0("supports(" + resolvedSupports + ")", supports.get$span(), t4);
          if (mediaQuery == null)
            t10 = _null;
          else {
            result0 = P.List_List$from(mediaQuery, false, t3);
            result0.fixed$length = Array;
            result0.immutable$list = Array;
            t10 = result0;
          }
          node = new F.ModifiableCssImport0(new F.CssValue0(result, t7.span, t4), t9, t10, t8);
          t7 = _this._evaluate0$_parent;
          t8 = _this._evaluate0$_root;
          if (t7 != t8)
            t7.addChild$1(node);
          else if (_this._evaluate0$_endOfImports === J.get$length$asx(t8.children._collection$_source)) {
            t7 = _this._evaluate0$_root;
            t7.toString;
            node._node2$_parent = t7;
            t7 = t7._node2$_children;
            node._node2$_indexInParent = t7.length;
            t7.push(node);
            _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;
          } else {
            t7 = _this._evaluate0$_outOfOrderImports;
            (t7 == null ? _this._evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], t6) : t7).push(node);
          }
        }
      }
      return _null;
    },
    _evaluate0$_visitDynamicImport$1: function($import) {
      return this._evaluate0$_withStackFrame$3("@import", $import, new R._EvaluateVisitor__visitDynamicImport_closure1(this, $import));
    },
    _evaluate0$_loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {
      var stylesheet, tuple, error, error0, message, t1, t2, t3, exception, message0, _this = this;
      try {
        _this._evaluate0$_importSpan = span;
        if (_this._nodeImporter != null) {
          stylesheet = _this._importLikeNode$2(url, forImport);
          if (stylesheet != null)
            return new S.Tuple2(null, stylesheet, type$.Tuple2_of_legacy_Importer_and_legacy_Stylesheet_2);
        } else {
          t1 = P.Uri_parse(url);
          t2 = _this._evaluate0$_importer;
          if (baseUrl == null) {
            t3 = _this._evaluate0$_stylesheet;
            t3 = t3 == null ? null : t3.span;
            t3 = t3 == null ? null : t3.file.url;
          } else
            t3 = baseUrl;
          tuple = _this._evaluate0$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport);
          if (tuple != null)
            return tuple;
        }
        if (C.JSString_methods.startsWith$1(url, "package:") && true)
          throw H.wrapException(string$.x22packa);
        else
          throw H.wrapException("Can't find stylesheet to import.");
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassException0) {
          error = t1;
          t1 = _this._evaluate0$_exception$2(error._span_exception$_message, error.get$span());
          throw H.wrapException(t1);
        } else {
          error0 = t1;
          message = null;
          try {
            message = H._asStringS(J.get$message$x(error0));
          } catch (exception) {
            H.unwrapException(exception);
            message0 = J.toString$0$(error0);
            message = message0;
          }
          t1 = _this._evaluate0$_exception$1(message);
          throw H.wrapException(t1);
        }
      } finally {
        _this._evaluate0$_importSpan = null;
      }
    },
    _evaluate0$_loadStylesheet$3$baseUrl: function(url, span, baseUrl) {
      return this._evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _evaluate0$_loadStylesheet$3$forImport: function(url, span, forImport) {
      return this._evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    _importLikeNode$2: function(originalUrl, forImport) {
      var contents, url, _this = this,
        t1 = _this._evaluate0$_stylesheet.span,
        result = _this._nodeImporter.load$3(0, originalUrl, t1.file.url, forImport);
      if (result == null)
        return null;
      contents = result.item1;
      url = result.item2;
      t1 = J.getInterceptor$s(url).startsWith$1(url, "file:") ? $.$get$context().style.pathFromUri$1(M._parseUri(url)) : url;
      _this._includedFiles.add$1(0, t1);
      t1 = C.JSString_methods.startsWith$1(url, "file") ? M.Syntax_forPath0(url) : C.Syntax_SCSS0;
      return V.Stylesheet_Stylesheet$parse0(contents, t1, _this._evaluate0$_logger, url);
    },
    visitIncludeRule$1: function(node) {
      var nodeWithSpan, t1, t2, contentCallable, _this = this,
        _s37_ = "Mixin doesn't accept a content block.",
        mixin = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitIncludeRule_closure5(_this, node));
      if (mixin == null)
        throw H.wrapException(_this._evaluate0$_exception$2("Undefined mixin.", node.span));
      nodeWithSpan = new B._FakeAstNode0(new R._EvaluateVisitor_visitIncludeRule_closure6(node));
      if (mixin instanceof Q.BuiltInCallable0) {
        if (node.content != null)
          throw H.wrapException(_this._evaluate0$_exception$2(_s37_, node.span));
        _this._evaluate0$_runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan);
      } else if (type$.legacy_UserDefinedCallable_legacy_Environment_2._is(mixin)) {
        t1 = node.content;
        t2 = t1 == null;
        if (!t2 && !type$.legacy_MixinRule_2._as(mixin.declaration).hasContent)
          throw H.wrapException(E.MultiSpanSassRuntimeException$0(_s37_, node.get$spanWithoutContent(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate0$_stackTrace$1(node.get$spanWithoutContent())));
        contentCallable = t2 ? null : new E.UserDefinedCallable0(t1, _this._evaluate0$_environment.closure$0(), type$.UserDefinedCallable_legacy_Environment_2);
        _this._evaluate0$_runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new R._EvaluateVisitor_visitIncludeRule_closure7(_this, contentCallable, mixin, nodeWithSpan));
      } else
        throw H.wrapException(P.UnsupportedError$("Unknown callable type " + mixin.toString$0(0) + "."));
      return null;
    },
    visitMixinRule$1: function(node) {
      var t1 = this._evaluate0$_environment,
        t2 = t1.closure$0(),
        t3 = t1._environment0$_mixins,
        index = t3.length - 1,
        t4 = node.name;
      t1._environment0$_mixinIndices.$indexSet(0, t4, index);
      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_Environment_2));
      return null;
    },
    visitLoudComment$1: function(node) {
      var t1, t2, _this = this;
      if (_this._evaluate0$_inFunction)
        return null;
      t1 = _this._evaluate0$_parent;
      t2 = _this._evaluate0$_root;
      if (t1 == t2 && _this._evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))
        _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;
      t1 = node.text;
      _this._evaluate0$_parent.addChild$1(new R.ModifiableCssComment0(_this._evaluate0$_performInterpolation$1(t1), t1.span));
      return null;
    },
    visitMediaRule$1: function(node) {
      var queries, t1, mergedQueries, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Media_, node.span));
      queries = _this._evaluate0$_visitMediaQueries$1(node.query);
      t1 = _this._evaluate0$_mediaQueries;
      mergedQueries = t1 == null ? null : _this._evaluate0$_mergeMediaQueries$2(t1, queries);
      t1 = mergedQueries == null;
      if (!t1 && mergedQueries.length === 0)
        return null;
      t1 = t1 ? queries : mergedQueries;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new R._EvaluateVisitor_visitMediaRule_closure3(_this, mergedQueries, queries, node), node.hasDeclarations, new R._EvaluateVisitor_visitMediaRule_closure4(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null);
      return null;
    },
    _evaluate0$_visitMediaQueries$1: function(interpolation) {
      return this._evaluate0$_adjustParseError$2(interpolation, new R._EvaluateVisitor__visitMediaQueries_closure1(this, this._evaluate0$_performInterpolation$2$warnForColor(interpolation, true)));
    },
    _evaluate0$_mergeMediaQueries$2: function(queries1, queries2) {
      var t1, t2, t3, t4, t5, result,
        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery_2);
      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult_2; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {
          result = t4.merge$1(t5.get$current(t5));
          if (result === C._SingletonCssMediaQueryMergeResult_empty0)
            continue;
          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable0)
            return null;
          queries.push(t3._as(result).query);
        }
      }
      return queries;
    },
    visitReturnRule$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitSilentComment$1: function(node) {
      return null;
    },
    visitStyleRule$1: function(node) {
      var t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, _this = this, t1 = {};
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Style_, node.span));
      t2 = node.selector;
      selectorText = _this._evaluate0$_interpolationToValue$3$trim$warnForColor(t2, true, true);
      if (_this._evaluate0$_inKeyframes) {
        _this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(new F.CssValue0(P.List_List$unmodifiable(_this._evaluate0$_adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure13(_this, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String_2), node.span), new R._EvaluateVisitor_visitStyleRule_closure14(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure15(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null);
        return null;
      }
      t1.parsedSelector = _this._evaluate0$_adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure16(_this, selectorText));
      parsedSelector = _this._evaluate0$_addExceptionSpan$2(t2, new R._EvaluateVisitor_visitStyleRule_closure17(t1, _this));
      t1.parsedSelector = parsedSelector;
      rule = X.ModifiableCssStyleRule$0(_this._evaluate0$_extender.addSelector$3(parsedSelector, t2.span, _this._evaluate0$_mediaQueries), node.span, t1.parsedSelector);
      oldAtRootExcludingStyleRule = _this._evaluate0$_atRootExcludingStyleRule;
      _this._evaluate0$_atRootExcludingStyleRule = false;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitStyleRule_closure18(_this, rule, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure19(), type$.legacy_ModifiableCssStyleRule_2, type$.Null);
      _this._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      if (!(_this._evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {
        t1 = _this._evaluate0$_parent.children;
        t1 = !t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._evaluate0$_parent.children;
        t1.get$last(t1).isGroupEnd = true;
      }
      return null;
    },
    visitSupportsRule$1: function(node) {
      var t1, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Suppor, node.span));
      t1 = node.condition;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$0(new F.CssValue0(_this._evaluate0$_visitSupportsCondition$1(t1), t1.get$span(), type$.CssValue_legacy_String_2), node.span), new R._EvaluateVisitor_visitSupportsRule_closure3(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitSupportsRule_closure4(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null);
      return null;
    },
    _evaluate0$_visitSupportsCondition$1: function(condition) {
      var t1, t2, _this = this;
      if (condition instanceof U.SupportsOperation0) {
        t1 = condition.left;
        t2 = condition.operator;
        return H.S(_this._evaluate0$_parenthesize$2(t1, t2)) + " " + t2 + " " + H.S(_this._evaluate0$_parenthesize$2(condition.right, t2));
      } else if (condition instanceof M.SupportsNegation0)
        return "not " + H.S(_this._evaluate0$_parenthesize$1(condition.condition));
      else if (condition instanceof X.SupportsInterpolation0) {
        t1 = condition.expression;
        return _this._evaluate0$_serialize$3$quote(t1.accept$1(_this), t1, false);
      } else if (condition instanceof L.SupportsDeclaration0) {
        t1 = condition.name;
        t1 = "(" + H.S(_this._evaluate0$_serialize$3$quote(t1.accept$1(_this), t1, true)) + ": ";
        t2 = condition.value;
        return t1 + H.S(_this._evaluate0$_serialize$3$quote(t2.accept$1(_this), t2, true)) + ")";
      } else if (condition instanceof F.SupportsFunction0)
        return _this._evaluate0$_performInterpolation$1(condition.name) + "(" + _this._evaluate0$_performInterpolation$1(condition.$arguments) + ")";
      else if (condition instanceof Y.SupportsAnything0)
        return "(" + _this._evaluate0$_performInterpolation$1(condition.contents) + ")";
      else
        return null;
    },
    _evaluate0$_parenthesize$2: function(condition, operator) {
      var t1;
      if (!(condition instanceof M.SupportsNegation0))
        if (condition instanceof U.SupportsOperation0)
          t1 = operator == null || operator !== condition.operator;
        else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "(" + H.S(this._evaluate0$_visitSupportsCondition$1(condition)) + ")";
      else
        return this._evaluate0$_visitSupportsCondition$1(condition);
    },
    _evaluate0$_parenthesize$1: function(condition) {
      return this._evaluate0$_parenthesize$2(condition, null);
    },
    visitVariableDeclaration$1: function(node) {
      var t1, value, t2, _this = this, _null = null;
      if (node.isGuarded) {
        if (node.namespace == null && _this._evaluate0$_environment._environment0$_variables.length === 1) {
          t1 = _this._evaluate0$_configuration._configuration$_values;
          t1 = t1.get$isEmpty(t1) ? _null : t1.remove$1(0, node.name);
          if (t1 != null) {
            _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure5(_this, node, t1));
            return _null;
          }
        }
        value = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure6(_this, node));
        if (value != null && !value.$eq(0, C.C_SassNull))
          return _null;
      }
      if (node.isGlobal && !_this._evaluate0$_environment.globalVariableExists$1(node.name)) {
        t1 = _this._evaluate0$_environment._environment0$_variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName0(node.span) + ": null` at the root of the\nstylesheet.";
        t2 = node.span;
        _this._evaluate0$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, _this._evaluate0$_stackTrace$1(t2));
      }
      _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure7(_this, node, node.expression.accept$1(_this).withoutSlash$0()));
      return _null;
    },
    visitUseRule$1: function(node) {
      var configuration, t3, _i, variable, t4, t5, _this = this,
        t1 = node.configuration,
        t2 = t1.length;
      if (t2 === 0)
        configuration = C.Configuration_Map_empty_null_true0;
      else {
        t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);
        for (_i = 0; _i < t2; ++_i) {
          variable = t1[_i];
          t4 = variable.name;
          t5 = variable.expression;
          t3.$indexSet(0, t4, new Z.ConfiguredValue0(t5.accept$1(_this).withoutSlash$0(), variable.span, _this._evaluate0$_expressionNode$1(t5)));
        }
        configuration = new A.Configuration0(t3, node, false);
      }
      _this._evaluate0$_loadModule$5$configuration(node.url, "@use", node, new R._EvaluateVisitor_visitUseRule_closure1(_this, node), configuration);
      _this._evaluate0$_assertConfigurationIsEmpty$1(configuration);
      return null;
    },
    visitWarnRule$1: function(node) {
      var _this = this,
        value = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitWarnRule_closure1(_this, node)),
        t1 = value instanceof D.SassString0 ? value.text : _this._evaluate0$_serialize$2(value, node.expression);
      _this._evaluate0$_logger.warn$2$trace(0, t1, _this._evaluate0$_stackTrace$1(node.span));
      return null;
    },
    visitWhileRule$1: function(node) {
      return this._evaluate0$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitWhileRule_closure1(this, node), true, node.hasDeclarations, type$.legacy_Value_2);
    },
    visitBinaryOperationExpression$1: function(node) {
      return this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitBinaryOperationExpression_closure1(this, node));
    },
    visitValueExpression$1: function(node) {
      return node.value;
    },
    visitVariableExpression$1: function(node) {
      var result = this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableExpression_closure1(this, node));
      if (result != null)
        return result;
      throw H.wrapException(this._evaluate0$_exception$2("Undefined variable.", node.span));
    },
    visitUnaryOperationExpression$1: function(node) {
      var operand = node.operand.accept$1(this),
        t1 = node.operator;
      switch (t1) {
        case C.UnaryOperator_j2w0:
          return operand.unaryPlus$0();
        case C.UnaryOperator_U4G0:
          return operand.unaryMinus$0();
        case C.UnaryOperator_zDx0:
          operand.toString;
          return new D.SassString0("/" + N.serializeValue(operand, false, true), false);
        case C.UnaryOperator_not_not0:
          return operand.unaryNot$0();
        default:
          throw H.wrapException(P.StateError$("Unknown unary operator " + H.S(t1) + "."));
      }
    },
    visitBooleanExpression$1: function(node) {
      return node.value ? C.SassBoolean_true : C.SassBoolean_false;
    },
    visitIfExpression$1: function(node) {
      var condition, ifTrue, ifFalse, _this = this,
        pair = _this._evaluate0$_evaluateMacroArguments$1(node),
        positional = pair.item1,
        named = pair.item2,
        t1 = J.getInterceptor$asx(positional);
      _this._evaluate0$_verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration0(), node);
      condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, "condition");
      ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, "if-true");
      ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, "if-false");
      return (condition.accept$1(_this).get$isTruthy() ? ifTrue : ifFalse).accept$1(_this);
    },
    visitNullExpression$1: function(node) {
      return C.C_SassNull;
    },
    visitNumberExpression$1: function(node) {
      var t1 = node.value,
        t2 = node.unit;
      return t2 == null ? new N.UnitlessSassNumber0(t1, null) : new L.SingleUnitSassNumber0(t2, t1, null);
    },
    visitParenthesizedExpression$1: function(node) {
      return node.expression.accept$1(this);
    },
    visitColorExpression$1: function(node) {
      return node.value;
    },
    visitListExpression$1: function(node) {
      var t1 = node.contents;
      return D.SassList$0(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitListExpression_closure1(this), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value0*>")), node.separator, node.hasBrackets);
    },
    visitMapExpression$1: function(node) {
      var t2, t3, _i, pair, t4, keyValue, valueValue,
        t1 = type$.legacy_Value_2,
        map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1),
        keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode_2);
      for (t2 = node.pairs, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        pair = t2[_i];
        t4 = pair.item1;
        keyValue = t4.accept$1(this);
        valueValue = pair.item2.accept$1(this);
        if (map.containsKey$1(keyValue))
          throw H.wrapException(E.MultiSpanSassRuntimeException$0("Duplicate key.", t4.get$span(), "second key", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), "first key"], type$.legacy_FileSpan, type$.legacy_String), this._evaluate0$_stackTrace$1(t4.get$span())));
        map.$indexSet(0, keyValue, valueValue);
        keyNodes.$indexSet(0, keyValue, t4);
      }
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(map, t1, t1));
    },
    visitFunctionExpression$1: function(node) {
      var oldInFunction, result, _this = this, t1 = {},
        t2 = node.name,
        plainName = t2.get$asPlain();
      t1.$function = null;
      if ((plainName != null ? t1.$function = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure3(_this, node, plainName)) : null) == null) {
        if (node.namespace != null)
          throw H.wrapException(_this._evaluate0$_exception$2("Undefined function.", node.span));
        t1.$function = new L.PlainCssCallable0(_this._evaluate0$_performInterpolation$1(t2));
      }
      oldInFunction = _this._evaluate0$_inFunction;
      _this._evaluate0$_inFunction = true;
      result = _this._evaluate0$_addErrorSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure4(t1, _this, node));
      _this._evaluate0$_inFunction = oldInFunction;
      return result;
    },
    _evaluate0$_getFunction$2$namespace: function($name, namespace) {
      var local = this._evaluate0$_environment.getFunction$2$namespace($name, namespace);
      if (local != null || namespace != null)
        return local;
      return this._evaluate0$_builtInFunctions.$index(0, $name);
    },
    _evaluate0$_runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {
      var evaluated = this._evaluate0$_evaluateArguments$1($arguments),
        t1 = callable.declaration.name,
        $name = t1 == null ? "@content" : t1 + "()";
      return this._evaluate0$_withStackFrame$3($name, nodeWithSpan, new R._EvaluateVisitor__runUserDefinedCallable_closure1(this, callable, evaluated, nodeWithSpan, run));
    },
    _evaluate0$_runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {
      var result, t1, t2, t3, first, _i, argument, rest, _this = this;
      if (callable instanceof Q.BuiltInCallable0) {
        result = _this._evaluate0$_runBuiltInCallable$3($arguments, callable, nodeWithSpan);
        if (result == null)
          throw H.wrapException(_this._evaluate0$_exception$2(string$.Custom, nodeWithSpan.get$span()));
        return result.withoutSlash$0();
      } else if (type$.legacy_UserDefinedCallable_legacy_Environment_2._is(callable))
        return _this._evaluate0$_runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new R._EvaluateVisitor__runFunctionCallable_closure1(_this, callable)).withoutSlash$0();
      else if (callable instanceof L.PlainCssCallable0) {
        t1 = $arguments.named;
        if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)
          throw H.wrapException(_this._evaluate0$_exception$2(string$.Plain_, nodeWithSpan.get$span()));
        t1 = H.S(callable.name) + "(";
        for (t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0; _i < t3; ++_i) {
          argument = t2[_i];
          if (first)
            first = false;
          else
            t1 += ", ";
          t1 += H.S(_this._evaluate0$_serialize$3$quote(argument.accept$1(_this), argument, true));
        }
        t2 = $arguments.rest;
        rest = t2 == null ? null : t2.accept$1(_this);
        if (rest != null) {
          if (!first)
            t1 += ", ";
          t2 = t1 + H.S(_this._evaluate0$_serialize$2(rest, t2));
          t1 = t2;
        }
        t1 += H.Primitives_stringFromCharCode(41);
        return new D.SassString0(t1.charCodeAt(0) == 0 ? t1 : t1, false);
      } else
        return null;
    },
    _evaluate0$_runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {
      var callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, _this = this,
        evaluated = _this._evaluate0$_evaluateArguments$2$trackSpans($arguments, false),
        oldCallableNode = _this._evaluate0$_callableNode;
      _this._evaluate0$_callableNode = nodeWithSpan;
      namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);
      tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);
      overload = tuple.item1;
      callback = tuple.item2;
      _this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__runBuiltInCallable_closure3(overload, evaluated, namedSet));
      declaredArguments = overload.$arguments;
      for (i = evaluated.positional.length, t1 = declaredArguments.length; i < t1; ++i) {
        argument = declaredArguments[i];
        t2 = evaluated.positional;
        t3 = evaluated.named.remove$1(0, argument.name);
        if (t3 == null) {
          t3 = argument.defaultValue;
          t3 = t3 == null ? null : t3.accept$1(_this);
        }
        t2.push(t3);
      }
      if (overload.restArgument != null) {
        if (evaluated.positional.length > t1) {
          rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);
          C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);
        } else
          rest = C.List_empty16;
        t1 = evaluated.named;
        argumentList = D.SassArgumentList$0(rest, t1, evaluated.separator === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : evaluated.separator);
        evaluated.positional.push(argumentList);
      } else
        argumentList = null;
      result = null;
      try {
        result = callback.call$1(evaluated.positional);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SassRuntimeException_2._is(t1))
          throw exception;
        else if (t1 instanceof E.MultiSpanSassScriptException0) {
          error = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, _this._evaluate0$_stackTrace$1(nodeWithSpan.get$span())));
        } else if (t1 instanceof E.MultiSpanSassException0) {
          error0 = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, _this._evaluate0$_stackTrace$1(error0.get$span())));
        } else {
          error1 = t1;
          message = null;
          try {
            message = H._asStringS(J.get$message$x(error1));
          } catch (exception) {
            H.unwrapException(exception);
            message0 = J.toString$0$(error1);
            message = message0;
          }
          throw H.wrapException(_this._evaluate0$_exception$2(message, nodeWithSpan.get$span()));
        }
      }
      _this._evaluate0$_callableNode = oldCallableNode;
      if (argumentList == null)
        return result;
      t1 = evaluated.named;
      if (t1.get$isEmpty(t1))
        return result;
      if (argumentList._argument_list$_wereKeywordsAccessed)
        return result;
      t1 = evaluated.named;
      t1 = t1.get$keys(t1);
      t1 = "No " + B.pluralize0("argument", t1.get$length(t1), null) + " named ";
      t2 = evaluated.named;
      throw H.wrapException(E.MultiSpanSassRuntimeException$0(t1 + H.S(B.toSentence0(t2.get$keys(t2).map$1$1(0, new R._EvaluateVisitor__runBuiltInCallable_closure4(), type$.legacy_Object), "or")) + ".", nodeWithSpan.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate0$_stackTrace$1(nodeWithSpan.get$span())));
    },
    _evaluate0$_evaluateArguments$2$trackSpans: function($arguments, trackSpans) {
      var t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, _this = this, _null = null;
      if (trackSpans == null)
        trackSpans = _this._evaluate0$_sourceMap;
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      for (t2 = $arguments.positional, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t1.push(t2[_i].accept$1(_this));
      t4 = type$.legacy_String;
      t5 = type$.legacy_Value_2;
      t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);
      for (t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8); t8.moveNext$0();) {
        t9 = t8.get$current(t8);
        t6.$indexSet(0, t9.key, t9.value.accept$1(_this));
      }
      if (trackSpans) {
        t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode_2);
        for (_i = 0; _i < t3; ++_i)
          t8.push(_this._evaluate0$_expressionNode$1(t2[_i]));
        positionalNodes = t8;
      } else
        positionalNodes = _null;
      if (trackSpans) {
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);
        for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t7 = t3.get$current(t3);
          t2.$indexSet(0, t7.key, _this._evaluate0$_expressionNode$1(t7.value));
        }
        namedNodes = t2;
      } else
        namedNodes = _null;
      t2 = $arguments.rest;
      if (t2 == null)
        return new R._ArgumentResults1(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided0);
      rest = t2.accept$1(_this);
      restNodeForSpan = trackSpans ? _this._evaluate0$_expressionNode$1(t2) : _null;
      if (rest instanceof A.SassMap0) {
        _this._evaluate0$_addRestMap$1$3(t6, rest, t2, t5);
        if (namedNodes != null) {
          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);
          for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString_2; t3.moveNext$0();)
            t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);
          namedNodes.addAll$1(0, t2);
        }
        separator = C.ListSeparator_undecided0;
      } else if (rest instanceof D.SassList0) {
        t2 = rest._list1$_contents;
        C.JSArray_methods.addAll$1(t1, t2);
        if (positionalNodes != null)
          C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode_2));
        separator = rest.separator;
        if (rest instanceof D.SassArgumentList0) {
          rest._argument_list$_wereKeywordsAccessed = true;
          rest._argument_list$_keywords.forEach$1(0, new R._EvaluateVisitor__evaluateArguments_closure1(t6, namedNodes, restNodeForSpan));
        }
      } else {
        t1.push(rest);
        if (positionalNodes != null)
          positionalNodes.push(restNodeForSpan);
        separator = C.ListSeparator_undecided0;
      }
      t2 = $arguments.keywordRest;
      if (t2 == null)
        return new R._ArgumentResults1(t1, positionalNodes, t6, namedNodes, separator);
      keywordRest = t2.accept$1(_this);
      keywordRestNodeForSpan = trackSpans ? _this._evaluate0$_expressionNode$1(t2) : _null;
      if (keywordRest instanceof A.SassMap0) {
        _this._evaluate0$_addRestMap$1$3(t6, keywordRest, t2, t5);
        if (namedNodes != null) {
          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);
          for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString_2; t3.moveNext$0();)
            t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);
          namedNodes.addAll$1(0, t2);
        }
        return new R._ArgumentResults1(t1, positionalNodes, t6, namedNodes, separator);
      } else
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + ").", t2.get$span()));
    },
    _evaluate0$_evaluateArguments$1: function($arguments) {
      return this._evaluate0$_evaluateArguments$2$trackSpans($arguments, null);
    },
    _evaluate0$_evaluateMacroArguments$1: function(invocation) {
      var t3, positional, named, rest, keywordRest, _this = this,
        t1 = invocation.$arguments,
        t2 = t1.rest;
      if (t2 == null)
        return new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);
      t3 = t1.positional;
      positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1("JSArray<1>"));
      t3 = type$.legacy_Expression_2;
      named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);
      rest = t2.accept$1(_this);
      if (rest instanceof A.SassMap0)
        _this._evaluate0$_addRestMap$1$4(named, rest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure7(), t3);
      else if (rest instanceof D.SassList0) {
        t2 = rest._list1$_contents;
        C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new R._EvaluateVisitor__evaluateMacroArguments_closure8(), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Expression0*>")));
        if (rest instanceof D.SassArgumentList0) {
          rest._argument_list$_wereKeywordsAccessed = true;
          rest._argument_list$_keywords.forEach$1(0, new R._EvaluateVisitor__evaluateMacroArguments_closure9(named));
        }
      } else
        positional.push(new F.ValueExpression0(rest, null));
      t1 = t1.keywordRest;
      if (t1 == null)
        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);
      keywordRest = t1.accept$1(_this);
      if (keywordRest instanceof A.SassMap0) {
        _this._evaluate0$_addRestMap$1$4(named, keywordRest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure10(), t3);
        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);
      } else
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + ").", invocation.span));
    },
    _evaluate0$_addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {
      var t1 = {};
      t1.convert = convert;
      if (convert == null)
        t1.convert = new R._EvaluateVisitor__addRestMap_closure3($T);
      map.contents.forEach$1(0, new R._EvaluateVisitor__addRestMap_closure4(t1, this, values, map, nodeWithSpan));
    },
    _evaluate0$_addRestMap$1$3: function(values, map, nodeWithSpan, $T) {
      return this._evaluate0$_addRestMap$1$4(values, map, nodeWithSpan, null, $T);
    },
    _evaluate0$_verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {
      return this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__verifyArguments_closure1($arguments, positional, named));
    },
    visitSelectorExpression$1: function(node) {
      var t1 = this._evaluate0$_styleRule;
      if (t1 == null)
        return C.C_SassNull;
      return t1.originalSelector.get$asSassList();
    },
    visitStringExpression$1: function(node) {
      var t1 = node.text.contents;
      return new D.SassString0(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitStringExpression_closure1(this), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$0(0), node.hasQuotes);
    },
    visitCssAtRule$1: function(node) {
      var wasInKeyframes, wasInUnknownAtRule, t1, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.At_rul, node.span));
      if (node.isChildless) {
        _this._evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0(node.name, node.span, true, node.value));
        return null;
      }
      wasInKeyframes = _this._evaluate0$_inKeyframes;
      wasInUnknownAtRule = _this._evaluate0$_inUnknownAtRule;
      t1 = node.name;
      if (B.unvendor0(t1.get$value(t1)) === "keyframes")
        _this._evaluate0$_inKeyframes = true;
      else
        _this._evaluate0$_inUnknownAtRule = true;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0(t1, node.span, false, node.value), new R._EvaluateVisitor_visitCssAtRule_closure3(_this, node), false, new R._EvaluateVisitor_visitCssAtRule_closure4(), type$.legacy_ModifiableCssAtRule_2, type$.Null);
      _this._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
      _this._evaluate0$_inKeyframes = wasInKeyframes;
    },
    visitCssComment$1: function(node) {
      var _this = this,
        t1 = _this._evaluate0$_parent,
        t2 = _this._evaluate0$_root;
      if (t1 == t2 && _this._evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))
        _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;
      _this._evaluate0$_parent.addChild$1(new R.ModifiableCssComment0(node.text, node.span));
    },
    visitCssDeclaration$1: function(node) {
      var t1 = node.name;
      this._evaluate0$_parent.addChild$1(L.ModifiableCssDeclaration$0(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), "--"), node.valueSpanForMap));
    },
    visitCssImport$1: function(node) {
      var _this = this,
        modifiableNode = F.ModifiableCssImport$0(node.url, node.span, node.media, node.supports),
        t1 = _this._evaluate0$_parent,
        t2 = _this._evaluate0$_root;
      if (t1 != t2)
        t1.addChild$1(modifiableNode);
      else if (_this._evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {
        _this._evaluate0$_root.addChild$1(modifiableNode);
        _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;
      } else {
        t1 = _this._evaluate0$_outOfOrderImports;
        (t1 == null ? _this._evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t1).push(modifiableNode);
      }
    },
    visitCssKeyframeBlock$1: function(node) {
      this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(node.selector, node.span), new R._EvaluateVisitor_visitCssKeyframeBlock_closure3(this, node), false, new R._EvaluateVisitor_visitCssKeyframeBlock_closure4(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null);
    },
    visitCssMediaRule$1: function(node) {
      var t1, mergedQueries, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Media_, node.span));
      t1 = _this._evaluate0$_mediaQueries;
      mergedQueries = t1 == null ? null : _this._evaluate0$_mergeMediaQueries$2(t1, node.queries);
      t1 = mergedQueries == null;
      if (!t1 && mergedQueries.length === 0)
        return null;
      t1 = t1 ? node.queries : mergedQueries;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new R._EvaluateVisitor_visitCssMediaRule_closure3(_this, mergedQueries, node), false, new R._EvaluateVisitor_visitCssMediaRule_closure4(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null);
    },
    visitCssStyleRule$1: function(node) {
      var t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Style_, node.span));
      t1 = node.selector;
      t2 = t1.value;
      t3 = _this._evaluate0$_styleRule;
      t3 = t3 == null ? null : t3.originalSelector;
      originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !_this._evaluate0$_atRootExcludingStyleRule);
      rule = X.ModifiableCssStyleRule$0(_this._evaluate0$_extender.addSelector$3(originalSelector, t1.span, _this._evaluate0$_mediaQueries), node.span, originalSelector);
      oldAtRootExcludingStyleRule = _this._evaluate0$_atRootExcludingStyleRule;
      _this._evaluate0$_atRootExcludingStyleRule = false;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitCssStyleRule_closure3(_this, rule, node), false, new R._EvaluateVisitor_visitCssStyleRule_closure4(), type$.legacy_ModifiableCssStyleRule_2, type$.Null);
      _this._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      if (!(_this._evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {
        t1 = _this._evaluate0$_parent.children;
        t1 = !t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._evaluate0$_parent.children;
        t1.get$last(t1).isGroupEnd = true;
      }
    },
    visitCssStylesheet$1: function(node) {
      var t1;
      for (t1 = J.get$iterator$ax(node.get$children(node)); t1.moveNext$0();)
        t1.get$current(t1).accept$1(this);
    },
    visitCssSupportsRule$1: function(node) {
      var _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw H.wrapException(_this._evaluate0$_exception$2(string$.Suppor, node.span));
      _this._evaluate0$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$0(node.condition, node.span), new R._EvaluateVisitor_visitCssSupportsRule_closure3(_this, node), false, new R._EvaluateVisitor_visitCssSupportsRule_closure4(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null);
    },
    _evaluate0$_handleReturn$1$2: function(list, callback) {
      var t1, _i, result;
      for (t1 = list.length, _i = 0; _i < list.length; list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i) {
        result = callback.call$1(list[_i]);
        if (result != null)
          return result;
      }
      return null;
    },
    _evaluate0$_handleReturn$2: function(list, callback) {
      return this._evaluate0$_handleReturn$1$2(list, callback, type$.dynamic);
    },
    _evaluate0$_withEnvironment$1$2: function(environment, callback) {
      var result,
        oldEnvironment = this._evaluate0$_environment;
      this._evaluate0$_environment = environment;
      result = callback.call$0();
      this._evaluate0$_environment = oldEnvironment;
      return result;
    },
    _evaluate0$_withEnvironment$2: function(environment, callback) {
      return this._evaluate0$_withEnvironment$1$2(environment, callback, type$.dynamic);
    },
    _evaluate0$_interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {
      var result = this._evaluate0$_performInterpolation$2$warnForColor(interpolation, warnForColor),
        t1 = trim ? B.trimAscii0(result, true) : result;
      return new F.CssValue0(t1, interpolation.span, type$.CssValue_legacy_String_2);
    },
    _evaluate0$_interpolationToValue$1: function(interpolation) {
      return this._evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, false);
    },
    _evaluate0$_interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {
      return this._evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);
    },
    _evaluate0$_performInterpolation$2$warnForColor: function(interpolation, warnForColor) {
      var t1 = interpolation.contents;
      return new H.MappedListIterable(t1, new R._EvaluateVisitor__performInterpolation_closure1(this, warnForColor), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$0(0);
    },
    _evaluate0$_performInterpolation$1: function(interpolation) {
      return this._evaluate0$_performInterpolation$2$warnForColor(interpolation, false);
    },
    _evaluate0$_serialize$3$quote: function(value, nodeWithSpan, quote) {
      return this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__serialize_closure1(value, quote));
    },
    _evaluate0$_serialize$2: function(value, nodeWithSpan) {
      return this._evaluate0$_serialize$3$quote(value, nodeWithSpan, true);
    },
    _evaluate0$_expressionNode$1: function(expression) {
      var t1;
      if (!this._evaluate0$_sourceMap)
        return null;
      if (expression instanceof S.VariableExpression0) {
        t1 = this._evaluate0$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);
        return t1 == null ? expression : t1;
      } else
        return expression;
    },
    _evaluate0$_withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {
      var oldParent, result, _this = this;
      _this._evaluate0$_addChild$2$through(node, through);
      oldParent = _this._evaluate0$_parent;
      _this._evaluate0$_parent = node;
      result = _this._evaluate0$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1("0*"));
      _this._evaluate0$_parent = oldParent;
      return result;
    },
    _evaluate0$_withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {
      return this._evaluate0$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);
    },
    _evaluate0$_withParent$2$2: function(node, callback, $S, $T) {
      return this._evaluate0$_withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);
    },
    _evaluate0$_addChild$2$through: function(node, through) {
      var grandparent,
        $parent = this._evaluate0$_parent;
      if (through != null) {
        for (; through.call$1($parent);)
          $parent = $parent._node2$_parent;
        if ($parent.get$hasFollowingSibling()) {
          grandparent = $parent._node2$_parent;
          $parent = $parent.copyWithoutChildren$0();
          grandparent.addChild$1($parent);
        }
      }
      $parent.addChild$1(node);
    },
    _evaluate0$_addChild$1: function(node) {
      return this._evaluate0$_addChild$2$through(node, null);
    },
    _evaluate0$_withStyleRule$1$2: function(rule, callback) {
      var result,
        oldRule = this._evaluate0$_styleRule;
      this._evaluate0$_styleRule = rule;
      result = callback.call$0();
      this._evaluate0$_styleRule = oldRule;
      return result;
    },
    _evaluate0$_withStyleRule$2: function(rule, callback) {
      return this._evaluate0$_withStyleRule$1$2(rule, callback, type$.dynamic);
    },
    _evaluate0$_withMediaQueries$1$2: function(queries, callback) {
      var result,
        oldMediaQueries = this._evaluate0$_mediaQueries;
      this._evaluate0$_mediaQueries = queries;
      result = callback.call$0();
      this._evaluate0$_mediaQueries = oldMediaQueries;
      return result;
    },
    _evaluate0$_withMediaQueries$2: function(queries, callback) {
      return this._evaluate0$_withMediaQueries$1$2(queries, callback, type$.dynamic);
    },
    _evaluate0$_withStackFrame$1$3: function(member, nodeWithSpan, callback) {
      var oldMember, result, _this = this,
        t1 = _this._evaluate0$_stack;
      t1.push(new S.Tuple2(_this._evaluate0$_member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode_2));
      oldMember = _this._evaluate0$_member;
      _this._evaluate0$_member = member;
      result = callback.call$0();
      _this._evaluate0$_member = oldMember;
      t1.pop();
      return result;
    },
    _evaluate0$_withStackFrame$3: function(member, nodeWithSpan, callback) {
      return this._evaluate0$_withStackFrame$1$3(member, nodeWithSpan, callback, type$.dynamic);
    },
    _evaluate0$_stackFrame$2: function(member, span) {
      var url = span.file.url;
      return B.frameForSpan0(span, member, url != null && this._evaluate0$_importCache != null ? this._evaluate0$_importCache.humanize$1(url) : url);
    },
    _evaluate0$_stackTrace$1: function(span) {
      var t2, cur, _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);
      for (t2 = _this._evaluate0$_stack, t2 = new H.MappedListIterable(t2, new R._EvaluateVisitor__stackTrace_closure1(_this), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Frame*>")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        t1.push(cur);
      }
      if (span != null)
        t1.push(_this._evaluate0$_stackFrame$2(_this._evaluate0$_member, span));
      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));
    },
    _evaluate0$_stackTrace$0: function() {
      return this._evaluate0$_stackTrace$1(null);
    },
    _evaluate0$_warn$3$deprecation: function(message, span, deprecation) {
      return this._evaluate0$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._evaluate0$_stackTrace$1(span));
    },
    _evaluate0$_warn$2: function(message, span) {
      return this._evaluate0$_warn$3$deprecation(message, span, false);
    },
    _evaluate0$_exception$2: function(message, span) {
      var t1 = span == null ? C.JSArray_methods.get$last(this._evaluate0$_stack).item2.get$span() : span;
      return new E.SassRuntimeException0(this._evaluate0$_stackTrace$1(span), message, t1);
    },
    _evaluate0$_exception$1: function(message) {
      return this._evaluate0$_exception$2(message, null);
    },
    _evaluate0$_multiSpanException$3: function(message, primaryLabel, secondaryLabels) {
      var t1 = C.JSArray_methods.get$last(this._evaluate0$_stack).item2.get$span();
      return new E.MultiSpanSassRuntimeException0(this._evaluate0$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);
    },
    _evaluate0$_adjustParseError$1$2: function(nodeWithSpan, callback) {
      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException0) {
          error = t1;
          t1 = error;
          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);
          span = nodeWithSpan.get$span();
          t1 = span;
          t2 = span;
          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);
          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);
          t1 = span;
          t1 = Y.FileLocation$_(t1.file, t1._file$_start);
          t3 = error;
          t3 = G.SourceSpanException.prototype.get$span.call(t3);
          t3 = Y.FileLocation$_(t3.file, t3._file$_start);
          t4 = span;
          t4 = Y.FileLocation$_(t4.file, t4._file$_start);
          t5 = error;
          t5 = G.SourceSpanException.prototype.get$span.call(t5);
          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);
          throw H.wrapException(this._evaluate0$_exception$2(error._span_exception$_message, syntheticSpan));
        } else
          throw exception;
      }
    },
    _evaluate0$_adjustParseError$2: function(nodeWithSpan, callback) {
      return this._evaluate0$_adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _evaluate0$_addExceptionSpan$1$2: function(nodeWithSpan, callback) {
      var error, error0, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.MultiSpanSassScriptException0) {
          error = t1;
          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._evaluate0$_stackTrace$1(nodeWithSpan.get$span())));
        } else if (t1 instanceof E.SassScriptException0) {
          error0 = t1;
          throw H.wrapException(this._evaluate0$_exception$2(error0.message, nodeWithSpan.get$span()));
        } else
          throw exception;
      }
    },
    _evaluate0$_addExceptionSpan$2: function(nodeWithSpan, callback) {
      return this._evaluate0$_addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _evaluate0$_addErrorSpan$1$2: function(nodeWithSpan, callback) {
      var error, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SassRuntimeException_2._is(t1)) {
          error = t1;
          t1 = error.get$span();
          if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), "@error"))
            throw exception;
          throw H.wrapException(E.SassRuntimeException$0(error._span_exception$_message, nodeWithSpan.get$span(), this._evaluate0$_stackTrace$0()));
        } else
          throw exception;
      }
    },
    _evaluate0$_addErrorSpan$2: function(nodeWithSpan, callback) {
      return this._evaluate0$_addErrorSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    }
  };
  R._EvaluateVisitor_closure19.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._evaluate0$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  R._EvaluateVisitor_closure20.prototype = {
    call$1: function($arguments) {
      var variable = J.$index$asx($arguments, 0).assertString$1("name"),
        t1 = this.$this._evaluate0$_environment,
        t2 = variable.text;
      t2.toString;
      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, "_", "-")) != null ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  R._EvaluateVisitor_closure21.prototype = {
    call$1: function($arguments) {
      var module, t2, t3, t4,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this;
      t2 = t1._evaluate0$_environment;
      t3 = variable.text;
      t3.toString;
      t4 = H.stringReplaceAllUnchecked(t3, "_", "-");
      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._evaluate0$_builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  R._EvaluateVisitor_closure22.prototype = {
    call$1: function($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._evaluate0$_environment;
      t2 = variable.text;
      t2.toString;
      t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  R._EvaluateVisitor_closure23.prototype = {
    call$1: function($arguments) {
      var t1 = this.$this._evaluate0$_environment;
      if (!t1._environment0$_inMixin)
        throw H.wrapException(E.SassScriptException$0(string$.conten));
      return t1._environment0$_content != null ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  R._EvaluateVisitor_closure24.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._evaluate0$_environment._environment0$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value_2;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString0(t4.key, true), t4.value);
      }
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 37
  };
  R._EvaluateVisitor_closure25.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module").text,
        module = this.$this._evaluate0$_environment._environment0$_modules.$index(0, t1);
      if (module == null)
        throw H.wrapException('There is no module with namespace "' + H.S(t1) + '".');
      t1 = type$.legacy_Value_2;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new D.SassString0(t4.key, true), new F.SassFunction0(t4.value));
      }
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 37
  };
  R._EvaluateVisitor_closure26.prototype = {
    call$1: function($arguments) {
      var module, callable,
        t1 = J.getInterceptor$asx($arguments),
        $name = t1.$index($arguments, 0).assertString$1("name"),
        css = t1.$index($arguments, 1).get$isTruthy();
      t1 = t1.$index($arguments, 2).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      if (css && module != null)
        throw H.wrapException(string$.x24css_a);
      if (css)
        callable = new L.PlainCssCallable0($name.text);
      else {
        t1 = this.$this;
        callable = t1._evaluate0$_addExceptionSpan$2(t1._evaluate0$_callableNode, new R._EvaluateVisitor__closure7(t1, $name, module));
      }
      if (callable != null)
        return new F.SassFunction0(callable);
      throw H.wrapException("Function not found: " + $name.toString$0(0));
    },
    $signature: 162
  };
  R._EvaluateVisitor__closure7.prototype = {
    call$0: function() {
      var t2,
        t1 = this.name.text;
      t1.toString;
      t1 = H.stringReplaceAllUnchecked(t1, "_", "-");
      t2 = this.module;
      t2 = t2 == null ? null : t2.text;
      return this.$this._evaluate0$_getFunction$2$namespace(t1, t2);
    },
    $signature: 90
  };
  R._EvaluateVisitor_closure27.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable,
        t1 = J.getInterceptor$asx($arguments),
        $function = t1.$index($arguments, 0),
        args = type$.legacy_SassArgumentList_2._as(t1.$index($arguments, 1));
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);
      t2 = type$.legacy_String;
      t3 = type$.legacy_Expression_2;
      t4 = this.$this;
      t5 = t4._evaluate0$_callableNode.get$span();
      t6 = t4._evaluate0$_callableNode.get$span();
      args._argument_list$_wereKeywordsAccessed = true;
      t7 = args._argument_list$_keywords;
      if (t7.get$isEmpty(t7))
        t7 = null;
      else {
        t8 = type$.legacy_Value_2;
        t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);
        for (args._argument_list$_wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {
          t10 = t7.get$current(t7);
          t9.$indexSet(0, new D.SassString0(t10.key, false), t10.value);
        }
        t7 = new F.ValueExpression0(new A.SassMap0(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._evaluate0$_callableNode.get$span());
      }
      invocation = new X.ArgumentInvocation0(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression0(args, t6), t7, t5);
      if ($function instanceof D.SassString0) {
        N.warn0(string$.Passin + $function.toString$0(0) + ")) instead.", true);
        return t4.visitFunctionExpression$1(new F.FunctionExpression0(null, X.Interpolation$0(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._evaluate0$_callableNode.get$span()), invocation, t4._evaluate0$_callableNode.get$span()));
      }
      callable = $function.assertFunction$1("function").callable;
      if (type$.legacy_Callable_2._is(callable))
        return t4._evaluate0$_runFunctionCallable$3(invocation, callable, t4._evaluate0$_callableNode);
      else
        throw H.wrapException(E.SassScriptException$0("The function " + H.S(callable.get$name(callable)) + string$.x20is_as));
    },
    $signature: 3
  };
  R._EvaluateVisitor_closure28.prototype = {
    call$1: function($arguments) {
      var withMap, values, configuration, t2, t3, _null = null,
        t1 = J.getInterceptor$asx($arguments),
        url = P.Uri_parse(t1.$index($arguments, 0).assertString$1("url").text);
      t1 = t1.$index($arguments, 1).get$realNull();
      t1 = t1 == null ? _null : t1.assertMap$1("with");
      withMap = t1 == null ? _null : t1.contents;
      if (withMap != null) {
        values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);
        t1 = this.$this;
        withMap.forEach$1(0, new R._EvaluateVisitor__closure5(values, t1._evaluate0$_callableNode.get$span()));
        configuration = new A.Configuration0(values, t1._evaluate0$_callableNode, false);
      } else
        configuration = C.Configuration_Map_empty_null_true0;
      t1 = this.$this;
      t2 = t1._evaluate0$_callableNode;
      t3 = t2.get$span();
      t3 = t3 == null ? _null : t3.file.url;
      t1._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, "load-css()", t2, new R._EvaluateVisitor__closure6(t1), t3, configuration, true);
      t1._evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, true);
      return _null;
    },
    $signature: 98
  };
  R._EvaluateVisitor__closure5.prototype = {
    call$2: function(variable, value) {
      var $name,
        t1 = variable.assertString$1("with key").text;
      t1.toString;
      $name = H.stringReplaceAllUnchecked(t1, "_", "-");
      t1 = this.values;
      if (t1.containsKey$1($name))
        throw H.wrapException("The variable $" + $name + " was configured twice.");
      t1.$indexSet(0, $name, new Z.ConfiguredValue0(value, this.span, null));
    },
    $signature: 45
  };
  R._EvaluateVisitor__closure6.prototype = {
    call$1: function(module) {
      var t1 = this.$this;
      return t1._evaluate0$_combineCss$2$clone(module, true).accept$1(t1);
    },
    $signature: 186
  };
  R._EvaluateVisitor_run_closure1.prototype = {
    call$0: function() {
      var t2, _this = this,
        t1 = _this.node,
        url = t1.span.file.url;
      if (url != null) {
        t2 = _this.$this;
        t2._evaluate0$_activeModules.$indexSet(0, url, null);
        if (t2._nodeImporter != null)
          if (url.get$scheme() === "file")
            t2._includedFiles.add$1(0, $.$get$context().style.pathFromUri$1(M._parseUri(url)));
          else if (url.toString$0(0) !== "stdin")
            t2._includedFiles.add$1(0, url.toString$0(0));
      }
      t2 = _this.$this;
      return new E.EvaluateResult0(t2._evaluate0$_combineCss$1(t2._evaluate0$_execute$2(_this.importer, t1)), t2._includedFiles);
    },
    $signature: 337
  };
  R._EvaluateVisitor__withWarnCallback_closure1.prototype = {
    call$2: function(message, deprecation) {
      var t1 = this.$this,
        t2 = t1._evaluate0$_importSpan;
      return t1._evaluate0$_warn$3$deprecation(message, t2 == null ? t1._evaluate0$_callableNode.get$span() : t2, deprecation);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 72
  };
  R._EvaluateVisitor__loadModule_closure3.prototype = {
    call$0: function() {
      return this.callback.call$1(this.builtInModule);
    },
    $signature: 1
  };
  R._EvaluateVisitor__loadModule_closure4.prototype = {
    call$0: function() {
      var module, error, error0, error1, error2, message, previousLoad, exception, _this = this,
        t1 = _this.$this,
        t2 = _this.nodeWithSpan,
        result = t1._evaluate0$_loadStylesheet$3$baseUrl(J.toString$0$(_this.url), t2.get$span(), _this.baseUrl),
        importer = result.item1,
        stylesheet = result.item2,
        canonicalUrl = stylesheet.span.file.url,
        t3 = t1._evaluate0$_activeModules;
      if (t3.containsKey$1(canonicalUrl)) {
        message = _this.namesInErrors ? "Module loop: " + H.S($.$get$context().prettyUri$1(canonicalUrl)) + " is already being loaded." : string$.Module;
        previousLoad = t3.$index(0, canonicalUrl);
        throw H.wrapException(previousLoad == null ? t1._evaluate0$_exception$1(message) : t1._evaluate0$_multiSpanException$3(message, "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
      }
      t3.$indexSet(0, canonicalUrl, t2);
      module = null;
      try {
        module = t1._evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, _this.configuration, _this.namesInErrors, t2);
      } finally {
        t3.remove$1(0, canonicalUrl);
      }
      try {
        _this.callback.call$1(module);
      } catch (exception) {
        t2 = H.unwrapException(exception);
        if (type$.legacy_SassRuntimeException_2._is(t2))
          throw exception;
        else if (t2 instanceof E.MultiSpanSassException0) {
          error = t2;
          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._evaluate0$_stackTrace$1(error.get$span())));
        } else if (t2 instanceof E.SassException0) {
          error0 = t2;
          throw H.wrapException(t1._evaluate0$_exception$2(error0._span_exception$_message, error0.get$span()));
        } else if (t2 instanceof E.MultiSpanSassScriptException0) {
          error1 = t2;
          throw H.wrapException(t1._evaluate0$_multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));
        } else if (t2 instanceof E.SassScriptException0) {
          error2 = t2;
          throw H.wrapException(t1._evaluate0$_exception$1(error2.message));
        } else
          throw exception;
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor__execute_closure1.prototype = {
    call$0: function() {
      var t2, t3, t4, css, _this = this,
        t1 = _this.$this,
        oldImporter = t1._evaluate0$_importer,
        oldStylesheet = t1._evaluate0$_stylesheet,
        oldRoot = t1._evaluate0$_root,
        oldParent = t1._evaluate0$_parent,
        oldEndOfImports = t1._evaluate0$_endOfImports,
        oldOutOfOrderImports = t1._evaluate0$_outOfOrderImports,
        oldExtender = t1._evaluate0$_extender,
        oldStyleRule = t1._evaluate0$_styleRule,
        oldMediaQueries = t1._evaluate0$_mediaQueries,
        oldDeclarationName = t1._evaluate0$_declarationName,
        oldInUnknownAtRule = t1._evaluate0$_inUnknownAtRule,
        oldAtRootExcludingStyleRule = t1._evaluate0$_atRootExcludingStyleRule,
        oldInKeyframes = t1._evaluate0$_inKeyframes,
        oldConfiguration = t1._evaluate0$_configuration;
      t1._evaluate0$_importer = _this.importer;
      t2 = t1._evaluate0$_stylesheet = _this.stylesheet;
      t3 = t2.span;
      t1._evaluate0$_parent = t1._evaluate0$_root = V.ModifiableCssStylesheet$0(t3);
      t1._evaluate0$_endOfImports = 0;
      t1._evaluate0$_outOfOrderImports = null;
      t1._evaluate0$_extender = _this.extender;
      t1._evaluate0$_declarationName = t1._evaluate0$_mediaQueries = t1._evaluate0$_styleRule = null;
      t1._evaluate0$_inKeyframes = t1._evaluate0$_atRootExcludingStyleRule = t1._evaluate0$_inUnknownAtRule = false;
      t4 = _this.configuration;
      if (t4 != null)
        t1._evaluate0$_configuration = t4;
      t1.visitStylesheet$1(t2);
      css = t1._evaluate0$_outOfOrderImports == null ? t1._evaluate0$_root : new V.CssStylesheet0(new P.UnmodifiableListView(t1._evaluate0$_addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode_2), t3);
      _this._box_0.css = css;
      t1._evaluate0$_importer = oldImporter;
      t1._evaluate0$_stylesheet = oldStylesheet;
      t1._evaluate0$_root = oldRoot;
      t1._evaluate0$_parent = oldParent;
      t1._evaluate0$_endOfImports = oldEndOfImports;
      t1._evaluate0$_outOfOrderImports = oldOutOfOrderImports;
      t1._evaluate0$_extender = oldExtender;
      t1._evaluate0$_styleRule = oldStyleRule;
      t1._evaluate0$_mediaQueries = oldMediaQueries;
      t1._evaluate0$_declarationName = oldDeclarationName;
      t1._evaluate0$_inUnknownAtRule = oldInUnknownAtRule;
      t1._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      t1._evaluate0$_inKeyframes = oldInKeyframes;
      t1._evaluate0$_configuration = oldConfiguration;
    },
    $signature: 0
  };
  R._EvaluateVisitor__combineCss_closure5.prototype = {
    call$1: function(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 102
  };
  R._EvaluateVisitor__combineCss_closure6.prototype = {
    call$1: function(target) {
      return !this.selectors.contains$1(0, target);
    },
    $signature: 19
  };
  R._EvaluateVisitor__combineCss_closure7.prototype = {
    call$1: function(module) {
      return module.cloneCss$0();
    },
    $signature: 197
  };
  R._EvaluateVisitor__extendModules_closure3.prototype = {
    call$1: function(target) {
      return !this.originalSelectors.contains$1(0, target);
    },
    $signature: 19
  };
  R._EvaluateVisitor__extendModules_closure4.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender_2);
    },
    $signature: 150
  };
  R._EvaluateVisitor__topologicalModules_visitModule1.prototype = {
    call$1: function(module) {
      var t1, t2, t3, _i, upstream;
      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        upstream = t1[_i];
        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))
          this.call$1(upstream);
      }
      this.sorted.addFirst$1(module);
    },
    $signature: 186
  };
  R._EvaluateVisitor_visitAtRootRule_closure5.prototype = {
    call$0: function() {
      return V.AtRootQueryParser$0(this.resolved, this.$this._evaluate0$_logger, null).parse$0();
    },
    $signature: 125
  };
  R._EvaluateVisitor_visitAtRootRule_closure6.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitAtRootRule_closure7.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  R._EvaluateVisitor__scopeForAtRoot_closure11.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        oldParent = t1._evaluate0$_parent;
      t1._evaluate0$_parent = this.newParent;
      t1._evaluate0$_environment.scope$1$2$when(callback, this.node.hasDeclarations, type$.void);
      t1._evaluate0$_parent = oldParent;
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot_closure12.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        oldAtRootExcludingStyleRule = t1._evaluate0$_atRootExcludingStyleRule;
      t1._evaluate0$_atRootExcludingStyleRule = true;
      this.innerScope.call$1(callback);
      t1._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot_closure13.prototype = {
    call$1: function(callback) {
      return this.$this._evaluate0$_withMediaQueries$2(null, new R._EvaluateVisitor__scopeForAtRoot__closure1(this.innerScope, callback));
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot__closure1.prototype = {
    call$0: function() {
      return this.innerScope.call$1(this.callback);
    },
    $signature: 0
  };
  R._EvaluateVisitor__scopeForAtRoot_closure14.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        wasInKeyframes = t1._evaluate0$_inKeyframes;
      t1._evaluate0$_inKeyframes = false;
      this.innerScope.call$1(callback);
      t1._evaluate0$_inKeyframes = wasInKeyframes;
    },
    $signature: 34
  };
  R._EvaluateVisitor__scopeForAtRoot_closure15.prototype = {
    call$1: function($parent) {
      return type$.legacy_CssAtRule_2._is($parent);
    },
    $signature: 146
  };
  R._EvaluateVisitor__scopeForAtRoot_closure16.prototype = {
    call$1: function(callback) {
      var t1 = this.$this,
        wasInUnknownAtRule = t1._evaluate0$_inUnknownAtRule;
      t1._evaluate0$_inUnknownAtRule = false;
      this.innerScope.call$1(callback);
      t1._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
    },
    $signature: 34
  };
  R._EvaluateVisitor_visitContentRule_closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.content.declaration.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
      return null;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitDeclaration_closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitEachRule_closure5.prototype = {
    call$1: function(value) {
      return this.$this._evaluate0$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);
    },
    $signature: 78
  };
  R._EvaluateVisitor_visitEachRule_closure6.prototype = {
    call$1: function(value) {
      return this.$this._evaluate0$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);
    },
    $signature: 78
  };
  R._EvaluateVisitor_visitEachRule_closure7.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._evaluate0$_handleReturn$2(_this.list.get$asList(), new R._EvaluateVisitor_visitEachRule__closure1(t1, _this.setVariables, _this.node));
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitEachRule__closure1.prototype = {
    call$1: function(element) {
      var t1;
      this.setVariables.call$1(element);
      t1 = this.$this;
      return t1._evaluate0$_handleReturn$2(this.node.children, new R._EvaluateVisitor_visitEachRule___closure1(t1));
    },
    $signature: 74
  };
  R._EvaluateVisitor_visitEachRule___closure1.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 73
  };
  R._EvaluateVisitor_visitExtendRule_closure1.prototype = {
    call$0: function() {
      return D.SelectorList_SelectorList$parse0(B.trimAscii0(this.targetText.value, true), false, true, this.$this._evaluate0$_logger);
    },
    $signature: 44
  };
  R._EvaluateVisitor_visitAtRule_closure3.prototype = {
    call$0: function() {
      var t3, _i,
        t1 = this.$this,
        t2 = t1._evaluate0$_styleRule;
      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule) || t1._evaluate0$_inKeyframes)
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitAtRule__closure1(t1, this.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitAtRule__closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitAtRule_closure4.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitForRule_closure9.prototype = {
    call$0: function() {
      return this.node.from.accept$1(this.$this).assertNumber$0();
    },
    $signature: 174
  };
  R._EvaluateVisitor_visitForRule_closure10.prototype = {
    call$0: function() {
      return this.node.to.accept$1(this.$this).assertNumber$0();
    },
    $signature: 174
  };
  R._EvaluateVisitor_visitForRule_closure11.prototype = {
    call$0: function() {
      return this.fromNumber.assertInt$0();
    },
    $signature: 11
  };
  R._EvaluateVisitor_visitForRule_closure12.prototype = {
    call$0: function() {
      var t1 = this.fromNumber;
      return this.toNumber.coerce$2(t1.get$numeratorUnits(), t1.get$denominatorUnits()).assertInt$0();
    },
    $signature: 11
  };
  R._EvaluateVisitor_visitForRule_closure13.prototype = {
    call$0: function() {
      var i, t3, t4, t5, t6, t7, t8, result, _this = this,
        t1 = _this.$this,
        t2 = _this.node,
        nodeWithSpan = t1._evaluate0$_expressionNode$1(t2.from);
      for (i = _this.from, t3 = _this._box_0, t4 = _this.direction, t5 = t2.variable, t6 = _this.fromNumber, t2 = t2.children; i !== t3.to; i += t4) {
        t7 = t1._evaluate0$_environment;
        t8 = t6.get$numeratorUnits();
        t7.setLocalVariable$3(t5, T.SassNumber_SassNumber$withUnits0(i, t6.get$denominatorUnits(), t8), nodeWithSpan);
        result = t1._evaluate0$_handleReturn$2(t2, new R._EvaluateVisitor_visitForRule__closure1(t1));
        if (result != null)
          return result;
      }
      return null;
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitForRule__closure1.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 73
  };
  R._EvaluateVisitor_visitForwardRule_closure3.prototype = {
    call$1: function(module) {
      this.$this._evaluate0$_environment.forwardModule$2(module, this.node);
    },
    $signature: 82
  };
  R._EvaluateVisitor_visitForwardRule_closure4.prototype = {
    call$1: function(module) {
      this.$this._evaluate0$_environment.forwardModule$2(module, this.node);
    },
    $signature: 82
  };
  R._EvaluateVisitor__assertConfigurationIsEmpty_closure1.prototype = {
    call$2: function($name, value) {
      var t1 = this.only;
      if (t1 != null && !t1.contains$1(0, $name))
        return;
      t1 = this.nameInError ? "$" + H.S($name) + string$.x20was_n : string$.This_v;
      throw H.wrapException(this.$this._evaluate0$_exception$2(t1, value.configurationSpan));
    },
    $signature: 136
  };
  R._EvaluateVisitor_visitIfRule_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this;
      return t1._evaluate0$_handleReturn$2(this._box_0.clause.children, new R._EvaluateVisitor_visitIfRule__closure1(t1));
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitIfRule__closure1.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 73
  };
  R._EvaluateVisitor__visitDynamicImport_closure1.prototype = {
    call$0: function() {
      var previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _null = null,
        _s34_ = "This file is already being loaded.",
        _box_0 = {},
        t1 = this.$this,
        t2 = this.$import,
        result = t1._evaluate0$_loadStylesheet$3$forImport(t2.url, t2.span, true),
        importer = result.item1,
        stylesheet = result.item2,
        url = stylesheet.span.file.url,
        t3 = t1._evaluate0$_activeModules;
      if (t3.containsKey$1(url)) {
        previousLoad = t3.$index(0, url);
        throw H.wrapException(previousLoad == null ? t1._evaluate0$_exception$1(_s34_) : t1._evaluate0$_multiSpanException$3(_s34_, "new load", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), "original load"], type$.legacy_FileSpan, type$.legacy_String)));
      }
      t3.$indexSet(0, url, t2);
      t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_uses, type$.UnmodifiableListView_legacy_UseRule_2);
      if (t2.get$length(t2) === 0) {
        t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);
        t2 = t2.get$length(t2) === 0;
      } else
        t2 = false;
      if (t2) {
        oldImporter = t1._evaluate0$_importer;
        oldStylesheet = t1._evaluate0$_stylesheet;
        t1._evaluate0$_importer = importer;
        t1._evaluate0$_stylesheet = stylesheet;
        t1.visitStylesheet$1(stylesheet);
        t1._evaluate0$_importer = oldImporter;
        t1._evaluate0$_stylesheet = oldStylesheet;
        t3.remove$1(0, url);
        return;
      }
      _box_0.children = null;
      t2 = t1._evaluate0$_environment;
      t4 = type$.legacy_String;
      t5 = type$.legacy_Module_legacy_Callable_2;
      t6 = type$.legacy_AstNode_2;
      t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable_2);
      t8 = t2._environment0$_variables;
      t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));
      t9 = t2._environment0$_variableNodes;
      if (t9 == null)
        t9 = _null;
      else
        t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));
      t10 = t2._environment0$_functions;
      t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));
      t11 = t2._environment0$_mixins;
      t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));
      environment = O.Environment$_0(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), _null, _null, _null, t7, t8, t9, t10, t11, t2._environment0$_content);
      t1._evaluate0$_withEnvironment$2(environment, new R._EvaluateVisitor__visitDynamicImport__closure1(_box_0, t1, importer, stylesheet, environment));
      module = O._EnvironmentModule__EnvironmentModule1(environment, new V.CssStylesheet0(new P.UnmodifiableListView(C.List_empty12, type$.UnmodifiableListView_legacy_CssNode_2), Y.SourceFile$decoded(C.List_empty1, "<dummy module>").span$1(0)), C.C_EmptyExtender0, environment._environment0$_forwardedModules);
      t1._evaluate0$_environment.importForwards$1(module);
      if (module.transitivelyContainsCss)
        t1._evaluate0$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1);
      visitor = new R._ImportedCssVisitor1(t1);
      for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)
        t1.get$current(t1).accept$1(visitor);
      t3.remove$1(0, url);
    },
    $signature: 0
  };
  R._EvaluateVisitor__visitDynamicImport__closure1.prototype = {
    call$0: function() {
      var t2, t3, _this = this,
        t1 = _this.$this,
        oldImporter = t1._evaluate0$_importer,
        oldStylesheet = t1._evaluate0$_stylesheet,
        oldRoot = t1._evaluate0$_root,
        oldParent = t1._evaluate0$_parent,
        oldEndOfImports = t1._evaluate0$_endOfImports,
        oldOutOfOrderImports = t1._evaluate0$_outOfOrderImports,
        oldConfiguration = t1._evaluate0$_configuration;
      t1._evaluate0$_importer = _this.importer;
      t2 = t1._evaluate0$_stylesheet = _this.stylesheet;
      t1._evaluate0$_parent = t1._evaluate0$_root = V.ModifiableCssStylesheet$0(t2.span);
      t1._evaluate0$_endOfImports = 0;
      t1._evaluate0$_outOfOrderImports = null;
      t3 = new P.UnmodifiableListView(t2._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);
      if (!t3.get$isEmpty(t3))
        t1._evaluate0$_configuration = _this.environment.toImplicitConfiguration$0();
      t1.visitStylesheet$1(t2);
      _this._box_0.children = t1._evaluate0$_addOutOfOrderImports$0();
      t1._evaluate0$_importer = oldImporter;
      t1._evaluate0$_stylesheet = oldStylesheet;
      t1._evaluate0$_root = oldRoot;
      t1._evaluate0$_parent = oldParent;
      t1._evaluate0$_endOfImports = oldEndOfImports;
      t1._evaluate0$_outOfOrderImports = oldOutOfOrderImports;
      t1._evaluate0$_configuration = oldConfiguration;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule_closure5.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._evaluate0$_environment.getMixin$2$namespace(t1.name, t1.namespace);
    },
    $signature: 90
  };
  R._EvaluateVisitor_visitIncludeRule_closure6.prototype = {
    call$0: function() {
      return this.node.get$spanWithoutContent();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 33
  };
  R._EvaluateVisitor_visitIncludeRule_closure7.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = t1._evaluate0$_environment,
        oldContent = t2._environment0$_content;
      t2._environment0$_content = _this.contentCallable;
      new R._EvaluateVisitor_visitIncludeRule__closure1(t1, _this.mixin, _this.nodeWithSpan).call$0();
      t2._environment0$_content = oldContent;
      return null;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule__closure1.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._evaluate0$_environment,
        oldInMixin = t2._environment0$_inMixin;
      t2._environment0$_inMixin = true;
      new R._EvaluateVisitor_visitIncludeRule___closure1(t1, this.mixin, this.nodeWithSpan).call$0();
      t2._environment0$_inMixin = oldInMixin;
      return null;
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule___closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, _i;
      for (t1 = this.mixin.declaration.children, t2 = t1.length, t3 = this.$this, t4 = this.nodeWithSpan, _i = 0; _i < t2; ++_i)
        t3._evaluate0$_addErrorSpan$2(t4, new R._EvaluateVisitor_visitIncludeRule____closure1(t3, t1[_i]));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitIncludeRule____closure1.prototype = {
    call$0: function() {
      return this.statement.accept$1(this.$this);
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitMediaRule_closure3.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.mergedQueries;
      if (t2 == null)
        t2 = _this.queries;
      t1._evaluate0$_withMediaQueries$2(t2, new R._EvaluateVisitor_visitMediaRule__closure1(t1, _this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitMediaRule__closure1.prototype = {
    call$0: function() {
      var t3, _i,
        t1 = this.$this,
        t2 = t1._evaluate0$_styleRule;
      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitMediaRule___closure1(t1, this.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitMediaRule___closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitMediaRule_closure4.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule_2._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  R._EvaluateVisitor__visitMediaQueries_closure1.prototype = {
    call$0: function() {
      return F.MediaQueryParser$0(this.resolved, this.$this._evaluate0$_logger, null).parse$0();
    },
    $signature: 100
  };
  R._EvaluateVisitor_visitStyleRule_closure13.prototype = {
    call$0: function() {
      return E.KeyframeSelectorParser$0(this.selectorText.value, this.$this._evaluate0$_logger).parse$0();
    },
    $signature: 40
  };
  R._EvaluateVisitor_visitStyleRule_closure14.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitStyleRule_closure15.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitStyleRule_closure16.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = !t1._evaluate0$_stylesheet.plainCss;
      return D.SelectorList_SelectorList$parse0(this.selectorText.value, t2, t2, t1._evaluate0$_logger);
    },
    $signature: 44
  };
  R._EvaluateVisitor_visitStyleRule_closure17.prototype = {
    call$0: function() {
      var t1 = this._box_0.parsedSelector,
        t2 = this.$this,
        t3 = t2._evaluate0$_styleRule;
      t3 = t3 == null ? null : t3.originalSelector;
      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._evaluate0$_atRootExcludingStyleRule);
    },
    $signature: 44
  };
  R._EvaluateVisitor_visitStyleRule_closure18.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._evaluate0$_withStyleRule$2(this.rule, new R._EvaluateVisitor_visitStyleRule__closure1(t1, this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitStyleRule__closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitStyleRule_closure19.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitSupportsRule_closure3.prototype = {
    call$0: function() {
      var t3, _i,
        t1 = this.$this,
        t2 = t1._evaluate0$_styleRule;
      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitSupportsRule__closure1(t1, this.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitSupportsRule__closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitSupportsRule_closure4.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitVariableDeclaration_closure5.prototype = {
    call$0: function() {
      var t1 = this.override;
      this.$this._evaluate0$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitVariableDeclaration_closure6.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitVariableDeclaration_closure7.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.node;
      t1._evaluate0$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._evaluate0$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitUseRule_closure1.prototype = {
    call$1: function(module) {
      var t1 = this.node;
      this.$this._evaluate0$_environment.addModule$3$namespace(module, t1, t1.namespace);
    },
    $signature: 82
  };
  R._EvaluateVisitor_visitWarnRule_closure1.prototype = {
    call$0: function() {
      return this.node.expression.accept$1(this.$this);
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitWhileRule_closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, result;
      for (t1 = this.node, t2 = t1.condition, t3 = this.$this, t1 = t1.children; t2.accept$1(t3).get$isTruthy();) {
        result = t3._evaluate0$_handleReturn$2(t1, new R._EvaluateVisitor_visitWhileRule__closure1(t3));
        if (result != null)
          return result;
      }
      return null;
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitWhileRule__closure1.prototype = {
    call$1: function(child) {
      return child.accept$1(this.$this);
    },
    $signature: 73
  };
  R._EvaluateVisitor_visitBinaryOperationExpression_closure1.prototype = {
    call$0: function() {
      var right, result,
        t1 = this.node,
        t2 = this.$this,
        left = t1.left.accept$1(t2);
      switch (t1.operator) {
        case C.BinaryOperator_kjl0:
          right = t1.right.accept$1(t2);
          left.toString;
          t1 = N.serializeValue(left, false, true) + "=";
          right.toString;
          return new D.SassString0(t1 + N.serializeValue(right, false, true), false);
        case C.BinaryOperator_or_or_10:
          return left.get$isTruthy() ? left : t1.right.accept$1(t2);
        case C.BinaryOperator_and_and_20:
          return left.get$isTruthy() ? t1.right.accept$1(t2) : left;
        case C.BinaryOperator_YlX0:
          return J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true : C.SassBoolean_false;
        case C.BinaryOperator_i5H0:
          return !J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true : C.SassBoolean_false;
        case C.BinaryOperator_AcR1:
          return left.greaterThan$1(t1.right.accept$1(t2));
        case C.BinaryOperator_1da0:
          return left.greaterThanOrEquals$1(t1.right.accept$1(t2));
        case C.BinaryOperator_8qt0:
          return left.lessThan$1(t1.right.accept$1(t2));
        case C.BinaryOperator_33h0:
          return left.lessThanOrEquals$1(t1.right.accept$1(t2));
        case C.BinaryOperator_AcR2:
          return left.plus$1(t1.right.accept$1(t2));
        case C.BinaryOperator_iyO0:
          return left.minus$1(t1.right.accept$1(t2));
        case C.BinaryOperator_O1M0:
          return left.times$1(t1.right.accept$1(t2));
        case C.BinaryOperator_RTB0:
          right = t1.right.accept$1(t2);
          result = left.dividedBy$1(right);
          if (t1.allowsSlash && left instanceof T.SassNumber0 && right instanceof T.SassNumber0)
            return type$.legacy_SassNumber_2._as(result).withSlash$2(left, right);
          else
            return result;
        case C.BinaryOperator_2ad0:
          return left.modulo$1(t1.right.accept$1(t2));
        default:
          return null;
      }
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitVariableExpression_closure1.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 21
  };
  R._EvaluateVisitor_visitListExpression_closure1.prototype = {
    call$1: function(expression) {
      return expression.accept$1(this.$this);
    },
    $signature: 342
  };
  R._EvaluateVisitor_visitFunctionExpression_closure3.prototype = {
    call$0: function() {
      var t1 = this.node.namespace,
        t2 = this.plainName;
      if (t1 == null)
        t2 = H.stringReplaceAllUnchecked(t2, "_", "-");
      return this.$this._evaluate0$_getFunction$2$namespace(t2, t1);
    },
    $signature: 90
  };
  R._EvaluateVisitor_visitFunctionExpression_closure4.prototype = {
    call$0: function() {
      var t1 = this.node;
      return this.$this._evaluate0$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);
    },
    $signature: 21
  };
  R._EvaluateVisitor__runUserDefinedCallable_closure1.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.callable;
      return t1._evaluate0$_withEnvironment$2(t2.environment.closure$0(), new R._EvaluateVisitor__runUserDefinedCallable__closure1(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run));
    },
    $signature: 21
  };
  R._EvaluateVisitor__runUserDefinedCallable__closure1.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      return t1._evaluate0$_environment.scope$1$1(new R._EvaluateVisitor__runUserDefinedCallable___closure1(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value_2);
    },
    $signature: 21
  };
  R._EvaluateVisitor__runUserDefinedCallable___closure1.prototype = {
    call$0: function() {
      var declaredArguments, minLength, t8, t9, i, t10, t11, t12, argument, value, t13, rest, argumentList, result, argumentWord, argumentNames, _this = this, _null = null,
        t1 = _this.$this,
        t2 = _this.evaluated,
        t3 = t2.positional,
        t4 = t3.length,
        t5 = t2.named,
        t6 = _this.callable.declaration.$arguments,
        t7 = _this.nodeWithSpan;
      t1._evaluate0$_verifyArguments$4(t4, t5, t6, t7);
      declaredArguments = t6.$arguments;
      t4 = declaredArguments.length;
      minLength = Math.min(t3.length, t4);
      for (t8 = t1._evaluate0$_sourceMap, t9 = t2.positionalNodes, i = 0; i < minLength; ++i) {
        t10 = t1._evaluate0$_environment;
        t11 = declaredArguments[i].name;
        t12 = t3[i].withoutSlash$0();
        t10.setLocalVariable$3(t11, t12, t8 ? t9[i] : _null);
      }
      for (i = t3.length, t9 = t2.namedNodes; i < t4; ++i) {
        argument = declaredArguments[i];
        t10 = argument.name;
        value = t5.remove$1(0, t10);
        if (value == null)
          value = argument.defaultValue.accept$1(t1);
        t11 = t1._evaluate0$_environment;
        t12 = value.withoutSlash$0();
        if (t8) {
          t13 = t9.$index(0, t10);
          if (t13 == null)
            t13 = t1._evaluate0$_expressionNode$1(argument.defaultValue);
        } else
          t13 = _null;
        t11.setLocalVariable$3(t10, t12, t13);
      }
      t8 = t6.restArgument;
      if (t8 != null) {
        rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty16;
        t2 = t2.separator;
        argumentList = D.SassArgumentList$0(rest, t5, t2 === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : t2);
        t1._evaluate0$_environment.setLocalVariable$3(t8, argumentList, t7);
      } else
        argumentList = _null;
      result = _this.run.call$0();
      if (argumentList == null)
        return result;
      if (t5.get$isEmpty(t5))
        return result;
      if (argumentList._argument_list$_wereKeywordsAccessed)
        return result;
      t2 = t5.get$keys(t5);
      argumentWord = B.pluralize0("argument", t2.get$length(t2), _null);
      t5 = t5.get$keys(t5);
      argumentNames = B.toSentence0(H.MappedIterable_MappedIterable(t5, new R._EvaluateVisitor__runUserDefinedCallable____closure1(), H._instanceType(t5)._eval$1("Iterable.E"), type$.legacy_Object), "or");
      throw H.wrapException(E.MultiSpanSassRuntimeException$0("No " + argumentWord + " named " + H.S(argumentNames) + ".", t7.get$span(), "invocation", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), "declaration"], type$.legacy_FileSpan, type$.legacy_String), t1._evaluate0$_stackTrace$1(t7.get$span())));
    },
    $signature: 21
  };
  R._EvaluateVisitor__runUserDefinedCallable____closure1.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  R._EvaluateVisitor__runFunctionCallable_closure1.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, _i, $returnValue;
      for (t1 = this.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = this.$this, _i = 0; _i < t3; ++_i) {
        $returnValue = t2[_i].accept$1(t4);
        if ($returnValue instanceof F.Value0)
          return $returnValue;
      }
      throw H.wrapException(t4._evaluate0$_exception$2("Function finished without @return.", t1.span));
    },
    $signature: 21
  };
  R._EvaluateVisitor__runBuiltInCallable_closure3.prototype = {
    call$0: function() {
      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);
    },
    $signature: 1
  };
  R._EvaluateVisitor__runBuiltInCallable_closure4.prototype = {
    call$1: function($name) {
      return "$" + H.S($name);
    },
    $signature: 4
  };
  R._EvaluateVisitor__evaluateArguments_closure1.prototype = {
    call$2: function(key, value) {
      var t1;
      this.named.$indexSet(0, key, value);
      t1 = this.namedNodes;
      if (t1 != null)
        t1.$indexSet(0, key, this.restNodeForSpan);
    },
    $signature: 76
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure7.prototype = {
    call$1: function(value) {
      return new F.ValueExpression0(value, null);
    },
    $signature: 48
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure8.prototype = {
    call$1: function(value) {
      return new F.ValueExpression0(value, null);
    },
    $signature: 48
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure9.prototype = {
    call$2: function(key, value) {
      this.named.$indexSet(0, key, new F.ValueExpression0(value, null));
    },
    $signature: 76
  };
  R._EvaluateVisitor__evaluateMacroArguments_closure10.prototype = {
    call$1: function(value) {
      return new F.ValueExpression0(value, null);
    },
    $signature: 48
  };
  R._EvaluateVisitor__addRestMap_closure3.prototype = {
    call$1: function(value) {
      return this.T._eval$1("0*")._as(value);
    },
    $signature: function() {
      return this.T._eval$1("0*(Value0*)");
    }
  };
  R._EvaluateVisitor__addRestMap_closure4.prototype = {
    call$2: function(key, value) {
      var _this = this;
      if (key instanceof D.SassString0)
        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));
      else
        throw H.wrapException(_this.$this._evaluate0$_exception$2(string$.Variab_ + H.S(key) + " is not a string in " + _this.map.toString$0(0) + ".", _this.nodeWithSpan.get$span()));
    },
    $signature: 45
  };
  R._EvaluateVisitor__verifyArguments_closure1.prototype = {
    call$0: function() {
      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));
    },
    $signature: 1
  };
  R._EvaluateVisitor_visitStringExpression_closure1.prototype = {
    call$1: function(value) {
      var t1, result;
      if (typeof value == "string")
        return value;
      type$.legacy_Expression_2._as(value);
      t1 = this.$this;
      result = value.accept$1(t1);
      return result instanceof D.SassString0 ? result.text : t1._evaluate0$_serialize$3$quote(result, value, false);
    },
    $signature: 41
  };
  R._EvaluateVisitor_visitCssAtRule_closure3.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssAtRule_closure4.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitCssKeyframeBlock_closure3.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssKeyframeBlock_closure4.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitCssMediaRule_closure3.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.mergedQueries;
      if (t2 == null)
        t2 = _this.node.queries;
      t1._evaluate0$_withMediaQueries$2(t2, new R._EvaluateVisitor_visitCssMediaRule__closure1(t1, _this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssMediaRule__closure1.prototype = {
    call$0: function() {
      var cur,
        t1 = this.$this,
        t2 = t1._evaluate0$_styleRule;
      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))
        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
          cur = t2.__internal$_current;
          cur.accept$1(t1);
        }
      else
        t1._evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssMediaRule___closure1(t1, this.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssMediaRule___closure1.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssMediaRule_closure4.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule_2._is(node))
        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitCssStyleRule_closure3.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._evaluate0$_withStyleRule$2(this.rule, new R._EvaluateVisitor_visitCssStyleRule__closure1(t1, this.node));
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssStyleRule__closure1.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssStyleRule_closure4.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor_visitCssSupportsRule_closure3.prototype = {
    call$0: function() {
      var cur,
        t1 = this.$this,
        t2 = t1._evaluate0$_styleRule;
      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))
        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
          cur = t2.__internal$_current;
          cur.accept$1(t1);
        }
      else
        t1._evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssSupportsRule__closure1(t1, this.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssSupportsRule__closure1.prototype = {
    call$0: function() {
      var t1, t2, cur;
      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(t2);
      }
    },
    $signature: 0
  };
  R._EvaluateVisitor_visitCssSupportsRule_closure4.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._EvaluateVisitor__performInterpolation_closure1.prototype = {
    call$1: function(value) {
      var t1, result, t2, t3;
      if (typeof value == "string")
        return value;
      type$.legacy_Expression_2._as(value);
      t1 = this.$this;
      result = value.accept$1(t1);
      if (this.warnForColor && result instanceof K.SassColor0 && $.$get$namesByColor0().containsKey$1(result)) {
        t2 = X.Interpolation$0(H.setRuntimeTypeInfo([""], type$.JSArray_legacy_Object), null);
        t3 = $.$get$namesByColor0();
        t1._evaluate0$_warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whicw + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression0(C.BinaryOperator_AcR2, new D.StringExpression0(t2, true), value, false).toString$0(0) + "'.", value.get$span());
      }
      return t1._evaluate0$_serialize$3$quote(result, value, false);
    },
    $signature: 41
  };
  R._EvaluateVisitor__serialize_closure1.prototype = {
    call$0: function() {
      var t1 = this.value;
      t1.toString;
      return N.serializeValue(t1, false, this.quote);
    },
    $signature: 12
  };
  R._EvaluateVisitor__stackTrace_closure1.prototype = {
    call$1: function(tuple) {
      return this.$this._evaluate0$_stackFrame$2(tuple.item1, tuple.item2.get$span());
    },
    $signature: 132
  };
  R._ImportedCssVisitor1.prototype = {
    visitCssAtRule$1: function(node) {
      var t1 = node.isChildless ? null : new R._ImportedCssVisitor_visitCssAtRule_closure1();
      this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, t1);
    },
    visitCssComment$1: function(node) {
      return this._evaluate0$_visitor._evaluate0$_addChild$1(node);
    },
    visitCssDeclaration$1: function(node) {
    },
    visitCssImport$1: function(node) {
      var t1 = this._evaluate0$_visitor,
        t2 = t1._evaluate0$_parent,
        t3 = t1._evaluate0$_root;
      if (t2 != t3)
        t1._evaluate0$_addChild$1(node);
      else if (t1._evaluate0$_endOfImports === J.get$length$asx(t3.children._collection$_source)) {
        t1._evaluate0$_addChild$1(node);
        t1._evaluate0$_endOfImports = t1._evaluate0$_endOfImports + 1;
      } else {
        t2 = t1._evaluate0$_outOfOrderImports;
        (t2 == null ? t1._evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t2).push(node);
      }
    },
    visitCssKeyframeBlock$1: function(node) {
    },
    visitCssMediaRule$1: function(node) {
      var t1 = this._evaluate0$_visitor,
        t2 = t1._evaluate0$_mediaQueries;
      t1._evaluate0$_addChild$2$through(node, new R._ImportedCssVisitor_visitCssMediaRule_closure1(t2 == null || t1._evaluate0$_mergeMediaQueries$2(t2, node.queries) != null));
    },
    visitCssStyleRule$1: function(node) {
      return this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, new R._ImportedCssVisitor_visitCssStyleRule_closure1());
    },
    visitCssStylesheet$1: function(node) {
      var t1, cur;
      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        cur.accept$1(this);
      }
    },
    visitCssSupportsRule$1: function(node) {
      return this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, new R._ImportedCssVisitor_visitCssSupportsRule_closure1());
    }
  };
  R._ImportedCssVisitor_visitCssAtRule_closure1.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._ImportedCssVisitor_visitCssMediaRule_closure1.prototype = {
    call$1: function(node) {
      var t1;
      if (!type$.legacy_CssStyleRule_2._is(node))
        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  R._ImportedCssVisitor_visitCssStyleRule_closure1.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._ImportedCssVisitor_visitCssSupportsRule_closure1.prototype = {
    call$1: function(node) {
      return type$.legacy_CssStyleRule_2._is(node);
    },
    $signature: 8
  };
  R._ArgumentResults1.prototype = {};
  E.SassException0.prototype = {
    get$trace: function(_) {
      return new Y.Trace(P.List_List$unmodifiable(H.setRuntimeTypeInfo([B.frameForSpan0(G.SourceSpanException.prototype.get$span.call(this), "root stylesheet", null)], type$.JSArray_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));
    },
    get$span: function() {
      return G.SourceSpanException.prototype.get$span.call(this);
    },
    toString$0: function(_) {
      var t2, _i, frame, t3, _this = this,
        buffer = new P.StringBuffer(""),
        t1 = "Error: " + H.S(_this._span_exception$_message) + "\n";
      buffer._contents = t1;
      buffer._contents = t1 + G.SourceSpanException.prototype.get$span.call(_this).highlight$1$color(null);
      for (t1 = _this.get$trace(_this).toString$0(0).split("\n"), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        frame = t1[_i];
        frame.toString;
        if (J.get$length$asx(frame) === 0)
          continue;
        t3 = buffer._contents += "\n";
        buffer._contents = t3 + ("  " + H.S(frame));
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  E.MultiSpanSassException0.prototype = {
    toString$0: function(_) {
      var t2, _i, frame, t3, _this = this,
        buffer = new P.StringBuffer(""),
        t1 = "Error: " + H.S(_this._span_exception$_message) + "\n";
      buffer._contents = t1;
      buffer._contents = t1 + U.Highlighter$multiple(G.SourceSpanException.prototype.get$span.call(_this), _this.primaryLabel, _this.secondarySpans, false, null, null).highlight$0();
      for (t1 = _this.get$trace(_this).toString$0(0).split("\n"), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        frame = t1[_i];
        frame.toString;
        if (J.get$length$asx(frame) === 0)
          continue;
        t3 = buffer._contents += "\n";
        buffer._contents = t3 + ("  " + H.S(frame));
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  E.SassRuntimeException0.prototype = {
    get$trace: function(receiver) {
      return this.trace;
    }
  };
  E.MultiSpanSassRuntimeException0.prototype = {$isSassRuntimeException0: 1,
    get$trace: function(receiver) {
      return this.trace;
    }
  };
  E.SassFormatException0.prototype = {
    get$source: function() {
      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(this).file._decodedChars, 0, null), 0, null);
    },
    $isFormatException: 1,
    $isSourceSpanFormatException: 1
  };
  E.SassScriptException0.prototype = {
    toString$0: function(_) {
      return this.message + string$.x0a_BUG_;
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  E.MultiSpanSassScriptException0.prototype = {};
  D.Exports.prototype = {};
  X.ExtendRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitExtendRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "@extend " + this.selector.toString$0(0);
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  F.Extender0.prototype = {
    get$isEmpty: function(_) {
      var t1 = this._extender$_extensions;
      return t1.get$isEmpty(t1);
    },
    get$simpleSelectors: function() {
      return new M.MapKeySet(this._extender$_selectors, type$.MapKeySet_legacy_SimpleSelector_2);
    },
    extensionsWhereTarget$1: function($async$callback) {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var callback = $async$callback;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4;
        return function $async$extensionsWhereTarget$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._extender$_extensions, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2);
              case 2:
                // for condition
                if (!t2.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                t3 = t2.get$current(t2);
                if (!callback.call$1(t3)) {
                  // goto for condition
                  $async$goto = 2;
                  break;
                }
                t3 = J.get$values$z(t1.$index(0, t3)), t3 = t3.get$iterator(t3);
              case 4:
                // for condition
                if (!t3.moveNext$0()) {
                  // goto after for
                  $async$goto = 5;
                  break;
                }
                t4 = t3.get$current(t3);
                $async$goto = t4 instanceof A.MergedExtension0 ? 6 : 8;
                break;
              case 6:
                // then
                t4 = t4.unmerge$0();
                $async$goto = 9;
                return P._IterationMarker_yieldStar(new H.WhereIterable(t4, new F.Extender_extensionsWhereTarget_closure0(), t4.$ti._eval$1("WhereIterable<Iterable.E>")));
              case 9:
                // after yield
                // goto join
                $async$goto = 7;
                break;
              case 8:
                // else
                $async$goto = !t4.isOptional ? 10 : 11;
                break;
              case 10:
                // then
                $async$goto = 12;
                return t4;
              case 12:
                // after yield
              case 11:
                // join
              case 7:
                // join
                // goto for condition
                $async$goto = 4;
                break;
              case 5:
                // after for
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.legacy_Extension_2);
    },
    addSelector$3: function(selector, span, mediaContext) {
      var originalSelector, error, t1, t2, t3, _i, exception, modifiableSelector, _this = this;
      selector = selector;
      originalSelector = selector;
      if (!originalSelector.get$isInvisible())
        for (t1 = originalSelector.components, t2 = t1.length, t3 = _this._extender$_originals, _i = 0; _i < t2; ++_i)
          t3.add$1(0, t1[_i]);
      t1 = _this._extender$_extensions;
      if (t1.get$isNotEmpty(t1))
        try {
          selector = _this._extender$_extendList$3(originalSelector, t1, mediaContext);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.SassException0) {
            error = t1;
            throw H.wrapException(E.SassException$0("From " + error.get$span().message$1(0, "") + "\n" + H.S(error._span_exception$_message), span));
          } else
            throw exception;
        }
      modifiableSelector = new F.ModifiableCssValue0(selector, span, type$.ModifiableCssValue_legacy_SelectorList_2);
      if (mediaContext != null)
        _this._extender$_mediaContexts.$indexSet(0, modifiableSelector, mediaContext);
      _this._extender$_registerSelector$2(selector, modifiableSelector);
      return modifiableSelector;
    },
    _extender$_registerSelector$2: function(list, selector) {
      var t1, t2, t3, _i, t4, t5, _i0, component, t6, t7, _i1, simple;
      for (t1 = list.components, t2 = t1.length, t3 = this._extender$_selectors, _i = 0; _i < t2; ++_i)
        for (t4 = t1[_i].components, t5 = t4.length, _i0 = 0; _i0 < t5; ++_i0) {
          component = t4[_i0];
          if (component instanceof X.CompoundSelector0)
            for (t6 = component.components, t7 = t6.length, _i1 = 0; _i1 < t7; ++_i1) {
              simple = t6[_i1];
              J.add$1$ax(t3.putIfAbsent$2(simple, new F.Extender__registerSelector_closure0()), selector);
              if (simple instanceof D.PseudoSelector0 && simple.selector != null)
                this._extender$_registerSelector$2(simple.selector, selector);
            }
        }
    },
    addExtension$4: function(extender, target, extend, mediaContext) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, newExtensions, _i, complex, t12, state, existingState, t13, _i0, component, t14, t15, _i1, simple, newExtensionsByTarget, additionalExtensions, _this = this,
        selectors = _this._extender$_selectors.$index(0, target),
        t1 = _this._extender$_extensionsByExtender,
        existingExtensions = t1.$index(0, target),
        sources = _this._extender$_extensions.putIfAbsent$2(target, new F.Extender_addExtension_closure2());
      for (t2 = extender.value.components, t3 = t2.length, t4 = selectors == null, t5 = _this._extender$_sourceSpecificity, t6 = extender.span, t7 = extend.span, t8 = extend.isOptional, t9 = existingExtensions != null, t10 = type$.legacy_ComplexSelector_2, t11 = type$.legacy_Extension_2, newExtensions = null, _i = 0; _i < t3; ++_i) {
        complex = t2[_i];
        if (complex._complex0$_maxSpecificity == null)
          complex._complex0$_computeSpecificity$0();
        t12 = complex._complex0$_maxSpecificity;
        state = new S.Extension0(complex, target, t12, t8, false, mediaContext, t6, t7);
        existingState = sources.$index(0, complex);
        if (existingState != null) {
          sources.$indexSet(0, complex, A.MergedExtension_merge0(existingState, state));
          continue;
        }
        sources.$indexSet(0, complex, state);
        for (t12 = complex.components, t13 = t12.length, _i0 = 0; _i0 < t13; ++_i0) {
          component = t12[_i0];
          if (component instanceof X.CompoundSelector0)
            for (t14 = component.components, t15 = t14.length, _i1 = 0; _i1 < t15; ++_i1) {
              simple = t14[_i1];
              J.add$1$ax(t1.putIfAbsent$2(simple, new F.Extender_addExtension_closure3()), state);
              t5.putIfAbsent$2(simple, new F.Extender_addExtension_closure4(complex));
            }
        }
        if (!t4 || t9) {
          if (newExtensions == null)
            newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t10, t11);
          newExtensions.$indexSet(0, complex, state);
        }
      }
      if (newExtensions == null)
        return;
      t1 = type$.legacy_SimpleSelector_2;
      newExtensionsByTarget = P.LinkedHashMap_LinkedHashMap$_literal([target, newExtensions], t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2);
      if (t9) {
        additionalExtensions = _this._extender$_extendExistingExtensions$2(existingExtensions, newExtensionsByTarget);
        if (additionalExtensions != null)
          B.mapAddAll20(newExtensionsByTarget, additionalExtensions, t1, t10, t11);
      }
      if (!t4)
        _this._extender$_extendExistingSelectors$2(selectors, newExtensionsByTarget);
    },
    _extender$_extendExistingExtensions$2: function(extensions, newExtensions) {
      var extension, selectors, error, t1, t2, t3, t4, t5, t6, additionalExtensions, _i, sources, exception, containsExtension, t7, t8, first, _i0, complex, t9, t10, t11, t12, t13, t14, withExtender, existingExtension, _i1, component, _i2;
      for (t1 = J.toList$0$ax(extensions), t2 = t1.length, t3 = this._extender$_extensionsByExtender, t4 = type$.legacy_SimpleSelector_2, t5 = type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2, t6 = this._extender$_extensions, additionalExtensions = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        extension = t1[_i];
        sources = t6.$index(0, extension.target);
        selectors = null;
        try {
          selectors = this._extender$_extendComplex$3(extension.extender, newExtensions, extension.mediaContext);
          if (selectors == null)
            continue;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.SassException0) {
            error = t1;
            throw H.wrapException(E.SassException$0("From " + extension.extenderSpan.message$1(0, "") + "\n" + H.S(error._span_exception$_message), error.get$span()));
          } else
            throw exception;
        }
        containsExtension = J.$eq$(J.get$first$ax(selectors), extension.extender);
        for (t7 = selectors, t8 = t7.length, first = false, _i0 = 0; _i0 < t7.length; t7.length === t8 || (0, H.throwConcurrentModificationError)(t7), ++_i0) {
          complex = t7[_i0];
          if (containsExtension && first) {
            first = false;
            continue;
          }
          t9 = extension;
          t10 = t9.target;
          t11 = t9.extenderSpan;
          t12 = t9.span;
          t13 = t9.mediaContext;
          t14 = t9.specificity;
          t9 = t9.isOptional;
          if (t14 == null) {
            if (complex._complex0$_maxSpecificity == null)
              complex._complex0$_computeSpecificity$0();
            t14 = complex._complex0$_maxSpecificity;
          }
          withExtender = new S.Extension0(complex, t10, t14, t9, false, t13, t11, t12);
          existingExtension = sources.$index(0, complex);
          if (existingExtension != null)
            sources.$indexSet(0, complex, A.MergedExtension_merge0(existingExtension, withExtender));
          else {
            sources.$indexSet(0, complex, withExtender);
            for (t9 = complex.components, t10 = t9.length, _i1 = 0; _i1 < t10; ++_i1) {
              component = t9[_i1];
              if (component instanceof X.CompoundSelector0)
                for (t11 = component.components, t12 = t11.length, _i2 = 0; _i2 < t12; ++_i2)
                  J.add$1$ax(t3.putIfAbsent$2(t11[_i2], new F.Extender__extendExistingExtensions_closure1()), withExtender);
            }
            if (newExtensions.containsKey$1(extension.target)) {
              if (additionalExtensions == null)
                additionalExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);
              additionalExtensions.putIfAbsent$2(extension.target, new F.Extender__extendExistingExtensions_closure2()).$indexSet(0, complex, withExtender);
            }
          }
        }
        if (!containsExtension)
          sources.remove$1(0, extension.extender);
      }
      return additionalExtensions;
    },
    _extender$_extendExistingSelectors$2: function(selectors, newExtensions) {
      var selector, error, t1, t2, oldValue, exception;
      for (t1 = selectors.get$iterator(selectors), t2 = this._extender$_mediaContexts; t1.moveNext$0();) {
        selector = t1.get$current(t1);
        oldValue = selector.value;
        try {
          selector.value = this._extender$_extendList$3(selector.value, newExtensions, t2.$index(0, selector));
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.SassException0) {
            error = t1;
            throw H.wrapException(E.SassException$0("From " + selector.span.message$1(0, "") + "\n" + H.S(error._span_exception$_message), error.get$span()));
          } else
            throw exception;
        }
        if (oldValue == selector.value)
          continue;
        this._extender$_registerSelector$2(selector.value, selector);
      }
    },
    addExtensions$1: function(extenders) {
      var t1, t2, t3, _this = this, _box_0 = {};
      _box_0.newExtensions = _box_0.selectorsToExtend = _box_0.extensionsToExtend = null;
      for (t1 = J.get$iterator$ax(extenders), t2 = _this._extender$_sourceSpecificity; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        if (t3.get$isEmpty(t3))
          continue;
        t2.addAll$1(0, t3.get$_extender$_sourceSpecificity());
        t3.get$_extender$_extensions().forEach$1(0, new F.Extender_addExtensions_closure0(_box_0, _this, t3));
      }
      t1 = _box_0.newExtensions;
      if (t1 == null)
        return;
      t2 = _box_0.extensionsToExtend;
      if (t2 != null)
        _this._extender$_extendExistingExtensions$2(t2, t1);
      t1 = _box_0.selectorsToExtend;
      if (t1 != null)
        _this._extender$_extendExistingSelectors$2(t1, _box_0.newExtensions);
    },
    _extender$_extendList$3: function(list, extensions, mediaQueryContext) {
      var t1, t2, t3, extended, i, complex, result, t4;
      for (t1 = list.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector_2, extended = null, i = 0; i < t2; ++i) {
        complex = t1[i];
        result = this._extender$_extendComplex$3(complex, extensions, mediaQueryContext);
        if (result == null) {
          if (extended != null)
            extended.push(complex);
        } else {
          if (extended == null)
            if (i === 0)
              extended = H.setRuntimeTypeInfo([], t3);
            else {
              t4 = C.JSArray_methods.sublist$2(t1, 0, i);
              extended = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4)._eval$1("JSArray<1>"));
            }
          C.JSArray_methods.addAll$1(extended, result);
        }
      }
      if (extended == null)
        return list;
      t1 = this._extender$_originals;
      return D.SelectorList$0(J.where$1$ax(this._extender$_trim$2(extended, t1.get$contains(t1)), new F.Extender__extendList_closure0()));
    },
    _extender$_extendComplex$3: function(complex, extensions, mediaQueryContext) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, extendedNotExpanded, i, component, extended, result, t10,
        _s28_ = "components may not be empty.",
        _box_0 = {},
        isOriginal = this._extender$_originals.contains$1(0, complex);
      for (t1 = complex.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector_2, t4 = type$.JSArray_legacy_ComplexSelectorComponent_2, t5 = type$.legacy_ComplexSelectorComponent_2, t6 = H._arrayInstanceType(t1), t7 = t6._precomputed1, t6 = t6._eval$1("SubListIterable<1>"), t8 = t6._eval$1("MappedListIterable<ListIterable.E,List<ComplexSelector0*>*>"), t9 = t8._eval$1("ListIterable.E"), extendedNotExpanded = null, i = 0; i < t2; ++i) {
        component = t1[i];
        if (component instanceof X.CompoundSelector0) {
          extended = this._extender$_extendCompound$4$inOriginal(component, extensions, mediaQueryContext, isOriginal);
          if (extended == null) {
            if (extendedNotExpanded != null) {
              result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t10 = result;
              if (t10.length === 0)
                H.throwExpression(P.ArgumentError$(_s28_));
              C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector0(t10, false)], t3));
            }
          } else {
            if (extendedNotExpanded == null) {
              t10 = new H.SubListIterable(t1, 0, i, t6);
              t10.SubListIterable$3(t1, 0, i, t7);
              extendedNotExpanded = P.List_List$from(new H.MappedListIterable(t10, new F.Extender__extendComplex_closure1(complex), t8), true, t9);
            }
            C.JSArray_methods.add$1(extendedNotExpanded, extended);
          }
        } else if (extendedNotExpanded != null) {
          result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);
          result.fixed$length = Array;
          result.immutable$list = Array;
          t10 = result;
          if (t10.length === 0)
            H.throwExpression(P.ArgumentError$(_s28_));
          C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector0(t10, false)], t3));
        }
      }
      if (extendedNotExpanded == null)
        return null;
      _box_0.first = true;
      t1 = type$.legacy_ComplexSelector_2;
      t1 = J.expand$1$1$ax(Y.paths0(extendedNotExpanded, t1), new F.Extender__extendComplex_closure2(_box_0, this, complex), t1);
      return P.List_List$from(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    _extender$_extendCompound$4$inOriginal: function(compound, extensions, mediaQueryContext, inOriginal) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, options, i, simple, extended, result, t13, t14, unifiedPaths, isOriginal, _this = this, _null = null,
        _s28_ = "components may not be empty.",
        _box_1 = {},
        t1 = _this._extender$_mode,
        targetsUsed = t1 === C.ExtendMode_normal0 || extensions.get$length(extensions) < 2 ? _null : P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_SimpleSelector_2);
      for (t2 = compound.components, t3 = t2.length, t4 = type$.JSArray_legacy_List_legacy_Extension_2, t5 = type$.JSArray_legacy_Extension_2, t6 = type$.JSArray_legacy_ComplexSelectorComponent_2, t7 = type$.legacy_ComplexSelectorComponent_2, t8 = H._arrayInstanceType(t2), t9 = t8._precomputed1, t8 = t8._eval$1("SubListIterable<1>"), t10 = type$.legacy_SimpleSelector_2, t11 = _this._extender$_sourceSpecificity, t12 = type$.JSArray_legacy_SimpleSelector_2, options = _null, i = 0; i < t3; ++i) {
        simple = t2[i];
        extended = _this._extender$_extendSimple$4(simple, extensions, mediaQueryContext, targetsUsed);
        if (extended == null) {
          if (options != null) {
            result = P.List_List$from(H.setRuntimeTypeInfo([simple], t12), false, t10);
            result.fixed$length = Array;
            result.immutable$list = Array;
            t13 = result;
            if (t13.length === 0)
              H.throwExpression(P.ArgumentError$(_s28_));
            result = P.List_List$from(H.setRuntimeTypeInfo([new X.CompoundSelector0(t13)], t6), false, t7);
            result.fixed$length = Array;
            result.immutable$list = Array;
            t13 = result;
            if (t13.length === 0)
              H.throwExpression(P.ArgumentError$(_s28_));
            t14 = t11.$index(0, simple);
            if (t14 == null)
              t14 = 0;
            options.push(H.setRuntimeTypeInfo([new S.Extension0(new S.ComplexSelector0(t13, false), _null, t14, true, true, _null, _null, _null)], t5));
          }
        } else {
          if (options == null) {
            options = H.setRuntimeTypeInfo([], t4);
            if (i !== 0) {
              t13 = new H.SubListIterable(t2, 0, i, t8);
              t13.SubListIterable$3(t2, 0, i, t9);
              result = P.List_List$from(t13, false, t10);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t13 = result;
              compound = new X.CompoundSelector0(t13);
              if (t13.length === 0)
                H.throwExpression(P.ArgumentError$(_s28_));
              result = P.List_List$from(H.setRuntimeTypeInfo([compound], t6), false, t7);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t13 = result;
              if (t13.length === 0)
                H.throwExpression(P.ArgumentError$(_s28_));
              t14 = _this._extender$_sourceSpecificityFor$1(compound);
              options.push(H.setRuntimeTypeInfo([new S.Extension0(new S.ComplexSelector0(t13, false), _null, t14, true, true, _null, _null, _null)], t5));
            }
          }
          C.JSArray_methods.addAll$1(options, extended);
        }
      }
      if (options == null)
        return _null;
      if (targetsUsed != null && targetsUsed._collection$_length !== extensions.get$length(extensions))
        return _null;
      if (options.length === 1)
        return J.map$1$1$ax(C.JSArray_methods.get$first(options), new F.Extender__extendCompound_closure5(mediaQueryContext), type$.legacy_ComplexSelector_2).toList$0(0);
      t1 = _box_1.first = t1 !== C.ExtendMode_replace0;
      unifiedPaths = J.map$1$1$ax(Y.paths0(options, type$.legacy_Extension_2), new F.Extender__extendCompound_closure6(_box_1, mediaQueryContext), type$.legacy_List_legacy_ComplexSelector_2);
      isOriginal = new F.Extender__extendCompound_closure7();
      if (inOriginal && t1)
        isOriginal = new F.Extender__extendCompound_closure8(J.get$first$ax(unifiedPaths.get$first(unifiedPaths)));
      t1 = unifiedPaths.where$1(0, new F.Extender__extendCompound_closure9());
      t2 = t1.$ti._eval$1("ExpandIterable<Iterable.E,ComplexSelector0*>");
      return _this._extender$_trim$2(P.List_List$from(new H.ExpandIterable(t1, new F.Extender__extendCompound_closure10(), t2), true, t2._eval$1("Iterable.E")), isOriginal);
    },
    _extender$_extendSimple$4: function(simple, extensions, mediaQueryContext, targetsUsed) {
      var extended, result,
        t1 = new F.Extender__extendSimple_withoutPseudo0(this, extensions, targetsUsed);
      if (simple instanceof D.PseudoSelector0 && simple.selector != null) {
        extended = this._extender$_extendPseudo$3(simple, extensions, mediaQueryContext);
        if (extended != null)
          return new H.MappedListIterable(extended, new F.Extender__extendSimple_closure0(this, t1), H._arrayInstanceType(extended)._eval$1("MappedListIterable<1,List<Extension0*>*>"));
      }
      result = t1.call$1(simple);
      return result == null ? null : H.setRuntimeTypeInfo([result], type$.JSArray_legacy_List_legacy_Extension_2);
    },
    _extender$_extensionForSimple$1: function(simple) {
      var t1 = S.ComplexSelector$0(H.setRuntimeTypeInfo([X.CompoundSelector$0(H.setRuntimeTypeInfo([simple], type$.JSArray_legacy_SimpleSelector_2))], type$.JSArray_legacy_ComplexSelectorComponent_2), false),
        t2 = this._extender$_sourceSpecificity.$index(0, simple);
      return S.Extension$oneOff0(t1, true, t2 == null ? 0 : t2);
    },
    _extender$_extendPseudo$3: function(pseudo, extensions, mediaQueryContext) {
      var complexes, t2, result,
        t1 = pseudo.selector,
        extended = this._extender$_extendList$3(t1, extensions, mediaQueryContext);
      if (extended == t1)
        return null;
      complexes = extended.components;
      t2 = pseudo.normalizedName === "not";
      if (t2 && !C.JSArray_methods.any$1(t1.components, new F.Extender__extendPseudo_closure4()) && C.JSArray_methods.any$1(complexes, new F.Extender__extendPseudo_closure5()))
        complexes = new H.WhereIterable(complexes, new F.Extender__extendPseudo_closure6(), H._arrayInstanceType(complexes)._eval$1("WhereIterable<1>"));
      complexes = J.expand$1$1$ax(complexes, new F.Extender__extendPseudo_closure7(pseudo), type$.legacy_ComplexSelector_2);
      if (t2 && t1.components.length === 1) {
        t1 = H.MappedIterable_MappedIterable(complexes, new F.Extender__extendPseudo_closure8(pseudo), complexes.$ti._eval$1("Iterable.E"), type$.legacy_PseudoSelector_2);
        result = P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
        return result.length === 0 ? null : result;
      } else
        return H.setRuntimeTypeInfo([D.PseudoSelector$0(pseudo.name, pseudo.argument, !pseudo.isClass, D.SelectorList$0(complexes))], type$.JSArray_legacy_PseudoSelector_2);
    },
    _extender$_trim$2: function(selectors, isOriginal) {
      var result, i, t1, t2, numOriginals, _box_0, complex1, j, t3, t4, _i, component;
      if (selectors.length > 100)
        return selectors;
      result = Q.QueueList$(null, type$.legacy_ComplexSelector_2);
      $label0$0:
        for (i = selectors.length - 1, t1 = H._arrayInstanceType(selectors), t2 = t1._precomputed1, t1 = t1._eval$1("SubListIterable<1>"), numOriginals = 0; i >= 0; --i) {
          _box_0 = {};
          complex1 = selectors[i];
          if (isOriginal.call$1(complex1)) {
            for (j = 0; j < numOriginals; ++j)
              if (J.$eq$(result.$index(0, j), complex1)) {
                B.rotateSlice0(result, 0, j + 1);
                continue $label0$0;
              }
            ++numOriginals;
            result.addFirst$1(complex1);
            continue $label0$0;
          }
          _box_0.maxSpecificity = 0;
          for (t3 = complex1.components, t4 = t3.length, _i = 0; _i < t4; ++_i) {
            component = t3[_i];
            if (component instanceof X.CompoundSelector0)
              _box_0.maxSpecificity = Math.max(_box_0.maxSpecificity, this._extender$_sourceSpecificityFor$1(component));
          }
          if (result.any$1(result, new F.Extender__trim_closure1(_box_0, complex1)))
            continue $label0$0;
          t3 = new H.SubListIterable(selectors, 0, i, t1);
          t3.SubListIterable$3(selectors, 0, i, t2);
          if (t3.any$1(0, new F.Extender__trim_closure2(_box_0, complex1)))
            continue $label0$0;
          result.addFirst$1(complex1);
        }
      return result;
    },
    _extender$_sourceSpecificityFor$1: function(compound) {
      var t1, t2, t3, specificity, _i, t4;
      for (t1 = compound.components, t2 = t1.length, t3 = this._extender$_sourceSpecificity, specificity = 0, _i = 0; _i < t2; ++_i) {
        t4 = t3.$index(0, t1[_i]);
        specificity = Math.max(specificity, H.checkNum(t4 == null ? 0 : t4));
      }
      return specificity;
    },
    clone$0: function() {
      var t3, t4, _this = this,
        t1 = type$.legacy_SimpleSelector_2,
        newSelectors = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList_2),
        t2 = type$.legacy_ModifiableCssValue_legacy_SelectorList_2,
        newMediaContexts = P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_List_legacy_CssMediaQuery_2),
        oldToNewSelectors = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_CssValue_legacy_SelectorList_2, t2);
      _this._extender$_selectors.forEach$1(0, new F.Extender_clone_closure0(_this, newSelectors, oldToNewSelectors, newMediaContexts));
      t2 = type$.legacy_Extension_2;
      t3 = B.copyMapOfMap0(_this._extender$_extensions, t1, type$.legacy_ComplexSelector_2, t2);
      t2 = B.copyMapOfList0(_this._extender$_extensionsByExtender, t1, t2);
      t1 = P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int);
      t1.addAll$1(0, _this._extender$_sourceSpecificity);
      t4 = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector_2);
      t4.addAll$1(0, _this._extender$_originals);
      return new S.Tuple2(new F.Extender0(newSelectors, t3, t2, newMediaContexts, t1, t4, C.ExtendMode_normal0), oldToNewSelectors, type$.Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList_2);
    },
    get$_extender$_extensions: function() {
      return this._extender$_extensions;
    },
    get$_extender$_sourceSpecificity: function() {
      return this._extender$_sourceSpecificity;
    }
  };
  F.Extender_extensionsWhereTarget_closure0.prototype = {
    call$1: function(extension) {
      return !extension.isOptional;
    },
    $signature: 343
  };
  F.Extender__registerSelector_closure0.prototype = {
    call$0: function() {
      return P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2);
    },
    $signature: 344
  };
  F.Extender_addExtension_closure2.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector_2, type$.legacy_Extension_2);
    },
    $signature: 85
  };
  F.Extender_addExtension_closure3.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2);
    },
    $signature: 153
  };
  F.Extender_addExtension_closure4.prototype = {
    call$0: function() {
      return this.complex.get$maxSpecificity();
    },
    $signature: 11
  };
  F.Extender__extendExistingExtensions_closure1.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2);
    },
    $signature: 153
  };
  F.Extender__extendExistingExtensions_closure2.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector_2, type$.legacy_Extension_2);
    },
    $signature: 85
  };
  F.Extender_addExtensions_closure0.prototype = {
    call$2: function(target, newSources) {
      var t1, extensionsForTarget, t2, t3, t4, selectorsForTarget, t5, existingSources, _this = this;
      if (target instanceof N.PlaceholderSelector0 && T.isPrivate0(target.name))
        return;
      t1 = _this.$this;
      extensionsForTarget = t1._extender$_extensionsByExtender.$index(0, target);
      t2 = extensionsForTarget == null;
      if (!t2) {
        t3 = _this._box_0;
        t4 = t3.extensionsToExtend;
        C.JSArray_methods.addAll$1(t4 == null ? t3.extensionsToExtend = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2) : t4, extensionsForTarget);
      }
      selectorsForTarget = t1._extender$_selectors.$index(0, target);
      t3 = selectorsForTarget != null;
      if (t3) {
        t4 = _this._box_0;
        t5 = t4.selectorsToExtend;
        (t5 == null ? t4.selectorsToExtend = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2) : t5).addAll$1(0, selectorsForTarget);
      }
      t1 = t1._extender$_extensions;
      existingSources = t1.$index(0, target);
      if (existingSources == null) {
        t4 = _this.extender;
        t1.$indexSet(0, target, t4.get$_extender$_extensions().$index(0, target));
        if (!t2 || t3) {
          t1 = _this._box_0;
          t2 = t1.newExtensions;
          t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector_2, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2) : t2;
          t1.$indexSet(0, target, t4.get$_extender$_extensions().$index(0, target));
        }
      } else
        newSources.forEach$1(0, new F.Extender_addExtensions__closure0(_this._box_0, existingSources, extensionsForTarget, selectorsForTarget, target));
    },
    $signature: 347
  };
  F.Extender_addExtensions__closure0.prototype = {
    call$2: function(extender, extension) {
      var t2, _this = this,
        t1 = _this.existingSources;
      if (t1.containsKey$1(extender))
        return;
      t1.$indexSet(0, extender, extension);
      if (_this.extensionsForTarget != null || _this.selectorsForTarget != null) {
        t1 = _this._box_0;
        t2 = t1.newExtensions;
        t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector_2, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2) : t2;
        t1.putIfAbsent$2(_this.target, new F.Extender_addExtensions___closure1()).putIfAbsent$2(extender, new F.Extender_addExtensions___closure2(extension));
      }
    },
    $signature: 348
  };
  F.Extender_addExtensions___closure1.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector_2, type$.legacy_Extension_2);
    },
    $signature: 85
  };
  F.Extender_addExtensions___closure2.prototype = {
    call$0: function() {
      return this.extension;
    },
    $signature: 349
  };
  F.Extender__extendList_closure0.prototype = {
    call$1: function(complex) {
      return complex != null;
    },
    $signature: 14
  };
  F.Extender__extendComplex_closure1.prototype = {
    call$1: function(component) {
      return H.setRuntimeTypeInfo([S.ComplexSelector$0(H.setRuntimeTypeInfo([component], type$.JSArray_legacy_ComplexSelectorComponent_2), this.complex.lineBreak)], type$.JSArray_legacy_ComplexSelector_2);
    },
    $signature: 351
  };
  F.Extender__extendComplex_closure2.prototype = {
    call$1: function(path) {
      var t1 = Y.weave0(J.map$1$1$ax(path, new F.Extender__extendComplex__closure1(), type$.legacy_List_legacy_ComplexSelectorComponent_2).toList$0(0));
      return new H.MappedListIterable(t1, new F.Extender__extendComplex__closure2(this._box_0, this.$this, this.complex, path), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector0*>"));
    },
    $signature: 352
  };
  F.Extender__extendComplex__closure1.prototype = {
    call$1: function(complex) {
      return complex.components;
    },
    $signature: 353
  };
  F.Extender__extendComplex__closure2.prototype = {
    call$1: function(components) {
      var _this = this,
        t1 = _this.complex,
        outputComplex = S.ComplexSelector$0(components, t1.lineBreak || J.any$1$ax(_this.path, new F.Extender__extendComplex___closure0())),
        t2 = _this._box_0;
      if (t2.first && _this.$this._extender$_originals.contains$1(0, t1))
        _this.$this._extender$_originals.add$1(0, outputComplex);
      t2.first = false;
      return outputComplex;
    },
    $signature: 71
  };
  F.Extender__extendComplex___closure0.prototype = {
    call$1: function(inputComplex) {
      return inputComplex.lineBreak;
    },
    $signature: 14
  };
  F.Extender__extendCompound_closure5.prototype = {
    call$1: function(state) {
      state.assertCompatibleMediaContext$1(this.mediaQueryContext);
      return state.extender;
    },
    $signature: 355
  };
  F.Extender__extendCompound_closure6.prototype = {
    call$1: function(path) {
      var complexes, toUnify, t2, t3, originals, t4, _box_0 = {},
        t1 = this._box_1;
      if (t1.first) {
        t1.first = false;
        complexes = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([X.CompoundSelector$0(J.expand$1$1$ax(path, new F.Extender__extendCompound__closure1(), type$.legacy_SimpleSelector_2))], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2);
      } else {
        toUnify = Q.QueueList$(null, type$.legacy_List_legacy_ComplexSelectorComponent_2);
        for (t1 = J.get$iterator$ax(path), t2 = type$.legacy_CompoundSelector_2, t3 = type$.JSArray_legacy_SimpleSelector_2, originals = null; t1.moveNext$0();) {
          t4 = t1.get$current(t1);
          if (t4.isOriginal) {
            if (originals == null)
              originals = H.setRuntimeTypeInfo([], t3);
            C.JSArray_methods.addAll$1(originals, t2._as(C.JSArray_methods.get$last(t4.extender.components)).components);
          } else
            toUnify._queue_list$_add$1(t4.extender.components);
        }
        if (originals != null)
          toUnify.addFirst$1(H.setRuntimeTypeInfo([X.CompoundSelector$0(originals)], type$.JSArray_legacy_ComplexSelectorComponent_2));
        complexes = Y.unifyComplex0(toUnify);
        if (complexes == null)
          return null;
      }
      _box_0.lineBreak = false;
      for (t1 = J.get$iterator$ax(path), t2 = this.mediaQueryContext; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        t3.assertCompatibleMediaContext$1(t2);
        _box_0.lineBreak = _box_0.lineBreak || t3.extender.lineBreak;
      }
      t1 = J.map$1$1$ax(complexes, new F.Extender__extendCompound__closure2(_box_0), type$.legacy_ComplexSelector_2);
      return P.List_List$from(t1, true, t1.$ti._eval$1("ListIterable.E"));
    },
    $signature: 356
  };
  F.Extender__extendCompound__closure1.prototype = {
    call$1: function(state) {
      return type$.legacy_CompoundSelector_2._as(C.JSArray_methods.get$last(state.extender.components)).components;
    },
    $signature: 357
  };
  F.Extender__extendCompound__closure2.prototype = {
    call$1: function(components) {
      return S.ComplexSelector$0(components, this._box_0.lineBreak);
    },
    $signature: 71
  };
  F.Extender__extendCompound_closure7.prototype = {
    call$1: function(_) {
      return false;
    },
    $signature: 14
  };
  F.Extender__extendCompound_closure8.prototype = {
    call$1: function(complex) {
      return J.$eq$(complex, this.original);
    },
    $signature: 14
  };
  F.Extender__extendCompound_closure9.prototype = {
    call$1: function(complexes) {
      return complexes != null;
    },
    $signature: 358
  };
  F.Extender__extendCompound_closure10.prototype = {
    call$1: function(l) {
      return l;
    },
    $signature: 359
  };
  F.Extender__extendSimple_withoutPseudo0.prototype = {
    call$1: function(simple) {
      var t1, t2,
        extenders = this.extensions.$index(0, simple);
      if (extenders == null)
        return null;
      t1 = this.targetsUsed;
      if (t1 != null)
        t1.add$1(0, simple);
      t1 = this.$this;
      if (t1._extender$_mode === C.ExtendMode_replace0) {
        t1 = extenders.get$values(extenders);
        return P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
      }
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2);
      t2.push(t1._extender$_extensionForSimple$1(simple));
      for (t1 = extenders.get$values(extenders), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t2.push(t1.get$current(t1));
      return t2;
    },
    $signature: 360
  };
  F.Extender__extendSimple_closure0.prototype = {
    call$1: function(pseudo) {
      var t1 = this.withoutPseudo.call$1(pseudo);
      return t1 == null ? H.setRuntimeTypeInfo([this.$this._extender$_extensionForSimple$1(pseudo)], type$.JSArray_legacy_Extension_2) : t1;
    },
    $signature: 361
  };
  F.Extender__extendPseudo_closure4.prototype = {
    call$1: function(complex) {
      return complex.components.length > 1;
    },
    $signature: 14
  };
  F.Extender__extendPseudo_closure5.prototype = {
    call$1: function(complex) {
      return complex.components.length === 1;
    },
    $signature: 14
  };
  F.Extender__extendPseudo_closure6.prototype = {
    call$1: function(complex) {
      return complex.components.length <= 1;
    },
    $signature: 14
  };
  F.Extender__extendPseudo_closure7.prototype = {
    call$1: function(complex) {
      var innerPseudo, t2,
        t1 = complex.components;
      if (t1.length !== 1)
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);
      if (!(C.JSArray_methods.get$first(t1) instanceof X.CompoundSelector0))
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);
      t1 = type$.legacy_CompoundSelector_2._as(C.JSArray_methods.get$first(t1)).components;
      if (t1.length !== 1)
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);
      if (!(C.JSArray_methods.get$first(t1) instanceof D.PseudoSelector0))
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);
      innerPseudo = type$.legacy_PseudoSelector_2._as(C.JSArray_methods.get$first(t1));
      t1 = innerPseudo.selector;
      if (t1 == null)
        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);
      t2 = this.pseudo;
      switch (t2.normalizedName) {
        case "not":
          if (innerPseudo.normalizedName !== "matches")
            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);
          return t1.components;
        case "matches":
        case "any":
        case "current":
        case "nth-child":
        case "nth-last-child":
          if (innerPseudo.name !== t2.name)
            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);
          if (innerPseudo.argument != t2.argument)
            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);
          return t1.components;
        case "has":
        case "host":
        case "host-context":
        case "slotted":
          return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);
        default:
          return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);
      }
    },
    $signature: 362
  };
  F.Extender__extendPseudo_closure8.prototype = {
    call$1: function(complex) {
      var t1 = this.pseudo;
      return D.PseudoSelector$0(t1.name, t1.argument, !t1.isClass, D.SelectorList$0(H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2)));
    },
    $signature: 363
  };
  F.Extender__trim_closure1.prototype = {
    call$1: function(complex2) {
      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector0(complex2.components, this.complex1.components);
    },
    $signature: 14
  };
  F.Extender__trim_closure2.prototype = {
    call$1: function(complex2) {
      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector0(complex2.components, this.complex1.components);
    },
    $signature: 14
  };
  F.Extender_clone_closure0.prototype = {
    call$2: function(simple, selectors) {
      var t1, t2, t3, t4, t5, t6, newSelector, mediaContext, _this = this,
        newSelectorSet = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2);
      _this.newSelectors.$indexSet(0, simple, newSelectorSet);
      for (t1 = selectors.get$iterator(selectors), t2 = type$.ModifiableCssValue_legacy_SelectorList_2, t3 = _this.oldToNewSelectors, t4 = _this.$this._extender$_mediaContexts, t5 = _this.newMediaContexts; t1.moveNext$0();) {
        t6 = t1.get$current(t1);
        newSelector = new F.ModifiableCssValue0(t6.value, t6.span, t2);
        newSelectorSet.add$1(0, newSelector);
        t3.$indexSet(0, t6, newSelector);
        mediaContext = t4.$index(0, t6);
        if (mediaContext != null)
          t5.$indexSet(0, newSelector, mediaContext);
      }
    },
    $signature: 364
  };
  S.Extension0.prototype = {
    assertCompatibleMediaContext$1: function(mediaContext) {
      var t1 = this.mediaContext;
      if (t1 == null)
        return;
      if (mediaContext != null && C.C_ListEquality.equals$2(0, t1, mediaContext))
        return;
      throw H.wrapException(E.SassException$0(string$.You_ma, this.span));
    },
    toString$0: function(_) {
      var t1 = H.S(this.extender) + " {@extend " + H.S(this.target);
      return t1 + (this.isOptional ? " !optional" : "") + "}";
    },
    get$target: function() {
      return this.target;
    },
    get$span: function() {
      return this.span;
    }
  };
  E.FiberClass.prototype = {};
  E.Fiber.prototype = {};
  F.FilesystemImporter0.prototype = {
    canonicalize$1: function(url) {
      var t1, resolved;
      if (url.get$scheme() !== "file" && url.get$scheme() !== "")
        return null;
      t1 = $.$get$context();
      resolved = B.resolveImportPath0(D.join(this._filesystem$_loadPath, t1.style.pathFromUri$1(M._parseUri(url)), null));
      if (resolved == null)
        t1 = null;
      else
        t1 = t1.toUri$1(J.$eq$(J.get$platform$x(self.process), "win32") || J.$eq$(J.get$platform$x(self.process), "darwin") ? F._realCasePath0(D.absolute(t1.normalize$1(resolved))) : t1.canonicalize$1(resolved));
      return t1;
    },
    load$1: function(_, url) {
      var path = $.$get$context().style.pathFromUri$1(M._parseUri(url)),
        t1 = B.readFile0(path),
        t2 = M.Syntax_forPath0(path),
        t3 = url.get$scheme();
      if (t3 === "")
        H.throwExpression(P.ArgumentError$value(url, "sourceMapUrl", "must be absolute"));
      return new E.ImporterResult0(t1, url, t2);
    },
    toString$0: function(_) {
      return this._filesystem$_loadPath;
    }
  };
  G.FixedLengthListBuilder0.prototype = {
    add$1: function(_, element) {
      var t1, _this = this;
      _this._fixed_length_list_builder0$_checkUnbuilt$0();
      t1 = _this._fixed_length_list_builder0$_index;
      _this._fixed_length_list_builder0$_list[t1] = element;
      _this._fixed_length_list_builder0$_index = t1 + 1;
    },
    addAll$1: function(_, elements) {
      var _this = this;
      _this._fixed_length_list_builder0$_checkUnbuilt$0();
      C.JSArray_methods.setAll$2(_this._fixed_length_list_builder0$_list, _this._fixed_length_list_builder0$_index, elements);
      _this._fixed_length_list_builder0$_index = _this._fixed_length_list_builder0$_index + elements.length;
    },
    addRange$3: function(elements, start, end) {
      var $length, t1, _this = this;
      _this._fixed_length_list_builder0$_checkUnbuilt$0();
      $length = (end == null ? J.get$length$asx(elements._collection$_source) : end) - start;
      t1 = _this._fixed_length_list_builder0$_index;
      C.JSArray_methods.setRange$4(_this._fixed_length_list_builder0$_list, t1, t1 + $length, elements, start);
      _this._fixed_length_list_builder0$_index += $length;
    },
    addRange$2: function(elements, start) {
      return this.addRange$3(elements, start, null);
    },
    build$0: function() {
      this._fixed_length_list_builder0$_checkUnbuilt$0();
      this._fixed_length_list_builder0$_index = -1;
      return this._fixed_length_list_builder0$_list;
    },
    _fixed_length_list_builder0$_checkUnbuilt$0: function() {
      if (this._fixed_length_list_builder0$_index === -1)
        throw H.wrapException(P.StateError$("build() has already been called."));
    }
  };
  B.ForRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitForRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = "@for $" + _this.variable + " from " + H.S(_this.from) + " ",
        t2 = _this.children;
      return t1 + (_this.isExclusive ? "to" : "through") + " " + H.S(_this.to) + " {" + (t2 && C.JSArray_methods).join$1(t2, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  L.ForwardRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitForwardRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t3, _this = this,
        t1 = "@forward " + H.S(new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([J.toString$0$(_this.url)], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain()),
        t2 = _this.shownMixinsAndFunctions;
      if (t2 != null)
        t1 = t1 + " show " + _this._forward_rule0$_memberList$2(t2, _this.shownVariables);
      else {
        t2 = _this.hiddenMixinsAndFunctions;
        if (t2 != null) {
          t3 = t2._base;
          t3 = t3.get$isNotEmpty(t3);
        } else
          t3 = false;
        if (t3)
          t1 = t1 + " hide " + _this._forward_rule0$_memberList$2(t2, _this.hiddenVariables);
      }
      t2 = _this.prefix;
      if (t2 != null)
        t1 += " as " + t2 + "*";
      t2 = _this.configuration;
      t1 = (t2.length !== 0 ? t1 + (" with (" + C.JSArray_methods.join$1(t2, ", ") + ")") : t1) + ";";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _forward_rule0$_memberList$2: function(mixinsAndFunctions, variables) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String),
        t2 = this.shownMixinsAndFunctions;
      if (t2 != null)
        for (t2 = t2._base, t2 = t2.get$iterator(t2); t2.moveNext$0();)
          t1.push(t2.get$current(t2));
      t2 = this.shownVariables;
      if (t2 != null)
        for (t2 = t2._base, t2 = t2.get$iterator(t2); t2.moveNext$0();)
          t1.push("$" + H.S(t2.get$current(t2)));
      return C.JSArray_methods.join$1(t1, ", ");
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  R.ForwardedModuleView0.prototype = {
    get$url: function() {
      return this._forwarded_view0$_inner.get$url();
    },
    get$upstream: function() {
      return this._forwarded_view0$_inner.get$upstream();
    },
    get$extender: function() {
      return this._forwarded_view0$_inner.get$extender();
    },
    get$css: function(_) {
      var t1 = this._forwarded_view0$_inner;
      return t1.get$css(t1);
    },
    get$transitivelyContainsCss: function() {
      return this._forwarded_view0$_inner.get$transitivelyContainsCss();
    },
    get$transitivelyContainsExtensions: function() {
      return this._forwarded_view0$_inner.get$transitivelyContainsExtensions();
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      var _s19_ = "Undefined variable.",
        t1 = this._forwarded_view0$_rule,
        t2 = t1.shownVariables;
      if (t2 != null && !t2._base.contains$1(0, $name))
        throw H.wrapException(E.SassScriptException$0(_s19_));
      else {
        t2 = t1.hiddenVariables;
        if (t2 != null && t2._base.contains$1(0, $name))
          throw H.wrapException(E.SassScriptException$0(_s19_));
      }
      t1 = t1.prefix;
      if (t1 != null) {
        if (!C.JSString_methods.startsWith$1($name, t1))
          throw H.wrapException(E.SassScriptException$0(_s19_));
        $name = C.JSString_methods.substring$1($name, t1.length);
      }
      return this._forwarded_view0$_inner.setVariable$3($name, value, nodeWithSpan);
    },
    variableIdentity$1: function($name) {
      var t1 = this._forwarded_view0$_rule.prefix;
      if (t1 != null)
        $name = J.substring$1$s($name, t1.length);
      return this._forwarded_view0$_inner.variableIdentity$1($name);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof R.ForwardedModuleView0 && J.$eq$(this._forwarded_view0$_inner, other._forwarded_view0$_inner) && this._forwarded_view0$_rule === other._forwarded_view0$_rule;
    },
    get$hashCode: function(_) {
      return (J.get$hashCode$(this._forwarded_view0$_inner) ^ H.Primitives_objectHashCode(this._forwarded_view0$_rule)) >>> 0;
    },
    cloneCss$0: function() {
      return R.ForwardedModuleView$0(this._forwarded_view0$_inner.cloneCss$0(), this._forwarded_view0$_rule, this.$ti._eval$1("1*"));
    },
    toString$0: function(_) {
      return "forwarded " + H.S(this._forwarded_view0$_inner);
    },
    $isModule0: 1,
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    }
  };
  F.FunctionExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitFunctionExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.namespace;
      t1 = t1 != null ? t1 + "." : "";
      t1 += this.name.toString$0(0) + this.$arguments.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  F.JSFunction0.prototype = {};
  F.SupportsFunction0.prototype = {
    toString$0: function(_) {
      return this.name.toString$0(0) + "(" + this.$arguments.toString$0(0) + ")";
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  F.SassFunction0.prototype = {
    accept$1$1: function(visitor) {
      var t1, t2;
      if (!visitor._inspect)
        H.throwExpression(E.SassScriptException$0(this.toString$0(0) + " isn't a valid CSS value."));
      t1 = visitor._buffer;
      t1.write$1(0, "get-function(");
      t2 = this.callable;
      visitor._serialize0$_visitQuotedString$1(t2.get$name(t2));
      t1.writeCharCode$1(41);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertFunction$1: function($name) {
      return this;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof F.SassFunction0 && J.$eq$(this.callable, other.callable);
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.callable);
    }
  };
  M.FunctionRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitFunctionRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.children;
      return "@function " + H.S(this.name) + "(" + H.S(this.$arguments) + ") {" + (t1 && C.JSArray_methods).join$1(t1, " ") + "}";
    }
  };
  Y.unifyComplex_closure0.prototype = {
    call$1: function(complex) {
      var t1 = J.getInterceptor$asx(complex);
      return t1.sublist$2(complex, 0, t1.get$length(complex) - 1);
    },
    $signature: 123
  };
  Y._weaveParents_closure6.prototype = {
    call$2: function(group1, group2) {
      var unified, t1, _null = null;
      if (C.C_ListEquality.equals$2(0, group1, group2))
        return group1;
      if (!(J.get$first$ax(group1) instanceof X.CompoundSelector0) || !(J.get$first$ax(group2) instanceof X.CompoundSelector0))
        return _null;
      if (Y.complexIsParentSuperselector0(group1, group2))
        return group2;
      if (Y.complexIsParentSuperselector0(group2, group1))
        return group1;
      if (!Y._mustUnify0(group1, group2))
        return _null;
      unified = Y.unifyComplex0(H.setRuntimeTypeInfo([group1, group2], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));
      if (unified == null)
        return _null;
      t1 = J.getInterceptor$asx(unified);
      if (t1.get$length(unified) > 1)
        return _null;
      return t1.get$first(unified);
    },
    $signature: 366
  };
  Y._weaveParents_closure7.prototype = {
    call$1: function(sequence) {
      return Y.complexIsParentSuperselector0(sequence.get$first(sequence), this.group);
    },
    $signature: 367
  };
  Y._weaveParents_closure8.prototype = {
    call$1: function(chunk) {
      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure4(), type$.legacy_ComplexSelectorComponent_2);
    },
    $signature: 144
  };
  Y._weaveParents__closure4.prototype = {
    call$1: function(group) {
      return group;
    },
    $signature: 123
  };
  Y._weaveParents_closure9.prototype = {
    call$1: function(sequence) {
      return sequence.get$length(sequence) === 0;
    },
    $signature: 131
  };
  Y._weaveParents_closure10.prototype = {
    call$1: function(chunk) {
      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure3(), type$.legacy_ComplexSelectorComponent_2);
    },
    $signature: 144
  };
  Y._weaveParents__closure3.prototype = {
    call$1: function(group) {
      return group;
    },
    $signature: 123
  };
  Y._weaveParents_closure11.prototype = {
    call$1: function(choice) {
      return J.get$isNotEmpty$asx(choice);
    },
    $signature: 369
  };
  Y._weaveParents_closure12.prototype = {
    call$1: function(path) {
      var t1 = J.expand$1$1$ax(path, new Y._weaveParents__closure2(), type$.legacy_ComplexSelectorComponent_2);
      return P.List_List$from(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    $signature: 370
  };
  Y._weaveParents__closure2.prototype = {
    call$1: function(group) {
      return group;
    },
    $signature: 371
  };
  Y._mustUnify_closure0.prototype = {
    call$1: function(component) {
      return component instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(component.components, new Y._mustUnify__closure0(this.uniqueSelectors));
    },
    $signature: 93
  };
  Y._mustUnify__closure0.prototype = {
    call$1: function(simple) {
      var t1;
      if (!(simple instanceof N.IDSelector0))
        t1 = simple instanceof D.PseudoSelector0 && !simple.isClass;
      else
        t1 = true;
      return t1 && this.uniqueSelectors.contains$1(0, simple);
    },
    $signature: 19
  };
  Y.paths_closure0.prototype = {
    call$2: function(paths, choice) {
      var t1 = this.T;
      t1 = J.expand$1$1$ax(choice, new Y.paths__closure0(paths, t1), t1._eval$1("List<0*>*"));
      return P.List_List$from(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    $signature: function() {
      return this.T._eval$1("List<List<0*>*>*(List<List<0*>*>*,List<0*>*)");
    }
  };
  Y.paths__closure0.prototype = {
    call$1: function(option) {
      var t1 = this.T;
      return J.map$1$1$ax(this.paths, new Y.paths___closure0(option, t1), t1._eval$1("List<0*>*"));
    },
    $signature: function() {
      return this.T._eval$1("Iterable<List<0*>*>*(0*)");
    }
  };
  Y.paths___closure0.prototype = {
    call$1: function(path) {
      var t2,
        t1 = H.setRuntimeTypeInfo([], this.T._eval$1("JSArray<0*>"));
      for (t2 = J.get$iterator$ax(path); t2.moveNext$0();)
        t1.push(t2.get$current(t2));
      t1.push(this.option);
      return t1;
    },
    $signature: function() {
      return this.T._eval$1("List<0*>*(List<0*>*)");
    }
  };
  Y._hasRoot_closure0.prototype = {
    call$1: function(simple) {
      return simple instanceof D.PseudoSelector0 && simple.isClass && simple.normalizedName === "root";
    },
    $signature: 19
  };
  Y.listIsSuperselector_closure0.prototype = {
    call$1: function(complex1) {
      return C.JSArray_methods.any$1(this.list1, new Y.listIsSuperselector__closure0(complex1));
    },
    $signature: 14
  };
  Y.listIsSuperselector__closure0.prototype = {
    call$1: function(complex2) {
      return Y.complexIsSuperselector0(complex2.components, this.complex1.components);
    },
    $signature: 14
  };
  Y._simpleIsSuperselectorOfCompound_closure0.prototype = {
    call$1: function(theirSimple) {
      var t1 = this.simple;
      if (J.$eq$(t1, theirSimple))
        return true;
      if (theirSimple instanceof D.PseudoSelector0 && theirSimple.selector != null && $._subselectorPseudos0.contains$1(0, theirSimple.normalizedName))
        return C.JSArray_methods.every$1(theirSimple.selector.components, new Y._simpleIsSuperselectorOfCompound__closure0(t1));
      else
        return false;
    },
    $signature: 19
  };
  Y._simpleIsSuperselectorOfCompound__closure0.prototype = {
    call$1: function(complex) {
      var t1 = complex.components;
      if (t1.length !== 1)
        return false;
      return C.JSArray_methods.contains$1(type$.legacy_CompoundSelector_2._as(C.JSArray_methods.get$single(t1)).components, this.simple);
    },
    $signature: 14
  };
  Y._selectorPseudoIsSuperselector_closure6.prototype = {
    call$1: function(pseudo2) {
      var t1 = pseudo2.selector;
      return Y.listIsSuperselector0(this.pseudo1.selector.components, t1.components);
    },
    $signature: 58
  };
  Y._selectorPseudoIsSuperselector_closure7.prototype = {
    call$1: function(complex1) {
      var t1 = complex1.components,
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2),
        t3 = this.parents;
      if (t3 != null)
        for (t3 = t3.get$iterator(t3); t3.moveNext$0();)
          t2.push(t3.get$current(t3));
      t2.push(this.compound2);
      return Y.complexIsSuperselector0(t1, t2);
    },
    $signature: 14
  };
  Y._selectorPseudoIsSuperselector_closure8.prototype = {
    call$1: function(pseudo2) {
      var t1 = pseudo2.selector;
      return Y.listIsSuperselector0(this.pseudo1.selector.components, t1.components);
    },
    $signature: 58
  };
  Y._selectorPseudoIsSuperselector_closure9.prototype = {
    call$1: function(pseudo2) {
      var t1 = pseudo2.selector;
      return Y.listIsSuperselector0(this.pseudo1.selector.components, t1.components);
    },
    $signature: 58
  };
  Y._selectorPseudoIsSuperselector_closure10.prototype = {
    call$1: function(complex) {
      return C.JSArray_methods.any$1(this.compound2.components, new Y._selectorPseudoIsSuperselector__closure0(complex, this.pseudo1));
    },
    $signature: 14
  };
  Y._selectorPseudoIsSuperselector__closure0.prototype = {
    call$1: function(simple2) {
      var compound1, _this = this;
      if (simple2 instanceof F.TypeSelector0) {
        compound1 = C.JSArray_methods.get$last(_this.complex.components);
        return compound1 instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure1(simple2));
      } else if (simple2 instanceof N.IDSelector0) {
        compound1 = C.JSArray_methods.get$last(_this.complex.components);
        return compound1 instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure2(simple2));
      } else if (simple2 instanceof D.PseudoSelector0 && simple2.name === _this.pseudo1.name && simple2.selector != null)
        return Y.listIsSuperselector0(simple2.selector.components, H.setRuntimeTypeInfo([_this.complex], type$.JSArray_legacy_ComplexSelector_2));
      else
        return false;
    },
    $signature: 19
  };
  Y._selectorPseudoIsSuperselector___closure1.prototype = {
    call$1: function(simple1) {
      var t1;
      if (simple1 instanceof F.TypeSelector0) {
        t1 = this.simple2.name.$eq(0, simple1.name);
        t1 = !t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 19
  };
  Y._selectorPseudoIsSuperselector___closure2.prototype = {
    call$1: function(simple1) {
      var t1;
      if (simple1 instanceof N.IDSelector0) {
        t1 = simple1.name;
        t1 = this.simple2.name !== t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 19
  };
  Y._selectorPseudoIsSuperselector_closure11.prototype = {
    call$1: function(pseudo2) {
      return J.$eq$(this.pseudo1.selector, pseudo2.selector);
    },
    $signature: 58
  };
  Y._selectorPseudoIsSuperselector_closure12.prototype = {
    call$1: function(pseudo2) {
      var t1, t2;
      if (pseudo2 instanceof D.PseudoSelector0) {
        t1 = this.pseudo1;
        if (pseudo2.name === t1.name)
          if (pseudo2.argument == t1.argument) {
            t2 = pseudo2.selector;
            t2 = Y.listIsSuperselector0(t1.selector.components, t2.components);
            t1 = t2;
          } else
            t1 = false;
        else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    $signature: 19
  };
  Y._selectorPseudosNamed_closure0.prototype = {
    call$1: function(pseudo) {
      return pseudo.isClass === this.isClass && pseudo.selector != null && pseudo.name === this.name;
    },
    $signature: 58
  };
  Y.closure114.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return t1.$index($arguments, 0).get$isTruthy() ? t1.$index($arguments, 1) : t1.$index($arguments, 2);
    },
    $signature: 3
  };
  N.IDSelector0.prototype = {
    get$minSpecificity: function() {
      return H._asIntS(Math.pow(M.SimpleSelector0.prototype.get$minSpecificity.call(this), 2));
    },
    accept$1$1: function(visitor) {
      var t1 = visitor._buffer;
      t1.writeCharCode$1(35);
      t1.write$1(0, this.name);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    addSuffix$1: function(suffix) {
      return new N.IDSelector0(this.name + suffix);
    },
    unify$1: function(compound) {
      if (C.JSArray_methods.any$1(compound, new N.IDSelector_unify_closure0(this)))
        return null;
      return this.super$SimpleSelector$unify0(compound);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof N.IDSelector0 && other.name === this.name;
    },
    get$hashCode: function(_) {
      return C.JSString_methods.get$hashCode(this.name);
    }
  };
  N.IDSelector_unify_closure0.prototype = {
    call$1: function(simple) {
      var t1;
      if (simple instanceof N.IDSelector0) {
        t1 = simple.name;
        t1 = this.$this.name !== t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 19
  };
  L.IfExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitIfExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "if" + this.$arguments.toString$0(0);
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  V.IfRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitIfRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t2, t1 = {};
      t1.first = true;
      t2 = this.clauses;
      return new H.MappedListIterable(t2, new V.IfRule_toString_closure0(t1), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,String*>")).join$1(0, " ");
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  V.IfRule_toString_closure0.prototype = {
    call$1: function(clause) {
      var t1 = this._box_0,
        $name = t1.first ? "if" : "else";
      t1.first = false;
      return "@" + $name + " " + H.S(clause.expression) + " {" + C.JSArray_methods.join$1(clause.children, " ") + "}";
    },
    $signature: 373
  };
  V.IfClause0.prototype = {
    toString$0: function(_) {
      var t1 = this.expression;
      t1 = t1 == null ? "@else" : "@if " + t1.toString$0(0);
      return t1 + (" {" + C.JSArray_methods.join$1(this.children, " ") + "}");
    }
  };
  V.IfClause$__closure0.prototype = {
    call$1: function(child) {
      var t1;
      if (!(child instanceof Z.VariableDeclaration0))
        if (!(child instanceof M.FunctionRule0))
          if (!(child instanceof T.MixinRule0))
            t1 = child instanceof B.ImportRule0 && C.JSArray_methods.any$1(child.imports, new V.IfClause$___closure0());
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    $signature: 135
  };
  V.IfClause$___closure0.prototype = {
    call$1: function($import) {
      return $import instanceof B.DynamicImport0;
    },
    $signature: 134
  };
  F.NodeImporter.prototype = {
    load$3: function(_, url, previous, forImport) {
      var result, previousString, t1, t2, t3, t4, _i, value, _this = this,
        parsed = P.Uri_parse(url);
      if (parsed.get$scheme() === "" || parsed.get$scheme() === "file") {
        result = _this._resolveRelativePath$3($.$get$context().style.pathFromUri$1(M._parseUri(parsed)), previous, forImport);
        if (result != null)
          return result;
      }
      previousString = previous.get$scheme() === "file" ? $.$get$context().style.pathFromUri$1(M._parseUri(previous)) : previous.toString$0(0);
      for (t1 = _this._implementation$_importers, t2 = t1.length, t3 = _this._implementation$_context, t4 = type$.JSArray_legacy_Object, _i = 0; _i < t2; ++_i) {
        value = J.apply$2$x(t1[_i], t3, H.setRuntimeTypeInfo([url, previousString], t4));
        if (value != null)
          return _this._handleImportResult$4(url, previous, value, forImport);
      }
      return _this._resolveLoadPathFromUrl$3(parsed, previous, forImport);
    },
    loadAsync$3: function(url, previous, forImport) {
      return this.loadAsync$body$NodeImporter(url, previous, forImport);
    },
    loadAsync$body$NodeImporter: function(url, previous, forImport) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_String_and_legacy_String),
        $async$returnValue, $async$self = this, result, previousString, t1, t2, _i, value, parsed;
      var $async$loadAsync$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              parsed = P.Uri_parse(url);
              if (parsed.get$scheme() === "" || parsed.get$scheme() === "file") {
                result = $async$self._resolveRelativePath$3($.$get$context().style.pathFromUri$1(M._parseUri(parsed)), previous, forImport);
                if (result != null) {
                  $async$returnValue = result;
                  // goto return
                  $async$goto = 1;
                  break;
                }
              }
              previousString = previous.get$scheme() === "file" ? $.$get$context().style.pathFromUri$1(M._parseUri(previous)) : previous.toString$0(0);
              t1 = $async$self._implementation$_importers, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait($async$self._callImporterAsync$3(t1[_i], url, previousString), $async$loadAsync$3);
            case 6:
              // returning from await.
              value = $async$result;
              if (value != null) {
                $async$returnValue = $async$self._handleImportResult$4(url, previous, value, forImport);
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = $async$self._resolveLoadPathFromUrl$3(parsed, previous, forImport);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadAsync$3, $async$completer);
    },
    _resolveRelativePath$3: function(path, previous, forImport) {
      var result,
        t1 = $.$get$context(),
        t2 = t1.style;
      if (t2.rootLength$1(path) > 0)
        return this._tryPath$2(path, forImport);
      if (previous.get$scheme() === "file") {
        result = this._tryPath$2(D.join(t1.dirname$1(t2.pathFromUri$1(M._parseUri(previous))), path, null), forImport);
        if (result != null)
          return result;
      }
      return null;
    },
    _resolveLoadPathFromUrl$3: function(url, previous, forImport) {
      return url.get$scheme() === "" || url.get$scheme() === "file" ? this._resolveLoadPath$3($.$get$context().style.pathFromUri$1(M._parseUri(url)), previous, forImport) : null;
    },
    _resolveLoadPath$3: function(path, previous, forImport) {
      var t1, t2, _i, includePath, t3, result, _null = null,
        cwdResult = this._tryPath$2(D.absolute(path), forImport);
      if (cwdResult != null)
        return cwdResult;
      for (t1 = this._includePaths, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        includePath = t1[_i];
        t3 = $.$get$context();
        result = this._tryPath$2(t3.absolute$7(t3.join$8(0, includePath, path, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null, _null), forImport);
        if (result != null)
          return result;
      }
      return _null;
    },
    _tryPath$2: function(path, forImport) {
      var resolved = forImport ? B.inImportRule0(new F.NodeImporter__tryPath_closure(path)) : B.resolveImportPath0(path);
      return resolved == null ? null : new S.Tuple2(B.readFile0(resolved), $.$get$context().toUri$1(resolved).toString$0(0), type$.Tuple2_of_legacy_String_and_legacy_String);
    },
    _handleImportResult$4: function(url, previous, value, forImport) {
      var resolved,
        t1 = self.Error;
      if (H._asBoolS($.$get$_jsInstanceOf().call$2(value, t1)))
        throw H.wrapException(value);
      if (!type$.legacy_NodeImporterResult._is(value))
        return null;
      t1 = J.getInterceptor$x(value);
      if (t1.get$file(value) == null) {
        t1 = t1.get$contents(value);
        if (t1 == null)
          t1 = "";
        return new S.Tuple2(t1, url, type$.Tuple2_of_legacy_String_and_legacy_String);
      } else if (t1.get$contents(value) != null)
        return new S.Tuple2(t1.get$contents(value), t1.get$file(value), type$.Tuple2_of_legacy_String_and_legacy_String);
      else {
        resolved = this._resolveRelativePath$3(t1.get$file(value), previous, forImport);
        if (resolved == null)
          resolved = this._resolveLoadPath$3(t1.get$file(value), previous, forImport);
        if (resolved != null)
          return resolved;
        throw H.wrapException("Can't find stylesheet to import.");
      }
    },
    _callImporterAsync$3: function(importer, url, previousString) {
      return this._callImporterAsync$body$NodeImporter(importer, url, previousString);
    },
    _callImporterAsync$body$NodeImporter: function(importer, url, previousString) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Object),
        $async$returnValue, $async$self = this, t1, result;
      var $async$_callImporterAsync$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new P._Future($.Zone__current, type$._Future_legacy_Object);
              result = J.apply$2$x(importer, $async$self._implementation$_context, H.setRuntimeTypeInfo([url, previousString, P.allowInterop(new P._AsyncCompleter(t1, type$._AsyncCompleter_legacy_Object).get$complete())], type$.JSArray_legacy_Object));
              $async$goto = H._asBoolS($.$get$_isUndefined().call$1(result)) ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return P._asyncAwait(t1, $async$_callImporterAsync$3);
            case 5:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_callImporterAsync$3, $async$completer);
    }
  };
  F.NodeImporter__tryPath_closure.prototype = {
    call$0: function() {
      return B.resolveImportPath0(this.path);
    },
    $signature: 12
  };
  F.ModifiableCssImport0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssImport$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    $isCssImport0: 1,
    get$span: function() {
      return this.span;
    }
  };
  R.ImportCache0.prototype = {
    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      var resolvedUrl, canonicalUrl;
      if (baseImporter != null) {
        resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;
        canonicalUrl = this._import_cache$_canonicalize$3(baseImporter, resolvedUrl, forImport);
        if (canonicalUrl != null)
          return new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri_2);
      }
      return this._import_cache$_canonicalizeCache.putIfAbsent$2(new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new R.ImportCache_canonicalize_closure0(this, url, forImport));
    },
    _import_cache$_canonicalize$3: function(importer, url, forImport) {
      var result = forImport ? B.inImportRule0(new R.ImportCache__canonicalize_closure0(importer, url)) : importer.canonicalize$1(url);
      if ((result == null ? null : result.get$scheme()) === "")
        this._import_cache$_logger.warn$2$deprecation(0, "Importer " + H.S(importer) + " canonicalized " + url.toString$0(0) + " to " + H.S(result) + string$.x2e_Rela, true);
      return result;
    },
    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {
      var t1, stylesheet,
        tuple = this.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport);
      if (tuple == null)
        return null;
      t1 = tuple.item1;
      stylesheet = this.importCanonical$3(t1, tuple.item2, tuple.item3);
      if (stylesheet == null)
        return null;
      return new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_Importer_and_legacy_Stylesheet_2);
    },
    importCanonical$3: function(importer, canonicalUrl, originalUrl) {
      return this._import_cache$_importCache.putIfAbsent$2(canonicalUrl, new R.ImportCache_importCanonical_closure0(this, importer, canonicalUrl, originalUrl));
    },
    humanize$1: function(canonicalUrl) {
      var t2, url,
        t1 = this._import_cache$_canonicalizeCache;
      t1 = t1.get$values(t1);
      t2 = H._instanceType(t1);
      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new R.ImportCache_humanize_closure2(canonicalUrl), t2._eval$1("WhereIterable<Iterable.E>")), new R.ImportCache_humanize_closure3(), t2._eval$1("MappedIterable<Iterable.E,Uri*>")), new R.ImportCache_humanize_closure4(), type$.legacy_Uri, type$.dynamic);
      if (url == null)
        return canonicalUrl;
      t1 = $.$get$url();
      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());
    }
  };
  R.ImportCache_canonicalize_closure0.prototype = {
    call$0: function() {
      var t1, t2, t3, _i, importer, canonicalUrl;
      for (t1 = this.$this, t2 = this.url, t3 = this.forImport, _i = 0; false; ++_i) {
        importer = C.List_empty17[_i];
        canonicalUrl = t1._import_cache$_canonicalize$3(importer, t2, t3);
        if (canonicalUrl != null)
          return new S.Tuple3(importer, canonicalUrl, t2, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri_2);
      }
      return null;
    },
    $signature: 376
  };
  R.ImportCache__canonicalize_closure0.prototype = {
    call$0: function() {
      return this.importer.canonicalize$1(this.url);
    },
    $signature: 161
  };
  R.ImportCache_importCanonical_closure0.prototype = {
    call$0: function() {
      var t3, _this = this,
        t1 = _this.canonicalUrl,
        result = _this.importer.load$1(0, t1),
        t2 = _this.$this;
      t2._import_cache$_resultsCache.$indexSet(0, t1, result);
      t3 = _this.originalUrl;
      t1 = t3 == null ? t1 : t3.resolveUri$1(t1);
      return V.Stylesheet_Stylesheet$parse0(result.contents, result.syntax, t2._import_cache$_logger, t1);
    },
    $signature: 214
  };
  R.ImportCache_humanize_closure2.prototype = {
    call$1: function(tuple) {
      var t1 = tuple == null ? null : tuple.item2;
      return J.$eq$(t1, this.canonicalUrl);
    },
    $signature: 378
  };
  R.ImportCache_humanize_closure3.prototype = {
    call$1: function(tuple) {
      return tuple.item3;
    },
    $signature: 379
  };
  R.ImportCache_humanize_closure4.prototype = {
    call$1: function(url) {
      return J.get$length$asx(J.get$path$x(url));
    },
    $signature: 43
  };
  B.ImportRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitImportRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "@import " + C.JSArray_methods.join$1(this.imports, ", ") + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  M.Importer0.prototype = {};
  F.NodeImporterResult0.prototype = {};
  A.IncludeRule0.prototype = {
    get$spanWithoutContent: function() {
      var t2, t3,
        t1 = this.span;
      if (!(this.content == null)) {
        t2 = t1.file;
        t3 = this.$arguments.span;
        t3 = B.SpanExtensions_trim0(t2.span$2(Y.FileLocation$_(t2, t1._file$_start).offset, Y.FileLocation$_(t3.file, t3._end).offset));
        t1 = t3;
      }
      return t1;
    },
    accept$1$1: function(visitor) {
      return visitor.visitIncludeRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t2, _this = this,
        t1 = _this.namespace;
      t1 = t1 != null ? "@include " + (t1 + ".") : "@include ";
      t1 += _this.name;
      t2 = _this.$arguments;
      if (!t2.get$isEmpty(t2))
        t1 += "(" + t2.toString$0(0) + ")";
      t2 = _this.content;
      t1 += t2 == null ? ";" : " " + t2.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  X.Interpolation0.prototype = {
    get$asPlain: function() {
      var first,
        t1 = this.contents,
        t2 = t1.length;
      if (t2 === 0)
        return "";
      if (t2 > 1)
        return null;
      first = C.JSArray_methods.get$first(t1);
      return typeof first == "string" ? first : null;
    },
    get$initialPlain: function() {
      var first = C.JSArray_methods.get$first(this.contents);
      return typeof first == "string" ? first : "";
    },
    Interpolation$20: function(contents, span) {
      var t1, t2, t3, i, t4, t5,
        _s8_ = "contents";
      for (t1 = this.contents, t2 = t1.length, t3 = type$.legacy_Expression_2, i = 0; i < t2; ++i) {
        t4 = t1[i];
        t5 = typeof t4 == "string";
        if (!t5 && !t3._is(t4))
          throw H.wrapException(P.ArgumentError$value(t1, _s8_, string$.May_on));
        if (i !== 0 && typeof t1[i - 1] == "string" && t5)
          throw H.wrapException(P.ArgumentError$value(t1, _s8_, "May not contain adjacent Strings."));
      }
    },
    toString$0: function(_) {
      var t1 = this.contents;
      return new H.MappedListIterable(t1, new X.Interpolation_toString_closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$0(0);
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  X.Interpolation_toString_closure0.prototype = {
    call$1: function(value) {
      return typeof value == "string" ? value : "#{" + H.S(value) + "}";
    },
    $signature: 41
  };
  X.SupportsInterpolation0.prototype = {
    toString$0: function(_) {
      return "#{" + H.S(this.expression) + "}";
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  Z.InterpolationBuffer0.prototype = {
    add$1: function(_, expression) {
      this._interpolation_buffer0$_flushText$0();
      this._interpolation_buffer0$_contents.push(expression);
    },
    addInterpolation$1: function(interpolation) {
      var first, t1, _this = this,
        toAdd = interpolation.contents;
      if (toAdd.length === 0)
        return;
      first = C.JSArray_methods.get$first(toAdd);
      if (typeof first == "string") {
        _this._interpolation_buffer0$_text._contents += first;
        toAdd = H.SubListIterable$(toAdd, 1, null, H._arrayInstanceType(toAdd)._precomputed1);
      }
      _this._interpolation_buffer0$_flushText$0();
      t1 = _this._interpolation_buffer0$_contents;
      C.JSArray_methods.addAll$1(t1, toAdd);
      if (typeof C.JSArray_methods.get$last(t1) == "string")
        _this._interpolation_buffer0$_text._contents += H.S(t1.pop());
    },
    _interpolation_buffer0$_flushText$0: function() {
      var t1 = this._interpolation_buffer0$_text,
        t2 = t1._contents;
      if (t2.length === 0)
        return;
      this._interpolation_buffer0$_contents.push(t2.charCodeAt(0) == 0 ? t2 : t2);
      t1._contents = "";
    },
    interpolation$1: function(span) {
      var t2, t3, _i,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);
      for (t2 = this._interpolation_buffer0$_contents, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      t2 = this._interpolation_buffer0$_text._contents;
      if (t2.length !== 0)
        t1.push(t2.charCodeAt(0) == 0 ? t2 : t2);
      return X.Interpolation$0(t1, span);
    },
    toString$0: function(_) {
      var t1, t2, _i, t3, element;
      for (t1 = this._interpolation_buffer0$_contents, t2 = t1.length, _i = 0, t3 = ""; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        element = t1[_i];
        t3 = typeof element == "string" ? t3 + element : t3 + "#{" + H.S(element) + H.Primitives_stringFromCharCode(125);
      }
      t1 = t3 + this._interpolation_buffer0$_text.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  F._realCasePath_helper0.prototype = {
    call$1: function(path) {
      var dirname = $.$get$context().dirname$1(path);
      if (dirname === path)
        return path;
      return $._realCaseCache0.putIfAbsent$2(path, new F._realCasePath_helper_closure0(this, dirname, path));
    },
    $signature: 4
  };
  F._realCasePath_helper_closure0.prototype = {
    call$0: function() {
      var matches, t2, exception,
        realDirname = this.helper.call$1(this.dirname),
        t1 = this.path,
        basename = X.ParsedPath_ParsedPath$parse(t1, $.$get$context().style).get$basename();
      try {
        matches = J.where$1$ax(B.listDir0(realDirname), new F._realCasePath_helper__closure0(basename)).toList$0(0);
        t2 = J.get$length$asx(matches) !== 1 ? D.join(realDirname, basename, null) : J.$index$asx(matches, 0);
        return t2;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof B.FileSystemException0)
          return t1;
        else
          throw exception;
      }
    },
    $signature: 12
  };
  F._realCasePath_helper__closure0.prototype = {
    call$1: function(realPath) {
      return B.equalsIgnoreCase0(X.ParsedPath_ParsedPath$parse(realPath, $.$get$context().style).get$basename(), this.basename);
    },
    $signature: 6
  };
  U.ModifiableCssKeyframeBlock0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssKeyframeBlock$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    copyWithoutChildren$0: function() {
      return U.ModifiableCssKeyframeBlock$0(this.selector, this.span);
    },
    get$span: function() {
      return this.span;
    }
  };
  E.KeyframeSelectorParser0.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new E.KeyframeSelectorParser_parse_closure0(this));
    },
    _keyframe_selector$_percentage$0: function() {
      var t3, next,
        t1 = this.scanner,
        t2 = t1.scanChar$1(43) ? H.Primitives_stringFromCharCode(43) : "",
        second = t1.peekChar$0();
      if (!T.isDigit0(second) && second !== 46)
        t1.error$1(0, "Expected number.");
      while (true) {
        t3 = t1.peekChar$0();
        if (!(t3 != null && t3 >= 48 && t3 <= 57))
          break;
        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      if (t1.peekChar$0() === 46) {
        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        }
      }
      if (this.scanIdentifier$1("e")) {
        t2 += t1.readChar$0();
        next = t1.peekChar$0();
        if (next === 43 || next === 45)
          t2 += t1.readChar$0();
        if (!T.isDigit0(t1.peekChar$0()))
          t1.error$1(0, "Expected digit.");
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        }
      }
      t1.expectChar$1(37);
      t2 += H.Primitives_stringFromCharCode(37);
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    }
  };
  E.KeyframeSelectorParser_parse_closure0.prototype = {
    call$0: function() {
      var selectors = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String),
        t1 = this.$this,
        t2 = t1.scanner;
      do {
        t1.whitespace$0();
        if (t1.lookingAtIdentifier$0())
          if (t1.scanIdentifier$1("from"))
            selectors.push("from");
          else {
            t1.expectIdentifier$2$name("to", '"to" or "from"');
            selectors.push("to");
          }
        else
          selectors.push(t1._keyframe_selector$_percentage$0());
        t1.whitespace$0();
      } while (t2.scanChar$1(44));
      t2.expectDone$0();
      return selectors;
    },
    $signature: 40
  };
  K.LimitedMapView0.prototype = {
    get$keys: function(_) {
      return this._limited_map_view0$_keys;
    },
    get$length: function(_) {
      return this._limited_map_view0$_keys._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._limited_map_view0$_keys._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._limited_map_view0$_keys._collection$_length !== 0;
    },
    $index: function(_, key) {
      return this._limited_map_view0$_keys.contains$1(0, key) ? this._limited_map_view0$_map.$index(0, key) : null;
    },
    containsKey$1: function(key) {
      return this._limited_map_view0$_keys.contains$1(0, key);
    },
    remove$1: function(_, key) {
      return this._limited_map_view0$_keys.contains$1(0, key) ? this._limited_map_view0$_map.remove$1(0, key) : null;
    }
  };
  D.ListExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitListExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.hasBrackets,
        t2 = t1 ? H.Primitives_stringFromCharCode(91) : "",
        t3 = _this.contents,
        t4 = _this.separator === C.ListSeparator_comma0 ? ", " : " ";
      t4 = t2 + new H.MappedListIterable(t3, new D.ListExpression_toString_closure0(_this), H._arrayInstanceType(t3)._eval$1("MappedListIterable<1,String*>")).join$1(0, t4);
      t1 = t1 ? t4 + H.Primitives_stringFromCharCode(93) : t4;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _list3$_elementNeedsParens$1: function(expression) {
      var t1, t2;
      if (expression instanceof D.ListExpression0) {
        if (expression.contents.length < 2)
          return false;
        if (expression.hasBrackets)
          return false;
        t1 = this.separator;
        t2 = t1 === C.ListSeparator_comma0;
        return t2 ? t2 : t1 !== C.ListSeparator_undecided0;
      }
      if (this.separator !== C.ListSeparator_space0)
        return false;
      if (expression instanceof X.UnaryOperationExpression0) {
        t1 = expression.operator;
        return t1 === C.UnaryOperator_j2w0 || t1 === C.UnaryOperator_U4G0;
      }
      return false;
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  D.ListExpression_toString_closure0.prototype = {
    call$1: function(element) {
      return this.$this._list3$_elementNeedsParens$1(element) ? "(" + H.S(element) + ")" : J.toString$0$(element);
    },
    $signature: 380
  };
  D.closure158.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).get$asList().length;
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  D.closure157.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        index = t1.$index($arguments, 1);
      return list.get$asList()[list.sassIndexToListIndex$2(index, "n")];
    },
    $signature: 3
  };
  D.closure156.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        index = t1.$index($arguments, 1),
        value = t1.$index($arguments, 2),
        t2 = list.get$asList(),
        newList = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2));
      newList[list.sassIndexToListIndex$2(index, "n")] = value;
      return t1.$index($arguments, 0).changeListContents$1(newList);
    },
    $signature: 27
  };
  D.closure155.prototype = {
    call$1: function($arguments) {
      var separator, bracketed, t2, t3, _i,
        t1 = J.getInterceptor$asx($arguments),
        list1 = t1.$index($arguments, 0),
        list2 = t1.$index($arguments, 1),
        separatorParam = t1.$index($arguments, 2).assertString$1("separator"),
        bracketedParam = t1.$index($arguments, 3);
      t1 = separatorParam.text;
      if (t1 === "auto")
        if (list1.get$separator() !== C.ListSeparator_undecided0)
          separator = list1.get$separator();
        else
          separator = list2.get$separator() !== C.ListSeparator_undecided0 ? list2.get$separator() : C.ListSeparator_space0;
      else if (t1 === "space")
        separator = C.ListSeparator_space0;
      else {
        if (t1 !== "comma")
          throw H.wrapException(E.SassScriptException$0(string$.x24separ));
        separator = C.ListSeparator_comma0;
      }
      bracketed = bracketedParam instanceof D.SassString0 && bracketedParam.text === "auto" ? list1.get$hasBrackets() : bracketedParam.get$isTruthy();
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      for (t2 = list1.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      for (t2 = list2.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      return D.SassList$0(t1, separator, bracketed);
    },
    $signature: 27
  };
  D.closure154.prototype = {
    call$1: function($arguments) {
      var separator, t2, t3, _i,
        t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        value = t1.$index($arguments, 1);
      t1 = t1.$index($arguments, 2).assertString$1("separator").text;
      if (t1 === "auto")
        separator = list.get$separator() === C.ListSeparator_undecided0 ? C.ListSeparator_space0 : list.get$separator();
      else if (t1 === "space")
        separator = C.ListSeparator_space0;
      else {
        if (t1 !== "comma")
          throw H.wrapException(E.SassScriptException$0(string$.x24separ));
        separator = C.ListSeparator_comma0;
      }
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      for (t2 = list.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t1.push(t2[_i]);
      t1.push(value);
      return list.changeListContents$2$separator(t1, separator);
    },
    $signature: 27
  };
  D.closure153.prototype = {
    call$1: function($arguments) {
      var results, result, _box_0 = {},
        t1 = J.$index$asx($arguments, 0).get$asList(),
        t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,List<Value0*>*>"),
        lists = P.List_List$from(new H.MappedListIterable(t1, new D._closure20(), t2), true, t2._eval$1("ListIterable.E"));
      if (lists.length === 0)
        return C.SassList_lmy0;
      _box_0.i = 0;
      results = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SassList_2);
      for (t1 = H._arrayInstanceType(lists)._eval$1("MappedListIterable<1,Value0*>"), t2 = type$.legacy_Value_2; C.JSArray_methods.every$1(lists, new D._closure21(_box_0));) {
        result = P.List_List$from(new H.MappedListIterable(lists, new D._closure22(_box_0), t1), false, t2);
        result.fixed$length = Array;
        result.immutable$list = Array;
        results.push(new D.SassList0(result, C.ListSeparator_space0, false));
        ++_box_0.i;
      }
      return D.SassList$0(results, C.ListSeparator_comma0, false);
    },
    $signature: 27
  };
  D._closure20.prototype = {
    call$1: function(list) {
      return list.get$asList();
    },
    $signature: 382
  };
  D._closure21.prototype = {
    call$1: function(list) {
      return this._box_0.i !== J.get$length$asx(list);
    },
    $signature: 383
  };
  D._closure22.prototype = {
    call$1: function(list) {
      return J.$index$asx(list, this._box_0.i);
    },
    $signature: 3
  };
  D.closure152.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        index = C.JSArray_methods.indexOf$1(t1.$index($arguments, 0).get$asList(), t1.$index($arguments, 1));
      if (index === -1)
        t1 = C.C_SassNull;
      else
        t1 = new N.UnitlessSassNumber0(index + 1, null);
      return t1;
    },
    $signature: 3
  };
  D.closure150.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).get$separator() === C.ListSeparator_comma0 ? new D.SassString0("comma", false) : new D.SassString0("space", false);
    },
    $signature: 17
  };
  D.closure151.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).get$hasBrackets() ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  D.SelectorList0.prototype = {
    get$isInvisible: function() {
      return C.JSArray_methods.every$1(this.components, new D.SelectorList_isInvisible_closure0());
    },
    get$asSassList: function() {
      var t1 = this.components;
      return D.SassList$0(new H.MappedListIterable(t1, new D.SelectorList_asSassList_closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value0*>")), C.ListSeparator_comma0, false);
    },
    accept$1$1: function(visitor) {
      return visitor.visitSelectorList$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unify$1: function(other) {
      var t1 = this.components,
        t2 = H._arrayInstanceType(t1)._eval$1("ExpandIterable<1,ComplexSelector0*>"),
        contents = P.List_List$from(new H.ExpandIterable(t1, new D.SelectorList_unify_closure0(other), t2), true, t2._eval$1("Iterable.E"));
      return contents.length === 0 ? null : D.SelectorList$0(contents);
    },
    resolveParentSelectors$2$implicitParent: function($parent, implicitParent) {
      var t1, _this = this;
      if ($parent == null) {
        if (!C.JSArray_methods.any$1(_this.components, _this.get$_list2$_complexContainsParentSelector()))
          return _this;
        throw H.wrapException(E.SassScriptException$0(string$.Top_le));
      }
      t1 = _this.components;
      return D.SelectorList$0(B.flattenVertically0(new H.MappedListIterable(t1, new D.SelectorList_resolveParentSelectors_closure0(_this, implicitParent, $parent), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Iterable<ComplexSelector0*>*>")), type$.legacy_ComplexSelector_2));
    },
    resolveParentSelectors$1: function($parent) {
      return this.resolveParentSelectors$2$implicitParent($parent, true);
    },
    _list2$_complexContainsParentSelector$1: function(complex) {
      return C.JSArray_methods.any$1(complex.components, new D.SelectorList__complexContainsParentSelector_closure0());
    },
    _list2$_resolveParentSelectorsCompound$2: function(compound, $parent) {
      var resolvedMembers0, parentSelector, t1,
        resolvedMembers = compound.components,
        containsSelectorPseudo = C.JSArray_methods.any$1(resolvedMembers, new D.SelectorList__resolveParentSelectorsCompound_closure2());
      if (!containsSelectorPseudo && !(C.JSArray_methods.get$first(resolvedMembers) instanceof M.ParentSelector0))
        return null;
      resolvedMembers0 = containsSelectorPseudo ? new H.MappedListIterable(resolvedMembers, new D.SelectorList__resolveParentSelectorsCompound_closure3($parent), H._arrayInstanceType(resolvedMembers)._eval$1("MappedListIterable<1,SimpleSelector0*>")) : resolvedMembers;
      parentSelector = C.JSArray_methods.get$first(resolvedMembers);
      if (parentSelector instanceof M.ParentSelector0) {
        if (resolvedMembers.length === 1 && parentSelector.suffix == null)
          return $parent.components;
      } else
        return H.setRuntimeTypeInfo([S.ComplexSelector$0(H.setRuntimeTypeInfo([X.CompoundSelector$0(resolvedMembers0)], type$.JSArray_legacy_ComplexSelectorComponent_2), false)], type$.JSArray_legacy_ComplexSelector_2);
      t1 = $parent.components;
      return new H.MappedListIterable(t1, new D.SelectorList__resolveParentSelectorsCompound_closure4(compound, resolvedMembers0), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector0*>"));
    },
    get$hashCode: function(_) {
      return C.C_ListEquality.hash$1(this.components);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof D.SelectorList0 && C.C_ListEquality.equals$2(0, this.components, other.components);
    }
  };
  D.SelectorList_isInvisible_closure0.prototype = {
    call$1: function(complex) {
      return complex.get$isInvisible();
    },
    $signature: 14
  };
  D.SelectorList_asSassList_closure0.prototype = {
    call$1: function(complex) {
      var t1 = complex.components;
      return D.SassList$0(new H.MappedListIterable(t1, new D.SelectorList_asSassList__closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value0*>")), C.ListSeparator_space0, false);
    },
    $signature: 384
  };
  D.SelectorList_asSassList__closure0.prototype = {
    call$1: function(component) {
      return new D.SassString0(J.toString$0$(component), false);
    },
    $signature: 385
  };
  D.SelectorList_unify_closure0.prototype = {
    call$1: function(complex1) {
      var t1 = this.other.components;
      return new H.ExpandIterable(t1, new D.SelectorList_unify__closure0(complex1), H._arrayInstanceType(t1)._eval$1("ExpandIterable<1,ComplexSelector0*>"));
    },
    $signature: 120
  };
  D.SelectorList_unify__closure0.prototype = {
    call$1: function(complex2) {
      var unified = Y.unifyComplex0(H.setRuntimeTypeInfo([this.complex1.components, complex2.components], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));
      if (unified == null)
        return C.List_empty15;
      return J.map$1$1$ax(unified, new D.SelectorList_unify___closure0(), type$.legacy_ComplexSelector_2);
    },
    $signature: 120
  };
  D.SelectorList_unify___closure0.prototype = {
    call$1: function(complex) {
      return S.ComplexSelector$0(complex, false);
    },
    $signature: 71
  };
  D.SelectorList_resolveParentSelectors_closure0.prototype = {
    call$1: function(complex) {
      var t2, t3, newComplexes, t4, t5, t6, t7, _i, component, resolved, t8, _i0, previousLineBreaks, newComplexes0, t9, i, newComplex, i0, lineBreak, t10, t11, t12, t13, t14, t15, _i1, _this = this, _box_0 = {},
        t1 = _this.$this;
      if (!t1._list2$_complexContainsParentSelector$1(complex)) {
        if (!_this.implicitParent)
          return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);
        t1 = _this.parent.components;
        return new H.MappedListIterable(t1, new D.SelectorList_resolveParentSelectors__closure1(complex), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector0*>"));
      }
      t2 = type$.JSArray_legacy_ComplexSelectorComponent_2;
      t3 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2;
      newComplexes = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([], t2)], t3);
      t4 = type$.JSArray_legacy_bool;
      _box_0.lineBreaks = H.setRuntimeTypeInfo([false], t4);
      for (t5 = complex.components, t6 = t5.length, t7 = _this.parent, _i = 0; _i < t6; ++_i) {
        component = t5[_i];
        if (component instanceof X.CompoundSelector0) {
          resolved = t1._list2$_resolveParentSelectorsCompound$2(component, t7);
          if (resolved == null) {
            for (t8 = newComplexes.length, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0)
              newComplexes[_i0].push(component);
            continue;
          }
          previousLineBreaks = _box_0.lineBreaks;
          newComplexes0 = H.setRuntimeTypeInfo([], t3);
          _box_0.lineBreaks = H.setRuntimeTypeInfo([], t4);
          for (t8 = newComplexes.length, t9 = J.getInterceptor$ax(resolved), i = 0, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0, i = i0) {
            newComplex = newComplexes[_i0];
            i0 = i + 1;
            lineBreak = previousLineBreaks[i];
            for (t10 = t9.get$iterator(resolved), t11 = !lineBreak; t10.moveNext$0();) {
              t12 = t10.get$current(t10);
              t13 = H.setRuntimeTypeInfo([], t2);
              for (t14 = C.JSArray_methods.get$iterator(newComplex); t14.moveNext$0();)
                t13.push(t14.get$current(t14));
              for (t14 = t12.components, t15 = t14.length, _i1 = 0; _i1 < t15; ++_i1)
                t13.push(t14[_i1]);
              newComplexes0.push(t13);
              t13 = _box_0.lineBreaks;
              t13.push(!t11 || t12.lineBreak);
            }
          }
          newComplexes = newComplexes0;
        } else
          for (t8 = newComplexes.length, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0)
            newComplexes[_i0].push(component);
      }
      _box_0.i = 0;
      return new H.MappedListIterable(newComplexes, new D.SelectorList_resolveParentSelectors__closure2(_box_0), H._arrayInstanceType(newComplexes)._eval$1("MappedListIterable<1,ComplexSelector0*>"));
    },
    $signature: 120
  };
  D.SelectorList_resolveParentSelectors__closure1.prototype = {
    call$1: function(parentComplex) {
      var t2, t3, _i, t4,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);
      for (t2 = parentComplex.components, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t1.push(t2[_i]);
      for (t2 = this.complex, t3 = t2.components, t4 = t3.length, _i = 0; _i < t4; ++_i)
        t1.push(t3[_i]);
      return S.ComplexSelector$0(t1, t2.lineBreak || parentComplex.lineBreak);
    },
    $signature: 99
  };
  D.SelectorList_resolveParentSelectors__closure2.prototype = {
    call$1: function(newComplex) {
      var t1 = this._box_0;
      return S.ComplexSelector$0(newComplex, t1.lineBreaks[t1.i++]);
    },
    $signature: 71
  };
  D.SelectorList__complexContainsParentSelector_closure0.prototype = {
    call$1: function(component) {
      return component instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(component.components, new D.SelectorList__complexContainsParentSelector__closure0());
    },
    $signature: 93
  };
  D.SelectorList__complexContainsParentSelector__closure0.prototype = {
    call$1: function(simple) {
      var t1;
      if (!(simple instanceof M.ParentSelector0))
        if (simple instanceof D.PseudoSelector0) {
          t1 = simple.selector;
          t1 = t1 != null && C.JSArray_methods.any$1(t1.components, t1.get$_list2$_complexContainsParentSelector());
        } else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    $signature: 19
  };
  D.SelectorList__resolveParentSelectorsCompound_closure2.prototype = {
    call$1: function(simple) {
      var t1;
      if (simple instanceof D.PseudoSelector0) {
        t1 = simple.selector;
        t1 = t1 != null && C.JSArray_methods.any$1(t1.components, t1.get$_list2$_complexContainsParentSelector());
      } else
        t1 = false;
      return t1;
    },
    $signature: 19
  };
  D.SelectorList__resolveParentSelectorsCompound_closure3.prototype = {
    call$1: function(simple) {
      var t1, t2, t3;
      if (simple instanceof D.PseudoSelector0) {
        t1 = simple.selector;
        if (t1 == null)
          return simple;
        if (!C.JSArray_methods.any$1(t1.components, t1.get$_list2$_complexContainsParentSelector()))
          return simple;
        t1 = t1.resolveParentSelectors$2$implicitParent(this.parent, false);
        t2 = simple.name;
        t3 = simple.isClass;
        return D.PseudoSelector$0(t2, simple.argument, !t3, t1);
      } else
        return simple;
    },
    $signature: 388
  };
  D.SelectorList__resolveParentSelectorsCompound_closure4.prototype = {
    call$1: function(complex) {
      var suffix, t2, t3, t4, cur, last, _i,
        t1 = complex.components,
        lastComponent = C.JSArray_methods.get$last(t1);
      if (!(lastComponent instanceof X.CompoundSelector0))
        throw H.wrapException(E.SassScriptException$0('Parent "' + complex.toString$0(0) + '" is incompatible with this selector.'));
      suffix = type$.legacy_ParentSelector_2._as(C.JSArray_methods.get$first(this.compound.components)).suffix;
      t2 = type$.JSArray_legacy_SimpleSelector_2;
      if (suffix != null) {
        t2 = H.setRuntimeTypeInfo([], t2);
        for (t3 = lastComponent.components, t4 = H.SubListIterable$(t3, 0, t3.length - 1, H._arrayInstanceType(t3)._precomputed1), t4 = new H.ListIterator(t4, t4.get$length(t4)); t4.moveNext$0();) {
          cur = t4.__internal$_current;
          t2.push(cur);
        }
        t2.push(C.JSArray_methods.get$last(t3).addSuffix$1(suffix));
        for (t3 = J.skip$1$ax(this.resolvedMembers, 1), t3 = new H.ListIterator(t3, t3.get$length(t3)); t3.moveNext$0();) {
          cur = t3.__internal$_current;
          t2.push(cur);
        }
        last = X.CompoundSelector$0(t2);
      } else {
        t2 = H.setRuntimeTypeInfo([], t2);
        for (t3 = lastComponent.components, t4 = t3.length, _i = 0; _i < t4; ++_i)
          t2.push(t3[_i]);
        for (t3 = J.skip$1$ax(this.resolvedMembers, 1), t3 = new H.ListIterator(t3, t3.get$length(t3)); t3.moveNext$0();) {
          cur = t3.__internal$_current;
          t2.push(cur);
        }
        last = X.CompoundSelector$0(t2);
      }
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);
      for (t1 = H.SubListIterable$(t1, 0, t1.length - 1, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
        cur = t1.__internal$_current;
        t2.push(cur);
      }
      t2.push(last);
      return S.ComplexSelector$0(t2, complex.lineBreak);
    },
    $signature: 99
  };
  D._NodeSassList.prototype = {};
  D.closure246.prototype = {
    call$4: function(thisArg, $length, commaSeparator, dartValue) {
      var t1;
      if (dartValue == null) {
        t1 = P.Iterable_Iterable$generate($length, new D._closure33(), type$.legacy_Value_2);
        t1 = D.SassList$0(t1, commaSeparator !== false ? C.ListSeparator_comma0 : C.ListSeparator_space0, false);
      } else
        t1 = dartValue;
      J.set$dartValue$x(thisArg, t1);
    },
    call$2: function(thisArg, $length) {
      return this.call$4(thisArg, $length, null, null);
    },
    call$3: function(thisArg, $length, commaSeparator) {
      return this.call$4(thisArg, $length, commaSeparator, null);
    },
    "call*": "call$4",
    $requiredArgCount: 2,
    $defaultValues: function() {
      return [null, null];
    },
    $signature: 389
  };
  D._closure33.prototype = {
    call$1: function(_) {
      return C.C_SassNull;
    },
    $signature: 188
  };
  D.closure247.prototype = {
    call$2: function(thisArg, index) {
      return F.wrapValue(J.get$dartValue$x(thisArg)._list1$_contents[index]);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 391
  };
  D.closure248.prototype = {
    call$3: function(thisArg, index, value) {
      var t1 = J.getInterceptor$x(thisArg),
        t2 = t1.get$dartValue(thisArg)._list1$_contents,
        mutable = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2)._eval$1("JSArray<1>"));
      mutable[index] = F.unwrapValue(value);
      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeListContents$1(mutable));
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 392
  };
  D.closure249.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg).separator === C.ListSeparator_comma0;
    },
    $signature: 393
  };
  D.closure250.prototype = {
    call$2: function(thisArg, isComma) {
      var t1 = J.getInterceptor$x(thisArg),
        t2 = t1.get$dartValue(thisArg)._list1$_contents,
        t3 = isComma ? C.ListSeparator_comma0 : C.ListSeparator_space0;
      t1.set$dartValue(thisArg, D.SassList$0(t2, t3, t1.get$dartValue(thisArg).hasBrackets));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 394
  };
  D.closure251.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg)._list1$_contents.length;
    },
    $signature: 395
  };
  D.closure252.prototype = {
    call$1: function(thisArg) {
      return J.toString$0$(J.get$dartValue$x(thisArg));
    },
    $signature: 396
  };
  D.SassList0.prototype = {
    get$isBlank: function() {
      return C.JSArray_methods.every$1(this._list1$_contents, new D.SassList_isBlank_closure0());
    },
    get$asList: function() {
      return this._list1$_contents;
    },
    get$lengthAsList: function() {
      return this._list1$_contents.length;
    },
    SassList$3$brackets0: function(contents, separator, brackets) {
      if (this.separator === C.ListSeparator_undecided0 && this._list1$_contents.length > 1)
        throw H.wrapException(P.ArgumentError$(string$.A_list));
    },
    accept$1$1: function(visitor) {
      return visitor.visitList$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertMap$1: function($name) {
      return this._list1$_contents.length === 0 ? C.SassMap_Map_empty0 : this.super$Value$assertMap0($name);
    },
    tryMap$0: function() {
      return this._list1$_contents.length === 0 ? C.SassMap_Map_empty0 : null;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (!(other instanceof D.SassList0 && other.separator === _this.separator && other.hasBrackets === _this.hasBrackets && C.C_ListEquality.equals$2(0, other._list1$_contents, _this._list1$_contents)))
        t1 = _this._list1$_contents.length === 0 && other instanceof A.SassMap0 && other.get$asList().length === 0;
      else
        t1 = true;
      return t1;
    },
    get$hashCode: function(_) {
      return C.C_ListEquality.hash$1(this._list1$_contents);
    },
    get$separator: function() {
      return this.separator;
    },
    get$hasBrackets: function() {
      return this.hasBrackets;
    }
  };
  D.SassList_isBlank_closure0.prototype = {
    call$1: function(element) {
      return element.get$isBlank();
    },
    $signature: 55
  };
  D.ListSeparator0.prototype = {
    toString$0: function(_) {
      return this._list1$_name;
    }
  };
  L.LoudComment0.prototype = {
    get$span: function() {
      return this.text.span;
    },
    accept$1$1: function(visitor) {
      return visitor.visitLoudComment$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return this.text.toString$0(0);
    },
    $isAstNode0: 1,
    $isStatement0: 1
  };
  A.MapExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitMapExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.pairs;
      return "(" + new H.MappedListIterable(t1, new A.MapExpression_toString_closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String*>")).join$1(0, ", ") + ")";
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  A.MapExpression_toString_closure0.prototype = {
    call$1: function(pair) {
      return H.S(pair.item1) + ": " + H.S(pair.item2);
    },
    $signature: 397
  };
  A.closure149.prototype = {
    call$1: function($arguments) {
      var t3, _i, cur, value,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value_2), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {
        cur = t1.__internal$_current;
        value = map.contents.$index(0, cur);
        if (!(value instanceof A.SassMap0))
          return C.C_SassNull;
      }
      t1 = map.contents.$index(0, C.JSArray_methods.get$last(t2));
      return t1 == null ? C.C_SassNull : t1;
    },
    $signature: 3
  };
  A.closure212.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return A._modify0(t1.$index($arguments, 0).assertMap$1("map"), H.setRuntimeTypeInfo([t1.$index($arguments, 1)], type$.JSArray_legacy_Value_2), new A._closure27($arguments));
    },
    $signature: 3
  };
  A._closure27.prototype = {
    call$1: function(_) {
      return J.$index$asx(this.$arguments, 2);
    },
    $signature: 74
  };
  A.closure213.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        args = t1.$index($arguments, 1).get$asList();
      t1 = args.length;
      if (t1 === 0)
        throw H.wrapException(E.SassScriptException$0("Expected $args to contain a key."));
      else if (t1 === 1)
        throw H.wrapException(E.SassScriptException$0("Expected $args to contain a value."));
      return A._modify0(map, C.JSArray_methods.sublist$2(args, 0, t1 - 1), new A._closure26(args));
    },
    $signature: 3
  };
  A._closure26.prototype = {
    call$1: function(_) {
      return C.JSArray_methods.get$last(this.args);
    },
    $signature: 74
  };
  A.closure147.prototype = {
    call$1: function($arguments) {
      var t2, t3, t4,
        t1 = J.getInterceptor$asx($arguments),
        map1 = t1.$index($arguments, 0).assertMap$1("map1"),
        map2 = t1.$index($arguments, 1).assertMap$1("map2");
      t1 = type$.legacy_Value_2;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = map1.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      for (t3 = map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 37
  };
  A.closure148.prototype = {
    call$1: function($arguments) {
      var map2,
        t1 = J.getInterceptor$asx($arguments),
        map1 = t1.$index($arguments, 0).assertMap$1("map1"),
        args = t1.$index($arguments, 1).get$asList();
      t1 = args.length;
      if (t1 === 0)
        throw H.wrapException(E.SassScriptException$0("Expected $args to contain a key."));
      else if (t1 === 1)
        throw H.wrapException(E.SassScriptException$0("Expected $args to contain a map."));
      map2 = C.JSArray_methods.get$last(args).assertMap$1("map2");
      return A._modify0(map1, H.SubListIterable$(args, 0, args.length - 1, H._arrayInstanceType(args)._precomputed1), new A._closure19(map2));
    },
    $signature: 3
  };
  A._closure19.prototype = {
    call$1: function(oldValue) {
      var t1, t2, t3, t4,
        nestedMap = oldValue == null ? null : oldValue.tryMap$0();
      if (nestedMap == null)
        return this.map2;
      t1 = type$.legacy_Value_2;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = nestedMap.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      for (t3 = this.map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, t4.key, t4.value);
      }
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 398
  };
  A.closure211.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return A._deepMergeImpl0(t1.$index($arguments, 0).assertMap$1("map1"), t1.$index($arguments, 1).assertMap$1("map2"));
    },
    $signature: 37
  };
  A.closure210.prototype = {
    call$1: function($arguments) {
      var t3, _i,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      return A._modify0(map, H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value_2), new A._closure25(t2));
    },
    $signature: 3
  };
  A._closure25.prototype = {
    call$1: function(value) {
      var t2,
        nestedMap = value == null ? null : value.tryMap$0(),
        t1 = nestedMap == null ? null : nestedMap.contents;
      t1 = t1 == null ? null : t1.containsKey$1(C.JSArray_methods.get$last(this.keys));
      if (t1 === true) {
        t1 = type$.legacy_Value_2;
        t2 = P.LinkedHashMap_LinkedHashMap$of(nestedMap.contents, t1, t1);
        t2.remove$1(0, C.JSArray_methods.get$last(this.keys));
        return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
      }
      return value;
    },
    $signature: 74
  };
  A.closure145.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).assertMap$1("map");
    },
    $signature: 37
  };
  A.closure146.prototype = {
    call$1: function($arguments) {
      var t3, _i, mutableMap,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      t1 = type$.legacy_Value_2;
      mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1);
      for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        mutableMap.remove$1(0, t2[_i]);
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
    },
    $signature: 37
  };
  A.closure144.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertMap$1("map").contents;
      return D.SassList$0(t1.get$keys(t1), C.ListSeparator_comma0, false);
    },
    $signature: 27
  };
  A.closure143.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertMap$1("map").contents;
      return D.SassList$0(t1.get$values(t1), C.ListSeparator_comma0, false);
    },
    $signature: 27
  };
  A.closure142.prototype = {
    call$1: function($arguments) {
      var t3, _i, cur, value,
        t1 = J.getInterceptor$asx($arguments),
        map = t1.$index($arguments, 0).assertMap$1("map"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      t2.push(t1.$index($arguments, 1));
      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t2.push(t1[_i]);
      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value_2), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {
        cur = t1.__internal$_current;
        value = map.contents.$index(0, cur);
        if (!(value instanceof A.SassMap0))
          return C.SassBoolean_false;
      }
      return map.contents.containsKey$1(C.JSArray_methods.get$last(t2)) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  A._modify__modifyNestedMap0.prototype = {
    call$2: function(map, newValue) {
      var nestedMap, _this = this,
        t1 = type$.legacy_Value_2,
        mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1),
        t2 = _this.keyIterator,
        key = t2.get$current(t2);
      if (!t2.moveNext$0()) {
        mutableMap.$indexSet(0, key, newValue == null ? _this.modify.call$1(mutableMap.$index(0, key)) : newValue);
        return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
      }
      t2 = mutableMap.$index(0, key);
      nestedMap = t2 == null ? null : t2.tryMap$0();
      t2 = nestedMap == null;
      if (t2) {
        newValue = _this.modify.call$1(null);
        if (newValue == null)
          return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
      }
      mutableMap.$indexSet(0, key, _this.call$2(t2 ? C.SassMap_Map_empty0 : nestedMap, newValue));
      return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));
    },
    call$1: function(map) {
      return this.call$2(map, null);
    },
    $signature: 399
  };
  A._deepMergeImpl__ensureMutable0.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_0;
      if (t1.mutable)
        return;
      t1.mutable = true;
      t2 = type$.legacy_Value_2;
      t1.result = P.LinkedHashMap_LinkedHashMap$of(t1.result, t2, t2);
    },
    $signature: 1
  };
  A._deepMergeImpl_closure0.prototype = {
    call$2: function(key, value) {
      var resultMap, valueMap, merged,
        t1 = this._box_0,
        resultValue = t1.result.$index(0, key);
      if (resultValue == null) {
        this._ensureMutable.call$0();
        t1.result.$indexSet(0, key, value);
      } else {
        resultMap = resultValue.tryMap$0();
        valueMap = value.tryMap$0();
        if (resultMap != null && valueMap != null) {
          merged = A._deepMergeImpl0(valueMap, resultMap);
          if (merged === resultMap)
            return;
          this._ensureMutable.call$0();
          t1.result.$indexSet(0, key, merged);
        }
      }
    },
    $signature: 45
  };
  A._NodeSassMap.prototype = {};
  A.closure239.prototype = {
    call$3: function(thisArg, $length, dartValue) {
      var t1, t2, t3, map;
      if (dartValue == null) {
        t1 = type$.legacy_Value_2;
        t2 = P.Iterable_Iterable$generate($length, new A._closure31(), t1);
        t3 = P.Iterable_Iterable$generate($length, new A._closure32(), t1);
        map = P.LinkedHashMap_LinkedHashMap(null, null, null, t1, t1);
        P.MapBase__fillMapWithIterables(map, t2, t3);
        t1 = new A.SassMap0(H.ConstantMap_ConstantMap$from(map, t1, t1));
      } else
        t1 = dartValue;
      J.set$dartValue$x(thisArg, t1);
    },
    call$2: function(thisArg, $length) {
      return this.call$3(thisArg, $length, null);
    },
    "call*": "call$3",
    $requiredArgCount: 2,
    $defaultValues: function() {
      return [null];
    },
    $signature: 400
  };
  A._closure31.prototype = {
    call$1: function(i) {
      return new N.UnitlessSassNumber0(i, null);
    },
    $signature: 401
  };
  A._closure32.prototype = {
    call$1: function(_) {
      return C.C_SassNull;
    },
    $signature: 188
  };
  A.closure240.prototype = {
    call$2: function(thisArg, index) {
      var t1 = J.get$dartValue$x(thisArg).contents;
      return F.wrapValue(J.elementAt$1$ax(t1.get$keys(t1), index));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 177
  };
  A.closure241.prototype = {
    call$2: function(thisArg, index) {
      var t1 = J.get$dartValue$x(thisArg).contents;
      return F.wrapValue(t1.get$values(t1).elementAt$1(0, index));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 177
  };
  A.closure242.prototype = {
    call$1: function(thisArg) {
      var t1 = J.get$dartValue$x(thisArg).contents;
      return t1.get$length(t1);
    },
    $signature: 403
  };
  A.closure243.prototype = {
    call$3: function(thisArg, index, key) {
      var newKey, t2, newMap, t3, i, t4,
        t1 = J.getInterceptor$x(thisArg),
        oldMap = t1.get$dartValue(thisArg).contents;
      P.RangeError_checkValidIndex(index, oldMap, "index");
      newKey = F.unwrapValue(key);
      t2 = type$.legacy_Value_2;
      newMap = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      for (t3 = t1.get$dartValue(thisArg).contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), i = 0; t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        if (i === index)
          newMap.$indexSet(0, newKey, oldMap.$index(0, t4));
        else {
          if (newKey.$eq(0, t4))
            throw H.wrapException(P.ArgumentError$value(key, "key", "is already in the map"));
          newMap.$indexSet(0, t4, oldMap.$index(0, t4));
        }
        ++i;
      }
      t1.set$dartValue(thisArg, new A.SassMap0(H.ConstantMap_ConstantMap$from(newMap, t2, t2)));
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 164
  };
  A.closure244.prototype = {
    call$3: function(thisArg, index, value) {
      var t3, t4, t5,
        t1 = J.getInterceptor$x(thisArg),
        t2 = t1.get$dartValue(thisArg).contents,
        key = J.elementAt$1$ax(t2.get$keys(t2), index);
      t2 = type$.legacy_Value_2;
      t3 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      for (t4 = t1.get$dartValue(thisArg).contents, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
        t5 = t4.get$current(t4);
        t3.$indexSet(0, t5.key, t5.value);
      }
      t3.$indexSet(0, key, F.unwrapValue(value));
      t1.set$dartValue(thisArg, new A.SassMap0(H.ConstantMap_ConstantMap$from(t3, t2, t2)));
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 164
  };
  A.closure245.prototype = {
    call$1: function(thisArg) {
      return J.toString$0$(J.get$dartValue$x(thisArg));
    },
    $signature: 405
  };
  A.SassMap0.prototype = {
    get$separator: function() {
      var t1 = this.contents;
      return t1.get$isEmpty(t1) ? C.ListSeparator_undecided0 : C.ListSeparator_comma0;
    },
    get$asList: function() {
      var result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);
      this.contents.forEach$1(0, new A.SassMap_asList_closure0(result));
      return result;
    },
    get$lengthAsList: function() {
      var t1 = this.contents;
      return t1.get$length(t1);
    },
    accept$1$1: function(visitor) {
      return visitor.visitMap$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertMap$1: function($name) {
      return this;
    },
    tryMap$0: function() {
      return this;
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (!(other instanceof A.SassMap0 && C.C_MapEquality.equals$2(0, other.contents, this.contents))) {
        t1 = this.contents;
        t1 = t1.get$isEmpty(t1) && other instanceof D.SassList0 && other._list1$_contents.length === 0;
      } else
        t1 = true;
      return t1;
    },
    get$hashCode: function(_) {
      var t1 = this.contents;
      return t1.get$isEmpty(t1) ? C.C_ListEquality.hash$1(C.List_empty16) : C.C_MapEquality.hash$1(t1);
    }
  };
  A.SassMap_asList_closure0.prototype = {
    call$2: function(key, value) {
      this.result.push(D.SassList$0(H.setRuntimeTypeInfo([key, value], type$.JSArray_legacy_Value_2), C.ListSeparator_space0, false));
    },
    $signature: 45
  };
  K.closure140.prototype = {
    call$1: function(value) {
      return J.ceil$0$n(value);
    },
    $signature: 39
  };
  K.closure205.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        min = t1.$index($arguments, 0).assertNumber$1("min"),
        number = t1.$index($arguments, 1).assertNumber$1("number"),
        max = t1.$index($arguments, 2).assertNumber$1("max");
      number.convertValueToMatch$3(min, "number", "min");
      max.convertValueToMatch$3(min, "max", "min");
      if (min.greaterThanOrEquals$1(max).value)
        return min;
      if (min.greaterThanOrEquals$1(number).value)
        return min;
      if (number.greaterThanOrEquals$1(max).value)
        return max;
      return number;
    },
    $signature: 10
  };
  K.closure139.prototype = {
    call$1: function(value) {
      return J.floor$0$n(value);
    },
    $signature: 39
  };
  K.closure138.prototype = {
    call$1: function($arguments) {
      var t1, t2, max, _i, number;
      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, max = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        number = t1[_i].assertNumber$0();
        if (max == null || max.lessThan$1(number).value)
          max = number;
      }
      if (max != null)
        return max;
      throw H.wrapException(E.SassScriptException$0("At least one argument must be passed."));
    },
    $signature: 10
  };
  K.closure137.prototype = {
    call$1: function($arguments) {
      var t1, t2, min, _i, number;
      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, min = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        number = t1[_i].assertNumber$0();
        if (min == null || min.greaterThan$1(number).value)
          min = number;
      }
      if (min != null)
        return min;
      throw H.wrapException(E.SassScriptException$0("At least one argument must be passed."));
    },
    $signature: 10
  };
  K.closure141.prototype = {
    call$1: function(value) {
      return Math.abs(value);
    },
    $signature: 155
  };
  K.closure203.prototype = {
    call$1: function($arguments) {
      var subtotal, i, i0, value,
        t1 = J.$index$asx($arguments, 0).get$asList(),
        t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,SassNumber0*>"),
        numbers = P.List_List$from(new H.MappedListIterable(t1, new K._closure24(), t2), true, t2._eval$1("ListIterable.E"));
      if (numbers.length === 0)
        throw H.wrapException(E.SassScriptException$0("At least one argument must be passed."));
      for (subtotal = 0, i = 0; i < numbers.length; i = i0) {
        i0 = i + 1;
        value = numbers[i].convertValueToMatch$3(numbers[0], "numbers[" + i0 + "]", "numbers[1]");
        H.checkNum(value);
        subtotal += Math.pow(value, 2);
      }
      t1 = Math.sqrt(subtotal);
      t2 = numbers[0].get$numeratorUnits();
      return T.SassNumber_SassNumber$withUnits0(t1, numbers[0].get$denominatorUnits(), t2);
    },
    $signature: 10
  };
  K._closure24.prototype = {
    call$1: function(argument) {
      return argument.assertNumber$0();
    },
    $signature: 406
  };
  K.closure202.prototype = {
    call$1: function($arguments) {
      var numberValue, base, baseValue, t2,
        _s18_ = " to have no units.",
        t1 = J.getInterceptor$asx($arguments),
        number = t1.$index($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$number: Expected " + number.toString$0(0) + _s18_));
      numberValue = K._fuzzyRoundIfZero0(number.value);
      if (J.$eq$(t1.$index($arguments, 1), C.C_SassNull)) {
        t1 = Math.log(H.checkNum(numberValue));
        return new N.UnitlessSassNumber0(t1, null);
      }
      base = t1.$index($arguments, 1).assertNumber$1("base");
      if (base.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$base: Expected " + base.toString$0(0) + _s18_));
      t1 = base.value;
      baseValue = Math.abs(t1 - 1) < $.$get$epsilon0() ? T.fuzzyRound0(t1) : K._fuzzyRoundIfZero0(t1);
      t1 = Math.log(H.checkNum(numberValue));
      t2 = Math.log(H.checkNum(baseValue));
      return new N.UnitlessSassNumber0(t1 / t2, null);
    },
    $signature: 10
  };
  K.closure201.prototype = {
    call$1: function($arguments) {
      var baseValue, exponentValue, t2, t3,
        _s18_ = " to have no units.",
        _null = null,
        t1 = J.getInterceptor$asx($arguments),
        base = t1.$index($arguments, 0).assertNumber$1("base"),
        exponent = t1.$index($arguments, 1).assertNumber$1("exponent");
      if (base.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$base: Expected " + base.toString$0(0) + _s18_));
      else if (exponent.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$exponent: Expected " + exponent.toString$0(0) + _s18_));
      baseValue = K._fuzzyRoundIfZero0(base.value);
      exponentValue = K._fuzzyRoundIfZero0(exponent.value);
      t1 = $.$get$epsilon0();
      if (Math.abs(Math.abs(baseValue) - 1) < t1) {
        exponentValue.toString;
        t2 = exponentValue == 1 / 0 || exponentValue == -1 / 0;
      } else
        t2 = false;
      if (t2)
        return new N.UnitlessSassNumber0(0 / 0, _null);
      else {
        t2 = Math.abs(baseValue - 0);
        if (t2 < t1) {
          exponentValue.toString;
          if (isFinite(exponentValue))
            if (T.fuzzyIsInt0(exponentValue))
              t1 = C.JSInt_methods.$mod(T.fuzzyIsInt0(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;
            else
              t1 = false;
          else
            t1 = false;
          if (t1)
            exponentValue = T.fuzzyRound0(exponentValue);
        } else {
          if (isFinite(baseValue))
            if (baseValue < 0 && !(t2 < t1)) {
              exponentValue.toString;
              t3 = isFinite(exponentValue) && T.fuzzyIsInt0(exponentValue);
            } else
              t3 = false;
          else
            t3 = false;
          if (t3)
            exponentValue = T.fuzzyRound0(exponentValue);
          else {
            if (baseValue == 1 / 0 || baseValue == -1 / 0)
              if (baseValue < 0 && !(t2 < t1)) {
                exponentValue.toString;
                if (isFinite(exponentValue))
                  if (T.fuzzyIsInt0(exponentValue))
                    t1 = C.JSInt_methods.$mod(T.fuzzyIsInt0(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;
                  else
                    t1 = false;
                else
                  t1 = false;
              } else
                t1 = false;
            else
              t1 = false;
            if (t1)
              exponentValue = T.fuzzyRound0(exponentValue);
          }
        }
      }
      H.checkNum(exponentValue);
      t1 = Math.pow(baseValue, exponentValue);
      return new N.UnitlessSassNumber0(t1, _null);
    },
    $signature: 10
  };
  K.closure199.prototype = {
    call$1: function($arguments) {
      var t1,
        number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$number: Expected " + number.toString$0(0) + " to have no units."));
      t1 = Math.sqrt(H.checkNum(K._fuzzyRoundIfZero0(number.value)));
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  K.closure209.prototype = {
    call$1: function($arguments) {
      var numberValue,
        number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$number: Expected " + number.toString$0(0) + " to have no units."));
      numberValue = number.value;
      if (Math.abs(Math.abs(numberValue) - 1) < $.$get$epsilon0())
        numberValue = T.fuzzyRound0(numberValue);
      return T.SassNumber_SassNumber$withUnits0(Math.acos(numberValue) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 10
  };
  K.closure208.prototype = {
    call$1: function($arguments) {
      var t1,
        number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$number: Expected " + number.toString$0(0) + " to have no units."));
      t1 = number.value;
      return T.SassNumber_SassNumber$withUnits0(Math.asin(H.checkNum(Math.abs(Math.abs(t1) - 1) < $.$get$epsilon0() ? T.fuzzyRound0(t1) : K._fuzzyRoundIfZero0(t1))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 10
  };
  K.closure207.prototype = {
    call$1: function($arguments) {
      var number = J.$index$asx($arguments, 0).assertNumber$1("number");
      if (number.get$hasUnits())
        throw H.wrapException(E.SassScriptException$0("$number: Expected " + number.toString$0(0) + " to have no units."));
      return T.SassNumber_SassNumber$withUnits0(Math.atan(H.checkNum(K._fuzzyRoundIfZero0(number.value))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 10
  };
  K.closure206.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        y = t1.$index($arguments, 0).assertNumber$1("y"),
        xValue = K._fuzzyRoundIfZero0(t1.$index($arguments, 1).assertNumber$1("x").convertValueToMatch$3(y, "x", "y"));
      return T.SassNumber_SassNumber$withUnits0(Math.atan2(H.checkNum(K._fuzzyRoundIfZero0(y.value)), H.checkNum(xValue)) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo(["deg"], type$.JSArray_legacy_String));
    },
    $signature: 10
  };
  K.closure204.prototype = {
    call$1: function($arguments) {
      var t1 = Math.cos(H.checkNum(J.$index$asx($arguments, 0).assertNumber$1("number").coerceValueToUnit$2("rad", "number")));
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  K.closure200.prototype = {
    call$1: function($arguments) {
      var t1 = Math.sin(H.checkNum(K._fuzzyRoundIfZero0(J.$index$asx($arguments, 0).assertNumber$1("number").coerceValueToUnit$2("rad", "number"))));
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  K.closure198.prototype = {
    call$1: function($arguments) {
      var value = J.$index$asx($arguments, 0).assertNumber$1("number").coerceValueToUnit$2("rad", "number"),
        t1 = C.JSNumber_methods.$mod(value - 1.5707963267948966, 6.283185307179586),
        t2 = $.$get$epsilon0();
      if (Math.abs(t1 - 0) < t2)
        return new N.UnitlessSassNumber0(1 / 0, null);
      else if (Math.abs(C.JSNumber_methods.$mod(value + 1.5707963267948966, 6.283185307179586) - 0) < t2)
        return new N.UnitlessSassNumber0(-1 / 0, null);
      else {
        t1 = Math.tan(H.checkNum(K._fuzzyRoundIfZero0(value)));
        return new N.UnitlessSassNumber0(t1, null);
      }
    },
    $signature: 10
  };
  K.closure133.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return t1.$index($arguments, 0).assertNumber$1("number1").isComparableTo$1(t1.$index($arguments, 1).assertNumber$1("number2")) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  K.closure132.prototype = {
    call$1: function($arguments) {
      return !J.$index$asx($arguments, 0).assertNumber$1("number").get$hasUnits() ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  K.closure134.prototype = {
    call$1: function($arguments) {
      return new D.SassString0(J.$index$asx($arguments, 0).assertNumber$1("number").get$unitString(), true);
    },
    $signature: 17
  };
  K.closure136.prototype = {
    call$1: function($arguments) {
      var number = J.$index$asx($arguments, 0).assertNumber$1("number");
      number.assertNoUnits$1("number");
      return new L.SingleUnitSassNumber0("%", number.value * 100, null);
    },
    $signature: 10
  };
  K.closure135.prototype = {
    call$1: function($arguments) {
      var limit,
        t1 = J.getInterceptor$asx($arguments);
      if (J.$eq$(t1.$index($arguments, 0), C.C_SassNull)) {
        t1 = $.$get$_random2().nextDouble$0();
        return new N.UnitlessSassNumber0(t1, null);
      }
      limit = t1.$index($arguments, 0).assertNumber$1("limit").assertInt$1("limit");
      if (limit < 1)
        throw H.wrapException(E.SassScriptException$0("$limit: Must be greater than 0, was " + limit + "."));
      t1 = $.$get$_random2().nextInt$1(limit);
      return new N.UnitlessSassNumber0(t1 + 1, null);
    },
    $signature: 10
  };
  K._numberFunction_closure0.prototype = {
    call$1: function($arguments) {
      var number = J.$index$asx($arguments, 0).assertNumber$1("number"),
        t1 = this.transform.call$1(number.value),
        t2 = number.get$numeratorUnits();
      return T.SassNumber_SassNumber$withUnits0(t1, number.get$denominatorUnits(), t2);
    },
    $signature: 10
  };
  F.CssMediaQuery0.prototype = {
    merge$1: function(other) {
      var _i, t8, negativeFeatures, features, type, modifier, fewerFeatures, fewerFeatures0, moreFeatures, _this = this, _null = null, _s3_ = "all",
        t1 = _this.modifier,
        ourModifier = t1 == null ? _null : t1.toLowerCase(),
        t2 = _this.type,
        t3 = t2 == null,
        ourType = t3 ? _null : t2.toLowerCase(),
        t4 = other.modifier,
        theirModifier = t4 == null ? _null : t4.toLowerCase(),
        t5 = other.type,
        t6 = t5 == null,
        theirType = t6 ? _null : t5.toLowerCase(),
        t7 = ourType == null;
      if (t7 && theirType == null) {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
        for (t2 = _this.features, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t1.push(t2[_i]);
        for (t2 = other.features, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t1.push(t2[_i]);
        return new F.MediaQuerySuccessfulMergeResult0(new F.CssMediaQuery0(_null, _null, P.List_List$unmodifiable(t1, type$.legacy_String)));
      }
      t8 = ourModifier === "not";
      if (t8 !== (theirModifier === "not")) {
        if (ourType == theirType) {
          negativeFeatures = t8 ? _this.features : other.features;
          if (C.JSArray_methods.every$1(negativeFeatures, C.JSArray_methods.get$contains(t8 ? other.features : _this.features)))
            return C._SingletonCssMediaQueryMergeResult_empty0;
          else
            return C._SingletonCssMediaQueryMergeResult_unrepresentable0;
        } else if (t3 || B.equalsIgnoreCase0(t2, _s3_) || t6 || B.equalsIgnoreCase0(t5, _s3_))
          return C._SingletonCssMediaQueryMergeResult_unrepresentable0;
        if (t8) {
          features = other.features;
          type = theirType;
          modifier = theirModifier;
        } else {
          features = _this.features;
          type = ourType;
          modifier = ourModifier;
        }
      } else if (t8) {
        if (ourType != theirType)
          return C._SingletonCssMediaQueryMergeResult_unrepresentable0;
        fewerFeatures = _this.features;
        fewerFeatures0 = other.features;
        t3 = fewerFeatures.length > fewerFeatures0.length;
        moreFeatures = t3 ? fewerFeatures : fewerFeatures0;
        if (t3)
          fewerFeatures = fewerFeatures0;
        if (!C.JSArray_methods.every$1(fewerFeatures, C.JSArray_methods.get$contains(moreFeatures)))
          return C._SingletonCssMediaQueryMergeResult_unrepresentable0;
        features = moreFeatures;
        type = ourType;
        modifier = ourModifier;
      } else if (t3 || B.equalsIgnoreCase0(t2, _s3_)) {
        type = (t6 || B.equalsIgnoreCase0(t5, _s3_)) && t7 ? _null : theirType;
        t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
        for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)
          t3.push(t6[_i]);
        for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)
          t3.push(t6[_i]);
        features = t3;
        modifier = theirModifier;
      } else {
        if (t6 || B.equalsIgnoreCase0(t5, _s3_)) {
          t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
          for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)
            t3.push(t6[_i]);
          for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)
            t3.push(t6[_i]);
          features = t3;
          modifier = ourModifier;
        } else {
          if (ourType != theirType)
            return C._SingletonCssMediaQueryMergeResult_empty0;
          else {
            modifier = ourModifier == null ? theirModifier : ourModifier;
            t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
            for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)
              t3.push(t6[_i]);
            for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)
              t3.push(t6[_i]);
          }
          features = t3;
        }
        type = ourType;
      }
      t2 = type == ourType ? t2 : t5;
      t1 = modifier == ourModifier ? t1 : t4;
      t3 = P.List_List$unmodifiable(features, type$.legacy_String);
      return new F.MediaQuerySuccessfulMergeResult0(new F.CssMediaQuery0(t1, t2, t3));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof F.CssMediaQuery0 && other.modifier == this.modifier && other.type == this.type && C.C_ListEquality.equals$2(0, other.features, this.features);
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.modifier) ^ J.get$hashCode$(this.type) ^ C.C_ListEquality.hash$1(this.features);
    },
    toString$0: function(_) {
      var t2, _this = this,
        t1 = _this.modifier;
      t1 = t1 != null ? t1 + " " : "";
      t2 = _this.type;
      if (t2 != null) {
        t1 += t2;
        if (_this.features.length !== 0)
          t1 += " and ";
      }
      t1 += C.JSArray_methods.join$1(_this.features, " and ");
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  F._SingletonCssMediaQueryMergeResult0.prototype = {
    toString$0: function(_) {
      return this._media_query1$_name;
    }
  };
  F.MediaQuerySuccessfulMergeResult0.prototype = {};
  F.MediaQueryParser0.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new F.MediaQueryParser_parse_closure0(this));
    },
    _media_query0$_mediaQuery$0: function() {
      var identifier1, identifier2, type, modifier, features, _this = this, _null = null,
        t1 = _this.scanner;
      if (t1.peekChar$0() !== 40) {
        identifier1 = _this.identifier$0();
        _this.whitespace$0();
        if (!_this.lookingAtIdentifier$0())
          return new F.CssMediaQuery0(_null, identifier1, C.List_empty);
        identifier2 = _this.identifier$0();
        _this.whitespace$0();
        if (B.equalsIgnoreCase0(identifier2, "and")) {
          type = identifier1;
          modifier = _null;
        } else {
          if (_this.scanIdentifier$1("and"))
            _this.whitespace$0();
          else
            return new F.CssMediaQuery0(identifier1, identifier2, C.List_empty);
          type = identifier2;
          modifier = identifier1;
        }
      } else {
        type = _null;
        modifier = type;
      }
      features = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      do {
        _this.whitespace$0();
        t1.expectChar$1(40);
        features.push("(" + _this.declarationValue$0() + ")");
        t1.expectChar$1(41);
        _this.whitespace$0();
      } while (_this.scanIdentifier$1("and"));
      if (type == null)
        return new F.CssMediaQuery0(_null, _null, P.List_List$unmodifiable(features, type$.legacy_String));
      else {
        t1 = P.List_List$unmodifiable(features, type$.legacy_String);
        return new F.CssMediaQuery0(modifier, type, t1);
      }
    }
  };
  F.MediaQueryParser_parse_closure0.prototype = {
    call$0: function() {
      var queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery_2),
        t1 = this.$this,
        t2 = t1.scanner;
      do {
        t1.whitespace$0();
        queries.push(t1._media_query0$_mediaQuery$0());
      } while (t2.scanChar$1(44));
      t2.expectDone$0();
      return queries;
    },
    $signature: 100
  };
  G.ModifiableCssMediaRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssMediaRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    copyWithoutChildren$0: function() {
      return G.ModifiableCssMediaRule$0(this.queries, this.span);
    },
    $isCssMediaRule0: 1,
    get$span: function() {
      return this.span;
    }
  };
  G.MediaRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitMediaRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.children;
      return "@media " + this.query.toString$0(0) + " {" + (t1 && C.JSArray_methods).join$1(t1, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  A.MergedExtension0.prototype = {
    unmerge$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$unmerge$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.left;
                $async$goto = t1 instanceof A.MergedExtension0 ? 2 : 4;
                break;
              case 2:
                // then
                $async$goto = 5;
                return P._IterationMarker_yieldStar(t1.unmerge$0());
              case 5:
                // after yield
                // goto join
                $async$goto = 3;
                break;
              case 4:
                // else
                $async$goto = 6;
                return t1;
              case 6:
                // after yield
              case 3:
                // join
                $async$goto = 7;
                return $async$self.right;
              case 7:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.legacy_Extension_2);
    }
  };
  Z.MergedMapView0.prototype = {
    get$keys: function(_) {
      var t1 = this._merged_map_view$_mapsByKey;
      return t1.get$keys(t1);
    },
    get$length: function(_) {
      var t1 = this._merged_map_view$_mapsByKey;
      return t1.get$length(t1);
    },
    get$isEmpty: function(_) {
      var t1 = this._merged_map_view$_mapsByKey;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._merged_map_view$_mapsByKey;
      return t1.get$isNotEmpty(t1);
    },
    MergedMapView$10: function(maps, $K, $V) {
      var t1, t2, t3, _i, map, t4, t5;
      for (t1 = maps.length, t2 = this._merged_map_view$_mapsByKey, t3 = $K._eval$1("@<0>")._bind$1($V)._eval$1("MergedMapView0<1*,2*>*"), _i = 0; _i < maps.length; maps.length === t1 || (0, H.throwConcurrentModificationError)(maps), ++_i) {
        map = maps[_i];
        if (t3._is(map))
          for (t4 = map._merged_map_view$_mapsByKey, t4 = t4.get$values(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
            t5 = t4.get$current(t4);
            B.setAll0(t2, t5.get$keys(t5), t5);
          }
        else
          B.setAll0(t2, map.get$keys(map), map);
      }
    },
    $index: function(_, key) {
      var child = this._merged_map_view$_mapsByKey.$index(0, key);
      return child == null ? null : child.$index(0, key);
    },
    $indexSet: function(_, key, value) {
      var child = this._merged_map_view$_mapsByKey.$index(0, key);
      if (child == null)
        throw H.wrapException(P.UnsupportedError$(string$.New_en));
      child.$indexSet(0, key, value);
    },
    remove$1: function(_, key) {
      throw H.wrapException(P.UnsupportedError$(string$.Entrie));
    },
    containsKey$1: function(key) {
      return this._merged_map_view$_mapsByKey.containsKey$1(key);
    }
  };
  Q.closure223.prototype = {
    call$1: function($arguments) {
      return $._features0.contains$1(0, J.$index$asx($arguments, 0).assertString$1("feature").text) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  Q.closure224.prototype = {
    call$1: function($arguments) {
      return new D.SassString0(J.toString$0$(J.get$first$ax($arguments)), false);
    },
    $signature: 17
  };
  Q.closure225.prototype = {
    call$1: function($arguments) {
      var value = J.$index$asx($arguments, 0);
      if (value instanceof D.SassArgumentList0)
        return new D.SassString0("arglist", false);
      if (value instanceof Z.SassBoolean0)
        return new D.SassString0("bool", false);
      if (value instanceof K.SassColor0)
        return new D.SassString0("color", false);
      if (value instanceof D.SassList0)
        return new D.SassString0("list", false);
      if (value instanceof A.SassMap0)
        return new D.SassString0("map", false);
      if (value instanceof O.SassNull0)
        return new D.SassString0("null", false);
      if (value instanceof T.SassNumber0)
        return new D.SassString0("number", false);
      if (value instanceof F.SassFunction0)
        return new D.SassString0("function", false);
      return new D.SassString0("string", false);
    },
    $signature: 17
  };
  Q.closure226.prototype = {
    call$1: function($arguments) {
      var t1, t2, t3, t4,
        argumentList = J.$index$asx($arguments, 0);
      if (argumentList instanceof D.SassArgumentList0) {
        t1 = type$.legacy_Value_2;
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        for (argumentList._argument_list$_wereKeywordsAccessed = true, t3 = argumentList._argument_list$_keywords, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t4 = t3.get$current(t3);
          t2.$indexSet(0, new D.SassString0(t4.key, false), t4.value);
        }
        return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));
      } else
        throw H.wrapException("$args: " + H.S(argumentList) + " is not an argument list.");
    },
    $signature: 37
  };
  T.MixinRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitMixinRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = "@mixin " + H.S(this.name),
        t2 = this.$arguments;
      if (!(t2.$arguments.length === 0 && t2.restArgument == null))
        t1 += "(" + t2.toString$0(0) + ")";
      t2 = this.children;
      t2 = t1 + (" {" + (t2 && C.JSArray_methods).join$1(t2, " ") + "}");
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    }
  };
  L.ExtendMode0.prototype = {
    toString$0: function(_) {
      return this.name;
    }
  };
  M.SupportsNegation0.prototype = {
    toString$0: function(_) {
      var t1 = this.condition;
      if (t1 instanceof M.SupportsNegation0 || t1 instanceof U.SupportsOperation0)
        return "not (" + t1.toString$0(0) + ")";
      else
        return "not " + t1.toString$0(0);
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  N.NoSourceMapBuffer.prototype = {
    get$length: function(_) {
      return this._no_source_map_buffer$_buffer._contents.length;
    },
    get$sourceFiles: function() {
      return C.Map_empty;
    },
    forSpan$1$2: function(span, callback) {
      return callback.call$0();
    },
    forSpan$2: function(span, callback) {
      return this.forSpan$1$2(span, callback, type$.dynamic);
    },
    write$1: function(_, object) {
      this._no_source_map_buffer$_buffer._contents += H.S(object);
      return null;
    },
    writeCharCode$1: function(charCode) {
      this._no_source_map_buffer$_buffer._contents += H.Primitives_stringFromCharCode(charCode);
      return null;
    },
    toString$0: function(_) {
      var t1 = this._no_source_map_buffer$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    buildSourceMap$1$prefix: function(prefix) {
      return H.throwExpression(P.UnsupportedError$(string$.NoSour));
    },
    $isStringBuffer: 1
  };
  B.AstNode0.prototype = {};
  B._FakeAstNode0.prototype = {
    get$span: function() {
      return this._node3$_callback.call$0();
    },
    $isAstNode0: 1
  };
  B.CssNode0.prototype = {
    toString$0: function(_) {
      return N.serialize0(this, true, null, true, null, false, null, true).css;
    }
  };
  B.CssParentNode0.prototype = {};
  B.FileSystemException0.prototype = {
    toString$0: function(_) {
      var t1 = $.$get$context();
      return H.S(t1.prettyUri$1(t1.toUri$1(this.path))) + ": " + this.message;
    },
    get$message: function(receiver) {
      return this.message;
    },
    get$path: function(receiver) {
      return this.path;
    }
  };
  B.Stderr0.prototype = {
    writeln$1: function(object) {
      J.write$1$x(this._node1$_stderr, (object == null ? "" : object) + "\n");
    },
    writeln$0: function() {
      return this.writeln$1(null);
    }
  };
  B._readFile_closure0.prototype = {
    call$0: function() {
      return J.readFileSync$2$x(D.fs(), this.path, this.encoding);
    },
    $signature: 66
  };
  B.fileExists_closure0.prototype = {
    call$0: function() {
      var error, systemError, exception,
        t1 = this.path;
      if (!J.existsSync$1$x(D.fs(), t1))
        return false;
      try {
        t1 = J.isFile$0$x(J.statSync$1$x(D.fs(), t1));
        return t1;
      } catch (exception) {
        error = H.unwrapException(exception);
        systemError = type$.legacy_JsSystemError._as(error);
        if (J.$eq$(J.get$code$x(systemError), "ENOENT"))
          return false;
        throw exception;
      }
    },
    $signature: 35
  };
  B.dirExists_closure0.prototype = {
    call$0: function() {
      var error, systemError, exception,
        t1 = this.path;
      if (!J.existsSync$1$x(D.fs(), t1))
        return false;
      try {
        t1 = J.isDirectory$0$x(J.statSync$1$x(D.fs(), t1));
        return t1;
      } catch (exception) {
        error = H.unwrapException(exception);
        systemError = type$.legacy_JsSystemError._as(error);
        if (J.$eq$(J.get$code$x(systemError), "ENOENT"))
          return false;
        throw exception;
      }
    },
    $signature: 35
  };
  B.listDir_closure0.prototype = {
    call$0: function() {
      var t1 = this.path;
      if (!this.recursive)
        return J.map$1$1$ax(J.readdirSync$1$x(D.fs(), t1), new B.listDir__closure1(t1), type$.legacy_String).where$1(0, new B.listDir__closure2());
      else
        return new B.listDir_closure_list0().call$1(t1);
    },
    $signature: 169
  };
  B.listDir__closure1.prototype = {
    call$1: function(child) {
      return D.join(this.path, H._asStringS(child), null);
    },
    $signature: 107
  };
  B.listDir__closure2.prototype = {
    call$1: function(child) {
      return !B.dirExists0(child);
    },
    $signature: 6
  };
  B.listDir_closure_list0.prototype = {
    call$1: function($parent) {
      return J.expand$1$1$ax(J.readdirSync$1$x(D.fs(), $parent), new B.listDir__list_closure0($parent, this), type$.legacy_String);
    },
    $signature: 170
  };
  B.listDir__list_closure0.prototype = {
    call$1: function(child) {
      var path = D.join(this.parent, H._asStringS(child), null);
      return B.dirExists0(path) ? this.list.call$1(path) : H.setRuntimeTypeInfo([path], type$.JSArray_legacy_String);
    },
    $signature: 171
  };
  B.ModifiableCssNode0.prototype = {
    get$hasFollowingSibling: function() {
      var siblings, i, t2,
        t1 = this._node2$_parent;
      if (t1 == null)
        return false;
      siblings = t1.children;
      for (i = this._node2$_indexInParent + 1, t1 = siblings._collection$_source, t2 = J.getInterceptor$asx(t1); i < t2.get$length(t1); ++i)
        if (!this._node2$_isInvisible$1(t2.elementAt$1(t1, i)))
          return true;
      return false;
    },
    _node2$_isInvisible$1: function(node) {
      if (type$.legacy_CssParentNode_2._is(node)) {
        if (type$.legacy_CssAtRule_2._is(node))
          return false;
        if (type$.legacy_CssStyleRule_2._is(node) && node.selector.value.get$isInvisible())
          return true;
        return J.every$1$ax(node.get$children(node), this.get$_node2$_isInvisible());
      } else
        return false;
    },
    get$isGroupEnd: function() {
      return this.isGroupEnd;
    }
  };
  B.ModifiableCssParentNode0.prototype = {
    get$isChildless: function() {
      return false;
    },
    addChild$1: function(child) {
      var t1;
      child._node2$_parent = this;
      t1 = this._node2$_children;
      child._node2$_indexInParent = t1.length;
      t1.push(child);
    },
    $isCssParentNode0: 1,
    get$children: function(receiver) {
      return this.children;
    }
  };
  B._render_closure.prototype = {
    call$0: function() {
      var error, exception;
      try {
        this.callback.call$2(null, B._renderSync(this.options));
      } catch (exception) {
        error = H.unwrapException(exception);
        this.callback.call$2(error, null);
      }
      return null;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  B._render_closure0.prototype = {
    call$1: function(result) {
      this.callback.call$2(null, result);
    },
    $signature: 407
  };
  B._render_closure1.prototype = {
    call$2: function(error, stackTrace) {
      var _null = null,
        t1 = this.callback;
      if (error instanceof E.SassException0)
        t1.call$2(B._wrapException(error), _null);
      else
        t1.call$2(B._newRenderError(J.toString$0$(error), _null, _null, _null, 3), _null);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 408
  };
  B._parseFunctions_closure.prototype = {
    call$2: function(signature, callback) {
      var error, exception, t1, context, _this = this, tuple = null;
      try {
        tuple = L.ScssParser$0(signature, null, null).parseSignature$0();
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException0) {
          error = t1;
          throw H.wrapException(E.SassFormatException$0('Invalid signature "' + H.S(signature) + '": ' + H.S(error._span_exception$_message), error.get$span()));
        } else
          throw exception;
      }
      t1 = _this.options;
      context = B._contextWithOptions(t1, _this.start);
      if (J.get$fiber$x(t1) != null)
        _this.result.push(Q.BuiltInCallable$parsed(tuple.item1, tuple.item2, new B._parseFunctions__closure(t1, callback, context)));
      else {
        t1 = _this.result;
        if (!_this.asynch)
          t1.push(Q.BuiltInCallable$parsed(tuple.item1, tuple.item2, new B._parseFunctions__closure0(callback, context)));
        else
          t1.push(new S.AsyncBuiltInCallable0(tuple.item1, tuple.item2, new B._parseFunctions__closure1(callback, context)));
      }
    },
    $signature: 409
  };
  B._parseFunctions__closure.prototype = {
    call$1: function($arguments) {
      var t3, t4, result,
        t1 = this.options,
        fiber = J.get$current$x(J.get$fiber$x(t1)),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);
      for (t3 = type$.legacy_Object, t4 = J.map$1$1$ax($arguments, F.value1__wrapValue$closure(), t3), t4 = t4.get$iterator(t4); t4.moveNext$0();)
        t2.push(t4.get$current(t4));
      t2.push(P.allowInterop(new B._parseFunctions___closure0(fiber)));
      result = J.apply$2$x(type$.legacy_JSFunction._as(this.callback), this.context, t2);
      return F.unwrapValue(H._asBoolS($.$get$_isUndefined().call$1(result)) ? P.runZoned(new B._parseFunctions___closure1(t1), null, t3) : result);
    },
    $signature: 3
  };
  B._parseFunctions___closure0.prototype = {
    call$1: function(result) {
      P.scheduleMicrotask(new B._parseFunctions____closure(this.fiber, result));
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 65
  };
  B._parseFunctions____closure.prototype = {
    call$0: function() {
      return J.run$1$x(this.fiber, this.result);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 70
  };
  B._parseFunctions___closure1.prototype = {
    call$0: function() {
      return J.yield$0$x(J.get$fiber$x(this.options));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 70
  };
  B._parseFunctions__closure0.prototype = {
    call$1: function($arguments) {
      return F.unwrapValue(J.apply$2$x(type$.legacy_JSFunction._as(this.callback), this.context, J.map$1$1$ax($arguments, F.value1__wrapValue$closure(), type$.legacy_Object).toList$0(0)));
    },
    $signature: 3
  };
  B._parseFunctions__closure1.prototype = {
    call$1: function($arguments) {
      return this.$call$body$_parseFunctions__closure($arguments);
    },
    $call$body$_parseFunctions__closure: function($arguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),
        $async$returnValue, $async$self = this, t2, result, completer, t1, $async$temp1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              completer = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_legacy_Object), type$._AsyncCompleter_legacy_Object);
              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);
              for (t2 = J.map$1$1$ax($arguments, F.value1__wrapValue$closure(), type$.legacy_Object), t2 = t2.get$iterator(t2); t2.moveNext$0();)
                t1.push(t2.get$current(t2));
              t1.push(P.allowInterop(new B._parseFunctions___closure(completer)));
              result = J.apply$2$x(type$.legacy_JSFunction._as($async$self.callback), $async$self.context, t1);
              $async$temp1 = F;
              $async$goto = H._asBoolS($.$get$_isUndefined().call$1(result)) ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return P._asyncAwait(completer.future, $async$call$1);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$result = result;
            case 4:
              // join
              $async$returnValue = $async$temp1.unwrapValue($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 156
  };
  B._parseFunctions___closure.prototype = {
    call$1: function(result) {
      return this.completer.complete$1(result);
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 411
  };
  B._parseImporter_closure.prototype = {
    call$1: function(importer) {
      return type$.legacy_JSFunction._as(P.allowInteropCaptureThis(new B._parseImporter__closure(this.options, importer)));
    },
    $signature: 412
  };
  B._parseImporter__closure.prototype = {
    call$4: function(thisArg, url, previous, _) {
      var t1 = this.options,
        result = J.apply$2$x(this.importer, thisArg, H.setRuntimeTypeInfo([url, previous, P.allowInterop(new B._parseImporter___closure(J.get$current$x(J.get$fiber$x(t1))))], type$.JSArray_legacy_Object));
      if (H._asBoolS($.$get$_isUndefined().call$1(result)))
        return P.runZoned(new B._parseImporter___closure0(t1), null, type$.legacy_Object);
      return result;
    },
    call$3: function(thisArg, url, previous) {
      return this.call$4(thisArg, url, previous, null);
    },
    "call*": "call$4",
    $requiredArgCount: 3,
    $defaultValues: function() {
      return [null];
    },
    $signature: 413
  };
  B._parseImporter___closure.prototype = {
    call$1: function(result) {
      P.scheduleMicrotask(new B._parseImporter____closure(this.fiber, result));
    },
    $signature: 414
  };
  B._parseImporter____closure.prototype = {
    call$0: function() {
      return J.run$1$x(this.fiber, this.result);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 70
  };
  B._parseImporter___closure0.prototype = {
    call$0: function() {
      return J.yield$0$x(J.get$fiber$x(this.options));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 70
  };
  O.NullExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitNullExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "null";
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  O.closure238.prototype = {
    call$0: function() {
      var $constructor = P.allowInterop(new O._closure29());
      B.injectSuperclass(C.C_SassNull, $constructor);
      self.Object.defineProperty(C.C_SassNull.constructor, "name", {value: "SassNull"});
      B.forwardToString($constructor);
      $constructor.NULL = C.C_SassNull;
      C.C_SassNull.toString = P.allowInterop(new O._closure30());
      return $constructor;
    },
    $signature: 129
  };
  O._closure29.prototype = {
    call$1: function(_) {
      throw H.wrapException("new sass.types.Null() isn't allowed. Use sass.types.Null.NULL instead.");
    },
    call$0: function() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues: function() {
      return [null];
    },
    $signature: 96
  };
  O._closure30.prototype = {
    call$0: function() {
      return "null";
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 12
  };
  O.SassNull0.prototype = {
    get$isTruthy: function() {
      return false;
    },
    get$isBlank: function() {
      return true;
    },
    get$realNull: function() {
      return null;
    },
    accept$1$1: function(visitor) {
      if (visitor._inspect)
        visitor._buffer.write$1(0, "null");
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unaryNot$0: function() {
      return C.SassBoolean_true;
    }
  };
  T.NumberExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitNumberExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = H.S(this.value),
        t2 = this.unit;
      return t1 + (t2 == null ? "" : t2);
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  T._NodeSassNumber.prototype = {};
  T.closure232.prototype = {
    call$4: function(thisArg, value, unit, dartValue) {
      J.set$dartValue$x(thisArg, dartValue == null ? T._parseNumber(value, unit) : dartValue);
    },
    call$2: function(thisArg, value) {
      return this.call$4(thisArg, value, null, null);
    },
    call$3: function(thisArg, value, unit) {
      return this.call$4(thisArg, value, unit, null);
    },
    "call*": "call$4",
    $requiredArgCount: 2,
    $defaultValues: function() {
      return [null, null];
    },
    $signature: 415
  };
  T.closure233.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg).value;
    },
    $signature: 416
  };
  T.closure234.prototype = {
    call$2: function(thisArg, value) {
      var t1 = J.getInterceptor$x(thisArg),
        t2 = t1.get$dartValue(thisArg).get$numeratorUnits();
      t1.set$dartValue(thisArg, T.SassNumber_SassNumber$withUnits0(value, t1.get$dartValue(thisArg).get$denominatorUnits(), t2));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 417
  };
  T.closure235.prototype = {
    call$1: function(thisArg) {
      var t1 = J.getInterceptor$x(thisArg),
        t2 = J.join$1$ax(t1.get$dartValue(thisArg).get$numeratorUnits(), "*");
      return t2 + (t1.get$dartValue(thisArg).get$denominatorUnits().length === 0 ? "" : "/") + C.JSArray_methods.join$1(t1.get$dartValue(thisArg).get$denominatorUnits(), "*");
    },
    $signature: 147
  };
  T.closure236.prototype = {
    call$2: function(thisArg, unit) {
      var t1 = J.getInterceptor$x(thisArg);
      t1.set$dartValue(thisArg, T._parseNumber(t1.get$dartValue(thisArg).value, unit));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 419
  };
  T.closure237.prototype = {
    call$1: function(thisArg) {
      return J.toString$0$(J.get$dartValue$x(thisArg));
    },
    $signature: 147
  };
  T._parseNumber_closure.prototype = {
    call$1: function(unit) {
      return unit.length === 0;
    },
    $signature: 6
  };
  T._parseNumber_closure0.prototype = {
    call$1: function(unit) {
      return unit.length === 0;
    },
    $signature: 6
  };
  T.SassNumber0.prototype = {
    get$unitString: function() {
      var _this = this;
      return _this.get$hasUnits() ? _this._number1$_unitString$2(_this.get$numeratorUnits(), _this.get$denominatorUnits()) : "";
    },
    accept$1$1: function(visitor) {
      return visitor.visitNumber$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    withoutSlash$0: function() {
      var _this = this;
      return _this.asSlash == null ? _this : _this.withValue$1(_this.value);
    },
    assertNumber$1: function($name) {
      return this;
    },
    assertNumber$0: function() {
      return this.assertNumber$1(null);
    },
    assertInt$1: function($name) {
      var t1 = this.value,
        integer = T.fuzzyIsInt0(t1) ? J.round$0$n(t1) : null;
      if (integer != null)
        return integer;
      throw H.wrapException(this._number1$_exception$2(this.toString$0(0) + " is not an int.", $name));
    },
    assertInt$0: function() {
      return this.assertInt$1(null);
    },
    valueInRange$3: function(min, max, $name) {
      var _this = this,
        result = T.fuzzyCheckRange0(_this.value, min, max);
      if (result != null)
        return result;
      throw H.wrapException(_this._number1$_exception$2("Expected " + _this.toString$0(0) + " to be within " + min + _this.get$unitString() + " and " + max + _this.get$unitString() + ".", $name));
    },
    assertUnit$2: function(unit, $name) {
      if (this.hasUnit$1(unit))
        return;
      throw H.wrapException(this._number1$_exception$2("Expected " + this.toString$0(0) + ' to have unit "' + unit + '".', $name));
    },
    assertNoUnits$1: function($name) {
      if (!this.get$hasUnits())
        return;
      throw H.wrapException(this._number1$_exception$2("Expected " + this.toString$0(0) + " to have no units.", $name));
    },
    coerceValueToMatch$1: function(other) {
      return this._number1$_coerceOrConvertValue$6$coerceUnitless$name$other$otherName(other.get$numeratorUnits(), other.get$denominatorUnits(), true, null, other, null);
    },
    convertValueToMatch$3: function(other, $name, otherName) {
      return this._number1$_coerceOrConvertValue$6$coerceUnitless$name$other$otherName(other.get$numeratorUnits(), other.get$denominatorUnits(), false, $name, other, otherName);
    },
    coerce$3: function(newNumerators, newDenominators, $name) {
      return T.SassNumber_SassNumber$withUnits0(this.coerceValue$3(newNumerators, newDenominators, $name), newDenominators, newNumerators);
    },
    coerce$2: function(newNumerators, newDenominators) {
      return this.coerce$3(newNumerators, newDenominators, null);
    },
    coerceValue$3: function(newNumerators, newDenominators, $name) {
      return this._number1$_coerceOrConvertValue$4$coerceUnitless$name(newNumerators, newDenominators, true, $name);
    },
    coerceValueToUnit$2: function(unit, $name) {
      var t1 = type$.JSArray_legacy_String;
      return this.coerceValue$3(H.setRuntimeTypeInfo([unit], t1), H.setRuntimeTypeInfo([], t1), $name);
    },
    _number1$_coerceOrConvertValue$6$coerceUnitless$name$other$otherName: function(newNumerators, newDenominators, coerceUnitless, $name, other, otherName) {
      var t1, otherHasUnits, t2, _compatibilityException, oldNumerators, oldDenominators, _i, _this = this, _box_0 = {};
      if (C.C_ListEquality.equals$2(0, _this.get$numeratorUnits(), newNumerators) && C.C_ListEquality.equals$2(0, _this.get$denominatorUnits(), newDenominators))
        return _this.value;
      t1 = J.getInterceptor$asx(newNumerators);
      otherHasUnits = t1.get$isNotEmpty(newNumerators) || newDenominators.length !== 0;
      if (coerceUnitless)
        t2 = !_this.get$hasUnits() || !otherHasUnits;
      else
        t2 = false;
      if (t2)
        return _this.value;
      _compatibilityException = new T.SassNumber__coerceOrConvertValue__compatibilityException0(_this, other, otherName, otherHasUnits, $name, newNumerators, newDenominators);
      _box_0.value = _this.value;
      oldNumerators = J.toList$0$ax(_this.get$numeratorUnits());
      for (t1 = t1.get$iterator(newNumerators); t1.moveNext$0();)
        B.removeFirstWhere0(oldNumerators, new T.SassNumber__coerceOrConvertValue_closure3(_box_0, _this, t1.get$current(t1)), new T.SassNumber__coerceOrConvertValue_closure4(_compatibilityException));
      t1 = _this.get$denominatorUnits();
      oldDenominators = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      for (t1 = newDenominators.length, _i = 0; _i < newDenominators.length; newDenominators.length === t1 || (0, H.throwConcurrentModificationError)(newDenominators), ++_i)
        B.removeFirstWhere0(oldDenominators, new T.SassNumber__coerceOrConvertValue_closure5(_box_0, _this, newDenominators[_i]), new T.SassNumber__coerceOrConvertValue_closure6(_compatibilityException));
      if (oldNumerators.length !== 0 || oldDenominators.length !== 0)
        throw H.wrapException(_compatibilityException.call$0());
      return _box_0.value;
    },
    _number1$_coerceOrConvertValue$4$coerceUnitless$name: function(newNumerators, newDenominators, coerceUnitless, $name) {
      return this._number1$_coerceOrConvertValue$6$coerceUnitless$name$other$otherName(newNumerators, newDenominators, coerceUnitless, $name, null, null);
    },
    isComparableTo$1: function(other) {
      var exception;
      if (!this.get$hasUnits() || !other.get$hasUnits())
        return true;
      try {
        this.greaterThan$1(other);
        return true;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof E.SassScriptException0)
          return false;
        else
          throw exception;
      }
    },
    greaterThan$1: function(other) {
      if (other instanceof T.SassNumber0)
        return this._number1$_coerceUnits$2(other, T.number2__fuzzyGreaterThan$closure()) ? C.SassBoolean_true : C.SassBoolean_false;
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " > " + H.S(other) + '".'));
    },
    greaterThanOrEquals$1: function(other) {
      if (other instanceof T.SassNumber0)
        return this._number1$_coerceUnits$2(other, T.number2__fuzzyGreaterThanOrEquals$closure()) ? C.SassBoolean_true : C.SassBoolean_false;
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " >= " + H.S(other) + '".'));
    },
    lessThan$1: function(other) {
      if (other instanceof T.SassNumber0)
        return this._number1$_coerceUnits$2(other, T.number2__fuzzyLessThan$closure()) ? C.SassBoolean_true : C.SassBoolean_false;
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " < " + H.S(other) + '".'));
    },
    lessThanOrEquals$1: function(other) {
      if (other instanceof T.SassNumber0)
        return this._number1$_coerceUnits$2(other, T.number2__fuzzyLessThanOrEquals$closure()) ? C.SassBoolean_true : C.SassBoolean_false;
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " <= " + H.S(other) + '".'));
    },
    modulo$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber0)
        return _this.withValue$1(_this._number1$_coerceUnits$2(other, _this.get$moduloLikeSass()));
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + _this.toString$0(0) + " % " + H.S(other) + '".'));
    },
    moduloLikeSass$2: function(num1, num2) {
      var t1;
      if (num2 > 0)
        return C.JSNumber_methods.$mod(num1, num2);
      if (num2 === 0)
        return 0 / 0;
      t1 = C.JSNumber_methods.$mod(num1, num2);
      return t1 === 0 ? 0 : t1 + num2;
    },
    plus$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber0)
        return _this.withValue$1(_this._number1$_coerceUnits$2(other, new T.SassNumber_plus_closure0()));
      if (!(other instanceof K.SassColor0))
        return _this.super$Value$plus0(other);
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + _this.toString$0(0) + " + " + other.toString$0(0) + '".'));
    },
    minus$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber0)
        return _this.withValue$1(_this._number1$_coerceUnits$2(other, new T.SassNumber_minus_closure0()));
      if (!(other instanceof K.SassColor0))
        return _this.super$Value$minus0(other);
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + _this.toString$0(0) + " - " + other.toString$0(0) + '".'));
    },
    times$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber0) {
        if (!other.get$hasUnits())
          return _this.withValue$1(_this.value * other.value);
        return _this.multiplyUnits$3(_this.value * other.value, other.get$numeratorUnits(), other.get$denominatorUnits());
      }
      throw H.wrapException(E.SassScriptException$0('Undefined operation "' + _this.toString$0(0) + " * " + H.S(other) + '".'));
    },
    dividedBy$1: function(other) {
      var _this = this;
      if (other instanceof T.SassNumber0) {
        if (!other.get$hasUnits())
          return _this.withValue$1(_this.value / other.value);
        return _this.multiplyUnits$3(_this.value / other.value, other.get$denominatorUnits(), other.get$numeratorUnits());
      }
      return _this.super$Value$dividedBy0(other);
    },
    unaryPlus$0: function() {
      return this;
    },
    _number1$_coerceUnits$1$2: function(other, operation) {
      var t1, exception;
      try {
        t1 = operation.call$2(this.value, other.coerceValueToMatch$1(this));
        return t1;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof E.SassScriptException0) {
          this.coerceValueToMatch$1(other);
          throw exception;
        } else
          throw exception;
      }
    },
    _number1$_coerceUnits$2: function(other, operation) {
      return this._number1$_coerceUnits$1$2(other, operation, type$.dynamic);
    },
    multiplyUnits$3: function(value, otherNumerators, otherDenominators) {
      var newNumerators, mutableOtherDenominators, t1, t2, mutableDenominatorUnits, _this = this, _box_0 = {};
      _box_0.value = value;
      if (J.get$isEmpty$asx(_this.get$numeratorUnits())) {
        if (J.get$isEmpty$asx(otherDenominators) && !_this._number1$_areAnyConvertible$2(_this.get$denominatorUnits(), otherNumerators))
          return T.SassNumber_SassNumber$withUnits0(value, _this.get$denominatorUnits(), otherNumerators);
        else if (_this.get$denominatorUnits().length === 0)
          return T.SassNumber_SassNumber$withUnits0(value, otherDenominators, otherNumerators);
      } else if (J.get$isEmpty$asx(otherNumerators))
        if (J.get$isEmpty$asx(otherDenominators))
          return T.SassNumber_SassNumber$withUnits0(value, otherDenominators, _this.get$numeratorUnits());
        else if (_this.get$denominatorUnits().length === 0 && !_this._number1$_areAnyConvertible$2(_this.get$numeratorUnits(), otherDenominators))
          return T.SassNumber_SassNumber$withUnits0(value, otherDenominators, _this.get$numeratorUnits());
      newNumerators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      mutableOtherDenominators = J.toList$0$ax(otherDenominators);
      for (t1 = J.get$iterator$ax(_this.get$numeratorUnits()); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        B.removeFirstWhere0(mutableOtherDenominators, new T.SassNumber_multiplyUnits_closure3(_box_0, _this, t2), new T.SassNumber_multiplyUnits_closure4(newNumerators, t2));
      }
      t1 = _this.get$denominatorUnits();
      mutableDenominatorUnits = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      for (t1 = J.get$iterator$ax(otherNumerators); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        B.removeFirstWhere0(mutableDenominatorUnits, new T.SassNumber_multiplyUnits_closure5(_box_0, _this, t2), new T.SassNumber_multiplyUnits_closure6(newNumerators, t2));
      }
      t1 = _box_0.value;
      C.JSArray_methods.addAll$1(mutableDenominatorUnits, mutableOtherDenominators);
      return T.SassNumber_SassNumber$withUnits0(t1, mutableDenominatorUnits, newNumerators);
    },
    _number1$_areAnyConvertible$2: function(units1, units2) {
      return J.any$1$ax(units1, new T.SassNumber__areAnyConvertible_closure0(this, units2));
    },
    conversionFactor$2: function(unit1, unit2) {
      var innerMap;
      if (unit1 == unit2)
        return 1;
      innerMap = C.Map_K2BWj.$index(0, unit1);
      if (innerMap == null)
        return null;
      return innerMap.$index(0, unit2);
    },
    _number1$_unitString$2: function(numerators, denominators) {
      var t1 = J.getInterceptor$asx(numerators);
      if (t1.get$isEmpty(numerators)) {
        t1 = denominators.length;
        if (t1 === 0)
          return "no units";
        if (t1 === 1)
          return J.$add$ansx(C.JSArray_methods.get$single(denominators), "^-1");
        return "(" + C.JSArray_methods.join$1(denominators, "*") + ")^-1";
      }
      if (denominators.length === 0)
        return t1.join$1(numerators, "*");
      return t1.join$1(numerators, "*") + "/" + C.JSArray_methods.join$1(denominators, "*");
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (other instanceof T.SassNumber0) {
        if (J.get$length$asx(_this.get$numeratorUnits()) !== J.get$length$asx(other.get$numeratorUnits()) || _this.get$denominatorUnits().length !== other.get$denominatorUnits().length)
          return false;
        if (!_this.get$hasUnits())
          return Math.abs(_this.value - other.value) < $.$get$epsilon0();
        if (!C.C_ListEquality.equals$2(0, _this._number1$_canonicalizeUnitList$1(_this.get$numeratorUnits()), _this._number1$_canonicalizeUnitList$1(other.get$numeratorUnits())) || !C.C_ListEquality.equals$2(0, _this._number1$_canonicalizeUnitList$1(_this.get$denominatorUnits()), _this._number1$_canonicalizeUnitList$1(other.get$denominatorUnits())))
          return false;
        return Math.abs(_this.value * _this._number1$_canonicalMultiplier$1(_this.get$numeratorUnits()) / _this._number1$_canonicalMultiplier$1(_this.get$denominatorUnits()) - other.value * _this._number1$_canonicalMultiplier$1(other.get$numeratorUnits()) / _this._number1$_canonicalMultiplier$1(other.get$denominatorUnits())) < $.$get$epsilon0();
      } else
        return false;
    },
    get$hashCode: function(_) {
      var _this = this;
      return T.fuzzyHashCode0(_this.value * _this._number1$_canonicalMultiplier$1(_this.get$numeratorUnits()) / _this._number1$_canonicalMultiplier$1(_this.get$denominatorUnits()));
    },
    _number1$_canonicalizeUnitList$1: function(units) {
      var type,
        t1 = J.getInterceptor$asx(units);
      if (t1.get$isEmpty(units))
        return units;
      if (t1.get$length(units) === 1) {
        type = $.$get$_typesByUnit0().$index(0, t1.get$first(units));
        if (type == null)
          t1 = units;
        else {
          t1 = C.Map_U8AHF.$index(0, type);
          t1 = H.setRuntimeTypeInfo([(t1 && C.JSArray_methods).get$first(t1)], type$.JSArray_legacy_String);
        }
        return t1;
      }
      t1 = t1.map$1$1(units, new T.SassNumber__canonicalizeUnitList_closure0(), type$.legacy_String);
      t1 = P.List_List$from(t1, true, t1.$ti._eval$1("ListIterable.E"));
      C.JSArray_methods.sort$0(t1);
      return t1;
    },
    _number1$_canonicalMultiplier$1: function(units) {
      return J.fold$2$ax(units, 1, new T.SassNumber__canonicalMultiplier_closure0(this));
    },
    canonicalMultiplierForUnit$1: function(unit) {
      var t1,
        innerMap = C.Map_K2BWj.$index(0, unit);
      if (innerMap == null)
        t1 = 1;
      else {
        t1 = innerMap.get$values(innerMap);
        t1 = 1 / t1.get$first(t1);
      }
      return t1;
    },
    _number1$_exception$2: function(message, $name) {
      return new E.SassScriptException0($name == null ? message : "$" + $name + ": " + message);
    }
  };
  T.SassNumber__coerceOrConvertValue__compatibilityException0.prototype = {
    call$0: function() {
      var t2, t3, message, t4, type, unit, _this = this,
        t1 = _this.other;
      if (t1 != null) {
        t2 = _this.$this;
        t3 = t2.toString$0(0) + " and";
        message = new P.StringBuffer(t3);
        t4 = _this.otherName;
        if (t4 != null)
          t3 = message._contents = t3 + (" $" + t4 + ":");
        t1 = t3 + (" " + t1.toString$0(0) + " have incompatible units");
        message._contents = t1;
        if (!t2.get$hasUnits() || !_this.otherHasUnits)
          message._contents = t1 + " (one has units and the other doesn't)";
        t1 = message.toString$0(0) + ".";
        t2 = _this.name;
        return new E.SassScriptException0(t2 == null ? t1 : "$" + t2 + ": " + t1);
      } else if (!_this.otherHasUnits) {
        t1 = "Expected " + _this.$this.toString$0(0) + " to have no units.";
        t2 = _this.name;
        return new E.SassScriptException0(t2 == null ? t1 : "$" + t2 + ": " + t1);
      } else {
        t1 = _this.newNumerators;
        t2 = J.getInterceptor$asx(t1);
        if (t2.get$length(t1) === 1 && _this.newDenominators.length === 0) {
          type = $.$get$_typesByUnit0().$index(0, t2.get$first(t1));
          if (type != null) {
            t1 = "Expected " + _this.$this.toString$0(0) + " to have ";
            t1 = t1 + (C.JSArray_methods.contains$1(H.setRuntimeTypeInfo([97, 101, 105, 111, 117], type$.JSArray_legacy_int), C.JSString_methods._codeUnitAt$1(type, 0)) ? "an " + type : "a " + type) + " unit (";
            t2 = C.Map_U8AHF.$index(0, type);
            t2 = t1 + (t2 && C.JSArray_methods).join$1(t2, ", ") + ").";
            t1 = _this.name;
            return new E.SassScriptException0(t1 == null ? t2 : "$" + t1 + ": " + t2);
          }
        }
        t3 = _this.newDenominators;
        unit = B.pluralize0("unit", t2.get$length(t1) + t3.length, null);
        t2 = _this.$this;
        t3 = "Expected " + t2.toString$0(0) + " to have " + unit + " " + t2._number1$_unitString$2(t1, t3) + ".";
        t1 = _this.name;
        return new E.SassScriptException0(t1 == null ? t3 : "$" + t1 + ": " + t3);
      }
    },
    $signature: 420
  };
  T.SassNumber__coerceOrConvertValue_closure3.prototype = {
    call$1: function(oldNumerator) {
      var t1,
        factor = this.$this.conversionFactor$2(this.newNumerator, oldNumerator);
      if (factor == null)
        return false;
      t1 = this._box_0;
      t1.value = t1.value * factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber__coerceOrConvertValue_closure4.prototype = {
    call$0: function() {
      return H.throwExpression(this._compatibilityException.call$0());
    },
    $signature: 0
  };
  T.SassNumber__coerceOrConvertValue_closure5.prototype = {
    call$1: function(oldDenominator) {
      var t1,
        factor = this.$this.conversionFactor$2(this.newDenominator, oldDenominator);
      if (factor == null)
        return false;
      t1 = this._box_0;
      t1.value = t1.value / factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber__coerceOrConvertValue_closure6.prototype = {
    call$0: function() {
      return H.throwExpression(this._compatibilityException.call$0());
    },
    $signature: 0
  };
  T.SassNumber_plus_closure0.prototype = {
    call$2: function(num1, num2) {
      return num1 + num2;
    },
    $signature: 50
  };
  T.SassNumber_minus_closure0.prototype = {
    call$2: function(num1, num2) {
      return num1 - num2;
    },
    $signature: 50
  };
  T.SassNumber_multiplyUnits_closure3.prototype = {
    call$1: function(denominator) {
      var factor = this.$this.conversionFactor$2(this.numerator, denominator);
      if (factor == null)
        return false;
      this._box_0.value /= factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber_multiplyUnits_closure4.prototype = {
    call$0: function() {
      this.newNumerators.push(this.numerator);
      return null;
    },
    $signature: 0
  };
  T.SassNumber_multiplyUnits_closure5.prototype = {
    call$1: function(denominator) {
      var factor = this.$this.conversionFactor$2(this.numerator, denominator);
      if (factor == null)
        return false;
      this._box_0.value /= factor;
      return true;
    },
    $signature: 6
  };
  T.SassNumber_multiplyUnits_closure6.prototype = {
    call$0: function() {
      this.newNumerators.push(this.numerator);
      return null;
    },
    $signature: 0
  };
  T.SassNumber__areAnyConvertible_closure0.prototype = {
    call$1: function(unit1) {
      if (!C.Map_K2BWj.containsKey$1(unit1))
        return J.contains$1$asx(this.units2, unit1);
      return J.any$1$ax(this.units2, C.Map_K2BWj.$index(0, unit1).get$containsKey());
    },
    $signature: 6
  };
  T.SassNumber__canonicalizeUnitList_closure0.prototype = {
    call$1: function(unit) {
      var t1,
        type = $.$get$_typesByUnit0().$index(0, unit);
      if (type == null)
        t1 = unit;
      else {
        t1 = C.Map_U8AHF.$index(0, type);
        t1 = (t1 && C.JSArray_methods).get$first(t1);
      }
      return t1;
    },
    $signature: 4
  };
  T.SassNumber__canonicalMultiplier_closure0.prototype = {
    call$2: function(multiplier, unit) {
      return multiplier * this.$this.canonicalMultiplierForUnit$1(unit);
    },
    $signature: 211
  };
  U.SupportsOperation0.prototype = {
    toString$0: function(_) {
      var _this = this;
      return _this._operation0$_parenthesize$1(_this.left) + " " + _this.operator + " " + _this._operation0$_parenthesize$1(_this.right);
    },
    _operation0$_parenthesize$1: function(condition) {
      var t1;
      if (!(condition instanceof M.SupportsNegation0))
        t1 = condition instanceof U.SupportsOperation0 && condition.operator === this.operator;
      else
        t1 = true;
      return t1 ? "(" + condition.toString$0(0) + ")" : condition.toString$0(0);
    },
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  M.ParentSelector0.prototype = {
    accept$1$1: function(visitor) {
      var t2,
        t1 = visitor._buffer;
      t1.writeCharCode$1(38);
      t2 = this.suffix;
      if (t2 != null)
        t1.write$1(0, t2);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unify$1: function(compound) {
      return H.throwExpression(P.UnsupportedError$("& doesn't support unification."));
    }
  };
  M.ParentStatement0.prototype = {$isAstNode0: 1, $isStatement0: 1};
  M.ParentStatement_closure0.prototype = {
    call$1: function(child) {
      var t1;
      if (!(child instanceof Z.VariableDeclaration0))
        if (!(child instanceof M.FunctionRule0))
          if (!(child instanceof T.MixinRule0))
            t1 = child instanceof B.ImportRule0 && C.JSArray_methods.any$1(child.imports, new M.ParentStatement__closure0());
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    $signature: 135
  };
  M.ParentStatement__closure0.prototype = {
    call$1: function($import) {
      return $import instanceof B.DynamicImport0;
    },
    $signature: 134
  };
  T.ParenthesizedExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitParenthesizedExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return J.toString$0$(this.expression);
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  G.Parser1.prototype = {
    _parser$_parseIdentifier$0: function() {
      return this.wrapSpanFormatException$1(new G.Parser__parseIdentifier_closure0(this));
    },
    whitespace$0: function() {
      do
        this.whitespaceWithoutComments$0();
      while (this.scanComment$0());
    },
    whitespaceWithoutComments$0: function() {
      var t3,
        t1 = this.scanner,
        t2 = t1.string.length;
      while (true) {
        if (t1._string_scanner$_position !== t2) {
          t3 = t1.peekChar$0();
          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;
        } else
          t3 = false;
        if (!t3)
          break;
        t1.readChar$0();
      }
    },
    spaces$0: function() {
      var t3,
        t1 = this.scanner,
        t2 = t1.string.length;
      while (true) {
        if (t1._string_scanner$_position !== t2) {
          t3 = t1.peekChar$0();
          t3 = t3 === 32 || t3 === 9;
        } else
          t3 = false;
        if (!t3)
          break;
        t1.readChar$0();
      }
    },
    scanComment$0: function() {
      var next,
        t1 = this.scanner;
      if (t1.peekChar$0() !== 47)
        return false;
      next = t1.peekChar$1(1);
      if (next === 47) {
        this.silentComment$0();
        return true;
      } else if (next === 42) {
        this.loudComment$0();
        return true;
      } else
        return false;
    },
    silentComment$0: function() {
      var t2, t3,
        t1 = this.scanner;
      t1.expect$1("//");
      t2 = t1.string.length;
      while (true) {
        if (t1._string_scanner$_position !== t2) {
          t3 = t1.peekChar$0();
          t3 = !(t3 === 10 || t3 === 13 || t3 === 12);
        } else
          t3 = false;
        if (!t3)
          break;
        t1.readChar$0();
      }
    },
    loudComment$0: function() {
      var next,
        t1 = this.scanner;
      t1.expect$1("/*");
      for (; true;) {
        if (t1.readChar$0() !== 42)
          continue;
        do
          next = t1.readChar$0();
        while (next === 42);
        if (next === 47)
          break;
      }
    },
    identifier$2$normalize$unit: function(normalize, unit) {
      var t2, first, _this = this,
        _s20_ = "Expected identifier.",
        text = new P.StringBuffer(""),
        t1 = _this.scanner;
      if (t1.scanChar$1(45)) {
        t2 = text._contents = H.Primitives_stringFromCharCode(45);
        if (t1.scanChar$1(45)) {
          text._contents = t2 + H.Primitives_stringFromCharCode(45);
          _this._parser$_identifierBody$3$normalize$unit(text, normalize, unit);
          t1 = text._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }
      } else
        t2 = "";
      first = t1.peekChar$0();
      if (first == null)
        t1.error$1(0, _s20_);
      else if (normalize && first === 95) {
        t1.readChar$0();
        text._contents = t2 + H.Primitives_stringFromCharCode(45);
      } else if (first === 95 || T.isAlphabetic1(first) || first >= 128)
        text._contents = t2 + H.Primitives_stringFromCharCode(t1.readChar$0());
      else if (first === 92)
        text._contents = t2 + H.S(_this.escape$1$identifierStart(true));
      else
        t1.error$1(0, _s20_);
      _this._parser$_identifierBody$3$normalize$unit(text, normalize, unit);
      t1 = text._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    identifier$0: function() {
      return this.identifier$2$normalize$unit(false, false);
    },
    identifier$1$normalize: function(normalize) {
      return this.identifier$2$normalize$unit(normalize, false);
    },
    identifier$1$unit: function(unit) {
      return this.identifier$2$normalize$unit(false, unit);
    },
    _parser$_identifierBody$3$normalize$unit: function(text, normalize, unit) {
      var t1, next, second, t2;
      for (t1 = this.scanner; true;) {
        next = t1.peekChar$0();
        if (next == null)
          break;
        else if (unit && next === 45) {
          second = t1.peekChar$1(1);
          if (second != null)
            if (second !== 46)
              t2 = second >= 48 && second <= 57;
            else
              t2 = true;
          else
            t2 = false;
          if (t2)
            break;
          text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
        } else if (normalize && next === 95) {
          t1.readChar$0();
          text._contents += H.Primitives_stringFromCharCode(45);
        } else {
          if (next !== 95) {
            if (!(next >= 97 && next <= 122))
              t2 = next >= 65 && next <= 90;
            else
              t2 = true;
            t2 = t2 || next >= 128;
          } else
            t2 = true;
          if (!t2) {
            t2 = next >= 48 && next <= 57;
            t2 = t2 || next === 45;
          } else
            t2 = true;
          if (t2)
            text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 92)
            text._contents += H.S(this.escape$0());
          else
            break;
        }
      }
    },
    _parser$_identifierBody$1: function(text) {
      return this._parser$_identifierBody$3$normalize$unit(text, false, false);
    },
    string$0: function() {
      var t2, buffer, next,
        t1 = this.scanner,
        quote = t1.readChar$0();
      if (quote !== 39 && quote !== 34) {
        t2 = t1._string_scanner$_position;
        t1.error$2$position(0, "Expected string.", t2 - 1);
      }
      buffer = new P.StringBuffer("");
      for (; true;) {
        next = t1.peekChar$0();
        if (next === quote) {
          t1.readChar$0();
          break;
        } else if (next == null || next === 10 || next === 13 || next === 12)
          t1.error$1(0, "Expected " + H.Primitives_stringFromCharCode(quote) + ".");
        else if (next === 92) {
          t2 = t1.peekChar$1(1);
          if (t2 === 10 || t2 === 13 || t2 === 12) {
            t1.readChar$0();
            t1.readChar$0();
          } else
            buffer._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());
        } else
          buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    naturalNumber$0: function() {
      var number, t2,
        t1 = this.scanner,
        first = t1.readChar$0();
      if (!T.isDigit0(first))
        t1.error$2$position(0, "Expected digit.", t1._string_scanner$_position - 1);
      number = first - 48;
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 != null && t2 >= 48 && t2 <= 57))
          break;
        number = number * 10 + (t1.readChar$0() - 48);
      }
      return number;
    },
    declarationValue$1$allowEmpty: function(allowEmpty) {
      var t1, t2, wroteNewline, next, start, end, t3, url, _this = this,
        buffer = new P.StringBuffer(""),
        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);
      $label0$1:
        for (t1 = _this.scanner, t2 = _this.get$string(), wroteNewline = false; true;) {
          next = t1.peekChar$0();
          switch (next) {
            case 92:
              buffer._contents += H.S(_this.escape$1$identifierStart(true));
              wroteNewline = false;
              break;
            case 34:
            case 39:
              start = t1._string_scanner$_position;
              t2.call$0();
              end = t1._string_scanner$_position;
              buffer._contents += J.substring$2$s(t1.string, start, end);
              wroteNewline = false;
              break;
            case 47:
              if (t1.peekChar$1(1) === 42) {
                t3 = _this.get$loudComment();
                start = t1._string_scanner$_position;
                t3.call$0();
                end = t1._string_scanner$_position;
                buffer._contents += J.substring$2$s(t1.string, start, end);
              } else
                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 32:
            case 9:
              if (!wroteNewline) {
                t3 = t1.peekChar$1(1);
                t3 = !(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12);
              } else
                t3 = true;
              if (t3)
                buffer._contents += H.Primitives_stringFromCharCode(32);
              t1.readChar$0();
              break;
            case 10:
            case 13:
            case 12:
              t3 = t1.peekChar$1(-1);
              if (!(t3 === 10 || t3 === 13 || t3 === 12))
                buffer._contents += "\n";
              t1.readChar$0();
              wroteNewline = true;
              break;
            case 40:
            case 123:
            case 91:
              buffer._contents += H.Primitives_stringFromCharCode(next);
              brackets.push(T.opposite0(t1.readChar$0()));
              wroteNewline = false;
              break;
            case 41:
            case 125:
            case 93:
              if (brackets.length === 0)
                break $label0$1;
              buffer._contents += H.Primitives_stringFromCharCode(next);
              t1.expectChar$1(brackets.pop());
              wroteNewline = false;
              break;
            case 59:
              if (brackets.length === 0)
                break $label0$1;
              buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 117:
            case 85:
              url = _this.tryUrl$0();
              if (url != null)
                buffer._contents += url;
              else
                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            default:
              if (next == null)
                break $label0$1;
              if (_this.lookingAtIdentifier$0())
                buffer._contents += _this.identifier$0();
              else
                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
          }
        }
      if (brackets.length !== 0)
        t1.expectChar$1(C.JSArray_methods.get$last(brackets));
      if (!allowEmpty && buffer._contents.length === 0)
        t1.error$1(0, "Expected token.");
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    declarationValue$0: function() {
      return this.declarationValue$1$allowEmpty(false);
    },
    tryUrl$0: function() {
      var buffer, next, t2, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      if (!_this.scanIdentifier$1("url"))
        return null;
      if (!t1.scanChar$1(40)) {
        t1.set$state(start);
        return null;
      }
      _this.whitespace$0();
      buffer = new P.StringBuffer("");
      buffer._contents = "url(";
      for (; true;) {
        next = t1.peekChar$0();
        if (next == null)
          break;
        else {
          if (next !== 37)
            if (next !== 38)
              if (next !== 35)
                t2 = next >= 42 && next <= 126 || next >= 128;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
          if (t2)
            buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 92)
            buffer._contents += H.S(_this.escape$0());
          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {
            _this.whitespace$0();
            if (t1.peekChar$0() !== 41)
              break;
          } else if (next === 41) {
            t2 = buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            return t2.charCodeAt(0) == 0 ? t2 : t2;
          } else
            break;
        }
      }
      t1.set$state(start);
      return null;
    },
    variableName$0: function() {
      this.scanner.expectChar$1(36);
      return this.identifier$1$normalize(true);
    },
    escape$1$identifierStart: function(identifierStart) {
      var value, first, i, next, t2, exception,
        t1 = this.scanner,
        start = t1._string_scanner$_position;
      t1.expectChar$1(92);
      value = 0;
      first = t1.peekChar$0();
      if (first == null)
        return "";
      else if (T.isNewline0(first))
        t1.error$1(0, "Expected escape sequence.");
      else if (T.isHex0(first)) {
        for (i = 0; i < 6; ++i) {
          next = t1.peekChar$0();
          if (next == null || !T.isHex0(next))
            break;
          value *= 16;
          value += T.asHex0(t1.readChar$0());
        }
        this.scanCharIf$1(T.character0__isWhitespace$closure());
      } else
        value = t1.readChar$0();
      if (identifierStart) {
        t2 = value;
        t2 = t2 === 95 || T.isAlphabetic1(t2) || t2 >= 128;
      } else {
        t2 = value;
        t2 = t2 === 95 || T.isAlphabetic1(t2) || t2 >= 128 || T.isDigit0(t2) || t2 === 45;
      }
      if (t2)
        try {
          t2 = H.Primitives_stringFromCharCode(value);
          return t2;
        } catch (exception) {
          if (type$.legacy_RangeError._is(H.unwrapException(exception)))
            t1.error$3$length$position(0, "Invalid Unicode code point.", t1._string_scanner$_position - start, start);
          else
            throw exception;
        }
      else {
        if (!(value <= 31))
          if (!J.$eq$(value, 127))
            t1 = identifierStart && T.isDigit0(value);
          else
            t1 = true;
        else
          t1 = true;
        if (t1) {
          t1 = H.Primitives_stringFromCharCode(92);
          if (value > 15)
            t1 += H.Primitives_stringFromCharCode(T.hexCharFor0(C.JSNumber_methods._shrOtherPositive$1(value, 4)));
          t1 = t1 + H.Primitives_stringFromCharCode(T.hexCharFor0(value & 15)) + H.Primitives_stringFromCharCode(32);
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        } else
          return P.String_String$fromCharCodes(H.setRuntimeTypeInfo([92, value], type$.JSArray_legacy_int), 0, null);
      }
    },
    escape$0: function() {
      return this.escape$1$identifierStart(false);
    },
    escapeCharacter$0: function() {
      var first, value, i, next, t2,
        t1 = this.scanner;
      t1.expectChar$1(92);
      first = t1.peekChar$0();
      if (first == null)
        return 65533;
      else if (T.isNewline0(first))
        t1.error$1(0, "Expected escape sequence.");
      else if (T.isHex0(first)) {
        for (value = 0, i = 0; i < 6; ++i) {
          next = t1.peekChar$0();
          if (next == null || !T.isHex0(next))
            break;
          value = (value << 4 >>> 0) + T.asHex0(t1.readChar$0());
        }
        t2 = t1.peekChar$0();
        if (t2 === 32 || t2 === 9 || T.isNewline0(t2))
          t1.readChar$0();
        if (value !== 0)
          t1 = value >= 55296 && value <= 57343 || value >= 1114111;
        else
          t1 = true;
        if (t1)
          return 65533;
        else
          return value;
      } else
        return t1.readChar$0();
    },
    scanCharIf$1: function(condition) {
      var t1 = this.scanner;
      if (!condition.call$1(t1.peekChar$0()))
        return false;
      t1.readChar$0();
      return true;
    },
    scanIdentChar$2$caseSensitive: function(char, caseSensitive) {
      var t3,
        t1 = new G.Parser_scanIdentChar_matches0(caseSensitive, char),
        t2 = this.scanner,
        next = t2.peekChar$0();
      if (next != null && t1.call$1(next)) {
        t2.readChar$0();
        return true;
      } else if (next === 92) {
        t3 = t2._string_scanner$_position;
        if (t1.call$1(this.escapeCharacter$0()))
          return true;
        t2.set$state(new S._SpanScannerState(t2, t3));
      }
      return false;
    },
    scanIdentChar$1: function(char) {
      return this.scanIdentChar$2$caseSensitive(char, false);
    },
    expectIdentChar$1: function(letter) {
      var t1;
      if (this.scanIdentChar$2$caseSensitive(letter, false))
        return;
      t1 = this.scanner;
      t1.error$2$position(0, 'Expected "' + H.Primitives_stringFromCharCode(letter) + '".', t1._string_scanner$_position);
    },
    lookingAtNumber$0: function() {
      var second, third,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (T.isDigit0(first))
        return true;
      if (first === 46) {
        second = t1.peekChar$1(1);
        return second != null && T.isDigit0(second);
      } else if (first === 43 || first === 45) {
        second = t1.peekChar$1(1);
        if (second == null)
          return false;
        if (T.isDigit0(second))
          return true;
        if (second !== 46)
          return false;
        third = t1.peekChar$1(2);
        return third != null && T.isDigit0(third);
      } else
        return false;
    },
    lookingAtIdentifier$1: function($forward) {
      var t1, first, second;
      if ($forward == null)
        $forward = 0;
      t1 = this.scanner;
      first = t1.peekChar$1($forward);
      if (first == null)
        return false;
      if (first === 95 || T.isAlphabetic1(first) || first >= 128 || first === 92)
        return true;
      if (first !== 45)
        return false;
      second = t1.peekChar$1($forward + 1);
      if (second == null)
        return false;
      return second === 95 || T.isAlphabetic1(second) || second >= 128 || second === 92 || second === 45;
    },
    lookingAtIdentifier$0: function() {
      return this.lookingAtIdentifier$1(null);
    },
    lookingAtIdentifierBody$0: function() {
      var t1,
        next = this.scanner.peekChar$0();
      if (next != null)
        t1 = next === 95 || T.isAlphabetic1(next) || next >= 128 || T.isDigit0(next) || next === 45 || next === 92;
      else
        t1 = false;
      return t1;
    },
    scanIdentifier$2$caseSensitive: function(text, caseSensitive) {
      var t1, start, t2, cur, _this = this;
      if (!_this.lookingAtIdentifier$0())
        return false;
      t1 = _this.scanner;
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        if (_this.scanIdentChar$2$caseSensitive(cur, caseSensitive))
          continue;
        if (start._scanner !== t1)
          H.throwExpression(P.ArgumentError$(string$.The_gi));
        t2 = start.position;
        if (t2 < 0 || t2 > t1.string.length)
          H.throwExpression(P.ArgumentError$("Invalid position " + t2));
        t1._string_scanner$_position = t2;
        t1._lastMatch = null;
        return false;
      }
      if (!_this.lookingAtIdentifierBody$0())
        return true;
      t1.set$state(start);
      return false;
    },
    scanIdentifier$1: function(text) {
      return this.scanIdentifier$2$caseSensitive(text, false);
    },
    expectIdentifier$2$name: function(text, $name) {
      var t1, start, t2, cur;
      if ($name == null)
        $name = '"' + text + '"';
      t1 = this.scanner;
      start = t1._string_scanner$_position;
      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        cur = t2.__internal$_current;
        if (this.scanIdentChar$2$caseSensitive(cur, false))
          continue;
        t1.error$2$position(0, "Expected " + $name + ".", start);
      }
      if (!this.lookingAtIdentifierBody$0())
        return;
      t1.error$2$position(0, "Expected " + $name, start);
    },
    expectIdentifier$1: function(text) {
      return this.expectIdentifier$2$name(text, null);
    },
    rawText$1: function(consumer) {
      var t1 = this.scanner,
        start = t1._string_scanner$_position;
      consumer.call$0();
      return t1.substring$1(0, start);
    },
    error$2: function(_, message, span) {
      return H.throwExpression(E.StringScannerException$(message, span, this.scanner.string));
    },
    withErrorMessage$1$2: function(message, callback) {
      var error, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SourceSpanFormatException._is(t1)) {
          error = t1;
          throw H.wrapException(G.SourceSpanFormatException$(message, error.get$span(), error.get$source()));
        } else
          throw exception;
      }
    },
    withErrorMessage$2: function(message, callback) {
      return this.withErrorMessage$1$2(message, callback, type$.dynamic);
    },
    wrapSpanFormatException$1$1: function(callback) {
      var error, span, startPosition, t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.legacy_SourceSpanFormatException._is(t1)) {
          error = t1;
          span = error.get$span();
          if (B.startsWithIgnoreCase0(error._span_exception$_message, "expected")) {
            t1 = span;
            t1 = t1._end - t1._file$_start === 0;
          } else
            t1 = false;
          if (t1) {
            t1 = span;
            startPosition = this._parser$_firstNewlineBefore$1(Y.FileLocation$_(t1.file, t1._file$_start).offset);
            t1 = span;
            if (!J.$eq$(startPosition, Y.FileLocation$_(t1.file, t1._file$_start).offset))
              span = span.file.span$2(startPosition, startPosition);
          }
          throw H.wrapException(E.SassFormatException$0(error._span_exception$_message, span));
        } else
          throw exception;
      }
    },
    wrapSpanFormatException$1: function(callback) {
      return this.wrapSpanFormatException$1$1(callback, type$.dynamic);
    },
    _parser$_firstNewlineBefore$1: function(position) {
      var t1, t2, lastNewline, codeUnit,
        index = position - 1;
      for (t1 = this.scanner.string, t2 = J.getInterceptor$s(t1), lastNewline = null; index >= 0;) {
        codeUnit = t2.codeUnitAt$1(t1, index);
        if (!(codeUnit === 32 || codeUnit === 9 || codeUnit === 10 || codeUnit === 13 || codeUnit === 12))
          return lastNewline == null ? position : lastNewline;
        if (codeUnit === 10 || codeUnit === 13 || codeUnit === 12)
          lastNewline = index;
        --index;
      }
      return position;
    }
  };
  G.Parser__parseIdentifier_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        result = t1.identifier$0();
      t1.scanner.expectDone$0();
      return result;
    },
    $signature: 12
  };
  G.Parser_scanIdentChar_matches0.prototype = {
    call$1: function(actual) {
      var t1 = this.char;
      return this.caseSensitive ? actual === t1 : T.characterEqualsIgnoreCase0(t1, actual);
    },
    $signature: 24
  };
  N.PlaceholderSelector0.prototype = {
    get$isInvisible: function() {
      return true;
    },
    accept$1$1: function(visitor) {
      var t1 = visitor._buffer;
      t1.writeCharCode$1(37);
      t1.write$1(0, this.name);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    addSuffix$1: function(suffix) {
      return new N.PlaceholderSelector0(this.name + suffix);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof N.PlaceholderSelector0 && other.name === this.name;
    },
    get$hashCode: function(_) {
      return C.JSString_methods.get$hashCode(this.name);
    }
  };
  L.PlainCssCallable0.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof L.PlainCssCallable0 && this.name == other.name;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.name);
    },
    $isAsyncCallable0: 1,
    $isCallable0: 1,
    get$name: function(receiver) {
      return this.name;
    }
  };
  F.PrefixedMapView0.prototype = {
    get$keys: function(_) {
      return new F._PrefixedKeys0(this);
    },
    get$length: function(_) {
      var t1 = this._prefixed_map_view0$_map;
      return t1.get$length(t1);
    },
    get$isEmpty: function(_) {
      var t1 = this._prefixed_map_view0$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._prefixed_map_view0$_map;
      return t1.get$isNotEmpty(t1);
    },
    $index: function(_, key) {
      return typeof key == "string" && C.JSString_methods.startsWith$1(key, this._prefixed_map_view0$_prefix) ? this._prefixed_map_view0$_map.$index(0, J.substring$1$s(key, this._prefixed_map_view0$_prefix.length)) : null;
    },
    containsKey$1: function(key) {
      return typeof key == "string" && C.JSString_methods.startsWith$1(key, this._prefixed_map_view0$_prefix) && this._prefixed_map_view0$_map.containsKey$1(J.substring$1$s(key, this._prefixed_map_view0$_prefix.length));
    }
  };
  F._PrefixedKeys0.prototype = {
    get$length: function(_) {
      var t1 = this._prefixed_map_view0$_view._prefixed_map_view0$_map;
      return t1.get$length(t1);
    },
    get$iterator: function(_) {
      var t1 = this._prefixed_map_view0$_view._prefixed_map_view0$_map;
      t1 = J.map$1$1$ax(t1.get$keys(t1), new F._PrefixedKeys_iterator_closure0(this), type$.legacy_String);
      return t1.get$iterator(t1);
    },
    contains$1: function(_, key) {
      return this._prefixed_map_view0$_view.containsKey$1(key);
    }
  };
  F._PrefixedKeys_iterator_closure0.prototype = {
    call$1: function(key) {
      return this.$this._prefixed_map_view0$_view._prefixed_map_view0$_prefix + H.S(key);
    },
    $signature: 4
  };
  D.PseudoSelector0.prototype = {
    get$minSpecificity: function() {
      if (this._pseudo0$_minSpecificity == null)
        this._pseudo0$_computeSpecificity$0();
      return this._pseudo0$_minSpecificity;
    },
    get$maxSpecificity: function() {
      if (this._pseudo0$_maxSpecificity == null)
        this._pseudo0$_computeSpecificity$0();
      return this._pseudo0$_maxSpecificity;
    },
    get$isInvisible: function() {
      var t1 = this.selector;
      if (t1 == null)
        return false;
      return this.name !== "not" && t1.get$isInvisible();
    },
    addSuffix$1: function(suffix) {
      var _this = this;
      if (_this.argument != null || _this.selector != null)
        _this.super$SimpleSelector$addSuffix0(suffix);
      return D.PseudoSelector$0(_this.name + suffix, null, !_this.isClass, null);
    },
    unify$1: function(compound) {
      var result, t1, t2, addedThis, _i, simple, _this = this;
      if (compound.length === 1 && C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0)
        return C.JSArray_methods.get$first(compound).unify$1(H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector_2));
      if (C.JSArray_methods.contains$1(compound, _this))
        return compound;
      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);
      for (t1 = compound.length, t2 = !_this.isClass, addedThis = false, _i = 0; _i < compound.length; compound.length === t1 || (0, H.throwConcurrentModificationError)(compound), ++_i) {
        simple = compound[_i];
        if (simple instanceof D.PseudoSelector0 && !simple.isClass) {
          if (t2)
            return null;
          result.push(_this);
          addedThis = true;
        }
        result.push(simple);
      }
      if (!addedThis)
        result.push(_this);
      return result;
    },
    _pseudo0$_computeSpecificity$0: function() {
      var t1, _i, t2, complex, t3, t4, _this = this;
      if (!_this.isClass) {
        _this._pseudo0$_maxSpecificity = _this._pseudo0$_minSpecificity = 1;
        return;
      }
      t1 = _this.selector;
      if (t1 == null) {
        _this._pseudo0$_minSpecificity = M.SimpleSelector0.prototype.get$minSpecificity.call(_this);
        _this._pseudo0$_maxSpecificity = M.SimpleSelector0.prototype.get$maxSpecificity.call(_this);
        return;
      }
      if (_this.name === "not") {
        _i = _this._pseudo0$_maxSpecificity = _this._pseudo0$_minSpecificity = 0;
        for (t1 = t1.components, t2 = t1.length; _i < t2; ++_i) {
          complex = t1[_i];
          t3 = _this._pseudo0$_minSpecificity;
          if (complex._complex0$_minSpecificity == null)
            complex._complex0$_computeSpecificity$0();
          t4 = complex._complex0$_minSpecificity;
          _this._pseudo0$_minSpecificity = Math.max(H.checkNum(t3), H.checkNum(t4));
          t4 = _this._pseudo0$_maxSpecificity;
          if (complex._complex0$_maxSpecificity == null)
            complex._complex0$_computeSpecificity$0();
          t3 = complex._complex0$_maxSpecificity;
          _this._pseudo0$_maxSpecificity = Math.max(H.checkNum(t4), H.checkNum(t3));
        }
      } else {
        _this._pseudo0$_minSpecificity = H._asIntS(Math.pow(M.SimpleSelector0.prototype.get$minSpecificity.call(_this), 3));
        _i = _this._pseudo0$_maxSpecificity = 0;
        for (t1 = t1.components, t2 = t1.length; _i < t2; ++_i) {
          complex = t1[_i];
          t3 = _this._pseudo0$_minSpecificity;
          if (complex._complex0$_minSpecificity == null)
            complex._complex0$_computeSpecificity$0();
          t4 = complex._complex0$_minSpecificity;
          _this._pseudo0$_minSpecificity = Math.min(H.checkNum(t3), H.checkNum(t4));
          t4 = _this._pseudo0$_maxSpecificity;
          if (complex._complex0$_maxSpecificity == null)
            complex._complex0$_computeSpecificity$0();
          t3 = complex._complex0$_maxSpecificity;
          _this._pseudo0$_maxSpecificity = Math.max(H.checkNum(t4), H.checkNum(t3));
        }
      }
    },
    accept$1$1: function(visitor) {
      return visitor.visitPseudoSelector$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof D.PseudoSelector0 && other.name === _this.name && other.isClass === _this.isClass && other.argument == _this.argument && J.$eq$(other.selector, _this.selector);
    },
    get$hashCode: function(_) {
      var _this = this;
      return (C.JSString_methods.get$hashCode(_this.name) ^ C.JSBool_methods.get$hashCode(!_this.isClass) ^ J.get$hashCode$(_this.argument) ^ J.get$hashCode$(_this.selector)) >>> 0;
    }
  };
  U.PublicMemberMapView0.prototype = {
    get$keys: function(_) {
      var t1 = this._public_member_map_view$_inner;
      return J.where$1$ax(t1.get$keys(t1), B.utils0__isPublic$closure());
    },
    containsKey$1: function(key) {
      return typeof key == "string" && B.isPublic0(key) && this._public_member_map_view$_inner.containsKey$1(key);
    },
    $index: function(_, key) {
      if (typeof key == "string" && B.isPublic0(key))
        return this._public_member_map_view$_inner.$index(0, key);
      return null;
    }
  };
  D.QualifiedName0.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof D.QualifiedName0 && other.name === this.name && other.namespace == this.namespace;
    },
    get$hashCode: function(_) {
      return C.JSString_methods.get$hashCode(this.name) ^ J.get$hashCode$(this.namespace);
    },
    toString$0: function(_) {
      var t1 = this.namespace,
        t2 = this.name;
      return t1 == null ? t2 : t1 + "|" + t2;
    }
  };
  Z.RenderContext.prototype = {};
  L.RenderContextOptions.prototype = {};
  R.RenderOptions.prototype = {};
  U.RenderResult.prototype = {};
  U.RenderResultStats.prototype = {};
  E.ImporterResult0.prototype = {
    get$sourceMapUrl: function() {
      return this._result$_sourceMapUrl;
    }
  };
  B.ReturnRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitReturnRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "@return " + H.S(this.expression) + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  U.main_printError.prototype = {
    call$2: function(error, stackTrace) {
      var t1 = this._box_0;
      if (t1.printedError)
        $.$get$stderr().writeln$0();
      t1.printedError = true;
      t1 = $.$get$stderr();
      t1.writeln$1(error);
      if (stackTrace != null) {
        t1.writeln$0();
        t1.writeln$1(C.JSString_methods.trimRight$0(Y.Trace_Trace$from(stackTrace).get$terse().toString$0(0)));
      }
    },
    $signature: 421
  };
  U.main_closure.prototype = {
    call$0: function() {
      var t1, exception;
      try {
        t1 = this.destination;
        if (t1 != null && !this._box_0.options.get$emitErrorCss())
          B.deleteFile(t1);
      } catch (exception) {
        if (!(H.unwrapException(exception) instanceof B.FileSystemException))
          throw exception;
      }
    },
    $signature: 0
  };
  U.SassParser0.prototype = {
    get$currentIndentation: function() {
      return this._sass0$_currentIndentation;
    },
    get$indented: function() {
      return true;
    },
    styleRuleSelector$0: function() {
      var t4,
        t1 = this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer0(t3, []);
      do {
        buffer.addInterpolation$1(this.almostAnyValue$1$omitComments(true));
        t4 = t3._contents += H.Primitives_stringFromCharCode(10);
      } while (C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), ",") && this.scanCharIf$1(T.character0__isNewline$closure()));
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    expectStatementSeparator$1: function($name) {
      var _this = this;
      if (!_this.atEndOfStatement$0())
        _this._sass0$_expectNewline$0();
      if (_this._sass0$_peekIndentation$0() <= _this._sass0$_currentIndentation)
        return;
      _this.scanner.error$2$position(0, "Nothing may be indented " + ($name == null ? "here" : "beneath a " + $name) + ".", _this._sass0$_nextIndentationEnd.position);
    },
    expectStatementSeparator$0: function() {
      return this.expectStatementSeparator$1(null);
    },
    atEndOfStatement$0: function() {
      var next = this.scanner.peekChar$0();
      return next == null || T.isNewline0(next);
    },
    lookingAtChildren$0: function() {
      return this.atEndOfStatement$0() && this._sass0$_peekIndentation$0() > this._sass0$_currentIndentation;
    },
    importArgument$0: function() {
      var url, span, innerError, start, next, t2, exception, _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 117:
        case 85:
          start = new S._SpanScannerState(t1, t1._string_scanner$_position);
          if (_this.scanIdentifier$1("url"))
            if (t1.scanChar$1(40)) {
              t1.set$state(start);
              return _this.super$StylesheetParser$importArgument0();
            } else
              t1.set$state(start);
          break;
        case 39:
        case 34:
          return _this.super$StylesheetParser$importArgument0();
      }
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      next = t1.peekChar$0();
      while (true) {
        if (next != null)
          if (next !== 44)
            if (next !== 59)
              t2 = !(next === 10 || next === 13 || next === 12);
            else
              t2 = false;
          else
            t2 = false;
        else
          t2 = false;
        if (!t2)
          break;
        t1.readChar$0();
        next = t1.peekChar$0();
      }
      url = t1.substring$1(0, start.position);
      span = t1.spanFrom$1(start);
      if (_this.isPlainImportUrl$1(url))
        return new Q.StaticImport0(X.Interpolation$0(H.setRuntimeTypeInfo([N.serializeValue(new D.SassString0(url, true), true, true)], type$.JSArray_legacy_Object), span), null, null, span);
      else
        try {
          t1 = _this.parseImportUrl$1(url);
          return new B.DynamicImport0(t1, span);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (type$.legacy_FormatException._is(t1)) {
            innerError = t1;
            _this.error$2(0, "Invalid URL: " + H.S(J.get$message$x(innerError)), span);
          } else
            throw exception;
        }
    },
    scanElse$1: function(ifIndentation) {
      var t1, t2, startIndentation, startNextIndentation, startNextIndentationEnd, _this = this;
      if (_this._sass0$_peekIndentation$0() != ifIndentation)
        return false;
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      startIndentation = _this._sass0$_currentIndentation;
      startNextIndentation = _this._sass0$_nextIndentation;
      startNextIndentationEnd = _this._sass0$_nextIndentationEnd;
      _this._sass0$_readIndentation$0();
      if (t1.scanChar$1(64) && _this.scanIdentifier$1("else"))
        return true;
      t1.set$state(new S._SpanScannerState(t1, t2));
      _this._sass0$_currentIndentation = startIndentation;
      _this._sass0$_nextIndentation = startNextIndentation;
      _this._sass0$_nextIndentationEnd = startNextIndentationEnd;
      return false;
    },
    children$1: function(_, child) {
      var children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);
      this._sass0$_whileIndentedLower$1(new U.SassParser_children_closure0(this, children, child));
      return children;
    },
    statements$1: function(statement) {
      var statements, t2, child,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first === 9 || first === 32)
        t1.error$3$length$position(0, string$.Indent, t1._string_scanner$_position, 0);
      statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);
      for (t2 = t1.string.length; t1._string_scanner$_position !== t2;) {
        child = this._sass0$_child$1(statement);
        if (child != null)
          statements.push(child);
        this._sass0$_readIndentation$0();
      }
      return statements;
    },
    _sass0$_child$1: function(child) {
      var _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 13:
        case 10:
        case 12:
          return null;
        case 36:
          return _this.variableDeclarationWithoutNamespace$0();
        case 47:
          switch (t1.peekChar$1(1)) {
            case 47:
              return _this._sass0$_silentComment$0();
            case 42:
              return _this._sass0$_loudComment$0();
            default:
              return child.call$0();
          }
        default:
          return child.call$0();
      }
    },
    _sass0$_silentComment$0: function() {
      var buffer, parentIndentation, t3, commentPrefix, i, t4, i0, t5, t6, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("//");
      buffer = new P.StringBuffer("");
      parentIndentation = _this._sass0$_currentIndentation;
      t3 = t1.string;
      $label0$0:
        do {
          commentPrefix = t1.scanChar$1(47) ? "///" : "//";
          for (i = commentPrefix.length; true;) {
            t4 = buffer._contents += commentPrefix;
            for (i0 = i; i0 < _this._sass0$_currentIndentation - parentIndentation; ++i0) {
              t4 += H.Primitives_stringFromCharCode(32);
              buffer._contents = t4;
            }
            t5 = t3.length;
            while (true) {
              if (t1._string_scanner$_position !== t5) {
                t6 = t1.peekChar$0();
                t6 = !(t6 === 10 || t6 === 13 || t6 === 12);
              } else
                t6 = false;
              if (!t6)
                break;
              t4 += H.Primitives_stringFromCharCode(t1.readChar$0());
              buffer._contents = t4;
            }
            buffer._contents = t4 + "\n";
            if (_this._sass0$_peekIndentation$0() < parentIndentation)
              break $label0$0;
            if (_this._sass0$_peekIndentation$0() === parentIndentation) {
              if (t1.peekChar$1(1 + parentIndentation) === 47 && t1.peekChar$1(2 + parentIndentation) === 47)
                _this._sass0$_readIndentation$0();
              break;
            }
            _this._sass0$_readIndentation$0();
          }
        } while (t1.scan$1("//"));
      t3 = buffer._contents;
      return _this.lastSilentComment = new B.SilentComment0(t3.charCodeAt(0) == 0 ? t3 : t3, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _sass0$_loudComment$0: function() {
      var t3, t4, buffer, parentIndentation, t5, first, beginningOfComment, t6, end, i, t7, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("/*");
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer0(t3, t4);
      t3._contents = "/*";
      parentIndentation = _this._sass0$_currentIndentation;
      for (t5 = t1.string, first = true; true; first = false) {
        if (first) {
          beginningOfComment = t1._string_scanner$_position;
          _this.spaces$0();
          t6 = t1.peekChar$0();
          if (t6 === 10 || t6 === 13 || t6 === 12) {
            _this._sass0$_readIndentation$0();
            t3._contents += H.Primitives_stringFromCharCode(32);
          } else {
            end = t1._string_scanner$_position;
            t3._contents += J.substring$2$s(t5, beginningOfComment, end);
          }
        } else {
          t6 = t3._contents += "\n";
          t3._contents = t6 + " * ";
        }
        for (i = 3; i < _this._sass0$_currentIndentation - parentIndentation; ++i)
          t3._contents += H.Primitives_stringFromCharCode(32);
        $label0$1:
          for (t6 = t5.length; t1._string_scanner$_position !== t6;)
            switch (t1.peekChar$0()) {
              case 10:
              case 13:
              case 12:
                break $label0$1;
              case 35:
                if (t1.peekChar$1(1) === 123) {
                  t7 = _this.singleInterpolation$0();
                  buffer._interpolation_buffer0$_flushText$0();
                  t4.push(t7);
                } else
                  t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                break;
              default:
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                break;
            }
        if (_this._sass0$_peekIndentation$0() <= parentIndentation)
          break;
        for (; _this._sass0$_lookingAtDoubleNewline$0();) {
          _this._sass0$_expectNewline$0();
          t6 = t3._contents += "\n";
          t3._contents = t6 + " *";
        }
        _this._sass0$_readIndentation$0();
      }
      t4 = t3._contents;
      if (!C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), "*/"))
        t3._contents += " */";
      return new L.LoudComment0(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))));
    },
    whitespaceWithoutComments$0: function() {
      var t1, t2, next;
      for (t1 = this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;) {
        next = t1.peekChar$0();
        if (next !== 9 && next !== 32)
          break;
        t1.readChar$0();
      }
    },
    loudComment$0: function() {
      var next,
        t1 = this.scanner;
      t1.expect$1("/*");
      for (; true;) {
        next = t1.readChar$0();
        if (next === 10 || next === 13 || next === 12)
          t1.error$1(0, "expected */.");
        if (next !== 42)
          continue;
        do
          next = t1.readChar$0();
        while (next === 42);
        if (next === 47)
          break;
      }
    },
    _sass0$_expectNewline$0: function() {
      var t1 = this.scanner;
      switch (t1.peekChar$0()) {
        case 59:
          t1.error$1(0, string$.semico);
          break;
        case 13:
          t1.readChar$0();
          if (t1.peekChar$0() === 10)
            t1.readChar$0();
          return;
        case 10:
        case 12:
          t1.readChar$0();
          return;
        default:
          t1.error$1(0, "expected newline.");
      }
    },
    _sass0$_lookingAtDoubleNewline$0: function() {
      var nextChar,
        t1 = this.scanner;
      switch (t1.peekChar$0()) {
        case 13:
          nextChar = t1.peekChar$1(1);
          if (nextChar === 10)
            return T.isNewline0(t1.peekChar$1(2));
          return nextChar === 13 || nextChar === 12;
        case 10:
        case 12:
          return T.isNewline0(t1.peekChar$1(1));
        default:
          return false;
      }
    },
    _sass0$_whileIndentedLower$1: function(body) {
      var t1, t2, childIndentation, indentation, t3, t4, t5, _this = this,
        parentIndentation = _this._sass0$_currentIndentation;
      for (t1 = _this.scanner, t2 = t1._sourceFile, childIndentation = null; _this._sass0$_peekIndentation$0() > parentIndentation;) {
        indentation = _this._sass0$_readIndentation$0();
        if (childIndentation == null)
          childIndentation = indentation;
        if (childIndentation != indentation) {
          t3 = "Inconsistent indentation, expected " + H.S(childIndentation) + " spaces.";
          t4 = t1._string_scanner$_position;
          t5 = t2.getColumn$1(t4);
          t1.error$3$length$position(0, t3, t2.getColumn$1(t1._string_scanner$_position), t4 - t5);
        }
        body.call$0();
      }
    },
    _sass0$_readIndentation$0: function() {
      var _this = this;
      if (_this._sass0$_nextIndentation == null)
        _this._sass0$_peekIndentation$0();
      _this._sass0$_currentIndentation = _this._sass0$_nextIndentation;
      _this.scanner.set$state(_this._sass0$_nextIndentationEnd);
      _this._sass0$_nextIndentationEnd = _this._sass0$_nextIndentation = null;
      return _this._sass0$_currentIndentation;
    },
    _sass0$_peekIndentation$0: function() {
      var t2, t3, start, containsTab, containsSpace, next, t4, _this = this,
        t1 = _this._sass0$_nextIndentation;
      if (t1 != null)
        return t1;
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      t3 = t1.string.length;
      if (t2 === t3) {
        _this._sass0$_nextIndentation = 0;
        _this._sass0$_nextIndentationEnd = new S._SpanScannerState(t1, t2);
        return 0;
      }
      start = new S._SpanScannerState(t1, t2);
      if (!_this.scanCharIf$1(T.character0__isNewline$closure()))
        t1.error$2$position(0, "Expected newline.", t1._string_scanner$_position);
      do {
        _this._sass0$_nextIndentation = 0;
        for (containsTab = false, containsSpace = false; true;) {
          next = t1.peekChar$0();
          if (next === 32)
            containsSpace = true;
          else {
            if (next !== 9)
              break;
            containsTab = true;
          }
          _this._sass0$_nextIndentation = _this._sass0$_nextIndentation + 1;
          t1.readChar$0();
        }
        t2 = t1._string_scanner$_position;
        if (t2 === t3) {
          _this._sass0$_nextIndentation = 0;
          _this._sass0$_nextIndentationEnd = new S._SpanScannerState(t1, t2);
          t1.set$state(start);
          return 0;
        }
      } while (_this.scanCharIf$1(T.character0__isNewline$closure()));
      if (containsTab) {
        if (containsSpace) {
          t2 = t1._string_scanner$_position;
          t3 = t1._sourceFile;
          t4 = t3.getColumn$1(t2);
          t1.error$3$length$position(0, "Tabs and spaces may not be mixed.", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);
        } else if (_this._sass0$_spaces === true) {
          t2 = t1._string_scanner$_position;
          t3 = t1._sourceFile;
          t4 = t3.getColumn$1(t2);
          t1.error$3$length$position(0, "Expected spaces, was tabs.", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);
        }
      } else if (containsSpace && _this._sass0$_spaces === false) {
        t2 = t1._string_scanner$_position;
        t3 = t1._sourceFile;
        t4 = t3.getColumn$1(t2);
        t1.error$3$length$position(0, "Expected tabs, was spaces.", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);
      }
      if (_this._sass0$_nextIndentation > 0)
        if (_this._sass0$_spaces == null)
          _this._sass0$_spaces = containsSpace;
      _this._sass0$_nextIndentationEnd = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.set$state(start);
      return _this._sass0$_nextIndentation;
    }
  };
  U.SassParser_children_closure0.prototype = {
    call$0: function() {
      this.children.push(this.$this._sass0$_child$1(this.child));
    },
    $signature: 0
  };
  R._Exports.prototype = {};
  R._wrapMain_closure.prototype = {
    call$1: function(_) {
      return R._translateReturnValue(this.main.call$0());
    },
    $signature: 206
  };
  R._wrapMain_closure0.prototype = {
    call$1: function(args) {
      return R._translateReturnValue(this.main.call$1(P.List_List$from(type$.legacy_List_legacy_Object._as(args), true, type$.legacy_String)));
    },
    $signature: 206
  };
  L.ScssParser0.prototype = {
    get$indented: function() {
      return false;
    },
    get$currentIndentation: function() {
      return null;
    },
    styleRuleSelector$0: function() {
      return this.almostAnyValue$0();
    },
    expectStatementSeparator$1: function($name) {
      var t1, next;
      this.whitespaceWithoutComments$0();
      t1 = this.scanner;
      if (t1._string_scanner$_position === t1.string.length)
        return;
      next = t1.peekChar$0();
      if (next === 59 || next === 125)
        return;
      t1.expectChar$1(59);
    },
    expectStatementSeparator$0: function() {
      return this.expectStatementSeparator$1(null);
    },
    atEndOfStatement$0: function() {
      var next = this.scanner.peekChar$0();
      return next == null || next === 59 || next === 125 || next === 123;
    },
    lookingAtChildren$0: function() {
      return this.scanner.peekChar$0() === 123;
    },
    scanElse$1: function(_) {
      var t3, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      _this.whitespace$0();
      t3 = t1._string_scanner$_position;
      if (t1.scanChar$1(64)) {
        if (_this.scanIdentifier$2$caseSensitive("else", true))
          return true;
        if (_this.scanIdentifier$2$caseSensitive("elseif", true)) {
          _this.logger.warn$3$deprecation$span(0, string$.x40elsei, true, t1.spanFrom$1(new S._SpanScannerState(t1, t3)));
          t1.set$position(t1._string_scanner$_position - 2);
          return true;
        }
      }
      t1.set$state(new S._SpanScannerState(t1, t2));
      return false;
    },
    children$1: function(_, child) {
      var children, _this = this,
        t1 = _this.scanner;
      t1.expectChar$1(123);
      _this.whitespaceWithoutComments$0();
      children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);
      for (; true;)
        switch (t1.peekChar$0()) {
          case 36:
            children.push(_this.variableDeclarationWithoutNamespace$0());
            break;
          case 47:
            switch (t1.peekChar$1(1)) {
              case 47:
                children.push(_this._scss0$_silentComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              case 42:
                children.push(_this._scss0$_loudComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              default:
                children.push(child.call$0());
                break;
            }
            break;
          case 59:
            t1.readChar$0();
            _this.whitespaceWithoutComments$0();
            break;
          case 125:
            t1.expectChar$1(125);
            return children;
          default:
            children.push(child.call$0());
            break;
        }
    },
    statements$1: function(statement) {
      var t1, t2, child, _this = this,
        statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);
      _this.whitespaceWithoutComments$0();
      for (t1 = _this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;)
        switch (t1.peekChar$0()) {
          case 36:
            statements.push(_this.variableDeclarationWithoutNamespace$0());
            break;
          case 47:
            switch (t1.peekChar$1(1)) {
              case 47:
                statements.push(_this._scss0$_silentComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              case 42:
                statements.push(_this._scss0$_loudComment$0());
                _this.whitespaceWithoutComments$0();
                break;
              default:
                child = statement.call$0();
                if (child != null)
                  statements.push(child);
                break;
            }
            break;
          case 59:
            t1.readChar$0();
            _this.whitespaceWithoutComments$0();
            break;
          default:
            child = statement.call$0();
            if (child != null)
              statements.push(child);
            break;
        }
      return statements;
    },
    _scss0$_silentComment$0: function() {
      var t2, t3, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expect$1("//");
      t2 = t1.string.length;
      do {
        while (true) {
          if (t1._string_scanner$_position !== t2) {
            t3 = t1.readChar$0();
            t3 = !(t3 === 10 || t3 === 13 || t3 === 12);
          } else
            t3 = false;
          if (!t3)
            break;
        }
        if (t1._string_scanner$_position === t2)
          break;
        _this.whitespaceWithoutComments$0();
      } while (t1.scan$1("//"));
      if (_this.get$plainCss())
        _this.error$2(0, string$.Silent, t1.spanFrom$1(start));
      return _this.lastSilentComment = new B.SilentComment0(t1.substring$1(0, start.position), t1.spanFrom$1(start));
    },
    _scss0$_loudComment$0: function() {
      var t3, t4, buffer, t5, endPosition,
        t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("/*");
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer0(t3, t4);
      t3._contents = "/*";
      for (; true;)
        switch (t1.peekChar$0()) {
          case 35:
            if (t1.peekChar$1(1) === 123) {
              t5 = this.singleInterpolation$0();
              buffer._interpolation_buffer0$_flushText$0();
              t4.push(t5);
            } else
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            break;
          case 42:
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            if (t1.peekChar$0() !== 47)
              break;
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            endPosition = t1._string_scanner$_position;
            t3 = t1._sourceFile;
            t4 = new S._SpanScannerState(t1, t2).position;
            t1 = new Y._FileSpan(t3, t4, endPosition);
            t1._FileSpan$3(t3, t4, endPosition);
            return new L.LoudComment0(buffer.interpolation$1(t1));
          case 13:
            t1.readChar$0();
            if (t1.peekChar$0() !== 10)
              t3._contents += H.Primitives_stringFromCharCode(10);
            break;
          case 12:
            t1.readChar$0();
            t3._contents += H.Primitives_stringFromCharCode(10);
            break;
          default:
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            break;
        }
    }
  };
  T.Selector0.prototype = {
    get$isInvisible: function() {
      return false;
    },
    toString$0: function(_) {
      var visitor = N._SerializeVisitor$(null, true, null, true, false, null, true);
      this.accept$1(visitor);
      return visitor._buffer.toString$0(0);
    }
  };
  T.SelectorExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitSelectorExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "&";
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  T.closure128.prototype = {
    call$1: function($arguments) {
      var t1 = {},
        selectors = J.$index$asx($arguments, 0).get$asList();
      if (selectors.length === 0)
        throw H.wrapException(E.SassScriptException$0(string$.x24selec));
      t1.first = true;
      return new H.MappedListIterable(selectors, new T._closure16(t1), H._arrayInstanceType(selectors)._eval$1("MappedListIterable<1,SelectorList0*>")).reduce$1(0, new T._closure17()).get$asSassList();
    },
    $signature: 27
  };
  T._closure16.prototype = {
    call$1: function(selector) {
      var t1 = this._box_0,
        result = selector.assertSelector$1$allowParent(!t1.first);
      t1.first = false;
      return result;
    },
    $signature: 204
  };
  T._closure17.prototype = {
    call$2: function($parent, child) {
      return child.resolveParentSelectors$1($parent);
    },
    $signature: 203
  };
  T.closure127.prototype = {
    call$1: function($arguments) {
      var selectors = J.$index$asx($arguments, 0).get$asList();
      if (selectors.length === 0)
        throw H.wrapException(E.SassScriptException$0(string$.x24selec));
      return new H.MappedListIterable(selectors, new T._closure14(), H._arrayInstanceType(selectors)._eval$1("MappedListIterable<1,SelectorList0*>")).reduce$1(0, new T._closure15()).get$asSassList();
    },
    $signature: 27
  };
  T._closure14.prototype = {
    call$1: function(selector) {
      return selector.assertSelector$0();
    },
    $signature: 204
  };
  T._closure15.prototype = {
    call$2: function($parent, child) {
      var t1 = child.components;
      return D.SelectorList$0(new H.MappedListIterable(t1, new T.__closure0($parent), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector0*>"))).resolveParentSelectors$1($parent);
    },
    $signature: 203
  };
  T.__closure0.prototype = {
    call$1: function(complex) {
      var newCompound, t2, cur,
        t1 = complex.components,
        compound = C.JSArray_methods.get$first(t1);
      if (compound instanceof X.CompoundSelector0) {
        newCompound = T._prependParent0(compound);
        if (newCompound == null)
          throw H.wrapException(E.SassScriptException$0("Can't append " + complex.toString$0(0) + " to " + H.S(this.parent) + "."));
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);
        t2.push(newCompound);
        for (t1 = H.SubListIterable$(t1, 1, null, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
          cur = t1.__internal$_current;
          t2.push(cur);
        }
        return S.ComplexSelector$0(t2, false);
      } else
        throw H.wrapException(E.SassScriptException$0("Can't append " + complex.toString$0(0) + " to " + H.S(this.parent) + "."));
    },
    $signature: 99
  };
  T.closure126.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        selector = t1.$index($arguments, 0).assertSelector$1$name("selector"),
        target = t1.$index($arguments, 1).assertSelector$1$name("extendee");
      return F.Extender__extendOrReplace0(selector, t1.$index($arguments, 2).assertSelector$1$name("extender"), target, C.ExtendMode_allTargets0).get$asSassList();
    },
    $signature: 27
  };
  T.closure125.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        selector = t1.$index($arguments, 0).assertSelector$1$name("selector"),
        target = t1.$index($arguments, 1).assertSelector$1$name("original");
      return F.Extender__extendOrReplace0(selector, t1.$index($arguments, 2).assertSelector$1$name("replacement"), target, C.ExtendMode_replace0).get$asSassList();
    },
    $signature: 27
  };
  T.closure124.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        result = t1.$index($arguments, 0).assertSelector$1$name("selector1").unify$1(t1.$index($arguments, 1).assertSelector$1$name("selector2"));
      return result == null ? C.C_SassNull : result.get$asSassList();
    },
    $signature: 3
  };
  T.closure131.prototype = {
    call$1: function($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        selector1 = t1.$index($arguments, 0).assertSelector$1$name("super"),
        selector2 = t1.$index($arguments, 1).assertSelector$1$name("sub");
      return Y.listIsSuperselector0(selector1.components, selector2.components) ? C.SassBoolean_true : C.SassBoolean_false;
    },
    $signature: 20
  };
  T.closure130.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertCompoundSelector$1$name("selector").components;
      return D.SassList$0(new H.MappedListIterable(t1, new T._closure18(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value0*>")), C.ListSeparator_comma0, false);
    },
    $signature: 27
  };
  T._closure18.prototype = {
    call$1: function(simple) {
      return new D.SassString0(J.toString$0$(simple), false);
    },
    $signature: 425
  };
  T.closure129.prototype = {
    call$1: function($arguments) {
      return J.$index$asx($arguments, 0).assertSelector$1$name("selector").get$asSassList();
    },
    $signature: 27
  };
  T.SelectorParser0.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new T.SelectorParser_parse_closure0(this));
    },
    parseCompoundSelector$0: function() {
      return this.wrapSpanFormatException$1(new T.SelectorParser_parseCompoundSelector_closure0(this));
    },
    _selector$_selectorList$0: function() {
      var t3, t4, lineBreak, _this = this,
        t1 = _this.scanner,
        t2 = t1._sourceFile,
        previousLine = t2.getLine$1(t1._string_scanner$_position),
        components = H.setRuntimeTypeInfo([_this._selector$_complexSelector$0()], type$.JSArray_legacy_ComplexSelector_2);
      _this.whitespace$0();
      for (t3 = t1.string; t1.scanChar$1(44);) {
        _this.whitespace$0();
        if (t1.peekChar$0() === 44)
          continue;
        t4 = t1._string_scanner$_position;
        if (t4 === t3.length)
          break;
        lineBreak = t2.getLine$1(t4) != previousLine;
        if (lineBreak)
          previousLine = t2.getLine$1(t1._string_scanner$_position);
        components.push(_this._selector$_complexSelector$1$lineBreak(lineBreak));
      }
      return D.SelectorList$0(components);
    },
    _selector$_complexSelector$1$lineBreak: function(lineBreak) {
      var t1, next, _this = this,
        _s58_ = string$.x22x26__ma,
        components = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);
      $label0$1:
        for (t1 = _this.scanner; true;) {
          _this.whitespace$0();
          next = t1.peekChar$0();
          switch (next) {
            case 43:
              t1.readChar$0();
              components.push(C.Combinator_uzg0);
              break;
            case 62:
              t1.readChar$0();
              components.push(C.Combinator_sgq0);
              break;
            case 126:
              t1.readChar$0();
              components.push(C.Combinator_CzM0);
              break;
            case 91:
            case 46:
            case 35:
            case 37:
            case 58:
            case 38:
            case 42:
            case 124:
              components.push(_this._selector$_compoundSelector$0());
              if (t1.peekChar$0() === 38)
                t1.error$1(0, _s58_);
              break;
            default:
              if (next == null || !_this.lookingAtIdentifier$0())
                break $label0$1;
              components.push(_this._selector$_compoundSelector$0());
              if (t1.peekChar$0() === 38)
                t1.error$1(0, _s58_);
              break;
          }
        }
      if (components.length === 0)
        t1.error$1(0, "expected selector.");
      return S.ComplexSelector$0(components, lineBreak);
    },
    _selector$_complexSelector$0: function() {
      return this._selector$_complexSelector$1$lineBreak(false);
    },
    _selector$_compoundSelector$0: function() {
      var t2,
        components = H.setRuntimeTypeInfo([this._selector$_simpleSelector$0()], type$.JSArray_legacy_SimpleSelector_2),
        t1 = this.scanner;
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 === 42 || t2 === 91 || t2 === 46 || t2 === 35 || t2 === 37 || t2 === 58))
          break;
        components.push(this._selector$_simpleSelector$1$allowParent(false));
      }
      return X.CompoundSelector$0(components);
    },
    _selector$_simpleSelector$1$allowParent: function(allowParent) {
      var $name, text, t2, suffix, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      if (allowParent == null)
        allowParent = _this._selector$_allowParent;
      switch (t1.peekChar$0()) {
        case 91:
          return _this._selector$_attributeSelector$0();
        case 46:
          t1.expectChar$1(46);
          return new X.ClassSelector0(_this.identifier$0());
        case 35:
          t1.expectChar$1(35);
          return new N.IDSelector0(_this.identifier$0());
        case 37:
          t1.expectChar$1(37);
          $name = _this.identifier$0();
          if (!_this._selector$_allowPlaceholder)
            _this.error$2(0, string$.Placeh, t1.spanFrom$1(start));
          return new N.PlaceholderSelector0($name);
        case 58:
          return _this._selector$_pseudoSelector$0();
        case 38:
          t1.expectChar$1(38);
          if (_this.lookingAtIdentifierBody$0()) {
            text = new P.StringBuffer("");
            _this._parser$_identifierBody$1(text);
            if (text._contents.length === 0)
              t1.error$1(0, "Expected identifier body.");
            t2 = text._contents;
            suffix = t2.charCodeAt(0) == 0 ? t2 : t2;
          } else
            suffix = null;
          if (!allowParent)
            _this.error$2(0, "Parent selectors aren't allowed here.", t1.spanFrom$1(start));
          return new M.ParentSelector0(suffix);
        default:
          return _this._selector$_typeOrUniversalSelector$0();
      }
    },
    _selector$_simpleSelector$0: function() {
      return this._selector$_simpleSelector$1$allowParent(null);
    },
    _selector$_attributeSelector$0: function() {
      var $name, operator, next, value, modifier, _this = this, _null = null,
        t1 = _this.scanner;
      t1.expectChar$1(91);
      _this.whitespace$0();
      $name = _this._selector$_attributeName$0();
      _this.whitespace$0();
      if (t1.scanChar$1(93))
        return new N.AttributeSelector0($name, _null, _null, _null);
      operator = _this._selector$_attributeOperator$0();
      _this.whitespace$0();
      next = t1.peekChar$0();
      value = next === 39 || next === 34 ? _this.string$0() : _this.identifier$0();
      _this.whitespace$0();
      modifier = T.isAlphabetic1(t1.peekChar$0()) ? H.Primitives_stringFromCharCode(t1.readChar$0()) : _null;
      t1.expectChar$1(93);
      return new N.AttributeSelector0($name, operator, value, modifier);
    },
    _selector$_attributeName$0: function() {
      var nameOrNamespace, _this = this,
        t1 = _this.scanner;
      if (t1.scanChar$1(42)) {
        t1.expectChar$1(124);
        return new D.QualifiedName0(_this.identifier$0(), "*");
      }
      nameOrNamespace = _this.identifier$0();
      if (t1.peekChar$0() !== 124 || t1.peekChar$1(1) === 61)
        return new D.QualifiedName0(nameOrNamespace, null);
      t1.readChar$0();
      return new D.QualifiedName0(_this.identifier$0(), nameOrNamespace);
    },
    _selector$_attributeOperator$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      switch (t1.readChar$0()) {
        case 61:
          return C.AttributeOperator_sEs0;
        case 126:
          t1.expectChar$1(61);
          return C.AttributeOperator_fz10;
        case 124:
          t1.expectChar$1(61);
          return C.AttributeOperator_AuK0;
        case 94:
          t1.expectChar$1(61);
          return C.AttributeOperator_4L50;
        case 36:
          t1.expectChar$1(61);
          return C.AttributeOperator_mOX0;
        case 42:
          t1.expectChar$1(61);
          return C.AttributeOperator_gqZ0;
        default:
          t1.error$2$position(0, 'Expected "]".', t2);
      }
    },
    _selector$_pseudoSelector$0: function() {
      var element, $name, unvendored, selector, argument, t2, _this = this, _null = null,
        t1 = _this.scanner;
      t1.expectChar$1(58);
      element = t1.scanChar$1(58);
      $name = _this.identifier$0();
      if (!t1.scanChar$1(40))
        return D.PseudoSelector$0($name, _null, element, _null);
      _this.whitespace$0();
      unvendored = B.unvendor0($name);
      if (element)
        if ($._selectorPseudoElements0.contains$1(0, unvendored)) {
          selector = _this._selector$_selectorList$0();
          argument = _null;
        } else {
          argument = _this.declarationValue$1$allowEmpty(true);
          selector = _null;
        }
      else if ($._selectorPseudoClasses0.contains$1(0, unvendored)) {
        selector = _this._selector$_selectorList$0();
        argument = _null;
      } else if (unvendored === "nth-child" || unvendored === "nth-last-child") {
        argument = _this._selector$_aNPlusB$0();
        _this.whitespace$0();
        t2 = t1.peekChar$1(-1);
        if ((t2 === 32 || t2 === 9 || T.isNewline0(t2)) && t1.peekChar$0() !== 41) {
          _this.expectIdentifier$1("of");
          argument += " of";
          _this.whitespace$0();
          selector = _this._selector$_selectorList$0();
        } else
          selector = _null;
      } else {
        argument = C.JSString_methods.trimRight$0(_this.declarationValue$1$allowEmpty(true));
        selector = _null;
      }
      t1.expectChar$1(41);
      return D.PseudoSelector$0($name, argument, element, selector);
    },
    _selector$_aNPlusB$0: function() {
      var t2, first, t3, next, last, _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 101:
        case 69:
          _this.expectIdentifier$1("even");
          return "even";
        case 111:
        case 79:
          _this.expectIdentifier$1("odd");
          return "odd";
        case 43:
        case 45:
          t2 = H.Primitives_stringFromCharCode(t1.readChar$0());
          break;
        default:
          t2 = "";
      }
      first = t1.peekChar$0();
      if (first != null && T.isDigit0(first)) {
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
        }
        _this.whitespace$0();
        if (!_this.scanIdentChar$1(110))
          return t2.charCodeAt(0) == 0 ? t2 : t2;
      } else
        _this.expectIdentChar$1(110);
      t2 += H.Primitives_stringFromCharCode(110);
      _this.whitespace$0();
      next = t1.peekChar$0();
      if (next !== 43 && next !== 45)
        return t2.charCodeAt(0) == 0 ? t2 : t2;
      t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
      _this.whitespace$0();
      last = t1.peekChar$0();
      if (last == null || !T.isDigit0(last))
        t1.error$1(0, "Expected a number.");
      while (true) {
        t3 = t1.peekChar$0();
        if (!(t3 != null && t3 >= 48 && t3 <= 57))
          break;
        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    _selector$_typeOrUniversalSelector$0: function() {
      var nameOrNamespace, _this = this,
        t1 = _this.scanner,
        first = t1.peekChar$0();
      if (first === 42) {
        t1.readChar$0();
        if (!t1.scanChar$1(124))
          return new N.UniversalSelector0(null);
        if (t1.scanChar$1(42))
          return new N.UniversalSelector0("*");
        else
          return new F.TypeSelector0(new D.QualifiedName0(_this.identifier$0(), "*"));
      } else if (first === 124) {
        t1.readChar$0();
        if (t1.scanChar$1(42))
          return new N.UniversalSelector0("");
        else
          return new F.TypeSelector0(new D.QualifiedName0(_this.identifier$0(), ""));
      }
      nameOrNamespace = _this.identifier$0();
      if (!t1.scanChar$1(124))
        return new F.TypeSelector0(new D.QualifiedName0(nameOrNamespace, null));
      else if (t1.scanChar$1(42))
        return new N.UniversalSelector0(nameOrNamespace);
      else
        return new F.TypeSelector0(new D.QualifiedName0(_this.identifier$0(), nameOrNamespace));
    }
  };
  T.SelectorParser_parse_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        selector = t1._selector$_selectorList$0();
      t1 = t1.scanner;
      if (t1._string_scanner$_position !== t1.string.length)
        t1.error$1(0, "expected selector.");
      return selector;
    },
    $signature: 44
  };
  T.SelectorParser_parseCompoundSelector_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        compound = t1._selector$_compoundSelector$0();
      t1 = t1.scanner;
      if (t1._string_scanner$_position !== t1.string.length)
        t1.error$1(0, "expected selector.");
      return compound;
    },
    $signature: 426
  };
  N.serialize_closure0.prototype = {
    call$1: function(codeUnit) {
      return codeUnit > 127;
    },
    $signature: 24
  };
  N._SerializeVisitor.prototype = {
    visitCssStylesheet$1: function(node) {
      var t1, t2, t3, t4, t5, previous, i, child, _this = this;
      for (t1 = _this._serialize0$_style !== C.OutputStyle_compressed0, t2 = type$.legacy_CssComment_2, t3 = type$.legacy_CssParentNode_2, t4 = _this._buffer, t5 = _this._lineFeed.text, previous = null, i = 0; i < J.get$length$asx(node.get$children(node)); ++i) {
        child = J.$index$asx(node.get$children(node), i);
        if (_this._serialize0$_isInvisible$1(child))
          continue;
        if (previous != null) {
          if (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous))
            t4.writeCharCode$1(59);
          if (t1)
            t4.write$1(0, t5);
          if (previous.get$isGroupEnd())
            if (t1)
              t4.write$1(0, t5);
        }
        child.accept$1(_this);
        previous = child;
      }
      if (previous != null)
        t1 = (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous)) && t1;
      else
        t1 = false;
      if (t1)
        t4.writeCharCode$1(59);
    },
    visitCssComment$1: function(node) {
      this._buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssComment_closure0(this, node));
    },
    visitCssAtRule$1: function(node) {
      var t1, _this = this;
      _this._serialize0$_writeIndentation$0();
      t1 = _this._buffer;
      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssAtRule_closure0(_this, node));
      if (!node.isChildless) {
        if (_this._serialize0$_style !== C.OutputStyle_compressed0)
          t1.writeCharCode$1(32);
        _this._serialize0$_visitChildren$1(node.children);
      }
    },
    visitCssMediaRule$1: function(node) {
      var t1, _this = this;
      _this._serialize0$_writeIndentation$0();
      t1 = _this._buffer;
      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssMediaRule_closure0(_this, node));
      if (_this._serialize0$_style !== C.OutputStyle_compressed0)
        t1.writeCharCode$1(32);
      _this._serialize0$_visitChildren$1(node.children);
    },
    visitCssImport$1: function(node) {
      this._serialize0$_writeIndentation$0();
      this._buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssImport_closure0(this, node));
    },
    _serialize0$_writeImportUrl$1: function(url) {
      var urlContents, maybeQuote, _this = this;
      if (_this._serialize0$_style !== C.OutputStyle_compressed0 || J._codeUnitAt$1$s(url, 0) !== 117) {
        _this._buffer.write$1(0, url);
        return;
      }
      urlContents = J.substring$2$s(url, 4, url.length - 1);
      maybeQuote = C.JSString_methods._codeUnitAt$1(urlContents, 0);
      if (maybeQuote === 39 || maybeQuote === 34)
        _this._buffer.write$1(0, urlContents);
      else
        _this._serialize0$_visitQuotedString$1(urlContents);
    },
    visitCssKeyframeBlock$1: function(node) {
      var t1, _this = this;
      _this._serialize0$_writeIndentation$0();
      t1 = _this._buffer;
      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssKeyframeBlock_closure0(_this, node));
      if (_this._serialize0$_style !== C.OutputStyle_compressed0)
        t1.writeCharCode$1(32);
      _this._serialize0$_visitChildren$1(node.children);
    },
    _serialize0$_visitMediaQuery$1: function(query) {
      var t2, t3, _this = this,
        t1 = query.modifier;
      if (t1 != null) {
        t2 = _this._buffer;
        t2.write$1(0, t1);
        t2.writeCharCode$1(32);
      }
      t1 = query.type;
      if (t1 != null) {
        t2 = _this._buffer;
        t2.write$1(0, t1);
        if (query.features.length !== 0)
          t2.write$1(0, " and ");
      }
      t1 = query.features;
      t2 = _this._serialize0$_style === C.OutputStyle_compressed0 ? "and " : " and ";
      t3 = _this._buffer;
      _this._serialize0$_writeBetween$3(t1, t2, t3.get$write(t3));
    },
    visitCssStyleRule$1: function(node) {
      var t1, _this = this;
      _this._serialize0$_writeIndentation$0();
      t1 = _this._buffer;
      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssStyleRule_closure0(_this, node));
      if (_this._serialize0$_style !== C.OutputStyle_compressed0)
        t1.writeCharCode$1(32);
      _this._serialize0$_visitChildren$1(node.children);
    },
    visitCssSupportsRule$1: function(node) {
      var t1, _this = this;
      _this._serialize0$_writeIndentation$0();
      t1 = _this._buffer;
      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssSupportsRule_closure0(_this, node));
      if (_this._serialize0$_style !== C.OutputStyle_compressed0)
        t1.writeCharCode$1(32);
      _this._serialize0$_visitChildren$1(node.children);
    },
    visitCssDeclaration$1: function(node) {
      var error, error0, t1, t2, exception, _this = this;
      _this._serialize0$_writeIndentation$0();
      t1 = node.name;
      _this._serialize0$_write$1(t1);
      t2 = _this._buffer;
      t2.writeCharCode$1(58);
      if (J.startsWith$1$s(t1.get$value(t1), "--") && node.parsedAsCustomProperty)
        t2.forSpan$2(node.value.span, new N._SerializeVisitor_visitCssDeclaration_closure1(_this, node));
      else {
        if (_this._serialize0$_style !== C.OutputStyle_compressed0)
          t2.writeCharCode$1(32);
        try {
          t2.forSpan$2(node.valueSpanForMap, new N._SerializeVisitor_visitCssDeclaration_closure2(_this, node));
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (t1 instanceof E.MultiSpanSassScriptException0) {
            error = t1;
            throw H.wrapException(E.MultiSpanSassException$0(error.message, node.value.span, error.primaryLabel, error.secondarySpans));
          } else if (t1 instanceof E.SassScriptException0) {
            error0 = t1;
            throw H.wrapException(E.SassException$0(error0.message, node.value.span));
          } else
            throw exception;
        }
      }
    },
    _serialize0$_writeFoldedValue$1: function(node) {
      var t1, t2, next, t3,
        scanner = X.StringScanner$(type$.legacy_SassString_2._as(node.value.value).text, null, null);
      for (t1 = scanner.string.length, t2 = this._buffer; scanner._string_scanner$_position !== t1;) {
        next = scanner.readChar$0();
        if (next !== 10) {
          t2.writeCharCode$1(next);
          continue;
        }
        t2.writeCharCode$1(32);
        while (true) {
          t3 = scanner.peekChar$0();
          if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))
            break;
          scanner.readChar$0();
        }
      }
    },
    _serialize0$_writeReindentedValue$1: function(node) {
      var _this = this,
        t1 = node.value,
        value = type$.legacy_SassString_2._as(t1.value).text,
        minimumIndentation = _this._serialize0$_minimumIndentation$1(value);
      if (minimumIndentation == null) {
        _this._buffer.write$1(0, value);
        return;
      } else if (minimumIndentation === -1) {
        t1 = _this._buffer;
        t1.write$1(0, B.trimAsciiRight0(value, true));
        t1.writeCharCode$1(32);
        return;
      }
      if (t1.span != null) {
        t1 = node.name.get$span();
        t1 = Y.FileLocation$_(t1.file, t1._file$_start);
        minimumIndentation = Math.min(minimumIndentation, t1.file.getColumn$1(t1.offset));
      }
      _this._serialize0$_writeWithIndent$2(value, minimumIndentation);
    },
    _serialize0$_minimumIndentation$1: function(text) {
      var character, t2, min, next, min0,
        scanner = Z.LineScanner$(text),
        t1 = scanner.string.length;
      while (true) {
        if (scanner._string_scanner$_position !== t1) {
          character = scanner.super$StringScanner$readChar();
          scanner._adjustLineAndColumn$1(character);
          t2 = character !== 10;
        } else
          t2 = false;
        if (!t2)
          break;
      }
      if (scanner._string_scanner$_position === t1)
        return scanner.peekChar$1(-1) === 10 ? -1 : null;
      for (min = null; scanner._string_scanner$_position !== t1;) {
        for (; scanner._string_scanner$_position !== t1;) {
          next = scanner.peekChar$0();
          if (next !== 32 && next !== 9)
            break;
          scanner._adjustLineAndColumn$1(scanner.super$StringScanner$readChar());
        }
        if (scanner._string_scanner$_position === t1 || scanner.scanChar$1(10))
          continue;
        min0 = scanner._line_scanner$_column;
        min = min == null ? min0 : Math.min(min, min0);
        while (true) {
          if (scanner._string_scanner$_position !== t1) {
            character = scanner.super$StringScanner$readChar();
            scanner._adjustLineAndColumn$1(character);
            t2 = character !== 10;
          } else
            t2 = false;
          if (!t2)
            break;
        }
      }
      return min == null ? -1 : min;
    },
    _serialize0$_writeWithIndent$2: function(text, minimumIndentation) {
      var t1, t2, t3, character, t4, lineStart, newlines, end,
        scanner = Z.LineScanner$(text);
      for (t1 = scanner.string, t2 = t1.length, t3 = this._buffer; scanner._string_scanner$_position !== t2;) {
        character = scanner.super$StringScanner$readChar();
        scanner._adjustLineAndColumn$1(character);
        if (character === 10)
          break;
        t3.writeCharCode$1(character);
      }
      for (t4 = J.getInterceptor$s(t1); true;) {
        lineStart = scanner._string_scanner$_position;
        for (newlines = 1; true;) {
          if (scanner._string_scanner$_position === t2) {
            t3.writeCharCode$1(32);
            return;
          }
          character = scanner.super$StringScanner$readChar();
          scanner._adjustLineAndColumn$1(character);
          if (character === 32 || character === 9)
            continue;
          if (character !== 10)
            break;
          lineStart = scanner._string_scanner$_position;
          ++newlines;
        }
        this._serialize0$_writeTimes$2(10, newlines);
        this._serialize0$_writeIndentation$0();
        end = scanner._string_scanner$_position;
        t3.write$1(0, t4.substring$2(t1, lineStart + minimumIndentation, end));
        for (; true;) {
          if (scanner._string_scanner$_position === t2)
            return;
          character = scanner.super$StringScanner$readChar();
          scanner._adjustLineAndColumn$1(character);
          if (character === 10)
            break;
          t3.writeCharCode$1(character);
        }
      }
    },
    visitColor$1: function(value) {
      var $name, hexLength, t2, t3, _this = this,
        t1 = _this._serialize0$_style === C.OutputStyle_compressed0;
      if (t1 && Math.abs(value.alpha - 1) < $.$get$epsilon0()) {
        $name = $.$get$namesByColor0().$index(0, value);
        hexLength = _this._serialize0$_canUseShortHex$1(value) ? 4 : 7;
        if ($name != null && $name.length <= hexLength)
          _this._buffer.write$1(0, $name);
        else {
          t1 = _this._buffer;
          if (_this._serialize0$_canUseShortHex$1(value)) {
            t1.writeCharCode$1(35);
            t1.writeCharCode$1(T.hexCharFor0(value.get$red() & 15));
            t1.writeCharCode$1(T.hexCharFor0(value.get$green() & 15));
            t1.writeCharCode$1(T.hexCharFor0(value.get$blue() & 15));
          } else {
            t1.writeCharCode$1(35);
            _this._serialize0$_writeHexComponent$1(value.get$red());
            _this._serialize0$_writeHexComponent$1(value.get$green());
            _this._serialize0$_writeHexComponent$1(value.get$blue());
          }
        }
        return;
      }
      if (value.get$original() != null)
        _this._buffer.write$1(0, value.get$original());
      else {
        t2 = $.$get$namesByColor0();
        if (t2.containsKey$1(value) && !(Math.abs(value.alpha - 0) < $.$get$epsilon0()))
          _this._buffer.write$1(0, t2.$index(0, value));
        else {
          t2 = value.alpha;
          t3 = _this._buffer;
          if (Math.abs(t2 - 1) < $.$get$epsilon0()) {
            t3.writeCharCode$1(35);
            _this._serialize0$_writeHexComponent$1(value.get$red());
            _this._serialize0$_writeHexComponent$1(value.get$green());
            _this._serialize0$_writeHexComponent$1(value.get$blue());
          } else {
            t3.write$1(0, "rgba(" + H.S(value.get$red()));
            t3.write$1(0, t1 ? "," : ", ");
            t3.write$1(0, value.get$green());
            t3.write$1(0, t1 ? "," : ", ");
            t3.write$1(0, value.get$blue());
            t3.write$1(0, t1 ? "," : ", ");
            _this._serialize0$_writeNumber$1(t2);
            t3.writeCharCode$1(41);
          }
        }
      }
    },
    _serialize0$_canUseShortHex$1: function(color) {
      var t1 = color.get$red();
      if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {
        t1 = color.get$green();
        if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {
          t1 = color.get$blue();
          t1 = (t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4);
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    _serialize0$_writeHexComponent$1: function(color) {
      var t1 = this._buffer;
      t1.writeCharCode$1(T.hexCharFor0(C.JSInt_methods._shrOtherPositive$1(color, 4)));
      t1.writeCharCode$1(T.hexCharFor0(color & 15));
    },
    visitList$1: function(value) {
      var t2, singleton, t3, t4, _this = this,
        t1 = value.hasBrackets;
      if (t1)
        _this._buffer.writeCharCode$1(91);
      else if (value._list1$_contents.length === 0) {
        if (!_this._inspect)
          throw H.wrapException(E.SassScriptException$0("() isn't a valid CSS value."));
        _this._buffer.write$1(0, "()");
        return;
      }
      t2 = _this._inspect;
      singleton = t2 && value._list1$_contents.length === 1 && value.separator === C.ListSeparator_comma0;
      if (singleton && !t1)
        _this._buffer.writeCharCode$1(40);
      t3 = value._list1$_contents;
      t3 = t2 ? t3 : new H.WhereIterable(t3, new N._SerializeVisitor_visitList_closure2(), H._arrayInstanceType(t3)._eval$1("WhereIterable<1>"));
      if (value.separator === C.ListSeparator_space0)
        t4 = " ";
      else
        t4 = _this._serialize0$_style === C.OutputStyle_compressed0 ? "," : ", ";
      _this._serialize0$_writeBetween$3(t3, t4, t2 ? new N._SerializeVisitor_visitList_closure3(_this, value) : new N._SerializeVisitor_visitList_closure4(_this));
      if (singleton) {
        t2 = _this._buffer;
        t2.writeCharCode$1(44);
        if (!t1)
          t2.writeCharCode$1(41);
      }
      if (t1)
        _this._buffer.writeCharCode$1(93);
    },
    _serialize0$_elementNeedsParens$2: function(separator, value) {
      var t1;
      if (value instanceof D.SassList0) {
        if (value._list1$_contents.length < 2)
          return false;
        if (value.hasBrackets)
          return false;
        t1 = value.separator;
        return separator === C.ListSeparator_comma0 ? t1 === C.ListSeparator_comma0 : t1 !== C.ListSeparator_undecided0;
      }
      return false;
    },
    visitMap$1: function(map) {
      var t1, t2, _this = this;
      if (!_this._inspect)
        throw H.wrapException(E.SassScriptException$0(map.toString$0(0) + " isn't a valid CSS value."));
      t1 = _this._buffer;
      t1.writeCharCode$1(40);
      t2 = map.contents;
      _this._serialize0$_writeBetween$3(t2.get$keys(t2), ", ", new N._SerializeVisitor_visitMap_closure0(_this, map));
      t1.writeCharCode$1(41);
    },
    _serialize0$_writeMapElement$1: function(value) {
      var needsParens = value instanceof D.SassList0 && value.separator === C.ListSeparator_comma0 && !value.hasBrackets;
      if (needsParens)
        this._buffer.writeCharCode$1(40);
      value.accept$1(this);
      if (needsParens)
        this._buffer.writeCharCode$1(41);
    },
    visitNumber$1: function(value) {
      var _this = this,
        t1 = value.asSlash;
      if (t1 != null) {
        _this.visitNumber$1(t1.item1);
        _this._buffer.writeCharCode$1(47);
        _this.visitNumber$1(t1.item2);
        return;
      }
      _this._serialize0$_writeNumber$1(value.value);
      if (!_this._inspect) {
        if (J.get$length$asx(value.get$numeratorUnits()) > 1 || value.get$denominatorUnits().length !== 0)
          throw H.wrapException(E.SassScriptException$0(value.toString$0(0) + " isn't a valid CSS value."));
        if (J.get$isNotEmpty$asx(value.get$numeratorUnits()))
          _this._buffer.write$1(0, J.get$first$ax(value.get$numeratorUnits()));
      } else
        _this._buffer.write$1(0, value.get$unitString());
    },
    _serialize0$_writeNumber$1: function(number) {
      var t1, text, text0, _this = this,
        integer = T.fuzzyIsInt0(number) ? J.round$0$n(number) : null;
      if (integer != null) {
        t1 = integer >= 1e21 ? _this._serialize0$_removeExponent$1(C.JSInt_methods.toString$0(integer)) : C.JSInt_methods.toString$0(integer);
        _this._buffer.write$1(0, t1);
        return;
      }
      text = number >= 1e21 ? _this._serialize0$_removeExponent$1(C.JSNumber_methods.toString$0(number)) : C.JSNumber_methods.toString$0(number);
      text0 = _this._serialize0$_style === C.OutputStyle_compressed0 && C.JSString_methods._codeUnitAt$1(text, 0) === 48 ? C.JSString_methods.substring$1(text, 1) : text;
      if (text.length < 12) {
        _this._buffer.write$1(0, text0);
        return;
      }
      _this._serialize0$_writeDecimal$1(text0);
    },
    _serialize0$_removeExponent$1: function(text) {
      var buffer, exponent, t2, additionalZeroes, negative,
        t1 = text.length,
        i = 0;
      while (true) {
        if (!(i < t1)) {
          buffer = null;
          exponent = null;
          break;
        }
        c$0: {
          if (C.JSString_methods._codeUnitAt$1(text, i) !== 101)
            break c$0;
          buffer = new P.StringBuffer("");
          t2 = H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(text, 0));
          buffer._contents = t2;
          if (i > 2)
            buffer._contents = t2 + C.JSString_methods.substring$2(text, 2, i);
          exponent = P.int_parse(C.JSString_methods.substring$2(text, i + 1, t1), null);
          break;
        }
        ++i;
      }
      if (buffer == null)
        return text;
      if (exponent > 0) {
        t1 = buffer._contents;
        additionalZeroes = exponent - (t1.length - 1);
        for (i = 0; i < additionalZeroes; ++i)
          t1 = buffer._contents += H.Primitives_stringFromCharCode(48);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        negative = C.JSString_methods._codeUnitAt$1(text, 0) === 45;
        t1 = (negative ? H.Primitives_stringFromCharCode(45) : "") + "0.";
        for (i = -1; i > exponent; --i)
          t1 += H.Primitives_stringFromCharCode(48);
        if (negative) {
          t2 = buffer._contents;
          t2 = C.JSString_methods.substring$1(t2.charCodeAt(0) == 0 ? t2 : t2, 1);
        } else
          t2 = buffer;
        t2 = t1 + H.S(t2);
        return t2.charCodeAt(0) == 0 ? t2 : t2;
      }
    },
    _serialize0$_writeDecimal$1: function(text) {
      var t1, t2, textIndex, codeUnit, digits, t3, digitsIndex, digitsIndex0, textIndex0, newDigit, i;
      for (t1 = text.length, t2 = this._buffer, textIndex = 0; textIndex < t1; ++textIndex) {
        codeUnit = C.JSString_methods._codeUnitAt$1(text, textIndex);
        if (codeUnit === 46) {
          if (textIndex === t1 - 2 && C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 48)
            return;
          t2.writeCharCode$1(codeUnit);
          ++textIndex;
          break;
        }
        t2.writeCharCode$1(codeUnit);
      }
      if (textIndex === t1)
        return;
      digits = new Uint8Array(10);
      t3 = digits.length;
      digitsIndex = 0;
      while (true) {
        if (!(textIndex < t1 && digitsIndex < t3))
          break;
        digitsIndex0 = digitsIndex + 1;
        textIndex0 = textIndex + 1;
        digits[digitsIndex] = C.JSString_methods._codeUnitAt$1(text, textIndex) - 48;
        digitsIndex = digitsIndex0;
        textIndex = textIndex0;
      }
      if (textIndex !== t1 && C.JSString_methods._codeUnitAt$1(text, textIndex) - 48 >= 5)
        for (; digitsIndex >= 0; digitsIndex = digitsIndex0) {
          digitsIndex0 = digitsIndex - 1;
          newDigit = digits[digitsIndex0] + 1;
          digits[digitsIndex0] = newDigit;
          if (newDigit !== 10)
            break;
        }
      while (true) {
        if (!(digitsIndex > 0 && digits[digitsIndex - 1] === 0))
          break;
        --digitsIndex;
      }
      for (i = 0; i < digitsIndex; ++i)
        t2.writeCharCode$1(48 + digits[i]);
    },
    _serialize0$_visitQuotedString$2$forceDoubleQuote: function(string, forceDoubleQuote) {
      var t1, includesSingleQuote, includesDoubleQuote, i, char, t2, next, quote, _this = this,
        buffer = forceDoubleQuote ? _this._buffer : new P.StringBuffer("");
      if (forceDoubleQuote)
        buffer.writeCharCode$1(34);
      for (t1 = string.length, includesSingleQuote = false, includesDoubleQuote = false, i = 0; i < t1; ++i) {
        char = C.JSString_methods._codeUnitAt$1(string, i);
        switch (char) {
          case 39:
            if (forceDoubleQuote)
              buffer.writeCharCode$1(39);
            else {
              if (includesDoubleQuote) {
                _this._serialize0$_visitQuotedString$2$forceDoubleQuote(string, true);
                return;
              } else
                buffer.writeCharCode$1(39);
              includesSingleQuote = true;
            }
            break;
          case 34:
            if (forceDoubleQuote) {
              buffer.writeCharCode$1(92);
              buffer.writeCharCode$1(34);
            } else {
              if (includesSingleQuote) {
                _this._serialize0$_visitQuotedString$2$forceDoubleQuote(string, true);
                return;
              } else
                buffer.writeCharCode$1(34);
              includesDoubleQuote = true;
            }
            break;
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 16:
          case 17:
          case 18:
          case 19:
          case 20:
          case 21:
          case 22:
          case 23:
          case 24:
          case 25:
          case 26:
          case 27:
          case 28:
          case 29:
          case 30:
          case 31:
            buffer.writeCharCode$1(92);
            if (char > 15) {
              t2 = char >>> 4;
              buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
            }
            t2 = char & 15;
            buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
            t2 = i + 1;
            if (t1 === t2)
              break;
            next = C.JSString_methods._codeUnitAt$1(string, t2);
            if (T.isHex0(next) || next === 32 || next === 9)
              buffer.writeCharCode$1(32);
            break;
          case 92:
            buffer.writeCharCode$1(92);
            buffer.writeCharCode$1(92);
            break;
          default:
            buffer.writeCharCode$1(char);
            break;
        }
      }
      if (forceDoubleQuote)
        buffer.writeCharCode$1(34);
      else {
        quote = includesDoubleQuote ? 39 : 34;
        t1 = _this._buffer;
        t1.writeCharCode$1(quote);
        t1.write$1(0, buffer);
        t1.writeCharCode$1(quote);
      }
    },
    _serialize0$_visitQuotedString$1: function(string) {
      return this._serialize0$_visitQuotedString$2$forceDoubleQuote(string, false);
    },
    _serialize0$_visitUnquotedString$1: function(string) {
      var t1, t2, afterNewline, i, char;
      for (t1 = string.length, t2 = this._buffer, afterNewline = false, i = 0; i < t1; ++i) {
        char = C.JSString_methods._codeUnitAt$1(string, i);
        switch (char) {
          case 10:
            t2.writeCharCode$1(32);
            afterNewline = true;
            break;
          case 32:
            if (!afterNewline)
              t2.writeCharCode$1(32);
            break;
          default:
            t2.writeCharCode$1(char);
            afterNewline = false;
            break;
        }
      }
    },
    visitComplexSelector$1: function(complex) {
      var t1, t2, t3, t4, lastComponent, _i, component, t5;
      for (t1 = complex.components, t2 = t1.length, t3 = this._buffer, t4 = this._serialize0$_style === C.OutputStyle_compressed0, lastComponent = null, _i = 0; _i < t2; ++_i, lastComponent = component) {
        component = t1[_i];
        if (lastComponent != null)
          if (!(t4 && lastComponent instanceof S.Combinator0))
            t5 = !(t4 && component instanceof S.Combinator0);
          else
            t5 = false;
        else
          t5 = false;
        if (t5)
          t3.write$1(0, " ");
        if (component instanceof X.CompoundSelector0)
          this.visitCompoundSelector$1(component);
        else
          t3.write$1(0, component);
      }
    },
    visitCompoundSelector$1: function(compound) {
      var t2, t3, _i,
        t1 = this._buffer,
        start = t1.get$length(t1);
      for (t2 = compound.components, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t2[_i].accept$1(this);
      if (t1.get$length(t1) === start)
        t1.writeCharCode$1(42);
    },
    visitSelectorList$1: function(list) {
      var complexes, t1, t2, t3, t4, first, t5, _this = this;
      if (_this._inspect)
        complexes = list.components;
      else {
        t1 = list.components;
        complexes = new H.WhereIterable(t1, new N._SerializeVisitor_visitSelectorList_closure0(), H._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
      }
      for (t1 = J.get$iterator$ax(complexes), t2 = _this._serialize0$_style !== C.OutputStyle_compressed0, t3 = _this._buffer, t4 = _this._lineFeed.text, first = true; t1.moveNext$0();) {
        t5 = t1.get$current(t1);
        if (first)
          first = false;
        else {
          t3.writeCharCode$1(44);
          if (t5.lineBreak) {
            if (t2)
              t3.write$1(0, t4);
          } else if (t2)
            t3.writeCharCode$1(32);
        }
        _this.visitComplexSelector$1(t5);
      }
    },
    visitPseudoSelector$1: function(pseudo) {
      var t4, t5, t6,
        t1 = pseudo.selector,
        t2 = t1 == null,
        t3 = !t2;
      if (t3 && pseudo.name === "not" && t1.get$isInvisible())
        return;
      t4 = this._buffer;
      t4.writeCharCode$1(58);
      if (!pseudo.isSyntacticClass)
        t4.writeCharCode$1(58);
      t4.write$1(0, pseudo.name);
      t5 = pseudo.argument;
      t6 = t5 == null;
      if (t6 && t2)
        return;
      t4.writeCharCode$1(40);
      if (!t6) {
        t4.write$1(0, t5);
        if (t3)
          t4.writeCharCode$1(32);
      }
      if (t3)
        this.visitSelectorList$1(t1);
      t4.writeCharCode$1(41);
    },
    _serialize0$_write$1: function(value) {
      return this._buffer.forSpan$2(value.get$span(), new N._SerializeVisitor__write_closure0(this, value));
    },
    _serialize0$_visitChildren$1: function(children) {
      var _this = this, t1 = {},
        t2 = _this._buffer;
      t2.writeCharCode$1(123);
      if (children.every$1(children, _this.get$_serialize0$_isInvisible())) {
        t2.writeCharCode$1(125);
        return;
      }
      _this._serialize0$_writeLineFeed$0();
      t1.previous = null;
      ++_this._serialize0$_indentation;
      new N._SerializeVisitor__visitChildren_closure0(t1, _this, children).call$0();
      --_this._serialize0$_indentation;
      t1 = t1.previous;
      if ((type$.legacy_CssParentNode_2._is(t1) ? t1.get$isChildless() : !type$.legacy_CssComment_2._is(t1)) && _this._serialize0$_style !== C.OutputStyle_compressed0)
        t2.writeCharCode$1(59);
      _this._serialize0$_writeLineFeed$0();
      _this._serialize0$_writeIndentation$0();
      t2.writeCharCode$1(125);
    },
    _serialize0$_writeLineFeed$0: function() {
      if (this._serialize0$_style !== C.OutputStyle_compressed0)
        this._buffer.write$1(0, this._lineFeed.text);
    },
    _serialize0$_writeIndentation$0: function() {
      var _this = this;
      if (_this._serialize0$_style === C.OutputStyle_compressed0)
        return;
      _this._serialize0$_writeTimes$2(_this._serialize0$_indentCharacter, _this._serialize0$_indentation * _this._serialize0$_indentWidth);
    },
    _serialize0$_writeTimes$2: function(char, times) {
      var t1, i;
      for (t1 = this._buffer, i = 0; i < times; ++i)
        t1.writeCharCode$1(char);
    },
    _serialize0$_writeBetween$1$3: function(iterable, text, callback) {
      var t1, t2, first, value;
      for (t1 = J.get$iterator$ax(iterable), t2 = this._buffer, first = true; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (first)
          first = false;
        else
          t2.write$1(0, text);
        callback.call$1(value);
      }
    },
    _serialize0$_writeBetween$3: function(iterable, text, callback) {
      return this._serialize0$_writeBetween$1$3(iterable, text, callback, type$.dynamic);
    },
    _serialize0$_isInvisible$1: function(node) {
      if (this._inspect)
        return false;
      if (this._serialize0$_style === C.OutputStyle_compressed0 && type$.legacy_CssComment_2._is(node) && J._codeUnitAt$1$s(node.text, 2) !== 33)
        return true;
      if (type$.legacy_CssParentNode_2._is(node)) {
        if (type$.legacy_CssAtRule_2._is(node))
          return false;
        if (type$.legacy_CssStyleRule_2._is(node) && node.selector.value.get$isInvisible())
          return true;
        return J.every$1$ax(node.get$children(node), this.get$_serialize0$_isInvisible());
      } else
        return false;
    }
  };
  N._SerializeVisitor_visitCssComment_closure0.prototype = {
    call$0: function() {
      var t2, t3, minimumIndentation,
        t1 = this.$this;
      if (t1._serialize0$_style === C.OutputStyle_compressed0 && J._codeUnitAt$1$s(this.node.text, 2) !== 33)
        return;
      t2 = this.node;
      t3 = t2.text;
      minimumIndentation = t1._serialize0$_minimumIndentation$1(t3);
      if (minimumIndentation == null) {
        t1._serialize0$_writeIndentation$0();
        t1._buffer.write$1(0, t3);
        return;
      }
      t2 = t2.span;
      if (t2 != null) {
        t2 = Y.FileLocation$_(t2.file, t2._file$_start);
        minimumIndentation = Math.min(minimumIndentation, t2.file.getColumn$1(t2.offset));
      }
      t1._serialize0$_writeIndentation$0();
      t1._serialize0$_writeWithIndent$2(t3, minimumIndentation);
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssAtRule_closure0.prototype = {
    call$0: function() {
      var t3,
        t1 = this.$this,
        t2 = t1._buffer;
      t2.writeCharCode$1(64);
      t3 = this.node;
      t1._serialize0$_write$1(t3.name);
      t3 = t3.value;
      if (t3 != null) {
        t2.writeCharCode$1(32);
        t1._serialize0$_write$1(t3);
      }
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssMediaRule_closure0.prototype = {
    call$0: function() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1._buffer;
      t2.write$1(0, "@media");
      t3 = t1._serialize0$_style === C.OutputStyle_compressed0;
      if (t3) {
        t4 = C.JSArray_methods.get$first(this.node.queries);
        t4 = !(t4.modifier == null && t4.type == null);
      } else
        t4 = true;
      if (t4)
        t2.writeCharCode$1(32);
      t2 = t3 ? "," : ", ";
      t1._serialize0$_writeBetween$3(this.node.queries, t2, t1.get$_serialize0$_visitMediaQuery());
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssImport_closure0.prototype = {
    call$0: function() {
      var t3, t4, t5, t6,
        t1 = this.$this,
        t2 = t1._buffer;
      t2.write$1(0, "@import");
      t3 = t1._serialize0$_style === C.OutputStyle_compressed0;
      t4 = !t3;
      if (t4)
        t2.writeCharCode$1(32);
      t5 = this.node;
      t2.forSpan$2(t5.url.get$span(), new N._SerializeVisitor_visitCssImport__closure0(t1, t5));
      t6 = t5.supports;
      if (t6 != null) {
        if (t4)
          t2.writeCharCode$1(32);
        t1._serialize0$_write$1(t6);
      }
      t5 = t5.media;
      if (t5 != null) {
        if (t4)
          t2.writeCharCode$1(32);
        t2 = t3 ? "," : ", ";
        t1._serialize0$_writeBetween$3(t5, t2, t1.get$_serialize0$_visitMediaQuery());
      }
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssImport__closure0.prototype = {
    call$0: function() {
      var t1 = this.node.url;
      return this.$this._serialize0$_writeImportUrl$1(t1.get$value(t1));
    },
    $signature: 1
  };
  N._SerializeVisitor_visitCssKeyframeBlock_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._serialize0$_style === C.OutputStyle_compressed0 ? "," : ", ",
        t3 = t1._buffer;
      return t1._serialize0$_writeBetween$3(this.node.selector.value, t2, t3.get$write(t3));
    },
    $signature: 1
  };
  N._SerializeVisitor_visitCssStyleRule_closure0.prototype = {
    call$0: function() {
      var t1 = this.node.selector.value;
      t1.toString;
      return this.$this.visitSelectorList$1(t1);
    },
    $signature: 1
  };
  N._SerializeVisitor_visitCssSupportsRule_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._buffer;
      t2.write$1(0, "@supports");
      if (!(t1._serialize0$_style === C.OutputStyle_compressed0 && J.codeUnitAt$1$s(this.node.condition.value, 0) === 40))
        t2.writeCharCode$1(32);
      t1._serialize0$_write$1(this.node.condition);
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssDeclaration_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.node;
      if (t1._serialize0$_style === C.OutputStyle_compressed0)
        t1._serialize0$_writeFoldedValue$1(t2);
      else
        t1._serialize0$_writeReindentedValue$1(t2);
    },
    $signature: 0
  };
  N._SerializeVisitor_visitCssDeclaration_closure2.prototype = {
    call$0: function() {
      return this.node.value.value.accept$1(this.$this);
    },
    $signature: 1
  };
  N._SerializeVisitor_visitList_closure2.prototype = {
    call$1: function(element) {
      return !element.get$isBlank();
    },
    $signature: 55
  };
  N._SerializeVisitor_visitList_closure3.prototype = {
    call$1: function(element) {
      var t1 = this.$this,
        needsParens = t1._serialize0$_elementNeedsParens$2(this.value.separator, element);
      if (needsParens)
        t1._buffer.writeCharCode$1(40);
      element.accept$1(t1);
      if (needsParens)
        t1._buffer.writeCharCode$1(41);
    },
    $signature: 87
  };
  N._SerializeVisitor_visitList_closure4.prototype = {
    call$1: function(element) {
      element.accept$1(this.$this);
    },
    $signature: 87
  };
  N._SerializeVisitor_visitMap_closure0.prototype = {
    call$1: function(key) {
      var t1 = this.$this;
      t1._serialize0$_writeMapElement$1(key);
      t1._buffer.write$1(0, ": ");
      t1._serialize0$_writeMapElement$1(this.map.contents.$index(0, key));
    },
    $signature: 87
  };
  N._SerializeVisitor_visitSelectorList_closure0.prototype = {
    call$1: function(complex) {
      return !complex.get$isInvisible();
    },
    $signature: 14
  };
  N._SerializeVisitor__write_closure0.prototype = {
    call$0: function() {
      var t1 = this.value;
      return this.$this._buffer.write$1(0, t1.get$value(t1));
    },
    $signature: 1
  };
  N._SerializeVisitor__visitChildren_closure0.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, i, child, t9;
      for (t1 = this.children._collection$_source, t2 = J.getInterceptor$asx(t1), t3 = this._box_0, t4 = this.$this, t5 = type$.legacy_CssComment_2, t6 = type$.legacy_CssParentNode_2, t7 = t4._buffer, t8 = t4._lineFeed.text, i = 0; i < t2.get$length(t1); ++i) {
        child = t2.elementAt$1(t1, i);
        if (t4._serialize0$_isInvisible$1(child))
          continue;
        t9 = t3.previous;
        if (t9 != null) {
          if (t6._is(t9) ? t9.get$isChildless() : !t5._is(t9))
            t7.writeCharCode$1(59);
          t9 = t4._serialize0$_style !== C.OutputStyle_compressed0;
          if (t9)
            t7.write$1(0, t8);
          if (t3.previous.get$isGroupEnd())
            if (t9)
              t7.write$1(0, t8);
        }
        t3.previous = child;
        child.accept$1(t4);
      }
    },
    $signature: 0
  };
  N.OutputStyle0.prototype = {
    toString$0: function(_) {
      return this._name;
    }
  };
  N.LineFeed0.prototype = {
    toString$0: function(_) {
      return this.name;
    }
  };
  N.SerializeResult0.prototype = {};
  B.ShadowedModuleView0.prototype = {
    get$url: function() {
      return this._shadowed_view0$_inner.get$url();
    },
    get$upstream: function() {
      return this._shadowed_view0$_inner.get$upstream();
    },
    get$extender: function() {
      return this._shadowed_view0$_inner.get$extender();
    },
    get$css: function(_) {
      var t1 = this._shadowed_view0$_inner;
      return t1.get$css(t1);
    },
    get$transitivelyContainsCss: function() {
      return this._shadowed_view0$_inner.get$transitivelyContainsCss();
    },
    get$transitivelyContainsExtensions: function() {
      return this._shadowed_view0$_inner.get$transitivelyContainsExtensions();
    },
    setVariable$3: function($name, value, nodeWithSpan) {
      if (!this.variables.containsKey$1($name))
        throw H.wrapException(E.SassScriptException$0("Undefined variable."));
      else
        return this._shadowed_view0$_inner.setVariable$3($name, value, nodeWithSpan);
    },
    variableIdentity$1: function($name) {
      return this._shadowed_view0$_inner.variableIdentity$1($name);
    },
    $eq: function(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (other instanceof B.ShadowedModuleView0)
        if (_this._shadowed_view0$_inner.$eq(0, other._shadowed_view0$_inner)) {
          t1 = _this.variables;
          t1 = t1.get$keys(t1);
          t2 = other.variables;
          if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {
            t1 = _this.functions;
            t1 = t1.get$keys(t1);
            t2 = other.functions;
            if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {
              t1 = _this.mixins;
              t1 = t1.get$keys(t1);
              t2 = other.mixins;
              t2 = C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2));
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1 = this._shadowed_view0$_inner;
      return t1.get$hashCode(t1);
    },
    cloneCss$0: function() {
      var _this = this;
      return new B.ShadowedModuleView0(_this._shadowed_view0$_inner.cloneCss$0(), _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.$ti._eval$1("ShadowedModuleView0<1*>"));
    },
    toString$0: function(_) {
      return "shadowed " + this._shadowed_view0$_inner.toString$0(0);
    },
    $isModule0: 1,
    get$variables: function() {
      return this.variables;
    },
    get$variableNodes: function() {
      return this.variableNodes;
    },
    get$functions: function(receiver) {
      return this.functions;
    },
    get$mixins: function() {
      return this.mixins;
    }
  };
  B.SilentComment0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitSilentComment$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return this.text;
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  M.SimpleSelector0.prototype = {
    get$minSpecificity: function() {
      return 1000;
    },
    get$maxSpecificity: function() {
      return this.get$minSpecificity();
    },
    addSuffix$1: function(suffix) {
      return H.throwExpression(E.SassScriptException$0('Invalid parent selector "' + this.toString$0(0) + '"'));
    },
    unify$1: function(compound) {
      var result, t1, addedThis, _i, simple, _this = this;
      if (compound.length === 1 && C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0)
        return C.JSArray_methods.get$first(compound).unify$1(H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector_2));
      if (C.JSArray_methods.contains$1(compound, _this))
        return compound;
      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);
      for (t1 = compound.length, addedThis = false, _i = 0; _i < compound.length; compound.length === t1 || (0, H.throwConcurrentModificationError)(compound), ++_i) {
        simple = compound[_i];
        if (!addedThis && simple instanceof D.PseudoSelector0) {
          result.push(_this);
          addedThis = true;
        }
        result.push(simple);
      }
      if (!addedThis)
        result.push(_this);
      return result;
    }
  };
  L.SingleUnitSassNumber0.prototype = {
    get$numeratorUnits: function() {
      return new P.UnmodifiableListView(H.setRuntimeTypeInfo([this._single_unit$_unit], type$.JSArray_legacy_String), type$.UnmodifiableListView_legacy_String);
    },
    get$denominatorUnits: function() {
      return C.List_empty;
    },
    get$hasUnits: function() {
      return true;
    },
    withValue$1: function(value) {
      return new L.SingleUnitSassNumber0(this._single_unit$_unit, value, null);
    },
    withSlash$2: function(numerator, denominator) {
      return new L.SingleUnitSassNumber0(this._single_unit$_unit, this.value, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber_2));
    },
    hasUnit$1: function(unit) {
      return unit === this._single_unit$_unit;
    },
    compatibleWithUnit$1: function(unit) {
      return this.conversionFactor$2(this._single_unit$_unit, unit) != null;
    },
    coerceValueToMatch$1: function(other) {
      return this.convertValueToMatch$3(other, null, null);
    },
    convertValueToMatch$3: function(other, $name, otherName) {
      var t1 = other instanceof L.SingleUnitSassNumber0 ? this._single_unit$_coerceValueToUnit$1(other._single_unit$_unit) : null;
      return t1 == null ? this.super$SassNumber$convertValueToMatch0(other, $name, otherName) : t1;
    },
    coerce$2: function(newNumerators, newDenominators) {
      var t1 = J.getInterceptor$asx(newNumerators);
      t1 = t1.get$length(newNumerators) === 1 && newDenominators.length === 0 ? this._single_unit$_coerceToUnit$1(t1.$index(newNumerators, 0)) : null;
      return t1 == null ? this.super$SassNumber$coerce0(newNumerators, newDenominators, null) : t1;
    },
    coerceValue$3: function(newNumerators, newDenominators, $name) {
      var t1 = J.getInterceptor$asx(newNumerators);
      t1 = t1.get$length(newNumerators) === 1 && newDenominators.length === 0 ? this._single_unit$_coerceValueToUnit$1(t1.$index(newNumerators, 0)) : null;
      return t1 == null ? this.super$SassNumber$coerceValue0(newNumerators, newDenominators, $name) : t1;
    },
    coerceValueToUnit$2: function(unit, $name) {
      var t1 = this._single_unit$_coerceValueToUnit$1(unit);
      return t1 == null ? this.super$SassNumber$coerceValueToUnit0(unit, $name) : t1;
    },
    _single_unit$_coerceToUnit$1: function(unit) {
      var factor, _this = this,
        t1 = _this._single_unit$_unit;
      if (t1 == unit)
        return _this;
      factor = _this.conversionFactor$2(unit, t1);
      return factor == null ? null : new L.SingleUnitSassNumber0(unit, _this.value * factor, null);
    },
    _single_unit$_coerceValueToUnit$1: function(unit) {
      var factor = this.conversionFactor$2(unit, this._single_unit$_unit);
      return factor == null ? null : this.value * factor;
    },
    multiplyUnits$3: function(value, otherNumerators, otherDenominators) {
      var mutableOtherDenominators, t1 = {};
      t1.value = value;
      t1.newNumerators = otherNumerators;
      mutableOtherDenominators = J.toList$0$ax(otherDenominators);
      B.removeFirstWhere0(mutableOtherDenominators, new L.SingleUnitSassNumber_multiplyUnits_closure1(t1, this), new L.SingleUnitSassNumber_multiplyUnits_closure2(t1, this));
      return T.SassNumber_SassNumber$withUnits0(t1.value, mutableOtherDenominators, t1.newNumerators);
    },
    unaryMinus$0: function() {
      return new L.SingleUnitSassNumber0(this._single_unit$_unit, -this.value, null);
    },
    $eq: function(_, other) {
      var factor;
      if (other == null)
        return false;
      if (other instanceof L.SingleUnitSassNumber0) {
        factor = this.conversionFactor$2(other._single_unit$_unit, this._single_unit$_unit);
        return factor != null && Math.abs(this.value * factor - other.value) < $.$get$epsilon0();
      } else
        return false;
    },
    get$hashCode: function(_) {
      return T.fuzzyHashCode0(this.value * this.canonicalMultiplierForUnit$1(this._single_unit$_unit));
    }
  };
  L.SingleUnitSassNumber_multiplyUnits_closure1.prototype = {
    call$1: function(denominator) {
      var t1 = this.$this,
        factor = t1.conversionFactor$2(denominator, t1._single_unit$_unit);
      if (factor == null)
        return false;
      this._box_0.value *= factor;
      return true;
    },
    $signature: 6
  };
  L.SingleUnitSassNumber_multiplyUnits_closure2.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      t1.push(this.$this._single_unit$_unit);
      for (t2 = this._box_0, t3 = J.get$iterator$ax(t2.newNumerators); t3.moveNext$0();)
        t1.push(t3.get$current(t3));
      t2.newNumerators = t1;
      return null;
    },
    $signature: 0
  };
  D.SourceMapBuffer.prototype = {
    get$sourceFiles: function() {
      var t2, t3,
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_SourceFile);
      for (t2 = this._source_map_buffer$_sourceFiles, t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.$indexSet(0, J.toString$0$(t3.key), t3.value);
      }
      return new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_SourceFile);
    },
    get$_targetLocation: function() {
      var t1 = this._source_map_buffer$_buffer._contents,
        t2 = this._line;
      return V.SourceLocation$(t1.length, this._column, t2, null);
    },
    get$length: function(_) {
      return this._source_map_buffer$_buffer._contents.length;
    },
    forSpan$1$2: function(span, callback) {
      var t1, _this = this,
        wasInSpan = _this._inSpan;
      _this._inSpan = true;
      _this._source_map_buffer$_addEntry$2(Y.FileLocation$_(span.file, span._file$_start), _this.get$_targetLocation());
      try {
        t1 = callback.call$0();
        return t1;
      } finally {
        _this._inSpan = wasInSpan;
      }
    },
    forSpan$2: function(span, callback) {
      return this.forSpan$1$2(span, callback, type$.dynamic);
    },
    _source_map_buffer$_addEntry$2: function(source, target) {
      var entry, t2,
        t1 = this._entries;
      if (t1.length !== 0) {
        entry = C.JSArray_methods.get$last(t1);
        t2 = entry.source;
        if (t2.file.getLine$1(t2.offset) == source.file.getLine$1(source.offset) && entry.target.line === target.line)
          return;
        if (entry.target.offset === target.offset)
          return;
      }
      this._source_map_buffer$_sourceFiles.putIfAbsent$2(source.file.url, new D.SourceMapBuffer__addEntry_closure0(source));
      t1.push(new L.Entry(source, target, null));
    },
    write$1: function(_, object) {
      var t1, i,
        string = J.toString$0$(object);
      this._source_map_buffer$_buffer._contents += H.S(string);
      for (t1 = string.length, i = 0; i < t1; ++i)
        if (C.JSString_methods._codeUnitAt$1(string, i) === 10)
          this._writeLine$0();
        else
          ++this._column;
    },
    writeCharCode$1: function(charCode) {
      this._source_map_buffer$_buffer._contents += H.Primitives_stringFromCharCode(charCode);
      if (charCode === 10)
        this._writeLine$0();
      else
        ++this._column;
    },
    _writeLine$0: function() {
      var _this = this,
        t1 = _this._entries;
      if (C.JSArray_methods.get$last(t1).target.line === _this._line && C.JSArray_methods.get$last(t1).target.column === _this._column)
        t1.pop();
      ++_this._line;
      _this._column = 0;
      if (_this._inSpan)
        t1.push(new L.Entry(C.JSArray_methods.get$last(t1).source, _this.get$_targetLocation(), null));
    },
    toString$0: function(_) {
      var t1 = this._source_map_buffer$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    buildSourceMap$1$prefix: function(prefix) {
      var i, t2, prefixColumn, _box_0 = {},
        t1 = prefix.length;
      if (t1 === 0)
        return T.SingleMapping_SingleMapping$fromEntries(this._entries);
      _box_0.prefixColumn = _box_0.prefixLines = 0;
      for (i = 0, t2 = 0; i < t1; ++i)
        if (C.JSString_methods._codeUnitAt$1(prefix, i) === 10) {
          ++_box_0.prefixLines;
          _box_0.prefixColumn = 0;
          t2 = 0;
        } else {
          prefixColumn = t2 + 1;
          _box_0.prefixColumn = prefixColumn;
          t2 = prefixColumn;
        }
      t2 = this._entries;
      return T.SingleMapping_SingleMapping$fromEntries(new H.MappedListIterable(t2, new D.SourceMapBuffer_buildSourceMap_closure0(_box_0, t1), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Entry*>")));
    },
    $isStringBuffer: 1
  };
  D.SourceMapBuffer__addEntry_closure0.prototype = {
    call$0: function() {
      return this.source.file;
    },
    $signature: 124
  };
  D.SourceMapBuffer_buildSourceMap_closure0.prototype = {
    call$1: function(entry) {
      var t1 = entry.source,
        t2 = entry.target,
        t3 = t2.line,
        t4 = this._box_0,
        t5 = t4.prefixLines;
      t4 = t3 === 0 ? t4.prefixColumn : 0;
      return new L.Entry(t1, V.SourceLocation$(t2.offset + this.prefixLength, t2.column + t4, t3 + t5, null), entry.identifierName);
    },
    $signature: 207
  };
  Q.StaticImport0.prototype = {
    toString$0: function(_) {
      var t1 = this.url.toString$0(0),
        t2 = this.supports;
      if (t2 != null)
        t1 += " supports(" + t2.toString$0(0) + ")";
      t2 = this.media;
      if (t2 != null)
        t1 += " " + t2.toString$0(0);
      t1 += H.Primitives_stringFromCharCode(59);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isImport0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  S.StderrLogger0.prototype = {
    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {
      var t1;
      if (deprecation)
        J.write$1$x($.$get$stderr0()._node1$_stderr, "DEPRECATION ");
      J.write$1$x($.$get$stderr0()._node1$_stderr, "WARNING");
      if (span == null) {
        t1 = $.$get$stderr0();
        t1.writeln$1(": " + H.S(message));
      } else if (trace != null) {
        t1 = $.$get$stderr0();
        t1.writeln$1(": " + H.S(message) + "\n\n" + span.highlight$1$color(false));
      } else {
        t1 = $.$get$stderr0();
        t1.writeln$1(" on " + span.message$2$color(0, C.JSString_methods.$add("\n", message), false));
      }
      if (trace != null)
        t1.writeln$1(B.indent0(C.JSString_methods.trimRight$0(trace.toString$0(0)), 4));
      t1.writeln$0();
    },
    warn$2$span: function($receiver, message, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);
    },
    warn$2$deprecation: function($receiver, message, deprecation) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);
    },
    warn$3$deprecation$span: function($receiver, message, deprecation, span) {
      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);
    },
    warn$2$trace: function($receiver, message, trace) {
      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);
    },
    debug$2: function(_, message, span) {
      var url, t3, t4,
        t1 = span.file,
        t2 = span._file$_start;
      if (Y.FileLocation$_(t1, t2).file.url == null)
        url = "-";
      else {
        t3 = Y.FileLocation$_(t1, t2);
        url = $.$get$context().prettyUri$1(t3.file.url);
      }
      t3 = $.$get$stderr0();
      t4 = H.S(url) + ":";
      t2 = Y.FileLocation$_(t1, t2);
      t2 = t4 + (t2.file.getLine$1(t2.offset) + 1) + " ";
      t4 = t3._node1$_stderr;
      J.write$1$x(t4, t2);
      J.write$1$x(t4, "DEBUG");
      t3.writeln$1(": " + H.S(message));
    }
  };
  D.StringExpression0.prototype = {
    get$span: function() {
      return this.text.span;
    },
    accept$1$1: function(visitor) {
      return visitor.visitStringExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    asInterpolation$1$static: function($static) {
      var quote, t1, t2, buffer, t3, t4, t5, t6, _i, value, t7, t8, i, codeUnit, next, t9, _this = this;
      if (!_this.hasQuotes)
        return _this.text;
      quote = _this._string0$_bestQuote$0();
      t1 = new P.StringBuffer("");
      t2 = [];
      buffer = new Z.InterpolationBuffer0(t1, t2);
      t1._contents += H.Primitives_stringFromCharCode(quote);
      for (t3 = _this.text, t4 = t3.contents, t5 = t4.length, t6 = type$.legacy_Expression_2, _i = 0; _i < t5; ++_i) {
        value = t4[_i];
        if (t6._is(value)) {
          buffer._interpolation_buffer0$_flushText$0();
          t2.push(value);
        } else if (typeof value == "string")
          for (t7 = value.length, t8 = t7 - 1, i = 0; i < t7; ++i) {
            codeUnit = C.JSString_methods._codeUnitAt$1(value, i);
            if (codeUnit === 10 || codeUnit === 13 || codeUnit === 12) {
              t1._contents += H.Primitives_stringFromCharCode(92);
              t1._contents += H.Primitives_stringFromCharCode(97);
              if (i !== t8) {
                next = C.JSString_methods._codeUnitAt$1(value, i + 1);
                if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12 || T.isHex0(next))
                  t1._contents += H.Primitives_stringFromCharCode(32);
              }
            } else {
              if (codeUnit !== quote)
                if (codeUnit !== 92)
                  t9 = $static && codeUnit === 35 && i < t8 && C.JSString_methods._codeUnitAt$1(value, i + 1) === 123;
                else
                  t9 = true;
              else
                t9 = true;
              if (t9)
                t1._contents += H.Primitives_stringFromCharCode(92);
              t1._contents += H.Primitives_stringFromCharCode(codeUnit);
            }
          }
      }
      t1._contents += H.Primitives_stringFromCharCode(quote);
      return buffer.interpolation$1(t3.span);
    },
    asInterpolation$0: function() {
      return this.asInterpolation$1$static(false);
    },
    _string0$_bestQuote$0: function() {
      var t1, t2, containsDoubleQuote, _i, value, t3, i, codeUnit;
      for (t1 = this.text.contents, t2 = t1.length, containsDoubleQuote = false, _i = 0; _i < t2; ++_i) {
        value = t1[_i];
        if (typeof value == "string")
          for (t3 = value.length, i = 0; i < t3; ++i) {
            codeUnit = C.JSString_methods._codeUnitAt$1(value, i);
            if (codeUnit === 39)
              return 34;
            if (codeUnit === 34)
              containsDoubleQuote = true;
          }
      }
      return containsDoubleQuote ? 39 : 34;
    },
    toString$0: function(_) {
      return this.asInterpolation$0().toString$0(0);
    },
    $isExpression0: 1,
    $isAstNode0: 1
  };
  D.closure123.prototype = {
    call$1: function($arguments) {
      var string = J.$index$asx($arguments, 0).assertString$1("string");
      if (!string.hasQuotes)
        return string;
      return new D.SassString0(string.text, false);
    },
    $signature: 17
  };
  D.closure122.prototype = {
    call$1: function($arguments) {
      var string = J.$index$asx($arguments, 0).assertString$1("string");
      if (string.hasQuotes)
        return string;
      return new D.SassString0(string.text, true);
    },
    $signature: 17
  };
  D.closure118.prototype = {
    call$1: function($arguments) {
      var t1 = J.$index$asx($arguments, 0).assertString$1("string").get$sassLength();
      return new N.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  D.closure117.prototype = {
    call$1: function($arguments) {
      var indexInt, codeUnitIndex, _s5_ = "index",
        t1 = J.getInterceptor$asx($arguments),
        string = t1.$index($arguments, 0).assertString$1("string"),
        insert = t1.$index($arguments, 1).assertString$1("insert"),
        index = t1.$index($arguments, 2).assertNumber$1(_s5_);
      index.assertNoUnits$1(_s5_);
      indexInt = index.assertInt$1(_s5_);
      if (indexInt < 0)
        indexInt = string.get$sassLength() + indexInt + 2;
      t1 = string.text;
      codeUnitIndex = B.codepointIndexToCodeUnitIndex0(t1, D._codepointForIndex0(indexInt, string.get$sassLength(), false));
      return new D.SassString0(J.replaceRange$3$asx(t1, codeUnitIndex, codeUnitIndex, insert.text), string.hasQuotes);
    },
    $signature: 17
  };
  D.closure116.prototype = {
    call$1: function($arguments) {
      var codepointIndex,
        t1 = J.getInterceptor$asx($arguments),
        t2 = t1.$index($arguments, 0).assertString$1("string").text,
        codeUnitIndex = J.indexOf$1$asx(t2, t1.$index($arguments, 1).assertString$1("substring").text);
      if (codeUnitIndex === -1)
        return C.C_SassNull;
      codepointIndex = B.codeUnitIndexToCodepointIndex0(t2, codeUnitIndex);
      return new N.UnitlessSassNumber0(codepointIndex + 1, null);
    },
    $signature: 3
  };
  D.closure115.prototype = {
    call$1: function($arguments) {
      var lengthInCodepoints, endInt, startCodepoint, endCodepoint,
        t1 = J.getInterceptor$asx($arguments),
        string = t1.$index($arguments, 0).assertString$1("string"),
        start = t1.$index($arguments, 1).assertNumber$1("start-at"),
        end = t1.$index($arguments, 2).assertNumber$1("end-at");
      start.assertNoUnits$1("start");
      end.assertNoUnits$1("end");
      lengthInCodepoints = string.get$sassLength();
      endInt = end.assertInt$0();
      if (endInt === 0)
        return string.hasQuotes ? $.$get$_emptyQuoted0() : $.$get$_emptyUnquoted0();
      startCodepoint = D._codepointForIndex0(start.assertInt$0(), lengthInCodepoints, false);
      endCodepoint = D._codepointForIndex0(endInt, lengthInCodepoints, true);
      if (endCodepoint === lengthInCodepoints)
        --endCodepoint;
      if (endCodepoint < startCodepoint)
        return string.hasQuotes ? $.$get$_emptyQuoted0() : $.$get$_emptyUnquoted0();
      t1 = string.text;
      return new D.SassString0(J.substring$2$s(t1, B.codepointIndexToCodeUnitIndex0(t1, startCodepoint), B.codepointIndexToCodeUnitIndex0(t1, endCodepoint + 1)), string.hasQuotes);
    },
    $signature: 17
  };
  D.closure121.prototype = {
    call$1: function($arguments) {
      var t1, t2, t3, i, t4, t5,
        string = J.$index$asx($arguments, 0).assertString$1("string");
      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = ""; i < t2; ++i) {
        t5 = t3._codeUnitAt$1(t1, i);
        t4 += H.Primitives_stringFromCharCode(t5 >= 97 && t5 <= 122 ? t5 & 4294967263 : t5);
      }
      return new D.SassString0(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);
    },
    $signature: 17
  };
  D.closure120.prototype = {
    call$1: function($arguments) {
      var t1, t2, t3, i, t4, t5,
        string = J.$index$asx($arguments, 0).assertString$1("string");
      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = ""; i < t2; ++i) {
        t5 = t3._codeUnitAt$1(t1, i);
        t4 += H.Primitives_stringFromCharCode(t5 >= 65 && t5 <= 90 ? t5 | 32 : t5);
      }
      return new D.SassString0(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);
    },
    $signature: 17
  };
  D.closure119.prototype = {
    call$1: function($arguments) {
      var t1 = $.$get$_previousUniqueId0() + ($.$get$_random1().nextInt$1(36) + 1);
      $._previousUniqueId0 = t1;
      if (t1 > Math.pow(36, 6))
        $._previousUniqueId0 = C.JSInt_methods.$mod($.$get$_previousUniqueId0(), H._asIntS(Math.pow(36, 6)));
      return new D.SassString0("u" + C.JSString_methods.padLeft$2(J.toRadixString$1$n($.$get$_previousUniqueId0(), 36), 6, "0"), false);
    },
    $signature: 17
  };
  D._NodeSassString.prototype = {};
  D.closure228.prototype = {
    call$3: function(thisArg, value, dartValue) {
      J.set$dartValue$x(thisArg, dartValue == null ? new D.SassString0(value, false) : dartValue);
    },
    call$2: function(thisArg, value) {
      return this.call$3(thisArg, value, null);
    },
    "call*": "call$3",
    $requiredArgCount: 2,
    $defaultValues: function() {
      return [null];
    },
    $signature: 429
  };
  D.closure229.prototype = {
    call$1: function(thisArg) {
      return J.get$dartValue$x(thisArg).text;
    },
    $signature: 189
  };
  D.closure230.prototype = {
    call$2: function(thisArg, value) {
      J.set$dartValue$x(thisArg, new D.SassString0(value, false));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 431
  };
  D.closure231.prototype = {
    call$1: function(thisArg) {
      return J.toString$0$(J.get$dartValue$x(thisArg));
    },
    $signature: 189
  };
  D.SassString0.prototype = {
    get$sassLength: function() {
      var t1 = this._string$_sassLength;
      if (t1 == null) {
        t1 = this.text;
        t1.toString;
        t1 = new P.Runes(t1);
        t1 = this._string$_sassLength = t1.get$length(t1);
      }
      return t1;
    },
    get$isSpecialNumber: function() {
      var t1, t2;
      if (this.hasQuotes)
        return false;
      t1 = this.text;
      if (t1.length < 6)
        return false;
      t2 = J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32;
      if (t2 === 99) {
        t2 = C.JSString_methods._codeUnitAt$1(t1, 1) | 32;
        if (t2 === 108) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 97)
            return false;
          if ((C.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 109)
            return false;
          if ((C.JSString_methods._codeUnitAt$1(t1, 4) | 32) !== 112)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 5) === 40;
        } else if (t2 === 97) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 108)
            return false;
          if ((C.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 99)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 4) === 40;
        } else
          return false;
      } else if (t2 === 118) {
        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 97)
          return false;
        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 114)
          return false;
        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
      } else if (t2 === 101) {
        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 110)
          return false;
        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 118)
          return false;
        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
      } else if (t2 === 109) {
        t2 = C.JSString_methods._codeUnitAt$1(t1, 1) | 32;
        if (t2 === 97) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 120)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
        } else if (t2 === 105) {
          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 110)
            return false;
          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
        } else
          return false;
      } else
        return false;
    },
    get$isVar: function() {
      if (this.hasQuotes)
        return false;
      var t1 = this.text;
      if (t1.length < 8)
        return false;
      return (J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32) === 118 && (C.JSString_methods._codeUnitAt$1(t1, 1) | 32) === 97 && (C.JSString_methods._codeUnitAt$1(t1, 2) | 32) === 114 && C.JSString_methods._codeUnitAt$1(t1, 3) === 40;
    },
    get$isBlank: function() {
      return !this.hasQuotes && this.text.length === 0;
    },
    accept$1$1: function(visitor) {
      var t1 = visitor._serialize0$_quote && this.hasQuotes,
        t2 = this.text;
      if (t1)
        visitor._serialize0$_visitQuotedString$1(t2);
      else
        visitor._serialize0$_visitUnquotedString$1(t2);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertString$1: function($name) {
      return this;
    },
    plus$1: function(other) {
      var t1 = this.text,
        t2 = this.hasQuotes;
      if (other instanceof D.SassString0)
        return new D.SassString0(J.$add$ansx(t1, other.text), t2);
      else {
        other.toString;
        return new D.SassString0(J.$add$ansx(t1, N.serializeValue(other, false, true)), t2);
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof D.SassString0 && this.text == other.text;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.text);
    }
  };
  X.ModifiableCssStyleRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssStyleRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    copyWithoutChildren$0: function() {
      return X.ModifiableCssStyleRule$0(this.selector, this.span, this.originalSelector);
    },
    $isCssStyleRule0: 1,
    get$span: function() {
      return this.span;
    }
  };
  X.StyleRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitStyleRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.children;
      return this.selector.toString$0(0) + " {" + (t1 && C.JSArray_methods).join$1(t1, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  V.CssStylesheet0.prototype = {
    get$isGroupEnd: function() {
      return false;
    },
    get$isChildless: function() {
      return false;
    },
    accept$1$1: function(visitor) {
      return visitor.visitCssStylesheet$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    get$children: function(receiver) {
      return this.children;
    },
    get$span: function() {
      return this.span;
    }
  };
  V.ModifiableCssStylesheet0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssStylesheet$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    copyWithoutChildren$0: function() {
      return V.ModifiableCssStylesheet$0(this.span);
    },
    $isCssStylesheet0: 1,
    get$span: function() {
      return this.span;
    }
  };
  V.StylesheetParser0.prototype = {
    parse$0: function() {
      return this.wrapSpanFormatException$1(new V.StylesheetParser_parse_closure0(this));
    },
    parseArgumentDeclaration$0: function() {
      return this._stylesheet0$_parseSingleProduction$1$1(new V.StylesheetParser_parseArgumentDeclaration_closure0(this), type$.legacy_ArgumentDeclaration_2);
    },
    _stylesheet0$_parseSingleProduction$1$1: function(production, $T) {
      return this.wrapSpanFormatException$1(new V.StylesheetParser__parseSingleProduction_closure0(this, production, $T));
    },
    parseSignature$0: function() {
      return this.wrapSpanFormatException$1(new V.StylesheetParser_parseSignature_closure(this));
    },
    _stylesheet0$_statement$1$root: function(root) {
      var t2, _this = this,
        t1 = _this.scanner;
      switch (t1.peekChar$0()) {
        case 64:
          return _this.atRule$2$root(new V.StylesheetParser__statement_closure0(_this), root);
        case 43:
          if (!_this.get$indented() || !_this.lookingAtIdentifier$1(1))
            return _this._stylesheet0$_styleRule$0();
          _this._stylesheet0$_isUseAllowed = false;
          t2 = t1._string_scanner$_position;
          t1.readChar$0();
          return _this._stylesheet0$_includeRule$1(new S._SpanScannerState(t1, t2));
        case 61:
          if (!_this.get$indented())
            return _this._stylesheet0$_styleRule$0();
          _this._stylesheet0$_isUseAllowed = false;
          t2 = t1._string_scanner$_position;
          t1.readChar$0();
          _this.whitespace$0();
          return _this._stylesheet0$_mixinRule$1(new S._SpanScannerState(t1, t2));
        case 125:
          t1.error$2$length(0, 'unmatched "}".', 1);
          break;
        default:
          return _this._stylesheet0$_inStyleRule || _this._stylesheet0$_inUnknownAtRule || _this._stylesheet0$_inMixin || _this._stylesheet0$_inContentBlock ? _this._stylesheet0$_declarationOrStyleRule$0() : _this._stylesheet0$_variableDeclarationOrStyleRule$0();
      }
    },
    _stylesheet0$_statement$0: function() {
      return this._stylesheet0$_statement$1$root(false);
    },
    variableDeclarationWithoutNamespace$2: function(namespace, start) {
      var precedingComment, t1, $name, t2, value, flagStart, guarded, global, flag, endPosition, t3, t4, t5, declaration, _this = this, _box_0 = {};
      _box_0.start = start;
      precedingComment = _this.lastSilentComment;
      _this.lastSilentComment = null;
      if (start == null) {
        t1 = _this.scanner;
        _box_0.start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      }
      $name = _this.variableName$0();
      t1 = namespace != null;
      if (t1)
        _this._stylesheet0$_assertPublic$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure1(_box_0, _this));
      if (_this.get$plainCss())
        _this.error$2(0, string$.Sass_v, _this.scanner.spanFrom$1(_box_0.start));
      _this.whitespace$0();
      t2 = _this.scanner;
      t2.expectChar$1(58);
      _this.whitespace$0();
      value = _this.expression$0();
      flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);
      for (guarded = false, global = false; t2.scanChar$1(33);) {
        flag = _this.identifier$0();
        if (flag === "default")
          guarded = true;
        else if (flag === "global") {
          if (t1) {
            endPosition = t2._string_scanner$_position;
            t3 = t2._sourceFile;
            t4 = flagStart.position;
            t5 = new Y._FileSpan(t3, t4, endPosition);
            t5._FileSpan$3(t3, t4, endPosition);
            _this.error$2(0, string$.x21globa, t5);
          }
          global = true;
        } else {
          endPosition = t2._string_scanner$_position;
          t3 = t2._sourceFile;
          t4 = flagStart.position;
          t5 = new Y._FileSpan(t3, t4, endPosition);
          t5._FileSpan$3(t3, t4, endPosition);
          _this.error$2(0, "Invalid flag name.", t5);
        }
        _this.whitespace$0();
        flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);
      }
      _this.expectStatementSeparator$1("variable declaration");
      declaration = Z.VariableDeclaration$0($name, value, t2.spanFrom$1(_box_0.start), precedingComment, global, guarded, namespace);
      if (global)
        _this._stylesheet0$_globalVariables.putIfAbsent$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure2(declaration));
      return declaration;
    },
    variableDeclarationWithoutNamespace$0: function() {
      return this.variableDeclarationWithoutNamespace$2(null, null);
    },
    _stylesheet0$_variableDeclarationOrStyleRule$0: function() {
      var t1, t2, variableOrInterpolation, t3, _this = this;
      if (_this.get$plainCss())
        return _this._stylesheet0$_styleRule$0();
      if (_this.get$indented() && _this.scanner.scanChar$1(92))
        return _this._stylesheet0$_styleRule$0();
      if (!_this.lookingAtIdentifier$0())
        return _this._stylesheet0$_styleRule$0();
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      variableOrInterpolation = _this._stylesheet0$_variableDeclarationOrInterpolation$0();
      if (variableOrInterpolation instanceof Z.VariableDeclaration0)
        return variableOrInterpolation;
      else {
        t3 = new Z.InterpolationBuffer0(new P.StringBuffer(""), []);
        t3.addInterpolation$1(type$.legacy_Interpolation_2._as(variableOrInterpolation));
        return _this._stylesheet0$_styleRule$2(t3, new S._SpanScannerState(t1, t2));
      }
    },
    _stylesheet0$_declarationOrStyleRule$0: function() {
      var t1, t2, declarationOrBuffer, _this = this;
      if (_this.get$plainCss() && _this._stylesheet0$_inStyleRule && !_this._stylesheet0$_inUnknownAtRule)
        return _this._stylesheet0$_propertyOrVariableDeclaration$0();
      if (_this.get$indented() && _this.scanner.scanChar$1(92))
        return _this._stylesheet0$_styleRule$0();
      t1 = _this.scanner;
      t2 = t1._string_scanner$_position;
      declarationOrBuffer = _this._stylesheet0$_declarationOrBuffer$0();
      return type$.legacy_Statement_2._is(declarationOrBuffer) ? declarationOrBuffer : _this._stylesheet0$_styleRule$2(type$.legacy_InterpolationBuffer_2._as(declarationOrBuffer), new S._SpanScannerState(t1, t2));
    },
    _stylesheet0$_declarationOrBuffer$0: function() {
      var midBuffer, couldBeSelector, beforeDeclaration, additional, t3, startsWithPunctuation, variableOrInterpolation, t4, $name, postColonWhitespace, t5, value, exception, _this = this, t1 = {},
        t2 = _this.scanner,
        start = new S._SpanScannerState(t2, t2._string_scanner$_position),
        nameBuffer = new Z.InterpolationBuffer0(new P.StringBuffer(""), []),
        first = t2.peekChar$0();
      if (first !== 58)
        if (first !== 42)
          if (first !== 46)
            t3 = first === 35 && t2.peekChar$1(1) !== 123;
          else
            t3 = true;
        else
          t3 = true;
      else
        t3 = true;
      if (t3) {
        t3 = t2.readChar$0();
        nameBuffer._interpolation_buffer0$_text._contents += H.Primitives_stringFromCharCode(t3);
        t3 = _this.rawText$1(_this.get$whitespace());
        nameBuffer._interpolation_buffer0$_text._contents += t3;
        startsWithPunctuation = true;
      } else
        startsWithPunctuation = false;
      if (!_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())
        return nameBuffer;
      variableOrInterpolation = startsWithPunctuation ? _this.interpolatedIdentifier$0() : _this._stylesheet0$_variableDeclarationOrInterpolation$0();
      if (variableOrInterpolation instanceof Z.VariableDeclaration0)
        return variableOrInterpolation;
      else
        nameBuffer.addInterpolation$1(type$.legacy_Interpolation_2._as(variableOrInterpolation));
      _this._stylesheet0$_isUseAllowed = false;
      if (t2.matches$1("/*")) {
        t3 = _this.rawText$1(_this.get$loudComment());
        nameBuffer._interpolation_buffer0$_text._contents += t3;
      }
      midBuffer = new P.StringBuffer("");
      t3 = _this.get$whitespace();
      midBuffer._contents += _this.rawText$1(t3);
      t4 = t2._string_scanner$_position;
      if (!t2.scanChar$1(58)) {
        if (midBuffer._contents.length !== 0)
          nameBuffer._interpolation_buffer0$_text._contents += H.Primitives_stringFromCharCode(32);
        return nameBuffer;
      }
      midBuffer._contents += H.Primitives_stringFromCharCode(58);
      $name = nameBuffer.interpolation$1(t2.spanFrom$2(start, new S._SpanScannerState(t2, t4)));
      if (C.JSString_methods.startsWith$1($name.get$initialPlain(), "--")) {
        t1 = _this._stylesheet0$_interpolatedDeclarationValue$0();
        _this.expectStatementSeparator$1("custom property");
        return L.Declaration$0($name, t2.spanFrom$1(start), null, new D.StringExpression0(t1, false));
      }
      if (t2.scanChar$1(58)) {
        t1 = nameBuffer;
        t2 = t1._interpolation_buffer0$_text;
        t2._contents += H.S(midBuffer);
        t2._contents += H.Primitives_stringFromCharCode(58);
        return t1;
      } else if (_this.get$indented() && _this._stylesheet0$_lookingAtInterpolatedIdentifier$0()) {
        t1 = nameBuffer;
        t1._interpolation_buffer0$_text._contents += H.S(midBuffer);
        return t1;
      }
      postColonWhitespace = _this.rawText$1(t3);
      if (_this.lookingAtChildren$0())
        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure1($name));
      midBuffer._contents += postColonWhitespace;
      couldBeSelector = postColonWhitespace.length === 0 && _this._stylesheet0$_lookingAtInterpolatedIdentifier$0();
      beforeDeclaration = new S._SpanScannerState(t2, t2._string_scanner$_position);
      t1.value = null;
      try {
        if (_this.lookingAtChildren$0()) {
          t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);
          t4 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);
          t5 = t4.offset;
          value = new D.StringExpression0(X.Interpolation$0(t3, Y._FileSpan$(t4.file, t5, t5)), true);
        } else
          value = _this.expression$0();
        t3 = t1.value = value;
        if (_this.lookingAtChildren$0()) {
          if (couldBeSelector)
            _this.expectStatementSeparator$0();
        } else if (!_this.atEndOfStatement$0())
          _this.expectStatementSeparator$0();
      } catch (exception) {
        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {
          if (!couldBeSelector)
            throw exception;
          t2.set$state(beforeDeclaration);
          additional = _this.almostAnyValue$0();
          if (!_this.get$indented() && t2.peekChar$0() === 59)
            throw exception;
          nameBuffer._interpolation_buffer0$_text._contents += H.S(midBuffer);
          nameBuffer.addInterpolation$1(additional);
          return nameBuffer;
        } else
          throw exception;
      }
      if (_this.lookingAtChildren$0())
        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure2(t1, $name));
      else {
        _this.expectStatementSeparator$0();
        return L.Declaration$0($name, t2.spanFrom$1(start), null, t3);
      }
    },
    _stylesheet0$_variableDeclarationOrInterpolation$0: function() {
      var t1, start, identifier, t2, buffer, _this = this;
      if (!_this.lookingAtIdentifier$0())
        return _this.interpolatedIdentifier$0();
      t1 = _this.scanner;
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      identifier = _this.identifier$0();
      if (t1.matches$1(".$")) {
        t1.readChar$0();
        return _this.variableDeclarationWithoutNamespace$2(identifier, start);
      } else {
        t2 = new P.StringBuffer("");
        buffer = new Z.InterpolationBuffer0(t2, []);
        t2._contents = identifier;
        if (_this._stylesheet0$_lookingAtInterpolatedIdentifierBody$0())
          buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
        return buffer.interpolation$1(t1.spanFrom$1(start));
      }
    },
    _stylesheet0$_styleRule$2: function(buffer, start) {
      var t2, interpolation, t3, wasInStyleRule, _this = this, t1 = {};
      t1.start = start;
      _this._stylesheet0$_isUseAllowed = false;
      if (start == null) {
        t2 = _this.scanner;
        t2 = t1.start = new S._SpanScannerState(t2, t2._string_scanner$_position);
      } else
        t2 = start;
      interpolation = t1.interpolation = _this.styleRuleSelector$0();
      if (buffer != null) {
        buffer.addInterpolation$1(interpolation);
        t3 = t1.interpolation = buffer.interpolation$1(_this.scanner.spanFrom$1(t2));
      } else
        t3 = interpolation;
      if (t3.contents.length === 0)
        _this.scanner.error$1(0, 'expected "}".');
      wasInStyleRule = _this._stylesheet0$_inStyleRule;
      _this._stylesheet0$_inStyleRule = true;
      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), t2, new V.StylesheetParser__styleRule_closure0(t1, _this, wasInStyleRule));
    },
    _stylesheet0$_styleRule$0: function() {
      return this._stylesheet0$_styleRule$2(null, null);
    },
    _stylesheet0$_propertyOrVariableDeclaration$1$parseCustomProperties: function(parseCustomProperties) {
      var first, t3, nameBuffer, variableOrInterpolation, $name, value, _this = this,
        _s48_ = string$.Nested,
        t1 = {},
        t2 = _this.scanner,
        start = new S._SpanScannerState(t2, t2._string_scanner$_position);
      t1.name = null;
      first = t2.peekChar$0();
      if (first !== 58)
        if (first !== 42)
          if (first !== 46)
            t3 = first === 35 && t2.peekChar$1(1) !== 123;
          else
            t3 = true;
        else
          t3 = true;
      else
        t3 = true;
      if (t3) {
        t3 = new P.StringBuffer("");
        nameBuffer = new Z.InterpolationBuffer0(t3, []);
        t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());
        t3._contents += _this.rawText$1(_this.get$whitespace());
        nameBuffer.addInterpolation$1(_this.interpolatedIdentifier$0());
        t3 = t1.name = nameBuffer.interpolation$1(t2.spanFrom$1(start));
      } else if (!_this.get$plainCss()) {
        variableOrInterpolation = _this._stylesheet0$_variableDeclarationOrInterpolation$0();
        if (variableOrInterpolation instanceof Z.VariableDeclaration0)
          return variableOrInterpolation;
        else {
          type$.legacy_Interpolation_2._as(variableOrInterpolation);
          t1.name = variableOrInterpolation;
        }
        t3 = variableOrInterpolation;
      } else {
        $name = _this.interpolatedIdentifier$0();
        t1.name = $name;
        t3 = $name;
      }
      _this.whitespace$0();
      t2.expectChar$1(58);
      if (parseCustomProperties && C.JSString_methods.startsWith$1(t3.get$initialPlain(), "--")) {
        t1 = _this._stylesheet0$_interpolatedDeclarationValue$0();
        _this.expectStatementSeparator$1("custom property");
        return L.Declaration$0(t3, t2.spanFrom$1(start), null, new D.StringExpression0(t1, false));
      }
      _this.whitespace$0();
      if (_this.lookingAtChildren$0()) {
        if (_this.get$plainCss())
          t2.error$1(0, _s48_);
        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure1(t1));
      }
      value = _this.expression$0();
      if (_this.lookingAtChildren$0()) {
        if (_this.get$plainCss())
          t2.error$1(0, _s48_);
        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure2(t1, value));
      } else {
        _this.expectStatementSeparator$0();
        return L.Declaration$0(t3, t2.spanFrom$1(start), null, value);
      }
    },
    _stylesheet0$_propertyOrVariableDeclaration$0: function() {
      return this._stylesheet0$_propertyOrVariableDeclaration$1$parseCustomProperties(true);
    },
    _stylesheet0$_declarationChild$0: function() {
      if (this.scanner.peekChar$0() === 64)
        return this._stylesheet0$_declarationAtRule$0();
      return this._stylesheet0$_propertyOrVariableDeclaration$1$parseCustomProperties(false);
    },
    atRule$2$root: function(child, root) {
      var $name, wasUseAllowed, value, optional, url, namespace, configuration, span, _this = this,
        _s9_ = "@use rule",
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$2$name(64, "@-rule");
      $name = _this.interpolatedIdentifier$0();
      _this.whitespace$0();
      wasUseAllowed = _this._stylesheet0$_isUseAllowed;
      _this._stylesheet0$_isUseAllowed = false;
      switch ($name.get$asPlain()) {
        case "at-root":
          return _this._stylesheet0$_atRootRule$1(start);
        case "charset":
          _this._stylesheet0$_isUseAllowed = wasUseAllowed;
          if (!root)
            _this._stylesheet0$_disallowedAtRule$1(start);
          _this.string$0();
          return null;
        case "content":
          return _this._stylesheet0$_contentRule$1(start);
        case "debug":
          return _this._stylesheet0$_debugRule$1(start);
        case "each":
          return _this._stylesheet0$_eachRule$2(start, child);
        case "else":
          return _this._stylesheet0$_disallowedAtRule$1(start);
        case "error":
          return _this._stylesheet0$_errorRule$1(start);
        case "extend":
          if (!_this._stylesheet0$_inStyleRule && !_this._stylesheet0$_inMixin && !_this._stylesheet0$_inContentBlock)
            _this.error$2(0, string$.x40exten, t1.spanFrom$1(start));
          value = _this.almostAnyValue$0();
          optional = t1.scanChar$1(33);
          if (optional)
            _this.expectIdentifier$1("optional");
          _this.expectStatementSeparator$1("@extend rule");
          return new X.ExtendRule0(value, optional, t1.spanFrom$1(start));
        case "for":
          return _this._stylesheet0$_forRule$2(start, child);
        case "forward":
          _this._stylesheet0$_isUseAllowed = wasUseAllowed;
          if (!root)
            _this._stylesheet0$_disallowedAtRule$1(start);
          return _this._stylesheet0$_forwardRule$1(start);
        case "function":
          return _this._stylesheet0$_functionRule$1(start);
        case "if":
          return _this._stylesheet0$_ifRule$2(start, child);
        case "import":
          return _this._stylesheet0$_importRule$1(start);
        case "include":
          return _this._stylesheet0$_includeRule$1(start);
        case "media":
          return _this.mediaRule$1(start);
        case "mixin":
          return _this._stylesheet0$_mixinRule$1(start);
        case "-moz-document":
          return _this.mozDocumentRule$2(start, $name);
        case "return":
          return _this._stylesheet0$_disallowedAtRule$1(start);
        case "supports":
          return _this.supportsRule$1(start);
        case "use":
          _this._stylesheet0$_isUseAllowed = wasUseAllowed;
          if (!root)
            _this._stylesheet0$_disallowedAtRule$1(start);
          url = _this._stylesheet0$_urlString$0();
          _this.whitespace$0();
          namespace = _this._stylesheet0$_useNamespace$2(url, start);
          _this.whitespace$0();
          configuration = _this._stylesheet0$_configuration$0();
          _this.expectStatementSeparator$1(_s9_);
          span = t1.spanFrom$1(start);
          if (!_this._stylesheet0$_isUseAllowed)
            _this.error$2(0, string$.x40use_r, span);
          _this.expectStatementSeparator$1(_s9_);
          t1 = new T.UseRule0(url, namespace, configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2), span);
          t1.UseRule$4$configuration0(url, namespace, span, configuration);
          return t1;
        case "warn":
          return _this._stylesheet0$_warnRule$1(start);
        case "while":
          return _this._stylesheet0$_whileRule$2(start, child);
        default:
          return _this.unknownAtRule$2(start, $name);
      }
    },
    _stylesheet0$_declarationAtRule$0: function() {
      var _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      switch (_this._stylesheet0$_plainAtRuleName$0()) {
        case "content":
          return _this._stylesheet0$_contentRule$1(start);
        case "debug":
          return _this._stylesheet0$_debugRule$1(start);
        case "each":
          return _this._stylesheet0$_eachRule$2(start, _this.get$_stylesheet0$_declarationChild());
        case "else":
          return _this._stylesheet0$_disallowedAtRule$1(start);
        case "error":
          return _this._stylesheet0$_errorRule$1(start);
        case "for":
          return _this._stylesheet0$_forRule$2(start, _this.get$_stylesheet0$_declarationAtRule());
        case "if":
          return _this._stylesheet0$_ifRule$2(start, _this.get$_stylesheet0$_declarationChild());
        case "include":
          return _this._stylesheet0$_includeRule$1(start);
        case "warn":
          return _this._stylesheet0$_warnRule$1(start);
        case "while":
          return _this._stylesheet0$_whileRule$2(start, _this.get$_stylesheet0$_declarationChild());
        default:
          return _this._stylesheet0$_disallowedAtRule$1(start);
      }
    },
    _stylesheet0$_functionChild$0: function() {
      var state, variableDeclarationError, statement, t2, namespace, exception, t3, start, value, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() !== 64) {
        t2 = t1._string_scanner$_position;
        state = new S._SpanScannerState(t1, t2);
        try {
          namespace = _this.identifier$0();
          t1.expectChar$1(46);
          t2 = _this.variableDeclarationWithoutNamespace$2(namespace, new S._SpanScannerState(t1, t2));
          return t2;
        } catch (exception) {
          t2 = H.unwrapException(exception);
          t3 = type$.legacy_SourceSpanFormatException;
          if (t3._is(t2)) {
            variableDeclarationError = t2;
            t1.set$state(state);
            statement = null;
            try {
              statement = _this._stylesheet0$_declarationOrStyleRule$0();
            } catch (exception) {
              if (t3._is(H.unwrapException(exception)))
                throw H.wrapException(variableDeclarationError);
              else
                throw exception;
            }
            _this.error$2(0, "@function rules may not contain " + (statement instanceof X.StyleRule0 ? "style rules" : "declarations") + ".", statement.get$span());
          } else
            throw exception;
        }
      }
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      switch (_this._stylesheet0$_plainAtRuleName$0()) {
        case "debug":
          return _this._stylesheet0$_debugRule$1(start);
        case "each":
          return _this._stylesheet0$_eachRule$2(start, _this.get$_stylesheet0$_functionChild());
        case "else":
          return _this._stylesheet0$_disallowedAtRule$1(start);
        case "error":
          return _this._stylesheet0$_errorRule$1(start);
        case "for":
          return _this._stylesheet0$_forRule$2(start, _this.get$_stylesheet0$_functionChild());
        case "if":
          return _this._stylesheet0$_ifRule$2(start, _this.get$_stylesheet0$_functionChild());
        case "return":
          value = _this.expression$0();
          _this.expectStatementSeparator$1("@return rule");
          return new B.ReturnRule0(value, t1.spanFrom$1(start));
        case "warn":
          return _this._stylesheet0$_warnRule$1(start);
        case "while":
          return _this._stylesheet0$_whileRule$2(start, _this.get$_stylesheet0$_functionChild());
        default:
          return _this._stylesheet0$_disallowedAtRule$1(start);
      }
    },
    _stylesheet0$_plainAtRuleName$0: function() {
      this.scanner.expectChar$2$name(64, "@-rule");
      var $name = this.identifier$0();
      this.whitespace$0();
      return $name;
    },
    _stylesheet0$_atRootRule$1: function(start) {
      var query, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() === 40) {
        query = _this._stylesheet0$_atRootQuery$0();
        _this.whitespace$0();
        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__atRootRule_closure1(query));
      } else if (_this.lookingAtChildren$0())
        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__atRootRule_closure2());
      else
        return V.AtRootRule$0(H.setRuntimeTypeInfo([_this._stylesheet0$_styleRule$0()], type$.JSArray_legacy_Statement_2), t1.spanFrom$1(start), null);
    },
    _stylesheet0$_atRootQuery$0: function() {
      var interpolation, t2, t3, t4, buffer, t5, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() === 35) {
        interpolation = _this.singleInterpolation$0();
        return X.Interpolation$0(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());
      }
      t2 = t1._string_scanner$_position;
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer0(t3, t4);
      t1.expectChar$1(40);
      t3._contents += H.Primitives_stringFromCharCode(40);
      _this.whitespace$0();
      t5 = _this.expression$0();
      buffer._interpolation_buffer0$_flushText$0();
      t4.push(t5);
      if (t1.scanChar$1(58)) {
        _this.whitespace$0();
        t3._contents += H.Primitives_stringFromCharCode(58);
        t3._contents += H.Primitives_stringFromCharCode(32);
        t5 = _this.expression$0();
        buffer._interpolation_buffer0$_flushText$0();
        t4.push(t5);
      }
      t1.expectChar$1(41);
      _this.whitespace$0();
      t3._contents += H.Primitives_stringFromCharCode(41);
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _stylesheet0$_contentRule$1: function(start) {
      var t1, $arguments, t2, t3, _this = this;
      if (!_this._stylesheet0$_inMixin)
        _this.error$2(0, string$.x40conte, _this.scanner.spanFrom$1(start));
      _this.whitespace$0();
      t1 = _this.scanner;
      if (t1.peekChar$0() === 40)
        $arguments = _this._stylesheet0$_argumentInvocation$1$mixin(true);
      else {
        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);
        t3 = t2.offset;
        $arguments = X.ArgumentInvocation$empty0(Y._FileSpan$(t2.file, t3, t3));
      }
      _this._stylesheet0$_mixinHasContent = true;
      _this.expectStatementSeparator$1("@content rule");
      return new Q.ContentRule0(t1.spanFrom$1(start), $arguments);
    },
    _stylesheet0$_debugRule$1: function(start) {
      var value = this.expression$0();
      this.expectStatementSeparator$1("@debug rule");
      return new Q.DebugRule0(value, this.scanner.spanFrom$1(start));
    },
    _stylesheet0$_eachRule$2: function(start, child) {
      var variables, t1, _this = this,
        wasInControlDirective = _this._stylesheet0$_inControlDirective;
      _this._stylesheet0$_inControlDirective = true;
      variables = H.setRuntimeTypeInfo([_this.variableName$0()], type$.JSArray_legacy_String);
      _this.whitespace$0();
      for (t1 = _this.scanner; t1.scanChar$1(44);) {
        _this.whitespace$0();
        t1.expectChar$1(36);
        variables.push(_this.identifier$1$normalize(true));
        _this.whitespace$0();
      }
      _this.expectIdentifier$1("in");
      _this.whitespace$0();
      return _this._stylesheet0$_withChildren$3(child, start, new V.StylesheetParser__eachRule_closure0(_this, wasInControlDirective, variables, _this.expression$0()));
    },
    _stylesheet0$_errorRule$1: function(start) {
      var value = this.expression$0();
      this.expectStatementSeparator$1("@error rule");
      return new D.ErrorRule0(value, this.scanner.spanFrom$1(start));
    },
    _stylesheet0$_functionRule$1: function(start) {
      var $name, $arguments, _this = this,
        precedingComment = _this.lastSilentComment;
      _this.lastSilentComment = null;
      $name = _this.identifier$1$normalize(true);
      _this.whitespace$0();
      $arguments = _this._stylesheet0$_argumentDeclaration$0();
      if (_this._stylesheet0$_inMixin || _this._stylesheet0$_inContentBlock)
        _this.error$2(0, string$.Mixinscf, _this.scanner.spanFrom$1(start));
      else if (_this._stylesheet0$_inControlDirective)
        _this.error$2(0, string$.Functi, _this.scanner.spanFrom$1(start));
      switch (B.unvendor0($name)) {
        case "calc":
        case "element":
        case "expression":
        case "url":
        case "and":
        case "or":
        case "not":
        case "clamp":
          _this.error$2(0, "Invalid function name.", _this.scanner.spanFrom$1(start));
          break;
      }
      _this.whitespace$0();
      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_functionChild(), start, new V.StylesheetParser__functionRule_closure0($name, $arguments, precedingComment));
    },
    _stylesheet0$_forRule$2: function(start, child) {
      var variable, from, _this = this, t1 = {},
        wasInControlDirective = _this._stylesheet0$_inControlDirective;
      _this._stylesheet0$_inControlDirective = true;
      variable = _this.variableName$0();
      _this.whitespace$0();
      _this.expectIdentifier$1("from");
      _this.whitespace$0();
      t1.exclusive = null;
      from = _this.expression$1$until(new V.StylesheetParser__forRule_closure1(t1, _this));
      if (t1.exclusive == null)
        _this.scanner.error$1(0, 'Expected "to" or "through".');
      _this.whitespace$0();
      return _this._stylesheet0$_withChildren$3(child, start, new V.StylesheetParser__forRule_closure2(t1, _this, wasInControlDirective, variable, from, _this.expression$0()));
    },
    _stylesheet0$_forwardRule$1: function(start) {
      var prefix, members, shownMixinsAndFunctions, shownVariables, hiddenVariables, hiddenMixinsAndFunctions, configuration, span, t1, t2, t3, t4, _this = this, _null = null,
        url = _this._stylesheet0$_urlString$0();
      _this.whitespace$0();
      if (_this.scanIdentifier$1("as")) {
        _this.whitespace$0();
        prefix = _this.identifier$1$normalize(true);
        _this.scanner.expectChar$1(42);
        _this.whitespace$0();
      } else
        prefix = _null;
      if (_this.scanIdentifier$1("show")) {
        members = _this._stylesheet0$_memberList$0();
        shownMixinsAndFunctions = members.item1;
        shownVariables = members.item2;
        hiddenVariables = _null;
        hiddenMixinsAndFunctions = hiddenVariables;
      } else {
        if (_this.scanIdentifier$1("hide")) {
          members = _this._stylesheet0$_memberList$0();
          hiddenMixinsAndFunctions = members.item1;
          hiddenVariables = members.item2;
        } else {
          hiddenVariables = _null;
          hiddenMixinsAndFunctions = hiddenVariables;
        }
        shownVariables = _null;
        shownMixinsAndFunctions = shownVariables;
      }
      configuration = _this._stylesheet0$_configuration$1$allowGuarded(true);
      _this.expectStatementSeparator$1("@forward rule");
      span = _this.scanner.spanFrom$1(start);
      if (!_this._stylesheet0$_isUseAllowed)
        _this.error$2(0, string$.x40forwa, span);
      if (shownMixinsAndFunctions != null) {
        t1 = type$.legacy_String;
        t2 = P.LinkedHashSet_LinkedHashSet$of(shownMixinsAndFunctions, t1);
        t3 = type$.UnmodifiableSetView_legacy_String;
        t1 = P.LinkedHashSet_LinkedHashSet$of(shownVariables, t1);
        t4 = configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2);
        return new L.ForwardRule0(url, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), _null, _null, prefix, t4, span);
      } else if (hiddenMixinsAndFunctions != null) {
        t1 = type$.legacy_String;
        t2 = P.LinkedHashSet_LinkedHashSet$of(hiddenMixinsAndFunctions, t1);
        t3 = type$.UnmodifiableSetView_legacy_String;
        t1 = P.LinkedHashSet_LinkedHashSet$of(hiddenVariables, t1);
        t4 = configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2);
        return new L.ForwardRule0(url, _null, _null, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), prefix, t4, span);
      } else
        return new L.ForwardRule0(url, _null, _null, _null, _null, prefix, configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2), span);
    },
    _stylesheet0$_memberList$0: function() {
      var _this = this,
        t1 = type$.legacy_String,
        identifiers = P.LinkedHashSet_LinkedHashSet$_empty(t1),
        variables = P.LinkedHashSet_LinkedHashSet$_empty(t1);
      t1 = _this.scanner;
      do {
        _this.whitespace$0();
        _this.withErrorMessage$2(string$.Expect, new V.StylesheetParser__memberList_closure0(_this, variables, identifiers));
        _this.whitespace$0();
      } while (t1.scanChar$1(44));
      return new S.Tuple2(identifiers, variables, type$.Tuple2_of_legacy_Set_legacy_String_and_legacy_Set_legacy_String);
    },
    _stylesheet0$_ifRule$2: function(start, child) {
      var condition, children, clauses, lastClause, span, _this = this,
        ifIndentation = _this.get$currentIndentation(),
        wasInControlDirective = _this._stylesheet0$_inControlDirective;
      _this._stylesheet0$_inControlDirective = true;
      condition = _this.expression$0();
      children = _this.children$1(0, child);
      _this.whitespaceWithoutComments$0();
      clauses = H.setRuntimeTypeInfo([V.IfClause$0(condition, children)], type$.JSArray_legacy_IfClause_2);
      while (true) {
        if (!_this.scanElse$1(ifIndentation)) {
          lastClause = null;
          break;
        }
        _this.whitespace$0();
        if (_this.scanIdentifier$1("if")) {
          _this.whitespace$0();
          clauses.push(V.IfClause$0(_this.expression$0(), _this.children$1(0, child)));
        } else {
          lastClause = V.IfClause$last0(_this.children$1(0, child));
          break;
        }
      }
      _this._stylesheet0$_inControlDirective = wasInControlDirective;
      span = _this.scanner.spanFrom$1(start);
      _this.whitespaceWithoutComments$0();
      return new V.IfRule0(P.List_List$unmodifiable(clauses, type$.legacy_IfClause_2), lastClause, span);
    },
    _stylesheet0$_importRule$1: function(start) {
      var argument, _this = this,
        imports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Import_2),
        t1 = _this.scanner;
      do {
        _this.whitespace$0();
        argument = _this.importArgument$0();
        if ((_this._stylesheet0$_inControlDirective || _this._stylesheet0$_inMixin) && argument instanceof B.DynamicImport0)
          _this._stylesheet0$_disallowedAtRule$1(start);
        imports.push(argument);
        _this.whitespace$0();
      } while (t1.scanChar$1(44));
      _this.expectStatementSeparator$1("@import rule");
      t1 = t1.spanFrom$1(start);
      return new B.ImportRule0(P.List_List$unmodifiable(imports, type$.legacy_Import_2), t1);
    },
    importArgument$0: function() {
      var url, urlSpan, innerError, queries, t2, t3, t4, exception, _this = this, _null = null,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        next = t1.peekChar$0();
      if (next === 117 || next === 85) {
        url = _this.dynamicUrl$0();
        _this.whitespace$0();
        queries = _this.tryImportQueries$0();
        t2 = X.Interpolation$0(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), t1.spanFrom$1(start));
        t1 = t1.spanFrom$1(start);
        t3 = queries == null;
        t4 = t3 ? _null : queries.item1;
        return new Q.StaticImport0(t2, t4, t3 ? _null : queries.item2, t1);
      }
      url = _this.string$0();
      urlSpan = t1.spanFrom$1(start);
      _this.whitespace$0();
      queries = _this.tryImportQueries$0();
      if (_this.isPlainImportUrl$1(url) || queries != null) {
        t2 = urlSpan;
        t2 = X.Interpolation$0(H.setRuntimeTypeInfo([P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2.file._decodedChars, t2._file$_start, t2._end), 0, _null)], type$.JSArray_legacy_Object), urlSpan);
        t1 = t1.spanFrom$1(start);
        t3 = queries == null;
        t4 = t3 ? _null : queries.item1;
        return new Q.StaticImport0(t2, t4, t3 ? _null : queries.item2, t1);
      } else
        try {
          t1 = _this.parseImportUrl$1(url);
          return new B.DynamicImport0(t1, urlSpan);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          if (type$.legacy_FormatException._is(t1)) {
            innerError = t1;
            _this.error$2(0, "Invalid URL: " + H.S(J.get$message$x(innerError)), urlSpan);
          } else
            throw exception;
        }
    },
    parseImportUrl$1: function(url) {
      var t1 = $.$get$windows();
      if (t1.style.rootLength$1(url) > 0)
        return t1.toUri$1(url).toString$0(0);
      P.Uri_parse(url);
      return url;
    },
    isPlainImportUrl$1: function(url) {
      var first;
      if (url.length < 5)
        return false;
      if (C.JSString_methods.endsWith$1(url, ".css"))
        return true;
      first = C.JSString_methods._codeUnitAt$1(url, 0);
      if (first === 47)
        return C.JSString_methods._codeUnitAt$1(url, 1) === 47;
      if (first !== 104)
        return false;
      return C.JSString_methods.startsWith$1(url, "http://") || C.JSString_methods.startsWith$1(url, "https://");
    },
    tryImportQueries$0: function() {
      var t1, start, supports, $name, media, _this = this;
      if (_this.scanIdentifier$1("supports")) {
        t1 = _this.scanner;
        t1.expectChar$1(40);
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
        if (_this.scanIdentifier$1("not")) {
          _this.whitespace$0();
          supports = new M.SupportsNegation0(_this._stylesheet0$_supportsConditionInParens$0(), t1.spanFrom$1(start));
        } else if (t1.peekChar$0() === 40)
          supports = _this._stylesheet0$_supportsCondition$0();
        else {
          $name = _this.expression$0();
          t1.expectChar$1(58);
          _this.whitespace$0();
          supports = new L.SupportsDeclaration0($name, _this.expression$0(), t1.spanFrom$1(start));
        }
        t1.expectChar$1(41);
        _this.whitespace$0();
      } else
        supports = null;
      media = _this._stylesheet0$_lookingAtInterpolatedIdentifier$0() || _this.scanner.peekChar$0() === 40 ? _this._stylesheet0$_mediaQueryList$0() : null;
      if (supports == null && media == null)
        return null;
      return new S.Tuple2(supports, media, type$.Tuple2_of_legacy_SupportsCondition_and_legacy_Interpolation_2);
    },
    _stylesheet0$_includeRule$1: function(start) {
      var name0, namespace, $arguments, t3, t4, wasInContentBlock, $content, _this = this, _null = null, t1 = {},
        $name = _this.identifier$0(),
        t2 = _this.scanner;
      if (t2.scanChar$1(46)) {
        name0 = _this._stylesheet0$_publicIdentifier$0();
        namespace = $name;
        $name = name0;
      } else {
        $name = H.stringReplaceAllUnchecked($name, "_", "-");
        namespace = _null;
      }
      _this.whitespace$0();
      if (t2.peekChar$0() === 40)
        $arguments = _this._stylesheet0$_argumentInvocation$1$mixin(true);
      else {
        t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);
        t4 = t3.offset;
        $arguments = X.ArgumentInvocation$empty0(Y._FileSpan$(t3.file, t4, t4));
      }
      _this.whitespace$0();
      t1.contentArguments = null;
      if (_this.scanIdentifier$1("using")) {
        _this.whitespace$0();
        t3 = t1.contentArguments = _this._stylesheet0$_argumentDeclaration$0();
        _this.whitespace$0();
      } else
        t3 = _null;
      t3 = t3 == null;
      if (!t3 || _this.lookingAtChildren$0()) {
        if (t3) {
          t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);
          t4 = t3.offset;
          t1.contentArguments = new B.ArgumentDeclaration0(C.List_empty20, _null, Y._FileSpan$(t3.file, t4, t4));
        }
        wasInContentBlock = _this._stylesheet0$_inContentBlock;
        _this._stylesheet0$_inContentBlock = true;
        $content = _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__includeRule_closure0(t1));
        _this._stylesheet0$_inContentBlock = wasInContentBlock;
      } else {
        _this.expectStatementSeparator$0();
        $content = _null;
      }
      t1 = t2.spanFrom$2(start, start);
      return new A.IncludeRule0(namespace, $name, $arguments, $content, t1.expand$1(0, ($content == null ? $arguments : $content).get$span()));
    },
    mediaRule$1: function(start) {
      return this._stylesheet0$_withChildren$3(this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_mediaRule_closure0(this._stylesheet0$_mediaQueryList$0()));
    },
    _stylesheet0$_mixinRule$1: function(start) {
      var $name, t1, $arguments, t2, t3, _this = this,
        precedingComment = _this.lastSilentComment;
      _this.lastSilentComment = null;
      $name = _this.identifier$1$normalize(true);
      _this.whitespace$0();
      t1 = _this.scanner;
      if (t1.peekChar$0() === 40)
        $arguments = _this._stylesheet0$_argumentDeclaration$0();
      else {
        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);
        t3 = t2.offset;
        $arguments = new B.ArgumentDeclaration0(C.List_empty20, null, Y._FileSpan$(t2.file, t3, t3));
      }
      if (_this._stylesheet0$_inMixin || _this._stylesheet0$_inContentBlock)
        _this.error$2(0, string$.Mixinscm, t1.spanFrom$1(start));
      else if (_this._stylesheet0$_inControlDirective)
        _this.error$2(0, string$.Mixinsb, t1.spanFrom$1(start));
      _this.whitespace$0();
      _this._stylesheet0$_inMixin = true;
      _this._stylesheet0$_mixinHasContent = false;
      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__mixinRule_closure0(_this, $name, $arguments, precedingComment));
    },
    mozDocumentRule$2: function(start, $name) {
      var t5, t6, identifier, contents, argument, trailing, endPosition, t7, t8, start0, end, _this = this, _box_0 = {},
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        t4 = [],
        buffer = new Z.InterpolationBuffer0(t3, t4);
      _box_0.needsDeprecationWarning = false;
      for (t5 = _this.get$whitespace(); true;) {
        if (t1.peekChar$0() === 35) {
          t6 = _this.singleInterpolation$0();
          buffer._interpolation_buffer0$_flushText$0();
          t4.push(t6);
          _box_0.needsDeprecationWarning = true;
        } else {
          t6 = t1._string_scanner$_position;
          identifier = _this.identifier$0();
          switch (identifier) {
            case "url":
            case "url-prefix":
            case "domain":
              contents = _this._stylesheet0$_tryUrlContents$2$name(new S._SpanScannerState(t1, t6), identifier);
              if (contents != null)
                buffer.addInterpolation$1(contents);
              else {
                t1.expectChar$1(40);
                _this.whitespace$0();
                argument = _this.interpolatedString$0();
                t1.expectChar$1(41);
                t3._contents += identifier;
                t3._contents += H.Primitives_stringFromCharCode(40);
                buffer.addInterpolation$1(argument.asInterpolation$0());
                t3._contents += H.Primitives_stringFromCharCode(41);
              }
              t6 = t3._contents;
              trailing = t6.charCodeAt(0) == 0 ? t6 : t6;
              if (!C.JSString_methods.endsWith$1(trailing, "url-prefix()") && !C.JSString_methods.endsWith$1(trailing, "url-prefix('')") && !C.JSString_methods.endsWith$1(trailing, 'url-prefix("")'))
                _box_0.needsDeprecationWarning = true;
              break;
            case "regexp":
              t3._contents += "regexp(";
              t1.expectChar$1(40);
              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());
              t1.expectChar$1(41);
              t3._contents += H.Primitives_stringFromCharCode(41);
              _box_0.needsDeprecationWarning = true;
              break;
            default:
              endPosition = t1._string_scanner$_position;
              t7 = t1._sourceFile;
              t8 = new Y._FileSpan(t7, t6, endPosition);
              t8._FileSpan$3(t7, t6, endPosition);
              _this.error$2(0, "Invalid function name.", t8);
          }
        }
        _this.whitespace$0();
        if (!t1.scanChar$1(44))
          break;
        t3._contents += H.Primitives_stringFromCharCode(44);
        start0 = t1._string_scanner$_position;
        t5.call$0();
        end = t1._string_scanner$_position;
        t3._contents += J.substring$2$s(t1.string, start0, end);
      }
      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_mozDocumentRule_closure0(_box_0, _this, $name, buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)))));
    },
    supportsRule$1: function(start) {
      var _this = this,
        condition = _this._stylesheet0$_supportsCondition$0();
      _this.whitespace$0();
      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_supportsRule_closure0(condition));
    },
    _stylesheet0$_useNamespace$2: function(url, start) {
      var namespace, basename, dot, t1, exception, _this = this;
      if (_this.scanIdentifier$1("as")) {
        _this.whitespace$0();
        return _this.scanner.scanChar$1(42) ? null : _this.identifier$0();
      }
      basename = url.get$pathSegments().length === 0 ? "" : C.JSArray_methods.get$last(url.get$pathSegments());
      dot = J.getInterceptor$asx(basename).indexOf$1(basename, ".");
      t1 = C.JSString_methods.startsWith$1(basename, "_") ? 1 : 0;
      namespace = C.JSString_methods.substring$2(basename, t1, dot === -1 ? basename.length : dot);
      try {
        t1 = S.SpanScanner$(namespace, null);
        t1 = new G.Parser1(t1, _this.logger)._parser$_parseIdentifier$0();
        return t1;
      } catch (exception) {
        if (H.unwrapException(exception) instanceof E.SassFormatException0)
          _this.error$2(0, 'Invalid Sass identifier "' + H.S(namespace) + '"', _this.scanner.spanFrom$1(start));
        else
          throw exception;
      }
    },
    _stylesheet0$_configuration$1$allowGuarded: function(allowGuarded) {
      var variableNames, configuration, t1, t2, $name, expression, t3, guarded, endPosition, t4, t5, span, _this = this;
      if (!_this.scanIdentifier$1("with"))
        return null;
      variableNames = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);
      configuration = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ConfiguredVariable_2);
      _this.whitespace$0();
      t1 = _this.scanner;
      t1.expectChar$1(40);
      for (; true;) {
        _this.whitespace$0();
        t2 = t1._string_scanner$_position;
        t1.expectChar$1(36);
        $name = _this.identifier$1$normalize(true);
        _this.whitespace$0();
        t1.expectChar$1(58);
        _this.whitespace$0();
        expression = _this._stylesheet0$_expressionUntilComma$0();
        t3 = t1._string_scanner$_position;
        if (allowGuarded && t1.scanChar$1(33))
          if (_this.identifier$0() === "default") {
            _this.whitespace$0();
            guarded = true;
          } else {
            endPosition = t1._string_scanner$_position;
            t4 = t1._sourceFile;
            t5 = new Y._FileSpan(t4, t3, endPosition);
            t5._FileSpan$3(t4, t3, endPosition);
            _this.error$2(0, "Invalid flag name.", t5);
            guarded = false;
          }
        else
          guarded = false;
        endPosition = t1._string_scanner$_position;
        t3 = t1._sourceFile;
        span = new Y._FileSpan(t3, t2, endPosition);
        span._FileSpan$3(t3, t2, endPosition);
        if (variableNames.contains$1(0, $name))
          _this.error$2(0, string$.The_sa, span);
        variableNames.add$1(0, $name);
        configuration.push(new Z.ConfiguredVariable0($name, expression, guarded, span));
        if (!t1.scanChar$1(44))
          break;
        _this.whitespace$0();
        if (!_this._stylesheet0$_lookingAtExpression$0())
          break;
      }
      t1.expectChar$1(41);
      return configuration;
    },
    _stylesheet0$_configuration$0: function() {
      return this._stylesheet0$_configuration$1$allowGuarded(false);
    },
    _stylesheet0$_warnRule$1: function(start) {
      var value = this.expression$0();
      this.expectStatementSeparator$1("@warn rule");
      return new Y.WarnRule0(value, this.scanner.spanFrom$1(start));
    },
    _stylesheet0$_whileRule$2: function(start, child) {
      var _this = this,
        wasInControlDirective = _this._stylesheet0$_inControlDirective;
      _this._stylesheet0$_inControlDirective = true;
      return _this._stylesheet0$_withChildren$3(child, start, new V.StylesheetParser__whileRule_closure0(_this, wasInControlDirective, _this.expression$0()));
    },
    unknownAtRule$2: function(start, $name) {
      var t2, t3, rule, _this = this, t1 = {},
        wasInUnknownAtRule = _this._stylesheet0$_inUnknownAtRule;
      _this._stylesheet0$_inUnknownAtRule = true;
      t1.value = null;
      t2 = _this.scanner;
      t3 = t2.peekChar$0() !== 33 && !_this.atEndOfStatement$0() ? t1.value = _this.almostAnyValue$0() : null;
      if (_this.lookingAtChildren$0())
        rule = _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_unknownAtRule_closure0(t1, $name));
      else {
        _this.expectStatementSeparator$0();
        rule = U.AtRule$0($name, t2.spanFrom$1(start), null, t3);
      }
      _this._stylesheet0$_inUnknownAtRule = wasInUnknownAtRule;
      return rule;
    },
    _stylesheet0$_disallowedAtRule$1: function(start) {
      this.almostAnyValue$0();
      this.error$2(0, "This at-rule is not allowed here.", this.scanner.spanFrom$1(start));
    },
    _stylesheet0$_argumentDeclaration$0: function() {
      var $arguments, named, restArgument, t3, $name, defaultValue, endPosition, t4, t5, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expectChar$1(40);
      _this.whitespace$0();
      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Argument_2);
      named = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);
      while (true) {
        if (!(t1.peekChar$0() === 36)) {
          restArgument = null;
          break;
        }
        t3 = t1._string_scanner$_position;
        t1.expectChar$1(36);
        $name = _this.identifier$1$normalize(true);
        _this.whitespace$0();
        if (t1.scanChar$1(58)) {
          _this.whitespace$0();
          defaultValue = _this._stylesheet0$_expressionUntilComma$0();
        } else {
          if (t1.scanChar$1(46)) {
            t1.expectChar$1(46);
            t1.expectChar$1(46);
            _this.whitespace$0();
            restArgument = $name;
            break;
          }
          defaultValue = null;
        }
        endPosition = t1._string_scanner$_position;
        t4 = t1._sourceFile;
        t5 = new Y._FileSpan(t4, t3, endPosition);
        t5._FileSpan$3(t4, t3, endPosition);
        $arguments.push(new Z.Argument0($name, defaultValue, t5));
        if (!named.add$1(0, $name))
          _this.error$2(0, "Duplicate argument.", C.JSArray_methods.get$last($arguments).span);
        if (!t1.scanChar$1(44)) {
          restArgument = null;
          break;
        }
        _this.whitespace$0();
      }
      t1.expectChar$1(41);
      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      return new B.ArgumentDeclaration0(P.List_List$unmodifiable($arguments, type$.legacy_Argument_2), restArgument, t1);
    },
    _stylesheet0$_argumentInvocation$1$mixin: function(mixin) {
      var positional, t3, t4, named, keywordRest, t5, rest, expression, t6, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expectChar$1(40);
      _this.whitespace$0();
      positional = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);
      t3 = type$.legacy_String;
      t4 = type$.legacy_Expression_2;
      named = P.LinkedHashMap_LinkedHashMap$_empty(t3, t4);
      t5 = !mixin;
      rest = null;
      while (true) {
        if (!_this._stylesheet0$_lookingAtExpression$0()) {
          keywordRest = null;
          break;
        }
        expression = _this._stylesheet0$_expressionUntilComma$1$singleEquals(t5);
        _this.whitespace$0();
        if (expression instanceof S.VariableExpression0 && t1.scanChar$1(58)) {
          _this.whitespace$0();
          t6 = expression.name;
          if (named.containsKey$1(t6))
            _this.error$2(0, "Duplicate argument.", expression.span);
          named.$indexSet(0, t6, _this._stylesheet0$_expressionUntilComma$1$singleEquals(t5));
        } else if (t1.scanChar$1(46)) {
          t1.expectChar$1(46);
          t1.expectChar$1(46);
          if (rest != null) {
            _this.whitespace$0();
            keywordRest = expression;
            break;
          }
          rest = expression;
        } else if (named.get$isNotEmpty(named))
          _this.error$2(0, string$.Positi, expression.get$span());
        else
          positional.push(expression);
        _this.whitespace$0();
        if (!t1.scanChar$1(44)) {
          keywordRest = null;
          break;
        }
        _this.whitespace$0();
      }
      t1.expectChar$1(41);
      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      return new X.ArgumentInvocation0(P.List_List$unmodifiable(positional, t4), H.ConstantMap_ConstantMap$from(named, t3, t4), rest, keywordRest, t1);
    },
    _stylesheet0$_argumentInvocation$0: function() {
      return this._stylesheet0$_argumentInvocation$1$mixin(false);
    },
    expression$3$bracketList$singleEquals$until: function(bracketList, singleEquals, until) {
      var t2, beforeBracket, t3, wasInParentheses, resetState, resolveOneOperation, resolveOperations, addSingleExpression, addOperator, resolveSpaceExpressions, first, next, t4, _this = this,
        _s20_ = "Expected expression.",
        _box_0 = {},
        t1 = until != null;
      if (t1 && until.call$0())
        _this.scanner.error$1(0, _s20_);
      if (bracketList) {
        t2 = _this.scanner;
        beforeBracket = new S._SpanScannerState(t2, t2._string_scanner$_position);
        t2.expectChar$1(91);
        _this.whitespace$0();
        if (t2.scanChar$1(93))
          return D.ListExpression$0(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2), C.ListSeparator_undecided0, true, t2.spanFrom$1(beforeBracket));
      } else
        beforeBracket = null;
      t2 = _this.scanner;
      t3 = t2._string_scanner$_position;
      wasInParentheses = _this._stylesheet0$_inParentheses;
      _box_0.operands = _box_0.operators = _box_0.spaceExpressions = _box_0.commaExpressions = null;
      _box_0.allowSlash = _this.lookingAtNumber$0();
      _box_0.singleExpression = _this._stylesheet0$_singleExpression$0();
      resetState = new V.StylesheetParser_expression_resetState0(_box_0, _this, new S._SpanScannerState(t2, t3));
      resolveOneOperation = new V.StylesheetParser_expression_resolveOneOperation0(_box_0, _this);
      resolveOperations = new V.StylesheetParser_expression_resolveOperations0(_box_0, resolveOneOperation);
      addSingleExpression = new V.StylesheetParser_expression_addSingleExpression0(_box_0, _this, resetState, resolveOperations);
      addOperator = new V.StylesheetParser_expression_addOperator0(_box_0, _this, resolveOneOperation);
      resolveSpaceExpressions = new V.StylesheetParser_expression_resolveSpaceExpressions0(_box_0, resolveOperations);
      $label0$0:
        for (t3 = type$.JSArray_legacy_Expression_2; true;) {
          _this.whitespace$0();
          if (t1 && until.call$0())
            break $label0$0;
          first = t2.peekChar$0();
          switch (first) {
            case 40:
              addSingleExpression.call$1(_this._stylesheet0$_parentheses$0());
              break;
            case 91:
              addSingleExpression.call$1(_this.expression$1$bracketList(true));
              break;
            case 36:
              addSingleExpression.call$1(_this._stylesheet0$_variable$0());
              break;
            case 38:
              addSingleExpression.call$1(_this._stylesheet0$_selector$0());
              break;
            case 39:
            case 34:
              addSingleExpression.call$1(_this.interpolatedString$0());
              break;
            case 35:
              addSingleExpression.call$1(_this._stylesheet0$_hashExpression$0());
              break;
            case 61:
              t2.readChar$0();
              if (singleEquals && t2.peekChar$0() !== 61)
                addOperator.call$1(C.BinaryOperator_kjl0);
              else {
                t2.expectChar$1(61);
                addOperator.call$1(C.BinaryOperator_YlX0);
              }
              break;
            case 33:
              next = t2.peekChar$1(1);
              if (next === 61) {
                t2.readChar$0();
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_i5H0);
              } else {
                if (next != null)
                  if ((next | 32) !== 105)
                    t4 = next === 32 || next === 9 || next === 10 || next === 13 || next === 12;
                  else
                    t4 = true;
                else
                  t4 = true;
                if (t4)
                  addSingleExpression.call$1(_this._stylesheet0$_importantExpression$0());
                else
                  break $label0$0;
              }
              break;
            case 60:
              t2.readChar$0();
              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_33h0 : C.BinaryOperator_8qt0);
              break;
            case 62:
              t2.readChar$0();
              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_1da0 : C.BinaryOperator_AcR1);
              break;
            case 42:
              t2.readChar$0();
              addOperator.call$1(C.BinaryOperator_O1M0);
              break;
            case 43:
              if (_box_0.singleExpression == null)
                addSingleExpression.call$1(_this._stylesheet0$_unaryOperation$0());
              else {
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_AcR2);
              }
              break;
            case 45:
              next = t2.peekChar$1(1);
              if (next != null && next >= 48 && next <= 57 || next === 46)
                if (_box_0.singleExpression != null) {
                  t4 = t2.peekChar$1(-1);
                  t4 = t4 === 32 || t4 === 9 || t4 === 10 || t4 === 13 || t4 === 12;
                } else
                  t4 = true;
              else
                t4 = false;
              if (t4)
                addSingleExpression.call$2$number(_this._stylesheet0$_number$0(), true);
              else if (_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())
                addSingleExpression.call$1(_this.identifierLike$0());
              else if (_box_0.singleExpression == null)
                addSingleExpression.call$1(_this._stylesheet0$_unaryOperation$0());
              else {
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_iyO0);
              }
              break;
            case 47:
              if (_box_0.singleExpression == null)
                addSingleExpression.call$1(_this._stylesheet0$_unaryOperation$0());
              else {
                t2.readChar$0();
                addOperator.call$1(C.BinaryOperator_RTB0);
              }
              break;
            case 37:
              t2.readChar$0();
              addOperator.call$1(C.BinaryOperator_2ad0);
              break;
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
              addSingleExpression.call$2$number(_this._stylesheet0$_number$0(), true);
              break;
            case 46:
              if (t2.peekChar$1(1) === 46)
                break $label0$0;
              addSingleExpression.call$2$number(_this._stylesheet0$_number$0(), true);
              break;
            case 97:
              if (!_this.get$plainCss() && _this.scanIdentifier$1("and"))
                addOperator.call$1(C.BinaryOperator_and_and_20);
              else
                addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 111:
              if (!_this.get$plainCss() && _this.scanIdentifier$1("or"))
                addOperator.call$1(C.BinaryOperator_or_or_10);
              else
                addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 117:
            case 85:
              if (t2.peekChar$1(1) === 43)
                addSingleExpression.call$1(_this._stylesheet0$_unicodeRange$0());
              else
                addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 95:
            case 92:
              addSingleExpression.call$1(_this.identifierLike$0());
              break;
            case 44:
              if (_this._stylesheet0$_inParentheses) {
                _this._stylesheet0$_inParentheses = false;
                if (_box_0.allowSlash) {
                  resetState.call$0();
                  break;
                }
              }
              if (_box_0.commaExpressions == null)
                _box_0.commaExpressions = H.setRuntimeTypeInfo([], t3);
              if (_box_0.singleExpression == null)
                t2.error$1(0, _s20_);
              resolveSpaceExpressions.call$0();
              _box_0.commaExpressions.push(_box_0.singleExpression);
              t2.readChar$0();
              _box_0.allowSlash = true;
              _box_0.singleExpression = null;
              break;
            default:
              if (first != null && first >= 128) {
                addSingleExpression.call$1(_this.identifierLike$0());
                break;
              } else
                break $label0$0;
          }
        }
      if (bracketList)
        t2.expectChar$1(93);
      if (_box_0.commaExpressions != null) {
        resolveSpaceExpressions.call$0();
        _this._stylesheet0$_inParentheses = wasInParentheses;
        t1 = _box_0.singleExpression;
        if (t1 != null)
          _box_0.commaExpressions.push(t1);
        t1 = _box_0.commaExpressions;
        return D.ListExpression$0(t1, C.ListSeparator_comma0, bracketList, bracketList ? t2.spanFrom$1(beforeBracket) : null);
      } else if (bracketList && _box_0.spaceExpressions != null) {
        resolveOperations.call$0();
        t1 = _box_0.spaceExpressions;
        t1.push(_box_0.singleExpression);
        return D.ListExpression$0(t1, C.ListSeparator_space0, true, t2.spanFrom$1(beforeBracket));
      } else {
        resolveSpaceExpressions.call$0();
        if (bracketList)
          _box_0.singleExpression = D.ListExpression$0(H.setRuntimeTypeInfo([_box_0.singleExpression], t3), C.ListSeparator_undecided0, true, t2.spanFrom$1(beforeBracket));
        return _box_0.singleExpression;
      }
    },
    expression$2$singleEquals$until: function(singleEquals, until) {
      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, until);
    },
    expression$1$bracketList: function(bracketList) {
      return this.expression$3$bracketList$singleEquals$until(bracketList, false, null);
    },
    expression$0: function() {
      return this.expression$3$bracketList$singleEquals$until(false, false, null);
    },
    expression$1$singleEquals: function(singleEquals) {
      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, null);
    },
    expression$1$until: function(until) {
      return this.expression$3$bracketList$singleEquals$until(false, false, until);
    },
    _stylesheet0$_expressionUntilComma$1$singleEquals: function(singleEquals) {
      return this.expression$2$singleEquals$until(singleEquals, new V.StylesheetParser__expressionUntilComma_closure0(this));
    },
    _stylesheet0$_expressionUntilComma$0: function() {
      return this._stylesheet0$_expressionUntilComma$1$singleEquals(false);
    },
    _stylesheet0$_singleExpression$0: function() {
      var next, _this = this,
        t1 = _this.scanner,
        first = t1.peekChar$0();
      switch (first) {
        case 40:
          return _this._stylesheet0$_parentheses$0();
        case 47:
          return _this._stylesheet0$_unaryOperation$0();
        case 46:
          return _this._stylesheet0$_number$0();
        case 91:
          return _this.expression$1$bracketList(true);
        case 36:
          return _this._stylesheet0$_variable$0();
        case 38:
          return _this._stylesheet0$_selector$0();
        case 39:
        case 34:
          return _this.interpolatedString$0();
        case 35:
          return _this._stylesheet0$_hashExpression$0();
        case 43:
          next = t1.peekChar$1(1);
          return T.isDigit0(next) || next === 46 ? _this._stylesheet0$_number$0() : _this._stylesheet0$_unaryOperation$0();
        case 45:
          return _this._stylesheet0$_minusExpression$0();
        case 33:
          return _this._stylesheet0$_importantExpression$0();
        case 117:
        case 85:
          if (t1.peekChar$1(1) === 43)
            return _this._stylesheet0$_unicodeRange$0();
          else
            return _this.identifierLike$0();
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
          return _this._stylesheet0$_number$0();
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 95:
        case 92:
          return _this.identifierLike$0();
        default:
          if (first != null && first >= 128)
            return _this.identifierLike$0();
          t1.error$1(0, "Expected expression.");
      }
    },
    _stylesheet0$_parentheses$0: function() {
      var wasInParentheses, start, first, expressions, t1, _this = this;
      if (_this.get$plainCss())
        _this.scanner.error$2$length(0, "Parentheses aren't allowed in plain CSS.", 1);
      wasInParentheses = _this._stylesheet0$_inParentheses;
      _this._stylesheet0$_inParentheses = true;
      try {
        t1 = _this.scanner;
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
        t1.expectChar$1(40);
        _this.whitespace$0();
        if (!_this._stylesheet0$_lookingAtExpression$0()) {
          t1.expectChar$1(41);
          t1 = D.ListExpression$0(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2), C.ListSeparator_undecided0, false, t1.spanFrom$1(start));
          return t1;
        }
        first = _this._stylesheet0$_expressionUntilComma$0();
        if (t1.scanChar$1(58)) {
          _this.whitespace$0();
          t1 = _this._stylesheet0$_map$2(first, start);
          return t1;
        }
        if (!t1.scanChar$1(44)) {
          t1.expectChar$1(41);
          t1 = t1.spanFrom$1(start);
          return new T.ParenthesizedExpression0(first, t1);
        }
        _this.whitespace$0();
        expressions = H.setRuntimeTypeInfo([first], type$.JSArray_legacy_Expression_2);
        for (; true;) {
          if (!_this._stylesheet0$_lookingAtExpression$0())
            break;
          J.add$1$ax(expressions, _this._stylesheet0$_expressionUntilComma$0());
          if (!t1.scanChar$1(44))
            break;
          _this.whitespace$0();
        }
        t1.expectChar$1(41);
        t1 = D.ListExpression$0(expressions, C.ListSeparator_comma0, false, t1.spanFrom$1(start));
        return t1;
      } finally {
        _this._stylesheet0$_inParentheses = wasInParentheses;
      }
    },
    _stylesheet0$_map$2: function(first, start) {
      var t2, key, _this = this,
        t1 = type$.Tuple2_of_legacy_Expression_and_legacy_Expression_2,
        pairs = H.setRuntimeTypeInfo([new S.Tuple2(first, _this._stylesheet0$_expressionUntilComma$0(), t1)], type$.JSArray_legacy_Tuple2_of_legacy_Expression_and_legacy_Expression_2);
      for (t2 = _this.scanner; t2.scanChar$1(44);) {
        _this.whitespace$0();
        if (!_this._stylesheet0$_lookingAtExpression$0())
          break;
        key = _this._stylesheet0$_expressionUntilComma$0();
        t2.expectChar$1(58);
        _this.whitespace$0();
        pairs.push(new S.Tuple2(key, _this._stylesheet0$_expressionUntilComma$0(), t1));
      }
      t2.expectChar$1(41);
      t1 = t2.spanFrom$1(start);
      return new A.MapExpression0(P.List_List$unmodifiable(pairs, type$.legacy_Tuple2_of_legacy_Expression_and_legacy_Expression_2), t1);
    },
    _stylesheet0$_hashExpression$0: function() {
      var start, first, t2, identifier, buffer, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$1(1) === 123)
        return _this.identifierLike$0();
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$1(35);
      first = t1.peekChar$0();
      if (first != null && T.isDigit0(first))
        return new K.ColorExpression0(_this._stylesheet0$_hexColorContents$1(start));
      t2 = t1._string_scanner$_position;
      identifier = _this.interpolatedIdentifier$0();
      if (_this._stylesheet0$_isHexColor$1(identifier)) {
        t1.set$state(new S._SpanScannerState(t1, t2));
        return new K.ColorExpression0(_this._stylesheet0$_hexColorContents$1(start));
      }
      t2 = new P.StringBuffer("");
      buffer = new Z.InterpolationBuffer0(t2, []);
      t2._contents += H.Primitives_stringFromCharCode(35);
      buffer.addInterpolation$1(identifier);
      return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(start)), false);
    },
    _stylesheet0$_hexColorContents$1: function(start) {
      var red, green, blue, alpha, digit4, t2, t3, _this = this,
        digit1 = _this._stylesheet0$_hexDigit$0(),
        digit2 = _this._stylesheet0$_hexDigit$0(),
        digit3 = _this._stylesheet0$_hexDigit$0(),
        t1 = _this.scanner;
      if (!T.isHex0(t1.peekChar$0())) {
        red = (digit1 << 4 >>> 0) + digit1;
        green = (digit2 << 4 >>> 0) + digit2;
        blue = (digit3 << 4 >>> 0) + digit3;
        alpha = 1;
      } else {
        digit4 = _this._stylesheet0$_hexDigit$0();
        t2 = digit1 << 4 >>> 0;
        t3 = digit3 << 4 >>> 0;
        if (!T.isHex0(t1.peekChar$0())) {
          red = t2 + digit1;
          green = (digit2 << 4 >>> 0) + digit2;
          blue = t3 + digit3;
          alpha = ((digit4 << 4 >>> 0) + digit4) / 255;
        } else {
          red = t2 + digit2;
          green = t3 + digit4;
          blue = (_this._stylesheet0$_hexDigit$0() << 4 >>> 0) + _this._stylesheet0$_hexDigit$0();
          alpha = T.isHex0(t1.peekChar$0()) ? ((_this._stylesheet0$_hexDigit$0() << 4 >>> 0) + _this._stylesheet0$_hexDigit$0()) / 255 : 1;
        }
      }
      return K.SassColor$rgb0(red, green, blue, alpha, t1.spanFrom$1(start));
    },
    _stylesheet0$_isHexColor$1: function(interpolation) {
      var t1,
        plain = interpolation.get$asPlain();
      if (plain == null)
        return false;
      t1 = plain.length;
      if (t1 !== 3 && t1 !== 4 && t1 !== 6 && t1 !== 8)
        return false;
      t1 = new H.CodeUnits(plain);
      return t1.every$1(t1, T.character0__isHex$closure());
    },
    _stylesheet0$_hexDigit$0: function() {
      var t1 = this.scanner,
        char = t1.peekChar$0();
      if (char == null || !T.isHex0(char))
        t1.error$1(0, "Expected hex digit.");
      return T.asHex0(t1.readChar$0());
    },
    _stylesheet0$_minusExpression$0: function() {
      var _this = this,
        next = _this.scanner.peekChar$1(1);
      if (T.isDigit0(next) || next === 46)
        return _this._stylesheet0$_number$0();
      if (_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())
        return _this.identifierLike$0();
      return _this._stylesheet0$_unaryOperation$0();
    },
    _stylesheet0$_importantExpression$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position;
      t1.readChar$0();
      this.whitespace$0();
      this.expectIdentifier$1("important");
      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));
      return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo(["!important"], type$.JSArray_legacy_Object), t2), false);
    },
    _stylesheet0$_unaryOperation$0: function() {
      var _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        operator = _this._stylesheet0$_unaryOperatorFor$1(t1.readChar$0());
      if (operator == null)
        t1.error$2$position(0, "Expected unary operator.", t1._string_scanner$_position - 1);
      else if (_this.get$plainCss() && operator !== C.UnaryOperator_zDx0)
        t1.error$3$length$position(0, "Operators aren't allowed in plain CSS.", 1, t1._string_scanner$_position - 1);
      _this.whitespace$0();
      return new X.UnaryOperationExpression0(operator, _this._stylesheet0$_singleExpression$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _stylesheet0$_unaryOperatorFor$1: function(character) {
      switch (character) {
        case 43:
          return C.UnaryOperator_j2w0;
        case 45:
          return C.UnaryOperator_U4G0;
        case 47:
          return C.UnaryOperator_zDx0;
        default:
          return null;
      }
    },
    _stylesheet0$_number$0: function() {
      var number, t4, unit, t5, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        first = t1.peekChar$0(),
        t3 = first === 45,
        sign = t3 ? -1 : 1;
      if (first === 43 || t3)
        t1.readChar$0();
      number = t1.peekChar$0() === 46 ? 0 : _this.naturalNumber$0();
      t3 = _this._stylesheet0$_tryDecimal$1$allowTrailingDot(t1._string_scanner$_position !== t2);
      t4 = _this._stylesheet0$_tryExponent$0();
      if (t1.scanChar$1(37))
        unit = "%";
      else {
        if (_this.lookingAtIdentifier$0())
          t5 = t1.peekChar$0() !== 45 || t1.peekChar$1(1) !== 45;
        else
          t5 = false;
        unit = t5 ? _this.identifier$1$unit(true) : null;
      }
      return new T.NumberExpression0(sign * ((number + t3) * t4), unit, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _stylesheet0$_tryDecimal$1$allowTrailingDot: function(allowTrailingDot) {
      var t2,
        t1 = this.scanner,
        start = t1._string_scanner$_position;
      if (t1.peekChar$0() !== 46)
        return 0;
      if (!T.isDigit0(t1.peekChar$1(1))) {
        if (allowTrailingDot)
          return 0;
        t1.error$2$position(0, "Expected digit.", t1._string_scanner$_position + 1);
      }
      t1.readChar$0();
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 != null && t2 >= 48 && t2 <= 57))
          break;
        t1.readChar$0();
      }
      return P.double_parse(t1.substring$1(0, start));
    },
    _stylesheet0$_tryExponent$0: function() {
      var next, t2, exponentSign, exponent,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first !== 101 && first !== 69)
        return 1;
      next = t1.peekChar$1(1);
      if (!T.isDigit0(next) && next !== 45 && next !== 43)
        return 1;
      t1.readChar$0();
      t2 = next === 45;
      exponentSign = t2 ? -1 : 1;
      if (next === 43 || t2)
        t1.readChar$0();
      if (!T.isDigit0(t1.peekChar$0()))
        t1.error$1(0, "Expected digit.");
      exponent = 0;
      while (true) {
        t2 = t1.peekChar$0();
        if (!(t2 != null && t2 >= 48 && t2 <= 57))
          break;
        exponent = exponent * 10 + (t1.readChar$0() - 48);
      }
      return Math.pow(10, exponentSign * exponent);
    },
    _stylesheet0$_unicodeRange$0: function() {
      var i, t2, j, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      _this.expectIdentChar$1(117);
      t1.expectChar$1(43);
      for (i = 0; i < 6; ++i)
        if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure1()))
          break;
      if (t1.scanChar$1(63)) {
        ++i;
        for (; i < 6; ++i)
          if (!t1.scanChar$1(63))
            break;
        t2 = t1.substring$1(0, start.position);
        t1 = t1.spanFrom$1(start);
        return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);
      }
      if (i === 0)
        t1.error$1(0, 'Expected hex digit or "?".');
      if (t1.scanChar$1(45)) {
        for (j = 0; j < 6; ++j)
          if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure2()))
            break;
        if (j === 0)
          t1.error$1(0, "Expected hex digit.");
      }
      if (_this._stylesheet0$_lookingAtInterpolatedIdentifierBody$0())
        t1.error$1(0, "Expected end of identifier.");
      t2 = t1.substring$1(0, start.position);
      t1 = t1.spanFrom$1(start);
      return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);
    },
    _stylesheet0$_variable$0: function() {
      var _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        $name = _this.variableName$0();
      if (_this.get$plainCss())
        _this.error$2(0, string$.Sass_v, t1.spanFrom$1(start));
      return new S.VariableExpression0(null, $name, t1.spanFrom$1(start));
    },
    _stylesheet0$_selector$0: function() {
      var t1, start, _this = this;
      if (_this.get$plainCss())
        _this.scanner.error$2$length(0, string$.The_pa, 1);
      t1 = _this.scanner;
      start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      t1.expectChar$1(38);
      if (t1.scanChar$1(38)) {
        _this.logger.warn$2$span(0, string$.In_Sas, t1.spanFrom$1(start));
        t1.set$position(t1._string_scanner$_position - 1);
      }
      return new T.SelectorExpression0(t1.spanFrom$1(start));
    },
    interpolatedString$0: function() {
      var t3, t4, buffer, next, second, t5,
        t1 = this.scanner,
        t2 = t1._string_scanner$_position,
        quote = t1.readChar$0();
      if (quote !== 39 && quote !== 34)
        t1.error$2$position(0, "Expected string.", t2);
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer0(t3, t4);
      for (; true;) {
        next = t1.peekChar$0();
        if (next === quote) {
          t1.readChar$0();
          break;
        } else if (next == null || next === 10 || next === 13 || next === 12)
          t1.error$1(0, "Expected " + H.Primitives_stringFromCharCode(quote) + ".");
        else if (next === 92) {
          second = t1.peekChar$1(1);
          if (second === 10 || second === 13 || second === 12) {
            t1.readChar$0();
            t1.readChar$0();
            if (second === 13)
              t1.scanChar$1(10);
          } else
            t3._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());
        } else if (next === 35)
          if (t1.peekChar$1(1) === 123) {
            t5 = this.singleInterpolation$0();
            buffer._interpolation_buffer0$_flushText$0();
            t4.push(t5);
          } else
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
        else
          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
      }
      return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))), true);
    },
    identifierLike$0: function() {
      var invocation, lower, color, specialFunction, $name, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        identifier = _this.interpolatedIdentifier$0(),
        plain = identifier.get$asPlain(),
        t2 = plain == null;
      if (!t2) {
        if (plain === "if") {
          invocation = _this._stylesheet0$_argumentInvocation$0();
          return new L.IfExpression0(invocation, B.spanForList0(H.setRuntimeTypeInfo([identifier, invocation], type$.JSArray_legacy_AstNode_2)));
        } else if (plain === "not") {
          _this.whitespace$0();
          return new X.UnaryOperationExpression0(C.UnaryOperator_not_not0, _this._stylesheet0$_singleExpression$0(), identifier.span);
        }
        lower = plain.toLowerCase();
        if (t1.peekChar$0() !== 40) {
          switch (plain) {
            case "false":
              return new Z.BooleanExpression0(false, identifier.span);
            case "null":
              return new O.NullExpression0(identifier.span);
            case "true":
              return new Z.BooleanExpression0(true, identifier.span);
          }
          color = $.$get$colorsByName0().$index(0, lower);
          if (color != null)
            return new K.ColorExpression0(K.SassColor$rgb0(color.get$red(), color.get$green(), color.get$blue(), color.alpha, identifier.span));
        }
        specialFunction = _this.trySpecialFunction$2(lower, start);
        if (specialFunction != null)
          return specialFunction;
      }
      switch (t1.peekChar$0()) {
        case 46:
          if (t1.peekChar$1(1) === 46)
            return new D.StringExpression0(identifier, false);
          t1.readChar$0();
          if (t2)
            _this.error$2(0, string$.Interpn, identifier.span);
          if (t1.peekChar$0() === 36) {
            $name = _this.variableName$0();
            _this._stylesheet0$_assertPublic$2($name, new V.StylesheetParser_identifierLike_closure0(_this, start));
            return new S.VariableExpression0(plain, $name, t1.spanFrom$1(start));
          }
          t2 = t1._string_scanner$_position;
          return new F.FunctionExpression0(plain, X.Interpolation$0(H.setRuntimeTypeInfo([_this._stylesheet0$_publicIdentifier$0()], type$.JSArray_legacy_Object), t1.spanFrom$1(new S._SpanScannerState(t1, t2))), _this._stylesheet0$_argumentInvocation$0(), t1.spanFrom$1(start));
        case 40:
          return new F.FunctionExpression0(null, identifier, _this._stylesheet0$_argumentInvocation$0(), t1.spanFrom$1(start));
        default:
          return new D.StringExpression0(identifier, false);
      }
    },
    trySpecialFunction$2: function($name, start) {
      var t1, buffer, t2, t3, next, contents, _this = this, _null = null;
      switch (B.unvendor0($name)) {
        case "calc":
        case "element":
        case "expression":
          if (!_this.scanner.scanChar$1(40))
            return _null;
          t1 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer0(t1, []);
          t1._contents = $name;
          t1._contents += H.Primitives_stringFromCharCode(40);
          break;
        case "min":
        case "max":
          t1 = _this.scanner;
          t2 = t1._string_scanner$_position;
          if (!t1.scanChar$1(40))
            return _null;
          _this.whitespace$0();
          t3 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer0(t3, []);
          t3._contents = $name;
          t3._contents += H.Primitives_stringFromCharCode(40);
          if (!_this._stylesheet0$_tryMinMaxContents$1(buffer)) {
            t1.set$state(new S._SpanScannerState(t1, t2));
            return _null;
          }
          return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(start)), false);
        case "progid":
          t1 = _this.scanner;
          if (!t1.scanChar$1(58))
            return _null;
          t2 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer0(t2, []);
          t2._contents = $name;
          t2._contents += H.Primitives_stringFromCharCode(58);
          next = t1.peekChar$0();
          while (true) {
            if (next != null) {
              if (!(next >= 97 && next <= 122))
                t3 = next >= 65 && next <= 90;
              else
                t3 = true;
              t3 = t3 || next === 46;
            } else
              t3 = false;
            if (!t3)
              break;
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            next = t1.peekChar$0();
          }
          t1.expectChar$1(40);
          t2._contents += H.Primitives_stringFromCharCode(40);
          break;
        case "url":
          contents = _this._stylesheet0$_tryUrlContents$1(start);
          return contents == null ? _null : new D.StringExpression0(contents, false);
        case "clamp":
          if ($name !== "clamp")
            return _null;
          if (!_this.scanner.scanChar$1(40))
            return _null;
          t1 = new P.StringBuffer("");
          buffer = new Z.InterpolationBuffer0(t1, []);
          t1._contents = $name;
          t1._contents += H.Primitives_stringFromCharCode(40);
          break;
        default:
          return _null;
      }
      buffer.addInterpolation$1(_this._stylesheet0$_interpolatedDeclarationValue$1$allowEmpty(true));
      t1 = _this.scanner;
      t1.expectChar$1(41);
      buffer._interpolation_buffer0$_text._contents += H.Primitives_stringFromCharCode(41);
      return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(start)), false);
    },
    _stylesheet0$_tryMinMaxContents$2$allowComma: function(buffer, allowComma) {
      var t1, t2, t3, t4, start, end, exception, t5, _this = this;
      for (t1 = _this.scanner, t2 = buffer._interpolation_buffer0$_text, t3 = !allowComma, t4 = _this.get$_stylesheet0$_number(); true;) {
        switch (t1.peekChar$0()) {
          case 45:
          case 43:
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            try {
              start = t1._string_scanner$_position;
              t4.call$0();
              end = t1._string_scanner$_position;
              t2._contents += J.substring$2$s(t1.string, start, end);
            } catch (exception) {
              if (type$.legacy_FormatException._is(H.unwrapException(exception)))
                return false;
              else
                throw exception;
            }
            break;
          case 35:
            if (t1.peekChar$1(1) !== 123)
              return false;
            t5 = _this.singleInterpolation$0();
            buffer._interpolation_buffer0$_flushText$0();
            buffer._interpolation_buffer0$_contents.push(t5);
            break;
          case 99:
          case 67:
            switch (t1.peekChar$1(1)) {
              case 97:
              case 65:
                if (!_this._stylesheet0$_tryMinMaxFunction$2(buffer, "calc"))
                  return false;
                break;
              case 108:
              case 76:
                if (!_this._stylesheet0$_tryMinMaxFunction$2(buffer, "clamp"))
                  return false;
                break;
            }
            break;
          case 101:
          case 69:
            if (!_this._stylesheet0$_tryMinMaxFunction$2(buffer, "env"))
              return false;
            break;
          case 118:
          case 86:
            if (!_this._stylesheet0$_tryMinMaxFunction$2(buffer, "var"))
              return false;
            break;
          case 40:
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            if (!_this._stylesheet0$_tryMinMaxContents$2$allowComma(buffer, false))
              return false;
            break;
          case 109:
          case 77:
            t1.readChar$0();
            if (_this.scanIdentChar$1(105)) {
              if (!_this.scanIdentChar$1(110))
                return false;
              t2._contents += "min(";
            } else if (_this.scanIdentChar$1(97)) {
              if (!_this.scanIdentChar$1(120))
                return false;
              t2._contents += "max(";
            } else
              return false;
            if (!t1.scanChar$1(40))
              return false;
            if (!_this._stylesheet0$_tryMinMaxContents$1(buffer))
              return false;
            break;
          default:
            return false;
        }
        _this.whitespace$0();
        switch (t1.peekChar$0()) {
          case 41:
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            return true;
          case 43:
          case 45:
          case 42:
          case 47:
            t2._contents += H.Primitives_stringFromCharCode(32);
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            t2._contents += H.Primitives_stringFromCharCode(32);
            break;
          case 44:
            if (t3)
              return false;
            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            t2._contents += H.Primitives_stringFromCharCode(32);
            break;
          default:
            return false;
        }
        _this.whitespace$0();
      }
    },
    _stylesheet0$_tryMinMaxContents$1: function(buffer) {
      return this._stylesheet0$_tryMinMaxContents$2$allowComma(buffer, true);
    },
    _stylesheet0$_tryMinMaxFunction$2: function(buffer, $name) {
      var t1, t2;
      if (!this.scanIdentifier$1($name))
        return false;
      t1 = this.scanner;
      if (!t1.scanChar$1(40))
        return false;
      t2 = buffer._interpolation_buffer0$_text;
      t2._contents += $name;
      t2._contents += H.Primitives_stringFromCharCode(40);
      buffer.addInterpolation$1(this._stylesheet0$_interpolatedDeclarationValue$1$allowEmpty(true));
      t2._contents += H.Primitives_stringFromCharCode(41);
      if (!t1.scanChar$1(41))
        return false;
      return true;
    },
    _stylesheet0$_tryUrlContents$2$name: function(start, $name) {
      var t3, t4, buffer, next, t5, endPosition, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      if (!t1.scanChar$1(40))
        return null;
      _this.whitespaceWithoutComments$0();
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer0(t3, t4);
      t3._contents = $name == null ? "url" : $name;
      t3._contents += H.Primitives_stringFromCharCode(40);
      for (; true;) {
        next = t1.peekChar$0();
        if (next == null)
          break;
        else {
          if (next !== 33)
            if (next !== 37)
              if (next !== 38)
                t5 = next >= 42 && next <= 126 || next >= 128;
              else
                t5 = true;
            else
              t5 = true;
          else
            t5 = true;
          if (t5)
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 92)
            t3._contents += H.S(_this.escape$0());
          else if (next === 35)
            if (t1.peekChar$1(1) === 123) {
              t5 = _this.singleInterpolation$0();
              buffer._interpolation_buffer0$_flushText$0();
              t4.push(t5);
            } else
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {
            _this.whitespaceWithoutComments$0();
            if (t1.peekChar$0() !== 41)
              break;
          } else if (next === 41) {
            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
            endPosition = t1._string_scanner$_position;
            t2 = t1._sourceFile;
            t3 = start.position;
            t1 = new Y._FileSpan(t2, t3, endPosition);
            t1._FileSpan$3(t2, t3, endPosition);
            return buffer.interpolation$1(t1);
          } else
            break;
        }
      }
      t1.set$state(new S._SpanScannerState(t1, t2));
      return null;
    },
    _stylesheet0$_tryUrlContents$1: function(start) {
      return this._stylesheet0$_tryUrlContents$2$name(start, null);
    },
    dynamicUrl$0: function() {
      var contents, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      _this.expectIdentifier$1("url");
      contents = _this._stylesheet0$_tryUrlContents$1(start);
      if (contents != null)
        return new D.StringExpression0(contents, false);
      return new F.FunctionExpression0(null, X.Interpolation$0(H.setRuntimeTypeInfo(["url"], type$.JSArray_legacy_Object), t1.spanFrom$1(start)), _this._stylesheet0$_argumentInvocation$0(), t1.spanFrom$1(start));
    },
    almostAnyValue$1$omitComments: function(omitComments) {
      var t4, t5, next, commentStart, end, t6, contents, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer0(t3, []);
      $label0$1:
        for (t4 = t1.string, t5 = !omitComments; true;) {
          next = t1.peekChar$0();
          switch (next) {
            case 92:
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 34:
            case 39:
              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());
              break;
            case 47:
              commentStart = t1._string_scanner$_position;
              if (_this.scanComment$0()) {
                if (t5) {
                  end = t1._string_scanner$_position;
                  t3._contents += J.substring$2$s(t4, commentStart, end);
                }
              } else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 35:
              if (t1.peekChar$1(1) === 123)
                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 13:
            case 10:
            case 12:
              if (_this.get$indented())
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
            case 33:
            case 59:
            case 123:
            case 125:
              break $label0$1;
            case 117:
            case 85:
              t6 = t1._string_scanner$_position;
              if (!_this.scanIdentifier$1("url")) {
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                break;
              }
              contents = _this._stylesheet0$_tryUrlContents$1(new S._SpanScannerState(t1, t6));
              if (contents == null) {
                if (t6 < 0 || t6 > t4.length)
                  H.throwExpression(P.ArgumentError$("Invalid position " + t6));
                t1._string_scanner$_position = t6;
                t1._lastMatch = null;
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              } else
                buffer.addInterpolation$1(contents);
              break;
            default:
              if (next == null)
                break $label0$1;
              if (_this.lookingAtIdentifier$0())
                t3._contents += _this.identifier$0();
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              break;
          }
        }
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    almostAnyValue$0: function() {
      return this.almostAnyValue$1$omitComments(false);
    },
    _stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon: function(allowColon, allowEmpty, allowSemicolon) {
      var t4, t5, t6, wroteNewline, next, t7, start, end, contents, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer0(t3, []),
        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);
      $label0$1:
        for (t4 = t1.string, t5 = !allowColon, t6 = !allowSemicolon, wroteNewline = false; true;) {
          next = t1.peekChar$0();
          switch (next) {
            case 92:
              t3._contents += H.S(_this.escape$1$identifierStart(true));
              wroteNewline = false;
              break;
            case 34:
            case 39:
              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());
              wroteNewline = false;
              break;
            case 47:
              if (t1.peekChar$1(1) === 42) {
                t7 = _this.get$loudComment();
                start = t1._string_scanner$_position;
                t7.call$0();
                end = t1._string_scanner$_position;
                t3._contents += J.substring$2$s(t4, start, end);
              } else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 35:
              if (t1.peekChar$1(1) === 123)
                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 32:
            case 9:
              if (!wroteNewline) {
                t7 = t1.peekChar$1(1);
                t7 = !(t7 === 32 || t7 === 9 || t7 === 10 || t7 === 13 || t7 === 12);
              } else
                t7 = true;
              if (t7)
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              else
                t1.readChar$0();
              break;
            case 10:
            case 13:
            case 12:
              if (_this.get$indented())
                break $label0$1;
              t7 = t1.peekChar$1(-1);
              if (!(t7 === 10 || t7 === 13 || t7 === 12))
                t3._contents += "\n";
              t1.readChar$0();
              wroteNewline = true;
              break;
            case 40:
            case 123:
            case 91:
              t3._contents += H.Primitives_stringFromCharCode(next);
              brackets.push(T.opposite0(t1.readChar$0()));
              wroteNewline = false;
              break;
            case 41:
            case 125:
            case 93:
              if (brackets.length === 0)
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(next);
              t1.expectChar$1(brackets.pop());
              wroteNewline = false;
              break;
            case 59:
              if (t6 && brackets.length === 0)
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 58:
              if (t5 && brackets.length === 0)
                break $label0$1;
              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
            case 117:
            case 85:
              t7 = t1._string_scanner$_position;
              if (!_this.scanIdentifier$1("url")) {
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
                wroteNewline = false;
                break;
              }
              contents = _this._stylesheet0$_tryUrlContents$1(new S._SpanScannerState(t1, t7));
              if (contents == null) {
                if (t7 < 0 || t7 > t4.length)
                  H.throwExpression(P.ArgumentError$("Invalid position " + t7));
                t1._string_scanner$_position = t7;
                t1._lastMatch = null;
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              } else
                buffer.addInterpolation$1(contents);
              wroteNewline = false;
              break;
            default:
              if (next == null)
                break $label0$1;
              if (_this.lookingAtIdentifier$0())
                t3._contents += _this.identifier$0();
              else
                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
              wroteNewline = false;
              break;
          }
        }
      if (brackets.length !== 0)
        t1.expectChar$1(C.JSArray_methods.get$last(brackets));
      if (!allowEmpty && buffer._interpolation_buffer0$_contents.length === 0 && t3._contents.length === 0)
        t1.error$1(0, "Expected token.");
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _stylesheet0$_interpolatedDeclarationValue$1$allowEmpty: function(allowEmpty) {
      return this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, false);
    },
    _stylesheet0$_interpolatedDeclarationValue$2$allowEmpty$allowSemicolon: function(allowEmpty, allowSemicolon) {
      return this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, allowSemicolon);
    },
    _stylesheet0$_interpolatedDeclarationValue$0: function() {
      return this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, false, false);
    },
    interpolatedIdentifier$0: function() {
      var first, _this = this,
        _s20_ = "Expected identifier.",
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        t2 = new P.StringBuffer(""),
        t3 = [],
        buffer = new Z.InterpolationBuffer0(t2, t3);
      if (t1.scanChar$1(45)) {
        t2._contents += H.Primitives_stringFromCharCode(45);
        if (t1.scanChar$1(45)) {
          t2._contents += H.Primitives_stringFromCharCode(45);
          _this._stylesheet0$_interpolatedIdentifierBody$1(buffer);
          return buffer.interpolation$1(t1.spanFrom$1(start));
        }
      }
      first = t1.peekChar$0();
      if (first == null)
        t1.error$1(0, _s20_);
      else if (first === 95 || T.isAlphabetic1(first) || first >= 128)
        t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
      else if (first === 92)
        t2._contents += H.S(_this.escape$1$identifierStart(true));
      else if (first === 35 && t1.peekChar$1(1) === 123) {
        t2 = _this.singleInterpolation$0();
        buffer._interpolation_buffer0$_flushText$0();
        t3.push(t2);
      } else
        t1.error$1(0, _s20_);
      _this._stylesheet0$_interpolatedIdentifierBody$1(buffer);
      return buffer.interpolation$1(t1.spanFrom$1(start));
    },
    _stylesheet0$_interpolatedIdentifierBody$1: function(buffer) {
      var t1, t2, t3, next, t4;
      for (t1 = buffer._interpolation_buffer0$_contents, t2 = this.scanner, t3 = buffer._interpolation_buffer0$_text; true;) {
        next = t2.peekChar$0();
        if (next == null)
          break;
        else {
          if (next !== 95)
            if (next !== 45) {
              if (!(next >= 97 && next <= 122))
                t4 = next >= 65 && next <= 90;
              else
                t4 = true;
              if (!t4)
                t4 = next >= 48 && next <= 57;
              else
                t4 = true;
              t4 = t4 || next >= 128;
            } else
              t4 = true;
          else
            t4 = true;
          if (t4)
            t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());
          else if (next === 92)
            t3._contents += H.S(this.escape$0());
          else if (next === 35 && t2.peekChar$1(1) === 123) {
            t4 = this.singleInterpolation$0();
            buffer._interpolation_buffer0$_flushText$0();
            t1.push(t4);
          } else
            break;
        }
      }
    },
    singleInterpolation$0: function() {
      var contents, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      t1.expect$1("#{");
      _this.whitespace$0();
      contents = _this.expression$0();
      t1.expectChar$1(125);
      if (_this.get$plainCss())
        _this.error$2(0, string$.Interpp, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
      return contents;
    },
    _stylesheet0$_mediaQueryList$0: function() {
      var t1 = this.scanner,
        t2 = t1._string_scanner$_position,
        t3 = new P.StringBuffer(""),
        buffer = new Z.InterpolationBuffer0(t3, []);
      for (; true;) {
        this.whitespace$0();
        this._stylesheet0$_mediaQuery$1(buffer);
        if (!t1.scanChar$1(44))
          break;
        t3._contents += H.Primitives_stringFromCharCode(44);
        t3._contents += H.Primitives_stringFromCharCode(32);
      }
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _stylesheet0$_mediaQuery$1: function(buffer) {
      var t1, identifier, _this = this;
      if (_this.scanner.peekChar$0() !== 40) {
        buffer.addInterpolation$1(_this.interpolatedIdentifier$0());
        _this.whitespace$0();
        if (!_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())
          return;
        t1 = buffer._interpolation_buffer0$_text;
        t1._contents += H.Primitives_stringFromCharCode(32);
        identifier = _this.interpolatedIdentifier$0();
        _this.whitespace$0();
        if (B.equalsIgnoreCase0(identifier.get$asPlain(), "and"))
          t1._contents += " and ";
        else {
          buffer.addInterpolation$1(identifier);
          if (_this.scanIdentifier$1("and")) {
            _this.whitespace$0();
            t1._contents += " and ";
          } else
            return;
        }
      }
      for (t1 = buffer._interpolation_buffer0$_text; true;) {
        _this.whitespace$0();
        buffer.addInterpolation$1(_this._stylesheet0$_mediaFeature$0());
        _this.whitespace$0();
        if (!_this.scanIdentifier$1("and"))
          break;
        t1._contents += " and ";
      }
    },
    _stylesheet0$_mediaFeature$0: function() {
      var interpolation, t2, t3, t4, buffer, t5, next, isAngle, _this = this,
        t1 = _this.scanner;
      if (t1.peekChar$0() === 35) {
        interpolation = _this.singleInterpolation$0();
        return X.Interpolation$0(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());
      }
      t2 = t1._string_scanner$_position;
      t3 = new P.StringBuffer("");
      t4 = [];
      buffer = new Z.InterpolationBuffer0(t3, t4);
      t1.expectChar$1(40);
      t3._contents += H.Primitives_stringFromCharCode(40);
      _this.whitespace$0();
      t5 = _this._stylesheet0$_expressionUntilComparison$0();
      buffer._interpolation_buffer0$_flushText$0();
      t4.push(t5);
      if (t1.scanChar$1(58)) {
        _this.whitespace$0();
        t3._contents += H.Primitives_stringFromCharCode(58);
        t3._contents += H.Primitives_stringFromCharCode(32);
        t5 = _this.expression$0();
        buffer._interpolation_buffer0$_flushText$0();
        t4.push(t5);
      } else {
        next = t1.peekChar$0();
        isAngle = next === 60 || next === 62;
        if (isAngle || next === 61) {
          t3._contents += H.Primitives_stringFromCharCode(32);
          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());
          if (isAngle && t1.scanChar$1(61))
            t3._contents += H.Primitives_stringFromCharCode(61);
          t3._contents += H.Primitives_stringFromCharCode(32);
          _this.whitespace$0();
          t5 = _this._stylesheet0$_expressionUntilComparison$0();
          buffer._interpolation_buffer0$_flushText$0();
          t4.push(t5);
          if (isAngle && t1.scanChar$1(next)) {
            t3._contents += H.Primitives_stringFromCharCode(32);
            t3._contents += H.Primitives_stringFromCharCode(next);
            if (t1.scanChar$1(61))
              t3._contents += H.Primitives_stringFromCharCode(61);
            t3._contents += H.Primitives_stringFromCharCode(32);
            _this.whitespace$0();
            t5 = _this._stylesheet0$_expressionUntilComparison$0();
            buffer._interpolation_buffer0$_flushText$0();
            t4.push(t5);
          }
        }
      }
      t1.expectChar$1(41);
      _this.whitespace$0();
      t3._contents += H.Primitives_stringFromCharCode(41);
      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
    },
    _stylesheet0$_expressionUntilComparison$0: function() {
      return this.expression$1$until(new V.StylesheetParser__expressionUntilComparison_closure0(this));
    },
    _stylesheet0$_supportsCondition$0: function() {
      var condition, operator, right, endPosition, t3, t4, lowerOperator, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      if (_this.scanIdentifier$1("not")) {
        _this.whitespace$0();
        return new M.SupportsNegation0(_this._stylesheet0$_supportsConditionInParens$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));
      }
      condition = _this._stylesheet0$_supportsConditionInParens$0();
      _this.whitespace$0();
      for (operator = null; _this.lookingAtIdentifier$0();) {
        if (operator != null)
          _this.expectIdentifier$1(operator);
        else if (_this.scanIdentifier$1("or"))
          operator = "or";
        else {
          _this.expectIdentifier$1("and");
          operator = "and";
        }
        _this.whitespace$0();
        right = _this._stylesheet0$_supportsConditionInParens$0();
        endPosition = t1._string_scanner$_position;
        t3 = t1._sourceFile;
        t4 = new Y._FileSpan(t3, t2, endPosition);
        t4._FileSpan$3(t3, t2, endPosition);
        condition = new U.SupportsOperation0(condition, right, operator, t4);
        lowerOperator = operator.toLowerCase();
        if (lowerOperator !== "and" && lowerOperator !== "or")
          H.throwExpression(P.ArgumentError$value(operator, "operator", 'may only be "and" or "or".'));
        _this.whitespace$0();
      }
      return condition;
    },
    _stylesheet0$_supportsConditionInParens$0: function() {
      var $name, nameStart, wasInParentheses, identifier, operation, contents, identifier0, t2, $arguments, condition, exception, value, _this = this,
        t1 = _this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position);
      if (_this._stylesheet0$_lookingAtInterpolatedIdentifier$0()) {
        identifier0 = _this.interpolatedIdentifier$0();
        t2 = identifier0.get$asPlain();
        if ((t2 == null ? null : t2.toLowerCase()) === "not")
          _this.error$2(0, '"not" is not a valid identifier here.', identifier0.span);
        if (t1.scanChar$1(40)) {
          $arguments = _this._stylesheet0$_interpolatedDeclarationValue$2$allowEmpty$allowSemicolon(true, true);
          t1.expectChar$1(41);
          return new F.SupportsFunction0(identifier0, $arguments, t1.spanFrom$1(start));
        } else {
          t2 = identifier0.contents;
          if (t2.length !== 1 || !type$.legacy_Expression_2._is(C.JSArray_methods.get$first(t2)))
            _this.error$2(0, "Expected @supports condition.", identifier0.span);
          else
            return new X.SupportsInterpolation0(type$.legacy_Expression_2._as(C.JSArray_methods.get$first(t2)), t1.spanFrom$1(start));
        }
      }
      t1.expectChar$1(40);
      _this.whitespace$0();
      if (_this.scanIdentifier$1("not")) {
        _this.whitespace$0();
        condition = _this._stylesheet0$_supportsConditionInParens$0();
        t1.expectChar$1(41);
        return new M.SupportsNegation0(condition, t1.spanFrom$1(start));
      } else if (t1.peekChar$0() === 40) {
        condition = _this._stylesheet0$_supportsCondition$0();
        t1.expectChar$1(41);
        return condition;
      }
      $name = null;
      nameStart = new S._SpanScannerState(t1, t1._string_scanner$_position);
      wasInParentheses = _this._stylesheet0$_inParentheses;
      try {
        $name = _this.expression$0();
        t1.expectChar$1(58);
      } catch (exception) {
        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {
          t1.set$state(nameStart);
          _this._stylesheet0$_inParentheses = wasInParentheses;
          identifier = _this.interpolatedIdentifier$0();
          operation = _this._stylesheet0$_trySupportsOperation$2(identifier, nameStart);
          if (operation != null) {
            t1.expectChar$1(41);
            return operation;
          }
          t2 = new Z.InterpolationBuffer0(new P.StringBuffer(""), []);
          t2.addInterpolation$1(identifier);
          t2.addInterpolation$1(_this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(false, true, true));
          contents = t2.interpolation$1(t1.spanFrom$1(nameStart));
          if (t1.peekChar$0() === 58)
            throw exception;
          t1.expectChar$1(41);
          return new Y.SupportsAnything0(contents, t1.spanFrom$1(start));
        } else
          throw exception;
      }
      _this.whitespace$0();
      value = _this.expression$0();
      t1.expectChar$1(41);
      return new L.SupportsDeclaration0($name, value, t1.spanFrom$1(start));
    },
    _stylesheet0$_trySupportsOperation$2: function(interpolation, start) {
      var expression, beforeWhitespace, t2, t3, operator, operation, right, t4, endPosition, t5, t6, lowerOperator, _this = this, _null = null,
        t1 = interpolation.contents;
      if (t1.length !== 1)
        return _null;
      expression = C.JSArray_methods.get$first(t1);
      if (!type$.legacy_Expression_2._is(expression))
        return _null;
      t1 = _this.scanner;
      beforeWhitespace = new S._SpanScannerState(t1, t1._string_scanner$_position);
      _this.whitespace$0();
      for (t2 = start.position, t3 = interpolation.span, operator = _null, operation = operator; _this.lookingAtIdentifier$0();) {
        if (operator != null)
          _this.expectIdentifier$1(operator);
        else if (_this.scanIdentifier$1("and"))
          operator = "and";
        else {
          if (!_this.scanIdentifier$1("or")) {
            if (beforeWhitespace._scanner !== t1)
              H.throwExpression(P.ArgumentError$(string$.The_gi));
            t2 = beforeWhitespace.position;
            if (t2 < 0 || t2 > t1.string.length)
              H.throwExpression(P.ArgumentError$("Invalid position " + t2));
            t1._string_scanner$_position = t2;
            return t1._lastMatch = null;
          }
          operator = "or";
        }
        _this.whitespace$0();
        right = _this._stylesheet0$_supportsConditionInParens$0();
        t4 = operation == null ? new X.SupportsInterpolation0(expression, t3) : operation;
        endPosition = t1._string_scanner$_position;
        t5 = t1._sourceFile;
        t6 = new Y._FileSpan(t5, t2, endPosition);
        t6._FileSpan$3(t5, t2, endPosition);
        operation = new U.SupportsOperation0(t4, right, operator, t6);
        lowerOperator = operator.toLowerCase();
        if (lowerOperator !== "and" && lowerOperator !== "or")
          H.throwExpression(P.ArgumentError$value(operator, "operator", 'may only be "and" or "or".'));
        _this.whitespace$0();
      }
      return operation;
    },
    _stylesheet0$_lookingAtInterpolatedIdentifier$0: function() {
      var second,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (first === 95 || T.isAlphabetic1(first) || first >= 128 || first === 92)
        return true;
      if (first === 35)
        return t1.peekChar$1(1) === 123;
      if (first !== 45)
        return false;
      second = t1.peekChar$1(1);
      if (second == null)
        return false;
      if (second === 35)
        return t1.peekChar$1(2) === 123;
      return second === 95 || T.isAlphabetic1(second) || second >= 128 || second === 92 || second === 45;
    },
    _stylesheet0$_lookingAtInterpolatedIdentifierBody$0: function() {
      var t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (first === 95 || T.isAlphabetic1(first) || first >= 128 || T.isDigit0(first) || first === 45 || first === 92)
        return true;
      return first === 35 && t1.peekChar$1(1) === 123;
    },
    _stylesheet0$_lookingAtExpression$0: function() {
      var next,
        t1 = this.scanner,
        character = t1.peekChar$0();
      if (character == null)
        return false;
      if (character === 46)
        return t1.peekChar$1(1) !== 46;
      if (character === 33) {
        next = t1.peekChar$1(1);
        if (next != null)
          if ((next | 32) !== 105)
            t1 = next === 32 || next === 9 || T.isNewline0(next);
          else
            t1 = true;
        else
          t1 = true;
        return t1;
      }
      if (character !== 40)
        if (character !== 47)
          if (character !== 91)
            if (character !== 39)
              if (character !== 34)
                if (character !== 35)
                  if (character !== 43)
                    if (character !== 45)
                      if (character !== 92)
                        if (character !== 36)
                          if (character !== 38)
                            t1 = character === 95 || T.isAlphabetic1(character) || character >= 128 || T.isDigit0(character);
                          else
                            t1 = true;
                        else
                          t1 = true;
                      else
                        t1 = true;
                    else
                      t1 = true;
                  else
                    t1 = true;
                else
                  t1 = true;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _stylesheet0$_withChildren$1$3: function(child, start, create) {
      var result = create.call$2(this.children$1(0, child), this.scanner.spanFrom$1(start));
      this.whitespaceWithoutComments$0();
      return result;
    },
    _stylesheet0$_withChildren$3: function(child, start, create) {
      return this._stylesheet0$_withChildren$1$3(child, start, create, type$.dynamic);
    },
    _stylesheet0$_urlString$0: function() {
      var innerError, t2, exception,
        t1 = this.scanner,
        start = new S._SpanScannerState(t1, t1._string_scanner$_position),
        url = this.string$0();
      try {
        t2 = P.Uri_parse(url);
        return t2;
      } catch (exception) {
        t2 = H.unwrapException(exception);
        if (type$.legacy_FormatException._is(t2)) {
          innerError = t2;
          this.error$2(0, "Invalid URL: " + H.S(J.get$message$x(innerError)), t1.spanFrom$1(start));
        } else
          throw exception;
      }
    },
    _stylesheet0$_publicIdentifier$0: function() {
      var _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        result = _this.identifier$1$normalize(true);
      _this._stylesheet0$_assertPublic$2(result, new V.StylesheetParser__publicIdentifier_closure0(_this, new S._SpanScannerState(t1, t2)));
      return result;
    },
    _stylesheet0$_assertPublic$2: function(identifier, span) {
      if (!T.isPrivate0(identifier))
        return;
      this.error$2(0, string$.Privat, span.call$0());
    },
    get$plainCss: function() {
      return false;
    }
  };
  V.StylesheetParser_parse_closure0.prototype = {
    call$0: function() {
      var statements, t4,
        t1 = this.$this,
        t2 = t1.scanner,
        t3 = t2._string_scanner$_position;
      t2.scanChar$1(65279);
      statements = t1.statements$1(new V.StylesheetParser_parse__closure1(t1));
      t2.expectDone$0();
      t4 = t1._stylesheet0$_globalVariables;
      t4 = t4.get$values(t4);
      C.JSArray_methods.addAll$1(statements, H.MappedIterable_MappedIterable(t4, new V.StylesheetParser_parse__closure2(), H._instanceType(t4)._eval$1("Iterable.E"), type$.legacy_Statement_2));
      return V.Stylesheet$0(statements, t2.spanFrom$1(new S._SpanScannerState(t2, t3)), t1.get$plainCss());
    },
    $signature: 214
  };
  V.StylesheetParser_parse__closure1.prototype = {
    call$0: function() {
      return this.$this._stylesheet0$_statement$1$root(true);
    },
    $signature: 52
  };
  V.StylesheetParser_parse__closure2.prototype = {
    call$1: function(declaration) {
      return Z.VariableDeclaration$0(declaration.name, new O.NullExpression0(declaration.expression.get$span()), declaration.span, null, false, true, null);
    },
    $signature: 435
  };
  V.StylesheetParser_parseArgumentDeclaration_closure0.prototype = {
    call$0: function() {
      var $arguments,
        t1 = this.$this,
        t2 = t1.scanner;
      t2.expectChar$2$name(64, "@-rule");
      t1.identifier$0();
      t1.whitespace$0();
      t1.identifier$0();
      $arguments = t1._stylesheet0$_argumentDeclaration$0();
      t1.whitespace$0();
      t2.expectChar$1(123);
      return $arguments;
    },
    $signature: 436
  };
  V.StylesheetParser__parseSingleProduction_closure0.prototype = {
    call$0: function() {
      var result = this.production.call$0();
      this.$this.scanner.expectDone$0();
      return result;
    },
    $signature: function() {
      return this.T._eval$1("0*()");
    }
  };
  V.StylesheetParser_parseSignature_closure.prototype = {
    call$0: function() {
      var t2, $arguments, t3,
        t1 = this.$this,
        $name = t1.identifier$0();
      t1.whitespace$0();
      t2 = t1.scanner;
      if (t2.peekChar$0() === 40)
        $arguments = t1._stylesheet0$_argumentDeclaration$0();
      else {
        t1 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);
        t3 = t1.offset;
        $arguments = new B.ArgumentDeclaration0(C.List_empty20, null, Y._FileSpan$(t1.file, t3, t3));
      }
      t2.expectDone$0();
      return new S.Tuple2($name, $arguments, type$.Tuple2_of_legacy_String_and_legacy_ArgumentDeclaration);
    },
    $signature: 437
  };
  V.StylesheetParser__statement_closure0.prototype = {
    call$0: function() {
      return this.$this._stylesheet0$_statement$0();
    },
    $signature: 52
  };
  V.StylesheetParser_variableDeclarationWithoutNamespace_closure1.prototype = {
    call$0: function() {
      return this.$this.scanner.spanFrom$1(this._box_0.start);
    },
    $signature: 33
  };
  V.StylesheetParser_variableDeclarationWithoutNamespace_closure2.prototype = {
    call$0: function() {
      return this.declaration;
    },
    $signature: 438
  };
  V.StylesheetParser__declarationOrBuffer_closure1.prototype = {
    call$2: function(children, span) {
      return L.Declaration$0(this.name, span, children, null);
    },
    $signature: 69
  };
  V.StylesheetParser__declarationOrBuffer_closure2.prototype = {
    call$2: function(children, span) {
      return L.Declaration$0(this.name, span, children, this._box_0.value);
    },
    $signature: 69
  };
  V.StylesheetParser__styleRule_closure0.prototype = {
    call$2: function(children, span) {
      var t2, _this = this,
        t1 = _this.$this;
      if (t1.get$indented() && children.length === 0)
        t1.logger.warn$2$span(0, string$.This_s, _this._box_0.interpolation.span);
      t1._stylesheet0$_inStyleRule = _this.wasInStyleRule;
      t2 = _this._box_0;
      return X.StyleRule$0(t2.interpolation, children, t1.scanner.spanFrom$1(t2.start));
    },
    $signature: 440
  };
  V.StylesheetParser__propertyOrVariableDeclaration_closure1.prototype = {
    call$2: function(children, span) {
      return L.Declaration$0(this._box_0.name, span, children, null);
    },
    $signature: 69
  };
  V.StylesheetParser__propertyOrVariableDeclaration_closure2.prototype = {
    call$2: function(children, span) {
      return L.Declaration$0(this._box_0.name, span, children, this.value);
    },
    $signature: 69
  };
  V.StylesheetParser__atRootRule_closure1.prototype = {
    call$2: function(children, span) {
      return V.AtRootRule$0(children, span, this.query);
    },
    $signature: 201
  };
  V.StylesheetParser__atRootRule_closure2.prototype = {
    call$2: function(children, span) {
      return V.AtRootRule$0(children, span, null);
    },
    $signature: 201
  };
  V.StylesheetParser__eachRule_closure0.prototype = {
    call$2: function(children, span) {
      var _this = this;
      _this.$this._stylesheet0$_inControlDirective = _this.wasInControlDirective;
      return V.EachRule$0(_this.variables, _this.list, children, span);
    },
    $signature: 442
  };
  V.StylesheetParser__functionRule_closure0.prototype = {
    call$2: function(children, span) {
      return M.FunctionRule$0(this.name, this.$arguments, children, span, this.precedingComment);
    },
    $signature: 443
  };
  V.StylesheetParser__forRule_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (!t1.lookingAtIdentifier$0())
        return false;
      if (t1.scanIdentifier$1("to"))
        return this._box_0.exclusive = true;
      else if (t1.scanIdentifier$1("through")) {
        this._box_0.exclusive = false;
        return true;
      } else
        return false;
    },
    $signature: 35
  };
  V.StylesheetParser__forRule_closure2.prototype = {
    call$2: function(children, span) {
      var _this = this;
      _this.$this._stylesheet0$_inControlDirective = _this.wasInControlDirective;
      return B.ForRule$0(_this.variable, _this.from, _this.to, children, span, _this._box_0.exclusive);
    },
    $signature: 444
  };
  V.StylesheetParser__memberList_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.scanner.peekChar$0() === 36)
        this.variables.add$1(0, t1.variableName$0());
      else
        this.identifiers.add$1(0, t1.identifier$1$normalize(true));
    },
    $signature: 0
  };
  V.StylesheetParser__includeRule_closure0.prototype = {
    call$2: function(children, span) {
      return Y.ContentBlock$0(this._box_0.contentArguments, children, span);
    },
    $signature: 445
  };
  V.StylesheetParser_mediaRule_closure0.prototype = {
    call$2: function(children, span) {
      return G.MediaRule$0(this.query, children, span);
    },
    $signature: 446
  };
  V.StylesheetParser__mixinRule_closure0.prototype = {
    call$2: function(children, span) {
      var _this = this,
        t1 = _this.$this,
        hadContent = t1._stylesheet0$_mixinHasContent;
      t1._stylesheet0$_inMixin = false;
      t1._stylesheet0$_mixinHasContent = null;
      return T.MixinRule$0(_this.name, _this.$arguments, children, span, _this.precedingComment, hadContent);
    },
    $signature: 447
  };
  V.StylesheetParser_mozDocumentRule_closure0.prototype = {
    call$2: function(children, span) {
      var _this = this;
      if (_this._box_0.needsDeprecationWarning)
        _this.$this.logger.warn$3$deprecation$span(0, string$.x40_moz_, true, span);
      return U.AtRule$0(_this.name, span, children, _this.value);
    },
    $signature: 160
  };
  V.StylesheetParser_supportsRule_closure0.prototype = {
    call$2: function(children, span) {
      return B.SupportsRule$0(this.condition, children, span);
    },
    $signature: 449
  };
  V.StylesheetParser__whileRule_closure0.prototype = {
    call$2: function(children, span) {
      this.$this._stylesheet0$_inControlDirective = this.wasInControlDirective;
      return G.WhileRule$0(this.condition, children, span);
    },
    $signature: 450
  };
  V.StylesheetParser_unknownAtRule_closure0.prototype = {
    call$2: function(children, span) {
      return U.AtRule$0(this.name, span, children, this._box_0.value);
    },
    $signature: 160
  };
  V.StylesheetParser_expression_resetState0.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_0;
      t1.operands = t1.operators = t1.spaceExpressions = t1.commaExpressions = null;
      t2 = this.$this;
      t2.scanner.set$state(this.start);
      t1.allowSlash = t2.lookingAtNumber$0();
      t1.singleExpression = t2._stylesheet0$_singleExpression$0();
    },
    $signature: 1
  };
  V.StylesheetParser_expression_resolveOneOperation0.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this._box_0,
        operator = t1.operators.pop();
      if (operator !== C.BinaryOperator_RTB0)
        t1.allowSlash = false;
      t2 = t1.allowSlash && !this.$this._stylesheet0$_inParentheses;
      t3 = t1.operands;
      if (t2)
        t1.singleExpression = new V.BinaryOperationExpression0(C.BinaryOperator_RTB0, t3.pop(), t1.singleExpression, true);
      else
        t1.singleExpression = new V.BinaryOperationExpression0(operator, t3.pop(), t1.singleExpression, false);
    },
    $signature: 1
  };
  V.StylesheetParser_expression_resolveOperations0.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_0;
      if (t1.operators == null)
        return;
      for (t2 = this.resolveOneOperation; t1.operators.length !== 0;)
        t2.call$0();
    },
    $signature: 1
  };
  V.StylesheetParser_expression_addSingleExpression0.prototype = {
    call$2$number: function(expression, number) {
      var t2, _this = this,
        t1 = _this._box_0;
      if (t1.singleExpression != null) {
        t2 = _this.$this;
        if (t2._stylesheet0$_inParentheses) {
          t2._stylesheet0$_inParentheses = false;
          if (t1.allowSlash) {
            _this.resetState.call$0();
            return;
          }
        }
        if (t1.spaceExpressions == null)
          t1.spaceExpressions = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);
        _this.resolveOperations.call$0();
        t1.spaceExpressions.push(t1.singleExpression);
        t1.allowSlash = number;
      } else if (!number)
        t1.allowSlash = false;
      t1.singleExpression = expression;
    },
    call$1: function(expression) {
      return this.call$2$number(expression, false);
    },
    $signature: 451
  };
  V.StylesheetParser_expression_addOperator0.prototype = {
    call$1: function(operator) {
      var t2, t3, t4, t5, singleExpression,
        t1 = this.$this;
      if (t1.get$plainCss() && operator !== C.BinaryOperator_RTB0 && operator !== C.BinaryOperator_kjl0) {
        t2 = t1.scanner;
        t3 = operator.operator.length;
        t2.error$3$length$position(0, "Operators aren't allowed in plain CSS.", t3, t2._string_scanner$_position - t3);
      }
      t2 = this._box_0;
      t2.allowSlash = t2.allowSlash && operator === C.BinaryOperator_RTB0;
      if (t2.operators == null)
        t2.operators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BinaryOperator_2);
      if (t2.operands == null)
        t2.operands = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);
      t3 = this.resolveOneOperation;
      t4 = operator.precedence;
      while (true) {
        t5 = t2.operators;
        if (!(t5.length !== 0 && C.JSArray_methods.get$last(t5).precedence >= t4))
          break;
        t3.call$0();
      }
      t2.operators.push(operator);
      t2.operands.push(t2.singleExpression);
      t1.whitespace$0();
      t2.allowSlash = t2.allowSlash && t1.lookingAtNumber$0();
      singleExpression = t1._stylesheet0$_singleExpression$0();
      t2.singleExpression = singleExpression;
      t2.allowSlash = t2.allowSlash && singleExpression instanceof T.NumberExpression0;
    },
    $signature: 452
  };
  V.StylesheetParser_expression_resolveSpaceExpressions0.prototype = {
    call$0: function() {
      var t1, t2;
      this.resolveOperations.call$0();
      t1 = this._box_0;
      t2 = t1.spaceExpressions;
      if (t2 != null) {
        t2.push(t1.singleExpression);
        t1.singleExpression = D.ListExpression$0(t1.spaceExpressions, C.ListSeparator_space0, false, null);
        t1.spaceExpressions = null;
      }
    },
    $signature: 1
  };
  V.StylesheetParser__expressionUntilComma_closure0.prototype = {
    call$0: function() {
      return this.$this.scanner.peekChar$0() === 44;
    },
    $signature: 35
  };
  V.StylesheetParser__unicodeRange_closure1.prototype = {
    call$1: function(char) {
      return char != null && T.isHex0(char);
    },
    $signature: 24
  };
  V.StylesheetParser__unicodeRange_closure2.prototype = {
    call$1: function(char) {
      return char != null && T.isHex0(char);
    },
    $signature: 24
  };
  V.StylesheetParser_identifierLike_closure0.prototype = {
    call$0: function() {
      return this.$this.scanner.spanFrom$1(this.start);
    },
    $signature: 33
  };
  V.StylesheetParser__expressionUntilComparison_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this.scanner,
        next = t1.peekChar$0();
      if (next === 61)
        return t1.peekChar$1(1) !== 61;
      return next === 60 || next === 62;
    },
    $signature: 35
  };
  V.StylesheetParser__publicIdentifier_closure0.prototype = {
    call$0: function() {
      return this.$this.scanner.spanFrom$1(this.start);
    },
    $signature: 33
  };
  V.Stylesheet0.prototype = {
    Stylesheet$3$plainCss0: function(children, span, plainCss) {
      var t1, t2, t3, t4, _i, child;
      for (t1 = this.children, t2 = t1.length, t3 = this._stylesheet1$_forwards, t4 = this._stylesheet1$_uses, _i = 0; _i < t2; ++_i) {
        child = t1[_i];
        if (child instanceof T.UseRule0)
          t4.push(child);
        else if (child instanceof L.ForwardRule0)
          t3.push(child);
        else if (!(child instanceof B.SilentComment0) && !(child instanceof L.LoudComment0) && !(child instanceof Z.VariableDeclaration0))
          break;
      }
    },
    accept$1$1: function(visitor) {
      return visitor.visitStylesheet$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.children;
      return (t1 && C.JSArray_methods).join$1(t1, " ");
    },
    get$span: function() {
      return this.span;
    }
  };
  B.ModifiableCssSupportsRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitCssSupportsRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    copyWithoutChildren$0: function() {
      return B.ModifiableCssSupportsRule$0(this.condition, this.span);
    },
    $isCssSupportsRule0: 1,
    get$span: function() {
      return this.span;
    }
  };
  B.SupportsRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitSupportsRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.children;
      return "@supports " + this.condition.toString$0(0) + " {" + (t1 && C.JSArray_methods).join$1(t1, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  M.Syntax0.prototype = {
    toString$0: function(_) {
      return this._syntax0$_name;
    }
  };
  F.TypeSelector0.prototype = {
    get$minSpecificity: function() {
      return 1;
    },
    accept$1$1: function(visitor) {
      visitor._buffer.write$1(0, this.name);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    addSuffix$1: function(suffix) {
      var t1 = this.name;
      return new F.TypeSelector0(new D.QualifiedName0(t1.name + suffix, t1.namespace));
    },
    unify$1: function(compound) {
      var unified, t1, t2, cur, _i;
      if (C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0 || C.JSArray_methods.get$first(compound) instanceof F.TypeSelector0) {
        unified = Y.unifyUniversalAndElement0(this, C.JSArray_methods.get$first(compound));
        if (unified == null)
          return null;
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);
        t1.push(unified);
        for (t2 = H.SubListIterable$(compound, 1, null, H._arrayInstanceType(compound)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
          cur = t2.__internal$_current;
          t1.push(cur);
        }
        return t1;
      } else {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);
        t1.push(this);
        for (t2 = compound.length, _i = 0; _i < compound.length; compound.length === t2 || (0, H.throwConcurrentModificationError)(compound), ++_i)
          t1.push(compound[_i]);
        return t1;
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof F.TypeSelector0 && other.name.$eq(0, this.name);
    },
    get$hashCode: function(_) {
      var t1 = this.name;
      return C.JSString_methods.get$hashCode(t1.name) ^ J.get$hashCode$(t1.namespace);
    }
  };
  G.Types.prototype = {};
  X.UnaryOperationExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitUnaryOperationExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.operator,
        t2 = t1.operator;
      t1 = t1 === C.UnaryOperator_not_not0 ? t2 + H.Primitives_stringFromCharCode(32) : t2;
      t1 += H.S(this.operand);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  X.UnaryOperator0.prototype = {
    toString$0: function(_) {
      return this.name;
    }
  };
  N.UnitlessSassNumber0.prototype = {
    get$numeratorUnits: function() {
      return C.List_empty;
    },
    get$denominatorUnits: function() {
      return C.List_empty;
    },
    get$hasUnits: function() {
      return false;
    },
    withValue$1: function(value) {
      return new N.UnitlessSassNumber0(value, null);
    },
    withSlash$2: function(numerator, denominator) {
      return new N.UnitlessSassNumber0(this.value, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber_2));
    },
    hasUnit$1: function(unit) {
      return false;
    },
    compatibleWithUnit$1: function(unit) {
      return true;
    },
    coerceValueToMatch$1: function(other) {
      return this.value;
    },
    convertValueToMatch$3: function(other, $name, otherName) {
      return other.get$hasUnits() ? this.super$SassNumber$convertValueToMatch0(other, $name, otherName) : this.value;
    },
    coerce$2: function(newNumerators, newDenominators) {
      return T.SassNumber_SassNumber$withUnits0(this.value, newDenominators, newNumerators);
    },
    coerceValue$3: function(newNumerators, newDenominators, $name) {
      return this.value;
    },
    coerceValueToUnit$2: function(unit, $name) {
      return this.value;
    },
    greaterThan$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber0) {
        t1 = this.value;
        t2 = other.value;
        return t1 > t2 && !(Math.abs(t1 - t2) < $.$get$epsilon0()) ? C.SassBoolean_true : C.SassBoolean_false;
      }
      return this.super$SassNumber$greaterThan0(other);
    },
    greaterThanOrEquals$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber0) {
        t1 = this.value;
        t2 = other.value;
        return t1 > t2 || Math.abs(t1 - t2) < $.$get$epsilon0() ? C.SassBoolean_true : C.SassBoolean_false;
      }
      return this.super$SassNumber$greaterThanOrEquals0(other);
    },
    lessThan$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber0) {
        t1 = this.value;
        t2 = other.value;
        return t1 < t2 && !(Math.abs(t1 - t2) < $.$get$epsilon0()) ? C.SassBoolean_true : C.SassBoolean_false;
      }
      return this.super$SassNumber$lessThan0(other);
    },
    lessThanOrEquals$1: function(other) {
      var t1, t2;
      if (other instanceof T.SassNumber0) {
        t1 = this.value;
        t2 = other.value;
        return t1 < t2 || Math.abs(t1 - t2) < $.$get$epsilon0() ? C.SassBoolean_true : C.SassBoolean_false;
      }
      return this.super$SassNumber$lessThanOrEquals0(other);
    },
    modulo$1: function(other) {
      if (other instanceof T.SassNumber0)
        return other.withValue$1(this.moduloLikeSass$2(this.value, other.value));
      return this.super$SassNumber$modulo0(other);
    },
    plus$1: function(other) {
      if (other instanceof T.SassNumber0)
        return other.withValue$1(this.value + other.value);
      return this.super$SassNumber$plus0(other);
    },
    minus$1: function(other) {
      if (other instanceof T.SassNumber0)
        return other.withValue$1(this.value - other.value);
      return this.super$SassNumber$minus0(other);
    },
    times$1: function(other) {
      if (other instanceof T.SassNumber0)
        return other.withValue$1(this.value * other.value);
      return this.super$SassNumber$times0(other);
    },
    dividedBy$1: function(other) {
      var t1, t2, t3;
      if (other instanceof T.SassNumber0) {
        t1 = other.get$hasUnits();
        t2 = this.value;
        t3 = other.value;
        if (t1) {
          t1 = other.get$denominatorUnits();
          t1 = T.SassNumber_SassNumber$withUnits0(t2 / t3, other.get$numeratorUnits(), t1);
        } else
          t1 = new N.UnitlessSassNumber0(t2 / t3, null);
        return t1;
      }
      return this.super$SassNumber$dividedBy0(other);
    },
    unaryMinus$0: function() {
      return new N.UnitlessSassNumber0(-this.value, null);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof N.UnitlessSassNumber0 && Math.abs(this.value - other.value) < $.$get$epsilon0();
    },
    get$hashCode: function(_) {
      return T.fuzzyHashCode0(this.value);
    }
  };
  N.UniversalSelector0.prototype = {
    get$minSpecificity: function() {
      return 0;
    },
    accept$1$1: function(visitor) {
      var t2,
        t1 = this.namespace;
      if (t1 != null) {
        t2 = visitor._buffer;
        t2.write$1(0, t1);
        t2.writeCharCode$1(124);
      }
      visitor._buffer.writeCharCode$1(42);
      return null;
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unify$1: function(compound) {
      var unified, t1, t2, cur, _i, _this = this;
      if (C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0 || C.JSArray_methods.get$first(compound) instanceof F.TypeSelector0) {
        unified = Y.unifyUniversalAndElement0(_this, C.JSArray_methods.get$first(compound));
        if (unified == null)
          return null;
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);
        t1.push(unified);
        for (t2 = H.SubListIterable$(compound, 1, null, H._arrayInstanceType(compound)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
          cur = t2.__internal$_current;
          t1.push(cur);
        }
        return t1;
      }
      t1 = _this.namespace;
      if (t1 != null && t1 !== "*") {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);
        t1.push(_this);
        for (t2 = compound.length, _i = 0; _i < compound.length; compound.length === t2 || (0, H.throwConcurrentModificationError)(compound), ++_i)
          t1.push(compound[_i]);
        return t1;
      }
      if (compound.length !== 0)
        return compound;
      return H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector_2);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof N.UniversalSelector0 && other.namespace == this.namespace;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.namespace);
    }
  };
  R.UnprefixedMapView0.prototype = {
    get$keys: function(_) {
      return new R._UnprefixedKeys0(this);
    },
    $index: function(_, key) {
      return typeof key == "string" ? this._unprefixed_map_view0$_map.$index(0, J.$add$ansx(this._unprefixed_map_view0$_prefix, key)) : null;
    },
    containsKey$1: function(key) {
      return typeof key == "string" && this._unprefixed_map_view0$_map.containsKey$1(J.$add$ansx(this._unprefixed_map_view0$_prefix, key));
    },
    remove$1: function(_, key) {
      return typeof key == "string" ? this._unprefixed_map_view0$_map.remove$1(0, J.$add$ansx(this._unprefixed_map_view0$_prefix, key)) : null;
    }
  };
  R._UnprefixedKeys0.prototype = {
    get$iterator: function(_) {
      var t1 = this._unprefixed_map_view0$_view._unprefixed_map_view0$_map;
      t1 = J.where$1$ax(t1.get$keys(t1), new R._UnprefixedKeys_iterator_closure1(this)).map$1$1(0, new R._UnprefixedKeys_iterator_closure2(this), type$.legacy_String);
      return t1.get$iterator(t1);
    },
    contains$1: function(_, key) {
      return this._unprefixed_map_view0$_view.containsKey$1(key);
    }
  };
  R._UnprefixedKeys_iterator_closure1.prototype = {
    call$1: function(key) {
      return J.startsWith$1$s(key, this.$this._unprefixed_map_view0$_view._unprefixed_map_view0$_prefix);
    },
    $signature: 6
  };
  R._UnprefixedKeys_iterator_closure2.prototype = {
    call$1: function(key) {
      return J.substring$1$s(key, this.$this._unprefixed_map_view0$_view._unprefixed_map_view0$_prefix.length);
    },
    $signature: 4
  };
  T.UseRule0.prototype = {
    UseRule$4$configuration0: function(url, namespace, span, configuration) {
      var t1, t2, _i, variable;
      for (t1 = this.configuration, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        variable = t1[_i];
        if (variable.isGuarded)
          throw H.wrapException(P.ArgumentError$value(variable, "configured variable", "can't be guarded in a @use rule."));
      }
    },
    accept$1$1: function(visitor) {
      return visitor.visitUseRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.url,
        t2 = "@use " + H.S(new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([J.toString$0$(t1)], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain()),
        basename = t1.get$pathSegments().length === 0 ? "" : C.JSArray_methods.get$last(t1.get$pathSegments()),
        dot = J.getInterceptor$asx(basename).indexOf$1(basename, ".");
      t1 = this.namespace;
      if (t1 !== C.JSString_methods.substring$2(basename, 0, dot === -1 ? basename.length : dot))
        t1 = t2 + (" as " + (t1 == null ? "*" : t1));
      else
        t1 = t2;
      t2 = this.configuration;
      t1 = (t2.length !== 0 ? t1 + (" with (" + C.JSArray_methods.join$1(t2, ", ") + ")") : t1) + ";";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  E.UserDefinedCallable0.prototype = {
    get$name: function(_) {
      return this.declaration.name;
    },
    $isAsyncCallable0: 1,
    $isCallable0: 1
  };
  B.resolveImportPath_closure1.prototype = {
    call$0: function() {
      return B._exactlyOne0(B._tryPath0($.$get$context().withoutExtension$1(this.path) + ".import" + this.extension));
    },
    $signature: 12
  };
  B.resolveImportPath_closure2.prototype = {
    call$0: function() {
      return B._exactlyOne0(B._tryPathWithExtensions0(H.S(this.path) + ".import"));
    },
    $signature: 12
  };
  B._tryPathAsDirectory_closure0.prototype = {
    call$0: function() {
      return B._exactlyOne0(B._tryPathWithExtensions0(D.join(this.path, "index.import", null)));
    },
    $signature: 12
  };
  B._exactlyOne_closure0.prototype = {
    call$1: function(path) {
      var t1 = $.$get$context();
      return C.JSString_methods.$add("  ", t1.prettyUri$1(t1.toUri$1(path)));
    },
    $signature: 4
  };
  B.forwardToString_closure.prototype = {
    call$1: function(thisArg) {
      return J.toString$0$(thisArg);
    },
    $signature: 41
  };
  B.createClass_closure.prototype = {
    call$2: function($name, body) {
      this.$prototype[$name] = P.allowInteropCaptureThis(body);
    },
    $signature: 453
  };
  B._PropertyDescriptor0.prototype = {};
  B.indent_closure0.prototype = {
    call$1: function(line) {
      return C.JSString_methods.$add(C.JSString_methods.$mul(" ", this.indentation), line);
    },
    $signature: 4
  };
  B.flattenVertically_closure1.prototype = {
    call$1: function(inner) {
      return Q.QueueList_QueueList$from(inner, this.T._eval$1("0*"));
    },
    $signature: function() {
      return this.T._eval$1("QueueList<0*>*(Iterable<0*>*)");
    }
  };
  B.flattenVertically_closure2.prototype = {
    call$1: function(queue) {
      this.result.push(queue.removeFirst$0());
      return queue.get$length(queue) === 0;
    },
    $signature: function() {
      return this.T._eval$1("bool*(QueueList<0*>*)");
    }
  };
  B.longestCommonSubsequence_closure2.prototype = {
    call$2: function(element1, element2) {
      return J.$eq$(element1, element2) ? element1 : null;
    },
    $signature: function() {
      return this.T._eval$1("0*(0*,0*)");
    }
  };
  B.longestCommonSubsequence_closure3.prototype = {
    call$1: function(_) {
      return P.List_List$filled(J.get$length$asx(this.list2) + 1, 0, false, type$.legacy_int);
    },
    $signature: 208
  };
  B.longestCommonSubsequence_closure4.prototype = {
    call$1: function(_) {
      var t1 = new Array(J.get$length$asx(this.list2));
      t1.fixed$length = Array;
      return H.setRuntimeTypeInfo(t1, this.T._eval$1("JSArray<0*>"));
    },
    $signature: function() {
      return this.T._eval$1("List<0*>*(int*)");
    }
  };
  B.longestCommonSubsequence_backtrack0.prototype = {
    call$2: function(i, j) {
      var selection, t1, _this = this;
      if (i === -1 || j === -1)
        return H.setRuntimeTypeInfo([], _this.T._eval$1("JSArray<0*>"));
      selection = J.$index$asx(_this.selections[i], j);
      if (selection != null) {
        t1 = _this.call$2(i - 1, j - 1);
        J.add$1$ax(t1, selection);
        return t1;
      }
      t1 = _this.lengths;
      return J.$index$asx(t1[i + 1], j) > J.$index$asx(t1[i], j + 1) ? _this.call$2(i, j - 1) : _this.call$2(i - 1, j);
    },
    $signature: function() {
      return this.T._eval$1("List<0*>*(int*,int*)");
    }
  };
  B.mapAddAll2_closure0.prototype = {
    call$2: function(key, inner) {
      var t1 = this.destination;
      if (t1.containsKey$1(key))
        t1.$index(0, key).addAll$1(0, inner);
      else
        t1.$indexSet(0, key, inner);
    },
    $signature: function() {
      return this.K1._eval$1("@<0>")._bind$1(this.K2)._bind$1(this.V)._eval$1("Null(1*,Map<2*,3*>*)");
    }
  };
  F.CssValue0.prototype = {
    toString$0: function(_) {
      return J.toString$0$(this.value);
    },
    $isAstNode0: 1,
    get$value: function(receiver) {
      return this.value;
    },
    get$span: function() {
      return this.span;
    }
  };
  F.ValueExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitValueExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return J.toString$0$(this.value);
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  F.ModifiableCssValue0.prototype = {
    toString$0: function(_) {
      return J.toString$0$(this.value);
    },
    $isAstNode0: 1,
    $isCssValue0: 1,
    get$value: function(receiver) {
      return this.value;
    },
    get$span: function() {
      return this.span;
    }
  };
  F.Value0.prototype = {
    get$isTruthy: function() {
      return true;
    },
    get$separator: function() {
      return C.ListSeparator_undecided0;
    },
    get$hasBrackets: function() {
      return false;
    },
    get$asList: function() {
      return H.setRuntimeTypeInfo([this], type$.JSArray_legacy_Value_2);
    },
    get$lengthAsList: function() {
      return 1;
    },
    get$isBlank: function() {
      return false;
    },
    get$isSpecialNumber: function() {
      return false;
    },
    get$isVar: function() {
      return false;
    },
    get$realNull: function() {
      return this;
    },
    sassIndexToListIndex$2: function(sassIndex, $name) {
      var _this = this,
        index = sassIndex.assertNumber$1($name).assertInt$1($name);
      if (index === 0)
        throw H.wrapException(_this._value0$_exception$2("List index may not be 0.", $name));
      if (Math.abs(index) > _this.get$lengthAsList())
        throw H.wrapException(_this._value0$_exception$2("Invalid index " + sassIndex.toString$0(0) + " for a list with " + _this.get$lengthAsList() + " elements.", $name));
      return index < 0 ? _this.get$lengthAsList() + index : index - 1;
    },
    assertColor$1: function($name) {
      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + " is not a color.", $name));
    },
    assertFunction$1: function($name) {
      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + " is not a function reference.", $name));
    },
    assertMap$1: function($name) {
      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + " is not a map.", $name));
    },
    tryMap$0: function() {
      return null;
    },
    assertNumber$1: function($name) {
      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + " is not a number.", $name));
    },
    assertNumber$0: function() {
      return this.assertNumber$1(null);
    },
    assertString$1: function($name) {
      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + " is not a string.", $name));
    },
    assertSelector$2$allowParent$name: function(allowParent, $name) {
      var error, t1, exception,
        string = this._value0$_selectorString$1($name);
      try {
        t1 = D.SelectorList_SelectorList$parse0(string, allowParent, true, null);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException0) {
          error = t1;
          throw H.wrapException(this._value0$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), "Error: ", ""), $name));
        } else
          throw exception;
      }
    },
    assertSelector$1$name: function($name) {
      return this.assertSelector$2$allowParent$name(false, $name);
    },
    assertSelector$0: function() {
      return this.assertSelector$2$allowParent$name(false, null);
    },
    assertSelector$1$allowParent: function(allowParent) {
      return this.assertSelector$2$allowParent$name(allowParent, null);
    },
    assertCompoundSelector$1$name: function($name) {
      var error, t1, exception,
        allowParent = false,
        string = this._value0$_selectorString$1($name);
      try {
        t1 = T.SelectorParser$0(string, allowParent, true, null, null).parseCompoundSelector$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (t1 instanceof E.SassFormatException0) {
          error = t1;
          throw H.wrapException(this._value0$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), "Error: ", ""), $name));
        } else
          throw exception;
      }
    },
    _value0$_selectorString$1: function($name) {
      var string = this._value0$_selectorStringOrNull$0();
      if (string != null)
        return string;
      throw H.wrapException(this._value0$_exception$2(this.toString$0(0) + string$.x20is_no, $name));
    },
    _value0$_selectorString$0: function() {
      return this._value0$_selectorString$1(null);
    },
    _value0$_selectorStringOrNull$0: function() {
      var t1, t2, result, t3, _i, complex, string, compound, _this = this, _null = null;
      if (_this instanceof D.SassString0)
        return _this.text;
      if (!(_this instanceof D.SassList0))
        return _null;
      t1 = _this._list1$_contents;
      t2 = t1.length;
      if (t2 === 0)
        return _null;
      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);
      t3 = _this.separator === C.ListSeparator_comma0;
      if (t3)
        for (_i = 0; _i < t2; ++_i) {
          complex = t1[_i];
          if (complex instanceof D.SassString0)
            result.push(complex.text);
          else if (complex instanceof D.SassList0 && complex.separator === C.ListSeparator_space0) {
            string = complex._value0$_selectorString$0();
            result.push(string);
          } else
            return _null;
        }
      else
        for (_i = 0; _i < t2; ++_i) {
          compound = t1[_i];
          if (compound instanceof D.SassString0)
            result.push(compound.text);
          else
            return _null;
        }
      return C.JSArray_methods.join$1(result, t3 ? ", " : " ");
    },
    changeListContents$2$separator: function(contents, separator) {
      var t1 = separator == null ? this.get$separator() : separator,
        t2 = this.get$hasBrackets();
      return D.SassList$0(contents, t1, t2);
    },
    changeListContents$1: function(contents) {
      return this.changeListContents$2$separator(contents, null);
    },
    greaterThan$1: function(other) {
      return H.throwExpression(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " > " + H.S(other) + '".'));
    },
    greaterThanOrEquals$1: function(other) {
      return H.throwExpression(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " >= " + H.S(other) + '".'));
    },
    lessThan$1: function(other) {
      return H.throwExpression(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " < " + H.S(other) + '".'));
    },
    lessThanOrEquals$1: function(other) {
      return H.throwExpression(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " <= " + H.S(other) + '".'));
    },
    times$1: function(other) {
      return H.throwExpression(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " * " + H.S(other) + '".'));
    },
    modulo$1: function(other) {
      return H.throwExpression(E.SassScriptException$0('Undefined operation "' + this.toString$0(0) + " % " + H.S(other) + '".'));
    },
    plus$1: function(other) {
      var t1;
      if (other instanceof D.SassString0)
        return new D.SassString0(C.JSString_methods.$add(N.serializeValue(this, false, true), other.text), other.hasQuotes);
      else {
        t1 = N.serializeValue(this, false, true);
        other.toString;
        return new D.SassString0(t1 + N.serializeValue(other, false, true), false);
      }
    },
    minus$1: function(other) {
      var t1 = N.serializeValue(this, false, true) + "-";
      other.toString;
      return new D.SassString0(t1 + N.serializeValue(other, false, true), false);
    },
    dividedBy$1: function(other) {
      var t1 = N.serializeValue(this, false, true) + "/";
      other.toString;
      return new D.SassString0(t1 + N.serializeValue(other, false, true), false);
    },
    unaryPlus$0: function() {
      return new D.SassString0("+" + N.serializeValue(this, false, true), false);
    },
    unaryMinus$0: function() {
      return new D.SassString0("-" + N.serializeValue(this, false, true), false);
    },
    unaryNot$0: function() {
      return C.SassBoolean_false;
    },
    withoutSlash$0: function() {
      return this;
    },
    toString$0: function(_) {
      return N.serializeValue(this, true, true);
    },
    _value0$_exception$2: function(message, $name) {
      return new E.SassScriptException0($name == null ? message : "$" + $name + ": " + message);
    }
  };
  S.VariableExpression0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitVariableExpression$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.namespace;
      t1 = t1 != null ? "$" + (t1 + ".") : "$";
      t1 += this.name;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span: function() {
      return this.span;
    }
  };
  Z.VariableDeclaration0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitVariableDeclaration$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.namespace;
      t1 = t1 != null ? "$" + (t1 + ".") : "$";
      t1 += this.name + ": " + H.S(this.expression) + ";";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  N.withWarnCallback_closure0.prototype = {
    call$0: function() {
      return this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return this.T._eval$1("0*()");
    }
  };
  Y.WarnRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitWarnRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      return "@warn " + H.S(this.expression) + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span: function() {
      return this.span;
    }
  };
  G.WhileRule0.prototype = {
    accept$1$1: function(visitor) {
      return visitor.visitWhileRule$1(this);
    },
    accept$1: function(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0: function(_) {
      var t1 = this.children;
      return "@while " + H.S(this.condition) + " {" + (t1 && C.JSArray_methods).join$1(t1, " ") + "}";
    },
    get$span: function() {
      return this.span;
    }
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$noSuchMethod = _.noSuchMethod$1;
    _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
    _ = H.JsLinkedHashMap.prototype;
    _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;
    _.super$JsLinkedHashMap$internalGet = _.internalGet$1;
    _.super$JsLinkedHashMap$internalSet = _.internalSet$2;
    _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;
    _ = P._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = P._BufferingStreamSubscription.prototype;
    _.super$_BufferingStreamSubscription$_add = _._async$_add$1;
    _.super$_BufferingStreamSubscription$_addError = _._addError$2;
    _ = P.ListMixin.prototype;
    _.super$ListMixin$setRange = _.setRange$4;
    _ = P.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _.super$Iterable$skipWhile = _.skipWhile$1;
    _ = B.ModifiableCssParentNode.prototype;
    _.super$ModifiableCssParentNode$addChild = _.addChild$1;
    _ = M.SimpleSelector.prototype;
    _.super$SimpleSelector$addSuffix = _.addSuffix$1;
    _.super$SimpleSelector$unify = _.unify$1;
    _ = G.Parser.prototype;
    _.super$Parser$silentComment = _.silentComment$0;
    _ = V.StylesheetParser.prototype;
    _.super$StylesheetParser$importArgument = _.importArgument$0;
    _ = F.Value.prototype;
    _.super$Value$assertMap = _.assertMap$1;
    _.super$Value$plus = _.plus$1;
    _.super$Value$minus = _.minus$1;
    _.super$Value$dividedBy = _.dividedBy$1;
    _ = T.SassNumber.prototype;
    _.super$SassNumber$convertValueToMatch = _.convertValueToMatch$3;
    _.super$SassNumber$coerce = _.coerce$3;
    _.super$SassNumber$coerceValue = _.coerceValue$3;
    _.super$SassNumber$coerceValueToUnit = _.coerceValueToUnit$2;
    _.super$SassNumber$greaterThan = _.greaterThan$1;
    _.super$SassNumber$greaterThanOrEquals = _.greaterThanOrEquals$1;
    _.super$SassNumber$lessThan = _.lessThan$1;
    _.super$SassNumber$lessThanOrEquals = _.lessThanOrEquals$1;
    _.super$SassNumber$modulo = _.modulo$1;
    _.super$SassNumber$plus = _.plus$1;
    _.super$SassNumber$minus = _.minus$1;
    _.super$SassNumber$times = _.times$1;
    _.super$SassNumber$dividedBy = _.dividedBy$1;
    _ = Y.SourceSpanMixin.prototype;
    _.super$SourceSpanMixin$compareTo = _.compareTo$1;
    _.super$SourceSpanMixin$$eq = _.$eq;
    _ = X.StringScanner.prototype;
    _.super$StringScanner$readChar = _.readChar$0;
    _.super$StringScanner$scanChar = _.scanChar$1;
    _.super$StringScanner$scan = _.scan$1;
    _.super$StringScanner$matches = _.matches$1;
    _ = B.ModifiableCssParentNode0.prototype;
    _.super$ModifiableCssParentNode$addChild0 = _.addChild$1;
    _ = T.SassNumber0.prototype;
    _.super$SassNumber$convertValueToMatch0 = _.convertValueToMatch$3;
    _.super$SassNumber$coerce0 = _.coerce$3;
    _.super$SassNumber$coerceValue0 = _.coerceValue$3;
    _.super$SassNumber$coerceValueToUnit0 = _.coerceValueToUnit$2;
    _.super$SassNumber$greaterThan0 = _.greaterThan$1;
    _.super$SassNumber$greaterThanOrEquals0 = _.greaterThanOrEquals$1;
    _.super$SassNumber$lessThan0 = _.lessThan$1;
    _.super$SassNumber$lessThanOrEquals0 = _.lessThanOrEquals$1;
    _.super$SassNumber$modulo0 = _.modulo$1;
    _.super$SassNumber$plus0 = _.plus$1;
    _.super$SassNumber$minus0 = _.minus$1;
    _.super$SassNumber$times0 = _.times$1;
    _.super$SassNumber$dividedBy0 = _.dividedBy$1;
    _ = G.Parser1.prototype;
    _.super$Parser$silentComment0 = _.silentComment$0;
    _ = M.SimpleSelector0.prototype;
    _.super$SimpleSelector$addSuffix0 = _.addSuffix$1;
    _.super$SimpleSelector$unify0 = _.unify$1;
    _ = V.StylesheetParser0.prototype;
    _.super$StylesheetParser$importArgument0 = _.importArgument$0;
    _ = F.Value0.prototype;
    _.super$Value$assertMap0 = _.assertMap$1;
    _.super$Value$plus0 = _.plus$1;
    _.super$Value$minus0 = _.minus$1;
    _.super$Value$dividedBy0 = _.dividedBy$1;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_1_u = hunkHelpers._instance_1u,
      _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_i = hunkHelpers._instance_0i;
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 167);
    _instance_1_i(J.JSArray.prototype, "get$contains", "contains$1", 26);
    _instance_1_i(H._CastIterableBase.prototype, "get$contains", "contains$1", 26);
    _instance_1_u(H.ConstantStringMap.prototype, "get$containsKey", "containsKey$1", 26);
    _instance_1_u(H.ConstantProtoMap.prototype, "get$containsKey", "containsKey$1", 26);
    _instance_1_u(H.JsLinkedHashMap.prototype, "get$containsKey", "containsKey$1", 26);
    _static_1(P, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 106);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 106);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 106);
    _static_0(P, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 1);
    _static_1(P, "async___nullDataHandler$closure", "_nullDataHandler", 213);
    _static_2(P, "async___nullErrorHandler$closure", "_nullErrorHandler", 56);
    _static_0(P, "async___nullDoneHandler$closure", "_nullDoneHandler", 1);
    _static(P, "async___rootHandleUncaughtError$closure", 5, null, ["call$5"], ["_rootHandleUncaughtError"], 456, 0);
    _static(P, "async___rootRun$closure", 4, null, ["call$1$4", "call$4"], ["_rootRun", function($self, $parent, zone, f) {
      return P._rootRun($self, $parent, zone, f, type$.dynamic);
    }], 457, 1);
    _static(P, "async___rootRunUnary$closure", 5, null, ["call$2$5", "call$5"], ["_rootRunUnary", function($self, $parent, zone, f, arg) {
      return P._rootRunUnary($self, $parent, zone, f, arg, type$.dynamic, type$.dynamic);
    }], 458, 1);
    _static(P, "async___rootRunBinary$closure", 6, null, ["call$3$6", "call$6"], ["_rootRunBinary", function($self, $parent, zone, f, arg1, arg2) {
      return P._rootRunBinary($self, $parent, zone, f, arg1, arg2, type$.dynamic, type$.dynamic, type$.dynamic);
    }], 459, 1);
    _static(P, "async___rootRegisterCallback$closure", 4, null, ["call$1$4", "call$4"], ["_rootRegisterCallback", function($self, $parent, zone, f) {
      return P._rootRegisterCallback($self, $parent, zone, f, type$.dynamic);
    }], 460, 0);
    _static(P, "async___rootRegisterUnaryCallback$closure", 4, null, ["call$2$4", "call$4"], ["_rootRegisterUnaryCallback", function($self, $parent, zone, f) {
      return P._rootRegisterUnaryCallback($self, $parent, zone, f, type$.dynamic, type$.dynamic);
    }], 461, 0);
    _static(P, "async___rootRegisterBinaryCallback$closure", 4, null, ["call$3$4", "call$4"], ["_rootRegisterBinaryCallback", function($self, $parent, zone, f) {
      return P._rootRegisterBinaryCallback($self, $parent, zone, f, type$.dynamic, type$.dynamic, type$.dynamic);
    }], 462, 0);
    _static(P, "async___rootErrorCallback$closure", 5, null, ["call$5"], ["_rootErrorCallback"], 463, 0);
    _static(P, "async___rootScheduleMicrotask$closure", 4, null, ["call$4"], ["_rootScheduleMicrotask"], 464, 0);
    _static(P, "async___rootCreateTimer$closure", 5, null, ["call$5"], ["_rootCreateTimer"], 465, 0);
    _static(P, "async___rootCreatePeriodicTimer$closure", 5, null, ["call$5"], ["_rootCreatePeriodicTimer"], 466, 0);
    _static(P, "async___rootPrint$closure", 4, null, ["call$4"], ["_rootPrint"], 467, 0);
    _static_1(P, "async___printToZone$closure", "_printToZone", 468);
    _static(P, "async___rootFork$closure", 5, null, ["call$5"], ["_rootFork"], 469, 0);
    var _;
    _instance_0_u(_ = P._BroadcastSubscription.prototype, "get$_async$_onPause", "_async$_onPause$0", 1);
    _instance_0_u(_, "get$_async$_onResume", "_async$_onResume$0", 1);
    _instance(P._AsyncCompleter.prototype, "get$complete", 0, 0, function() {
      return [null];
    }, ["call$1", "call$0"], ["complete$1", "complete$0"], 298, 0);
    _instance_2_u(P._Future.prototype, "get$_completeError", "_completeError$2", 56);
    _instance_1_i(_ = P._StreamController.prototype, "get$add", "add$1", 63);
    _instance(_, "get$addError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["addError$2", "addError$1"], 289, 0);
    _instance_0_i(_, "get$close", "close$0", 285);
    _instance_1_u(_, "get$_async$_add", "_async$_add$1", 63);
    _instance_2_u(_, "get$_addError", "_addError$2", 56);
    _instance_0_u(_, "get$_close", "_close$0", 1);
    _instance_0_u(_ = P._ControllerSubscription.prototype, "get$_async$_onPause", "_async$_onPause$0", 1);
    _instance_0_u(_, "get$_async$_onResume", "_async$_onResume$0", 1);
    _instance(_ = P._BufferingStreamSubscription.prototype, "get$pause", 1, 0, null, ["call$1", "call$0"], ["pause$1", "pause$0"], 154, 0);
    _instance_0_i(_, "get$resume", "resume$0", 1);
    _instance_0_u(_, "get$_async$_onPause", "_async$_onPause$0", 1);
    _instance_0_u(_, "get$_async$_onResume", "_async$_onResume$0", 1);
    _instance(_ = P._DoneStreamSubscription.prototype, "get$pause", 1, 0, null, ["call$1", "call$0"], ["pause$1", "pause$0"], 154, 0);
    _instance_0_i(_, "get$resume", "resume$0", 1);
    _instance_0_u(_, "get$_sendDone", "_sendDone$0", 1);
    _instance_1_u(_ = P._StreamIterator.prototype, "get$_onData", "_onData$1", 63);
    _instance_2_u(_, "get$_onError", "_onError$2", 56);
    _instance_0_u(_, "get$_onDone", "_onDone$0", 1);
    _instance_0_u(_ = P._ForwardingStreamSubscription.prototype, "get$_async$_onPause", "_async$_onPause$0", 1);
    _instance_0_u(_, "get$_async$_onResume", "_async$_onResume$0", 1);
    _instance_1_u(_, "get$_handleData", "_handleData$1", 63);
    _instance_2_u(_, "get$_handleError", "_handleError$2", 283);
    _instance_0_u(_, "get$_handleDone", "_handleDone$0", 1);
    _static_2(P, "collection___defaultEquals$closure", "_defaultEquals", 148);
    _static_1(P, "collection___defaultHashCode$closure", "_defaultHashCode", 149);
    _static_2(P, "collection_ListMixin__compareAny$closure", "ListMixin__compareAny", 167);
    _instance_1_u(P._HashMap.prototype, "get$containsKey", "containsKey$1", 26);
    _instance_1_u(P._LinkedCustomHashMap.prototype, "get$containsKey", "containsKey$1", 26);
    _instance(_ = P._LinkedHashSet.prototype, "get$_newSimilarSet", 0, 0, null, ["call$1$0", "call$0"], ["_newSimilarSet$1$0", "_newSimilarSet$0"], 278, 0);
    _instance_1_i(_, "get$contains", "contains$1", 26);
    _instance(P._LinkedIdentityHashSet.prototype, "get$_newSimilarSet", 0, 0, null, ["call$1$0", "call$0"], ["_newSimilarSet$1$0", "_newSimilarSet$0"], 274, 0);
    _instance_1_u(P.MapMixin.prototype, "get$containsKey", "containsKey$1", 26);
    _instance_1_u(P.MapView.prototype, "get$containsKey", "containsKey$1", 26);
    _instance(_ = P._UnmodifiableSet.prototype, "get$_newSimilarSet", 0, 0, null, ["call$1$0", "call$0"], ["_newSimilarSet$1$0", "_newSimilarSet$0"], 266, 0);
    _instance_1_i(_, "get$contains", "contains$1", 26);
    _static_1(P, "convert___defaultToEncodable$closure", "_defaultToEncodable", 43);
    _static_1(P, "core__identityHashCode$closure", "identityHashCode", 149);
    _static_2(P, "core__identical$closure", "identical", 148);
    _static_1(P, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 198);
    _instance_1_i(P.Iterable.prototype, "get$contains", "contains$1", 26);
    _static(P, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      return P.max(a, b, type$.num);
    }], 472, 1);
    _instance_1_u(_ = Y.StreamCompleter.prototype, "get$setSourceStream", "setSourceStream$1", 49);
    _instance(_, "get$setError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["setError$2", "setError$1"], 296, 0);
    _instance_0_u(_ = L.StreamGroup.prototype, "get$_onListen", "_onListen$0", 1);
    _instance_0_u(_, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _instance_0_u(_, "get$_onCancel", "_onCancel$0", 139);
    _instance_1_i(O.EmptyUnmodifiableSet.prototype, "get$contains", "contains$1", 23);
    _instance_1_i(M._DelegatingIterableBase.prototype, "get$contains", "contains$1", 23);
    _instance_1_i(M.MapKeySet.prototype, "get$contains", "contains$1", 23);
    _instance_1_u(B.ModifiableCssNode.prototype, "get$_node0$_isInvisible", "_node0$_isInvisible$1", 7);
    _instance_1_u(D.SelectorList.prototype, "get$_complexContainsParentSelector", "_complexContainsParentSelector$1", 15);
    _static_1(Y, "functions___isUnique$closure", "_isUnique", 18);
    _static_1(K, "color___opacify$closure", "_opacify", 25);
    _static_1(K, "color___transparentize$closure", "_transparentize", 25);
    _instance_0_u(_ = G.Parser.prototype, "get$whitespace", "whitespace$0", 1);
    _instance_0_u(_, "get$loudComment", "loudComment$0", 1);
    _instance_0_u(_, "get$string", "string$0", 12);
    _instance_0_u(U.SassParser.prototype, "get$loudComment", "loudComment$0", 1);
    _instance(_ = V.StylesheetParser.prototype, "get$_statement", 0, 0, null, ["call$1$root", "call$0"], ["_statement$1$root", "_statement$0"], 262, 0);
    _instance_0_u(_, "get$_declarationChild", "_declarationChild$0", 57);
    _instance_0_u(_, "get$_declarationAtRule", "_declarationAtRule$0", 57);
    _instance_0_u(_, "get$_functionChild", "_functionChild$0", 57);
    _instance(_, "get$expression", 0, 0, null, ["call$3$bracketList$singleEquals$until", "call$0", "call$2$singleEquals$until", "call$1$bracketList", "call$1$singleEquals", "call$1$until"], ["expression$3$bracketList$singleEquals$until", "expression$0", "expression$2$singleEquals$until", "expression$1$bracketList", "expression$1$singleEquals", "expression$1$until"], 261, 0);
    _instance_0_u(_, "get$_number", "_number$0", 259);
    _instance_1_u(K.LimitedMapView.prototype, "get$containsKey", "containsKey$1", 23);
    _instance_1_u(Z.MergedMapView.prototype, "get$containsKey", "containsKey$1", 23);
    _instance_1_i(N.NoSourceMapBuffer0.prototype, "get$write", "write$1", 49);
    _instance_1_u(F.PrefixedMapView.prototype, "get$containsKey", "containsKey$1", 23);
    _instance_1_u(U.PublicMemberMapView.prototype, "get$containsKey", "containsKey$1", 23);
    _instance_1_i(D.SourceMapBuffer0.prototype, "get$write", "write$1", 49);
    _instance_1_u(R.UnprefixedMapView.prototype, "get$containsKey", "containsKey$1", 23);
    _static_1(B, "utils__isPublic$closure", "isPublic", 6);
    _instance_2_u(T.SassNumber.prototype, "get$moduloLikeSass", "moduloLikeSass$2", 50);
    _instance_1_u(_ = N._SerializeVisitor0.prototype, "get$_visitMediaQuery", "_visitMediaQuery$1", 243);
    _instance_1_u(_, "get$_isInvisible", "_isInvisible$1", 7);
    _instance(Y.SourceFile.prototype, "get$span", 0, 1, null, ["call$2", "call$1"], ["span$2", "span$1"], 248, 0);
    _instance(Y.SourceSpanMixin.prototype, "get$message", 1, 1, function() {
      return {color: null};
    }, ["call$2$color", "call$1"], ["message$2$color", "message$1"], 255, 0);
    _static(L, "from_handlers__StreamTransformer__defaultHandleError$closure", 3, null, ["call$1$3", "call$3"], ["_StreamTransformer__defaultHandleError", function(error, stackTrace, sink) {
      return L._StreamTransformer__defaultHandleError(error, stackTrace, sink, type$.dynamic);
    }], 473, 0);
    _static(R, "rate_limit___collectToList$closure", 2, null, ["call$1$2", "call$2"], ["_collectToList", function(element, soFar) {
      return R._collectToList(element, soFar, type$.dynamic);
    }], 474, 0);
    _static_1(K, "color1___opacify$closure", "_opacify0", 29);
    _static_1(K, "color1___transparentize$closure", "_transparentize0", 29);
    _static_1(Y, "functions0___isUnique$closure", "_isUnique0", 19);
    _instance_1_u(K.LimitedMapView0.prototype, "get$containsKey", "containsKey$1", 23);
    _instance_1_u(D.SelectorList0.prototype, "get$_list2$_complexContainsParentSelector", "_list2$_complexContainsParentSelector$1", 14);
    _instance_1_u(Z.MergedMapView0.prototype, "get$containsKey", "containsKey$1", 23);
    _instance_1_i(N.NoSourceMapBuffer.prototype, "get$write", "write$1", 49);
    _instance_1_u(B.ModifiableCssNode0.prototype, "get$_node2$_isInvisible", "_node2$_isInvisible$1", 8);
    _static_2(B, "node___render$closure", "_render", 475);
    _static_1(B, "node___renderSync$closure", "_renderSync", 476);
    _instance_2_u(T.SassNumber0.prototype, "get$moduloLikeSass", "moduloLikeSass$2", 50);
    _instance_0_u(_ = G.Parser1.prototype, "get$whitespace", "whitespace$0", 1);
    _instance_0_u(_, "get$loudComment", "loudComment$0", 1);
    _instance_0_u(_, "get$string", "string$0", 12);
    _instance_1_u(F.PrefixedMapView0.prototype, "get$containsKey", "containsKey$1", 23);
    _instance_1_u(U.PublicMemberMapView0.prototype, "get$containsKey", "containsKey$1", 23);
    _static_1(U, "sass__main$closure", "main", 477);
    _instance_0_u(U.SassParser0.prototype, "get$loudComment", "loudComment$0", 1);
    _instance_1_u(_ = N._SerializeVisitor.prototype, "get$_serialize0$_visitMediaQuery", "_serialize0$_visitMediaQuery$1", 427);
    _instance_1_u(_, "get$_serialize0$_isInvisible", "_serialize0$_isInvisible$1", 8);
    _instance_1_i(D.SourceMapBuffer.prototype, "get$write", "write$1", 49);
    _instance(_ = V.StylesheetParser0.prototype, "get$_stylesheet0$_statement", 0, 0, null, ["call$1$root", "call$0"], ["_stylesheet0$_statement$1$root", "_stylesheet0$_statement$0"], 432, 0);
    _instance_0_u(_, "get$_stylesheet0$_declarationChild", "_stylesheet0$_declarationChild$0", 52);
    _instance_0_u(_, "get$_stylesheet0$_declarationAtRule", "_stylesheet0$_declarationAtRule$0", 52);
    _instance_0_u(_, "get$_stylesheet0$_functionChild", "_stylesheet0$_functionChild$0", 52);
    _instance_0_u(_, "get$_stylesheet0$_number", "_stylesheet0$_number$0", 434);
    _instance_1_u(R.UnprefixedMapView0.prototype, "get$containsKey", "containsKey$1", 23);
    _static_1(B, "utils0__isPublic$closure", "isPublic0", 6);
    _static_1(D, "path__dirname$closure", "dirname", 4);
    _static_1(T, "character__isWhitespace$closure", "isWhitespace", 24);
    _static_1(T, "character__isNewline$closure", "isNewline", 24);
    _static_1(T, "character__isHex$closure", "isHex", 24);
    _static_2(T, "number0__fuzzyLessThan$closure", "fuzzyLessThan", 38);
    _static_2(T, "number0__fuzzyLessThanOrEquals$closure", "fuzzyLessThanOrEquals", 38);
    _static_2(T, "number0__fuzzyGreaterThan$closure", "fuzzyGreaterThan", 38);
    _static_2(T, "number0__fuzzyGreaterThanOrEquals$closure", "fuzzyGreaterThanOrEquals", 38);
    _static_1(T, "number0__fuzzyRound$closure", "fuzzyRound", 39);
    _static_1(T, "character0__isWhitespace$closure", "isWhitespace0", 24);
    _static_1(T, "character0__isNewline$closure", "isNewline0", 24);
    _static_1(T, "character0__isHex$closure", "isHex0", 24);
    _static_2(T, "number2__fuzzyLessThan$closure", "fuzzyLessThan0", 38);
    _static_2(T, "number2__fuzzyLessThanOrEquals$closure", "fuzzyLessThanOrEquals0", 38);
    _static_2(T, "number2__fuzzyGreaterThan$closure", "fuzzyGreaterThan0", 38);
    _static_2(T, "number2__fuzzyGreaterThanOrEquals$closure", "fuzzyGreaterThanOrEquals0", 38);
    _static_1(T, "number2__fuzzyRound$closure", "fuzzyRound0", 39);
    _static_1(F, "value1__wrapValue$closure", "wrapValue", 319);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.JS_CONST, J.Interceptor, J.ArrayIterator, P.Iterable, H.CastIterator, H.Closure, P.Error, P._ListBase_Object_ListMixin, H.ListIterator, P.Iterator, H.ExpandIterator, H.EmptyIterator, H.FollowedByIterator, H.WhereTypeIterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.Symbol, P.MapView, H.ConstantMap, H.JSInvocationMirror, H.TypeErrorDecoder, H.NullThrownFromJavaScriptException, H.ExceptionAndStackTrace, H._StackTrace, H._Required, P.MapMixin, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H._AllMatchesIterator, H.StringMatch, H._StringAllMatchesIterator, H.Rti, H._FunctionParameters, H._Type, P._TimerImpl, P._AsyncAwaitCompleter, P._AsyncStarStreamController, P._IterationMarker, P._SyncStarIterator, P.Stream, P._BufferingStreamSubscription, P._BroadcastStreamController, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P.StreamTransformerBase, P._StreamController, P._SyncStreamControllerDispatch, P._AsyncStreamControllerDispatch, P._AddStreamState, P._DelayedEvent, P._DelayedDone, P._PendingEvents, P._DoneStreamSubscription, P._StreamIterator, P.AsyncError, P._ZoneFunction, P._RunNullaryZoneFunction, P._RunUnaryZoneFunction, P._RunBinaryZoneFunction, P._RegisterNullaryZoneFunction, P._RegisterUnaryZoneFunction, P._RegisterBinaryZoneFunction, P._ZoneSpecification, P._ZoneDelegate, P._Zone, P._HashMapKeyIterator, P._SetBase, P._LinkedHashSetCell, P._LinkedHashSetIterator, P.ListMixin, P._MapBaseValueIterator, P._UnmodifiableMapMixin, P._ListQueueIterator, P.Codec, P._Base64Encoder, P.ChunkedConversionSink, P._JsonStringifier, P.StringConversionSinkMixin, P._Utf8Encoder, P._Utf8Decoder, P.DateTime, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P._Exception, P.FormatException, P.MapEntry, P.Null, P._StringStackTrace, P.RuneIterator, P.StringBuffer, P._Uri, P.UriData, P._SimpleUri, P._JSRandom, N.ArgParser, V.ArgResults, G.Option, G.OptionType, G.Parser0, G.Usage, V.ErrorResult, F.ValueResult, Y.StreamCompleter, L.StreamGroup, L._StreamGroupState, G.StreamQueue, G._NextRequest, Q.Repl, B.ReplAdapter, U.DefaultEquality, U.IterableEquality, U.ListEquality, U._MapEntry, U.MapEquality, Q._QueueList_Object_ListMixin, M._DelegatingIterableBase, L.UnmodifiableSetMixin, M.Context, M._PathDirection, M._PathRelation, O.Style, X.ParsedPath, X.PathException, F.CssMediaQuery, F._SingletonCssMediaQueryMergeResult, F.MediaQuerySuccessfulMergeResult, B.AstNode, F.ModifiableCssValue, F.CssValue, B._FakeAstNode, Z.Argument, B.ArgumentDeclaration, X.ArgumentInvocation, V.AtRootQuery, Z.ConfiguredVariable, V.BinaryOperationExpression, V.BinaryOperator, Z.BooleanExpression, K.ColorExpression, F.FunctionExpression, L.IfExpression, D.ListExpression, A.MapExpression, O.NullExpression, T.NumberExpression, T.ParenthesizedExpression, T.SelectorExpression, D.StringExpression, X.UnaryOperationExpression, X.UnaryOperator, F.ValueExpression, S.VariableExpression, B.DynamicImport, Q.StaticImport, X.Interpolation, M.ParentStatement, Q.ContentRule, Q.DebugRule, D.ErrorRule, X.ExtendRule, L.ForwardRule, V.IfRule, V.IfClause, B.ImportRule, A.IncludeRule, L.LoudComment, B.ReturnRule, B.SilentComment, T.UseRule, Z.VariableDeclaration, Y.WarnRule, Y.SupportsAnything, L.SupportsDeclaration, F.SupportsFunction, X.SupportsInterpolation, M.SupportsNegation, U.SupportsOperation, T.Selector, N.AttributeOperator, S.Combinator, D.QualifiedName, X.CompileResult, Q.AsyncEnvironment, Q._EnvironmentModule0, O.AsyncImportCache, S.AsyncBuiltInCallable, Q.BuiltInCallable, L.PlainCssCallable, E.UserDefinedCallable, A.Configuration, Z.ConfiguredValue, O.Environment, O._EnvironmentModule, G.SourceSpanException, E.SassScriptException, B.ExecutableOptions, B.UsageException, A._Watcher, T.EmptyExtender, F.Extender, S.Extension, L.ExtendMode, R.ImportCache, B.AsyncImporter, E.ImporterResult, Z.InterpolationBuffer, B.FileSystemException, B.Stderr, F._QuietLogger, S.StderrLogger, T.TrackingLogger, Q.BuiltInModule, R.ForwardedModuleView, B.ShadowedModuleView, G.Parser, M.StylesheetGraph, M.StylesheetNode, M.Syntax, G.FixedLengthListBuilder, U.MultiDirWatcher, N.NoSourceMapBuffer0, D.SourceMapBuffer0, F.Value, D.ListSeparator, E._EvaluateVisitor0, E._ImportedCssVisitor0, E.EvaluateResult, E._ArgumentResults0, V._CloneCssVisitor, R.Evaluator, R._EvaluateVisitor, R._ImportedCssVisitor, R._ArgumentResults, D.RecursiveStatementVisitor, N._SerializeVisitor0, N.OutputStyle, N.LineFeed, N.SerializeResult, L.Entry, T.Mapping, T.TargetLineEntry, T.TargetEntry, Y.SourceFile, D.SourceLocationMixin, Y.SourceSpanMixin, U.Highlighter, U._Highlight, U._Line, V.SourceLocation, U.Chain, A.Frame, T.LazyTrace, Y.Trace, N.UnparsedFrame, X.StringScanner, S._SpanScannerState, A.AsciiGlyphSet, K.UnicodeGlyphSet, S.Tuple2, S.Tuple3, E.WatchEvent, E.ChangeType, Y.SupportsAnything0, Z.Argument0, B.ArgumentDeclaration0, X.ArgumentInvocation0, F.Value0, B.AsyncImporter0, S.AsyncBuiltInCallable0, X.CompileResult0, Q.AsyncEnvironment0, Q._EnvironmentModule2, E._EvaluateVisitor2, E._ImportedCssVisitor2, E.EvaluateResult0, E._ArgumentResults2, O.AsyncImportCache0, G.Parser1, V.AtRootQuery0, M.ParentStatement0, B.AstNode0, T.Selector0, N.AttributeOperator0, V.BinaryOperationExpression0, V.BinaryOperator0, Z.BooleanExpression0, Q.BuiltInCallable0, Q.BuiltInModule0, V._CloneCssVisitor0, K.ColorExpression0, S.Combinator0, A.Configuration0, Z.ConfiguredValue0, Z.ConfiguredVariable0, Q.ContentRule0, Q.DebugRule0, L.SupportsDeclaration0, B.DynamicImport0, T.EmptyExtender0, O.Environment0, O._EnvironmentModule1, D.ErrorRule0, R._EvaluateVisitor1, R._ImportedCssVisitor1, R._ArgumentResults1, E.SassScriptException0, X.ExtendRule0, F.Extender0, S.Extension0, G.FixedLengthListBuilder0, L.ForwardRule0, R.ForwardedModuleView0, F.FunctionExpression0, F.SupportsFunction0, L.IfExpression0, V.IfRule0, V.IfClause0, F.NodeImporter, R.ImportCache0, B.ImportRule0, A.IncludeRule0, X.Interpolation0, X.SupportsInterpolation0, Z.InterpolationBuffer0, D.ListExpression0, D.ListSeparator0, L.LoudComment0, A.MapExpression0, F.CssMediaQuery0, F._SingletonCssMediaQueryMergeResult0, F.MediaQuerySuccessfulMergeResult0, L.ExtendMode0, M.SupportsNegation0, N.NoSourceMapBuffer, B._FakeAstNode0, B.FileSystemException0, B.Stderr0, O.NullExpression0, T.NumberExpression0, U.SupportsOperation0, T.ParenthesizedExpression0, L.PlainCssCallable0, D.QualifiedName0, E.ImporterResult0, B.ReturnRule0, T.SelectorExpression0, N._SerializeVisitor, N.OutputStyle0, N.LineFeed0, N.SerializeResult0, B.ShadowedModuleView0, B.SilentComment0, D.SourceMapBuffer, Q.StaticImport0, S.StderrLogger0, D.StringExpression0, M.Syntax0, X.UnaryOperationExpression0, X.UnaryOperator0, T.UseRule0, E.UserDefinedCallable0, F.CssValue0, F.ValueExpression0, F.ModifiableCssValue0, S.VariableExpression0, Z.VariableDeclaration0, Y.WarnRule0]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeTypedData]);
    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction, B.Stdin, B.Stdout, B.ReadlineModule, B.ReadlineOptions, B.ReadlineInterface, V.BufferModule, V.BufferConstants, V.Buffer, F.ConsoleModule, F.Console, F.EventEmitter, D.FS, D.FSConstants, D.FSWatcher, D.ReadStream, D.ReadStreamOptions, D.WriteStream, D.WriteStreamOptions, D.Stats, E.Promise, E.Date, E.JsError, E.Atomics, Y.Modules, Y.Module1, Y.Net, Y.Socket, Y.NetAddress, Y.NetServer, X.NodeJsError, X.Process, X.CPUUsage, X.Release, D.StreamModule, D.Readable, D.Writable, D.Duplex, D.Transform, D.WritableOptions, D.ReadableOptions, L.Immediate, L.Timeout, N.TTY, M.Util, Y.Chokidar, Y.ChokidarOptions, Y.ChokidarWatcher, F.JSFunction, F.NodeImporterResult, B._PropertyDescriptor, Y.Chokidar0, Y.ChokidarOptions0, Y.ChokidarWatcher0, K._NodeSassColor, D.Exports, E.FiberClass, E.Fiber, F.JSFunction0, F.NodeImporterResult0, D._NodeSassList, A._NodeSassMap, T._NodeSassNumber, Z.RenderContext, L.RenderContextOptions, R.RenderOptions, U.RenderResult, U.RenderResultStats, R._Exports, D._NodeSassString, G.Types, B._PropertyDescriptor0]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);
    _inheritMany(P.Iterable, [H._CastIterableBase, H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.ExpandIterable, H.TakeIterable, H.SkipIterable, H.SkipWhileIterable, H.FollowedByIterable, H.WhereTypeIterable, H._ConstantMapKeyIterable, P.IterableBase, H._StringAllMatchesIterable, P.Runes]);
    _inheritMany(H._CastIterableBase, [H.CastIterable, H.__CastListBase__CastIterableBase_ListMixin, H.CastSet, H.CastQueue]);
    _inherit(H._EfficientLengthCastIterable, H.CastIterable);
    _inherit(H._CastListBase, H.__CastListBase__CastIterableBase_ListMixin);
    _inheritMany(H.Closure, [H._CastListBase_sort_closure, H.ConstantStringMap_values_closure, H.Instantiation, H.Primitives_functionNoSuchMethod_closure, H.TearOffClosure, H.JsLinkedHashMap_values_closure, H.JsLinkedHashMap_addAll_closure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._TimerImpl$periodic_closure, P._awaitOnObject_closure, P._awaitOnObject_closure0, P._wrapJsFunctionForAsync_closure, P._asyncStarHelper_closure, P._asyncStarHelper_closure0, P._AsyncStarStreamController__resumeBody, P._AsyncStarStreamController__resumeBody_closure, P._AsyncStarStreamController_closure0, P._AsyncStarStreamController_closure1, P._AsyncStarStreamController_closure, P._AsyncStarStreamController__closure, P._SyncBroadcastStreamController__sendData_closure, P._SyncBroadcastStreamController__sendError_closure, P._SyncBroadcastStreamController__sendDone_closure, P.Future_wait__error_set, P.Future_wait__stackTrace_set, P.Future_wait__error_get, P.Future_wait__stackTrace_get, P.Future_wait_handleError, P.Future_wait_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncCompleteWithValue_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_Stream$fromFuture_closure, P.Stream_Stream$fromFuture_closure0, P.Stream_length_closure, P.Stream_length_closure0, P._StreamController__subscribe_closure, P._StreamController__recordCancel_complete, P._AddStreamState_cancel_closure, P._BufferingStreamSubscription__sendError_sendError, P._BufferingStreamSubscription__sendDone_sendDone, P._PendingEvents_schedule_closure, P._CustomZone_bindCallback_closure, P._CustomZone_bindUnaryCallback_closure, P._CustomZone_bindCallbackGuarded_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallback_closure, P._RootZone_bindCallbackGuarded_closure, P._HashMap_values_closure, P._HashMap_addAll_closure, P._LinkedCustomHashMap_closure, P.HashMap_HashMap$from_closure, P.LinkedHashMap_LinkedHashMap$from_closure, P.MapBase_mapToString_closure, P.MapMixin_entries_closure, P.Utf8Decoder_closure, P.Utf8Decoder_closure0, P._JsonStringifier_writeMap_closure, P.NoSuchMethodError_toString_closure, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, P.Uri__parseIPv4Address_error, P.Uri_parseIPv6Address_error, P.Uri_parseIPv6Address_parseHex, P._Uri__makePath_closure, P._createTables_closure, P._createTables_build, P._createTables_setChars, P._createTables_setRange, N.ArgParser_findByAbbreviation_closure, N.ArgParser_findByAbbreviation_closure0, G.Parser_parse_closure, G.Parser_setOption_closure, G.Usage_generate_closure, G.Usage_buildAllowedList_closure, L.StreamGroup_add_closure, L.StreamGroup_add_closure0, L.StreamGroup__onListen_closure, L.StreamGroup__onCancel_closure, L.StreamGroup__onCancel_closure0, L.StreamGroup__listenToStream_closure, G.StreamQueue__ensureListening_closure, G.StreamQueue__ensureListening_closure1, G.StreamQueue__ensureListening_closure0, Q.closure113, B.ReplAdapter_runAsync_closure, B.defaultCompare_closure, M.futureToPromise_closure, M.Context_join_closure, M.Context_joinAll_closure, M.Context_split_closure, M._validateArgList_closure, X.ParsedPath_normalize_closure, X.ParsedPath__splitExtension_closure, X.ParsedPath__splitExtension_closure0, K.PathMap__create_closure, K.PathMap__create_closure0, K.PathMap__create_closure1, L.WindowsStyle_absolutePathToUri_closure, B.ArgumentDeclaration_verify_closure, B.ArgumentDeclaration_verify_closure0, D.ListExpression_toString_closure, A.MapExpression_toString_closure, X.Interpolation_toString_closure, V.EachRule_toString_closure, V.IfRule_toString_closure, V.IfClause$__closure, V.IfClause$___closure, M.ParentStatement_closure, M.ParentStatement__closure, S.ComplexSelector_isInvisible_closure, X.CompoundSelector_isInvisible_closure, N.IDSelector_unify_closure, D.SelectorList_isInvisible_closure, D.SelectorList_asSassList_closure, D.SelectorList_asSassList__closure, D.SelectorList_unify_closure, D.SelectorList_unify__closure, D.SelectorList_unify___closure, D.SelectorList_resolveParentSelectors_closure, D.SelectorList_resolveParentSelectors__closure, D.SelectorList_resolveParentSelectors__closure0, D.SelectorList__complexContainsParentSelector_closure, D.SelectorList__complexContainsParentSelector__closure, D.SelectorList__resolveParentSelectorsCompound_closure, D.SelectorList__resolveParentSelectorsCompound_closure0, D.SelectorList__resolveParentSelectorsCompound_closure1, X._compileStylesheet_closure0, Q.AsyncEnvironment_importForwards_closure, Q.AsyncEnvironment_importForwards_closure0, Q.AsyncEnvironment_importForwards_closure1, Q.AsyncEnvironment_importForwards_closure2, Q.AsyncEnvironment__getVariableFromGlobalModule_closure, Q.AsyncEnvironment_setVariable_closure, Q.AsyncEnvironment_setVariable_closure0, Q.AsyncEnvironment_setVariable_closure1, Q.AsyncEnvironment__getFunctionFromGlobalModule_closure, Q.AsyncEnvironment__getMixinFromGlobalModule_closure, Q._EnvironmentModule__EnvironmentModule_closure5, Q._EnvironmentModule__EnvironmentModule_closure6, Q._EnvironmentModule__EnvironmentModule_closure7, Q._EnvironmentModule__EnvironmentModule_closure8, Q._EnvironmentModule__EnvironmentModule_closure9, Q._EnvironmentModule__EnvironmentModule_closure10, O.AsyncImportCache_canonicalize_closure, O.AsyncImportCache__canonicalize_closure, O.AsyncImportCache_importCanonical_closure, O.AsyncImportCache_humanize_closure, O.AsyncImportCache_humanize_closure0, O.AsyncImportCache_humanize_closure1, S.AsyncBuiltInCallable$mixin_closure, Q.BuiltInCallable$mixin_closure, U._compileStylesheet_closure, O.Environment_importForwards_closure, O.Environment_importForwards_closure0, O.Environment_importForwards_closure1, O.Environment_importForwards_closure2, O.Environment__getVariableFromGlobalModule_closure, O.Environment_setVariable_closure, O.Environment_setVariable_closure0, O.Environment_setVariable_closure1, O.Environment__getFunctionFromGlobalModule_closure, O.Environment__getMixinFromGlobalModule_closure, O._EnvironmentModule__EnvironmentModule_closure, O._EnvironmentModule__EnvironmentModule_closure0, O._EnvironmentModule__EnvironmentModule_closure1, O._EnvironmentModule__EnvironmentModule_closure2, O._EnvironmentModule__EnvironmentModule_closure3, O._EnvironmentModule__EnvironmentModule_closure4, D._writeSourceMap_closure, B.ExecutableOptions_closure, B.ExecutableOptions_emitErrorCss_closure, A.watch_closure, A._Watcher__debounceEvents_closure, A._Watcher__debounceEvents__closure, F.Extender_extensionsWhereTarget_closure, F.Extender__registerSelector_closure, F.Extender_addExtension_closure, F.Extender_addExtension_closure0, F.Extender_addExtension_closure1, F.Extender__extendExistingExtensions_closure, F.Extender__extendExistingExtensions_closure0, F.Extender_addExtensions_closure, F.Extender_addExtensions__closure, F.Extender_addExtensions___closure, F.Extender_addExtensions___closure0, F.Extender__extendList_closure, F.Extender__extendComplex_closure, F.Extender__extendComplex_closure0, F.Extender__extendComplex__closure, F.Extender__extendComplex__closure0, F.Extender__extendComplex___closure, F.Extender__extendCompound_closure, F.Extender__extendCompound_closure0, F.Extender__extendCompound__closure, F.Extender__extendCompound__closure0, F.Extender__extendCompound_closure1, F.Extender__extendCompound_closure2, F.Extender__extendCompound_closure3, F.Extender__extendCompound_closure4, F.Extender__extendSimple_withoutPseudo, F.Extender__extendSimple_closure, F.Extender__extendPseudo_closure, F.Extender__extendPseudo_closure0, F.Extender__extendPseudo_closure1, F.Extender__extendPseudo_closure2, F.Extender__extendPseudo_closure3, F.Extender__trim_closure, F.Extender__trim_closure0, F.Extender_clone_closure, Y.unifyComplex_closure, Y._weaveParents_closure, Y._weaveParents_closure0, Y._weaveParents_closure1, Y._weaveParents__closure1, Y._weaveParents_closure2, Y._weaveParents_closure3, Y._weaveParents__closure0, Y._weaveParents_closure4, Y._weaveParents_closure5, Y._weaveParents__closure, Y._mustUnify_closure, Y._mustUnify__closure, Y.paths_closure, Y.paths__closure, Y.paths___closure, Y._hasRoot_closure, Y.listIsSuperselector_closure, Y.listIsSuperselector__closure, Y._simpleIsSuperselectorOfCompound_closure, Y._simpleIsSuperselectorOfCompound__closure, Y._selectorPseudoIsSuperselector_closure, Y._selectorPseudoIsSuperselector_closure0, Y._selectorPseudoIsSuperselector_closure1, Y._selectorPseudoIsSuperselector_closure2, Y._selectorPseudoIsSuperselector_closure3, Y._selectorPseudoIsSuperselector__closure, Y._selectorPseudoIsSuperselector___closure, Y._selectorPseudoIsSuperselector___closure0, Y._selectorPseudoIsSuperselector_closure4, Y._selectorPseudoIsSuperselector_closure5, Y._selectorPseudosNamed_closure, Y.closure, K.closure44, K.closure45, K.closure46, K.closure47, K.closure48, K.closure49, K.closure50, K.closure51, K.closure52, K.closure53, K.closure54, K.closure55, K.closure56, K.closure57, K.closure58, K.closure59, K.closure60, K.closure61, K.closure62, K.closure63, K.closure64, K.closure65, K.closure66, K.closure67, K.closure68, K.closure69, K._closure8, K.closure70, K.closure99, K.closure100, K.closure101, K.closure102, K.closure103, K.closure104, K.closure105, K.closure106, K._closure13, K.closure107, K.closure82, K.closure81, K.closure80, K.closure79, K.closure78, K.closure77, K.closure76, K.closure75, K.closure73, K.closure72, K.closure71, K.closure74, K.closure_hexString, K._updateComponents_getParam, K._updateComponents_closure, K._updateComponents_updateValue, K._updateComponents_updateRgb, K._functionString_closure, K._removedColorFunction_closure, K._removeUnits_closure, K._removeUnits_closure0, K._parseChannels_closure, D.closure43, D.closure42, D.closure41, D.closure40, D.closure39, D.closure38, D._closure5, D._closure6, D._closure7, D.closure37, D.closure35, D.closure36, A.closure34, A.closure97, A._closure12, A.closure98, A._closure11, A.closure32, A.closure33, A._closure4, A.closure96, A.closure95, A._closure10, A.closure30, A.closure31, A.closure29, A.closure28, A.closure27, A._modify__modifyNestedMap, A._deepMergeImpl__ensureMutable, A._deepMergeImpl_closure, K.closure25, K.closure90, K.closure24, K.closure23, K.closure22, K.closure26, K.closure88, K._closure9, K.closure87, K.closure86, K.closure84, K.closure94, K.closure93, K.closure92, K.closure91, K.closure89, K.closure85, K.closure83, K.closure18, K.closure17, K.closure19, K.closure21, K.closure20, K._numberFunction_closure, Q.closure108, Q.closure109, Q.closure110, Q.closure111, T.closure13, T._closure1, T._closure2, T.closure12, T._closure, T._closure0, T.__closure, T.closure11, T.closure10, T.closure9, T.closure16, T.closure15, T._closure3, T.closure14, D.closure8, D.closure7, D.closure3, D.closure2, D.closure1, D.closure0, D.closure6, D.closure5, D.closure4, R.ImportCache_canonicalize_closure, R.ImportCache__canonicalize_closure, R.ImportCache_importCanonical_closure, R.ImportCache_humanize_closure, R.ImportCache_humanize_closure0, R.ImportCache_humanize_closure1, B.resolveImportPath_closure, B.resolveImportPath_closure0, B._tryPathAsDirectory_closure, B._exactlyOne_closure, F._realCasePath_helper, F._realCasePath_helper_closure, F._realCasePath_helper__closure, B._readFile_closure, B.writeFile_closure, B.deleteFile_closure, B.readStdin_closure, B.readStdin_closure0, B.readStdin_closure1, B.readStdin_closure2, B.fileExists_closure, B.dirExists_closure, B.ensureDir_closure, B.listDir_closure, B.listDir__closure, B.listDir__closure0, B.listDir_closure_list, B.listDir__list_closure, B.modificationTime_closure, B.watchDir_closure, B.watchDir_closure0, B.watchDir_closure1, B.watchDir_closure2, B.watchDir_closure3, B.watchDir__closure, V.AtRootQueryParser_parse_closure, Q.closure112, E.KeyframeSelectorParser_parse_closure, F.MediaQueryParser_parse_closure, G.Parser__parseIdentifier_closure, G.Parser_scanIdentChar_matches, U.SassParser_children_closure, T.SelectorParser_parse_closure, T.SelectorParser_parseCompoundSelector_closure, V.StylesheetParser_parse_closure, V.StylesheetParser_parse__closure, V.StylesheetParser_parse__closure0, V.StylesheetParser_parseArgumentDeclaration_closure, V.StylesheetParser_parseVariableDeclaration_closure, V.StylesheetParser_parseUseRule_closure, V.StylesheetParser__parseSingleProduction_closure, V.StylesheetParser__statement_closure, V.StylesheetParser_variableDeclarationWithoutNamespace_closure, V.StylesheetParser_variableDeclarationWithoutNamespace_closure0, V.StylesheetParser__declarationOrBuffer_closure, V.StylesheetParser__declarationOrBuffer_closure0, V.StylesheetParser__styleRule_closure, V.StylesheetParser__propertyOrVariableDeclaration_closure, V.StylesheetParser__propertyOrVariableDeclaration_closure0, V.StylesheetParser__atRootRule_closure, V.StylesheetParser__atRootRule_closure0, V.StylesheetParser__eachRule_closure, V.StylesheetParser__functionRule_closure, V.StylesheetParser__forRule_closure, V.StylesheetParser__forRule_closure0, V.StylesheetParser__memberList_closure, V.StylesheetParser__includeRule_closure, V.StylesheetParser_mediaRule_closure, V.StylesheetParser__mixinRule_closure, V.StylesheetParser_mozDocumentRule_closure, V.StylesheetParser_supportsRule_closure, V.StylesheetParser__whileRule_closure, V.StylesheetParser_unknownAtRule_closure, V.StylesheetParser_expression_resetState, V.StylesheetParser_expression_resolveOneOperation, V.StylesheetParser_expression_resolveOperations, V.StylesheetParser_expression_addSingleExpression, V.StylesheetParser_expression_addOperator, V.StylesheetParser_expression_resolveSpaceExpressions, V.StylesheetParser__expressionUntilComma_closure, V.StylesheetParser__unicodeRange_closure, V.StylesheetParser__unicodeRange_closure0, V.StylesheetParser_identifierLike_closure, V.StylesheetParser__expressionUntilComparison_closure, V.StylesheetParser__publicIdentifier_closure, M.StylesheetGraph_modifiedSince_transitiveModificationTime, M.StylesheetGraph_modifiedSince_transitiveModificationTime_closure, M.StylesheetGraph__add_closure, M.StylesheetGraph_addCanonical_closure, M.StylesheetGraph_reload_closure, M.StylesheetGraph__recanonicalizeImportsForNode_closure, M.StylesheetGraph__nodeFor_closure, M.StylesheetGraph__nodeFor_closure0, F._PrefixedKeys_iterator_closure, D.SourceMapBuffer__addEntry_closure, D.SourceMapBuffer_buildSourceMap_closure, R._UnprefixedKeys_iterator_closure, R._UnprefixedKeys_iterator_closure0, B.indent_closure, B.flattenVertically_closure, B.flattenVertically_closure0, B.longestCommonSubsequence_closure, B.longestCommonSubsequence_closure0, B.longestCommonSubsequence_closure1, B.longestCommonSubsequence_backtrack, B.mapAddAll2_closure, K.SassColor_SassColor$hwb_toRgb, D.SassList_isBlank_closure, A.SassMap_asList_closure, T.SassNumber__coerceOrConvertValue__compatibilityException, T.SassNumber__coerceOrConvertValue_closure, T.SassNumber__coerceOrConvertValue_closure0, T.SassNumber__coerceOrConvertValue_closure1, T.SassNumber__coerceOrConvertValue_closure2, T.SassNumber_plus_closure, T.SassNumber_minus_closure, T.SassNumber_multiplyUnits_closure, T.SassNumber_multiplyUnits_closure0, T.SassNumber_multiplyUnits_closure1, T.SassNumber_multiplyUnits_closure2, T.SassNumber__areAnyConvertible_closure, T.SassNumber__canonicalizeUnitList_closure, T.SassNumber__canonicalMultiplier_closure, L.SingleUnitSassNumber_multiplyUnits_closure, L.SingleUnitSassNumber_multiplyUnits_closure0, E._EvaluateVisitor_closure9, E._EvaluateVisitor_closure10, E._EvaluateVisitor_closure11, E._EvaluateVisitor_closure12, E._EvaluateVisitor_closure13, E._EvaluateVisitor_closure14, E._EvaluateVisitor_closure15, E._EvaluateVisitor_closure16, E._EvaluateVisitor__closure4, E._EvaluateVisitor_closure17, E._EvaluateVisitor_closure18, E._EvaluateVisitor__closure2, E._EvaluateVisitor__closure3, E._EvaluateVisitor_run_closure0, E._EvaluateVisitor__withWarnCallback_closure0, E._EvaluateVisitor__loadModule_closure1, E._EvaluateVisitor__loadModule_closure2, E._EvaluateVisitor__execute_closure0, E._EvaluateVisitor__combineCss_closure2, E._EvaluateVisitor__combineCss_closure3, E._EvaluateVisitor__combineCss_closure4, E._EvaluateVisitor__extendModules_closure1, E._EvaluateVisitor__extendModules_closure2, E._EvaluateVisitor__topologicalModules_visitModule0, E._EvaluateVisitor_visitAtRootRule_closure2, E._EvaluateVisitor_visitAtRootRule_closure3, E._EvaluateVisitor_visitAtRootRule_closure4, E._EvaluateVisitor__scopeForAtRoot_closure5, E._EvaluateVisitor__scopeForAtRoot_closure6, E._EvaluateVisitor__scopeForAtRoot_closure7, E._EvaluateVisitor__scopeForAtRoot__closure0, E._EvaluateVisitor__scopeForAtRoot_closure8, E._EvaluateVisitor__scopeForAtRoot_closure9, E._EvaluateVisitor__scopeForAtRoot_closure10, E._EvaluateVisitor_visitContentRule_closure0, E._EvaluateVisitor_visitDeclaration_closure0, E._EvaluateVisitor_visitEachRule_closure2, E._EvaluateVisitor_visitEachRule_closure3, E._EvaluateVisitor_visitEachRule_closure4, E._EvaluateVisitor_visitEachRule__closure0, E._EvaluateVisitor_visitEachRule___closure0, E._EvaluateVisitor_visitExtendRule_closure0, E._EvaluateVisitor_visitAtRule_closure1, E._EvaluateVisitor_visitAtRule__closure0, E._EvaluateVisitor_visitAtRule_closure2, E._EvaluateVisitor_visitForRule_closure4, E._EvaluateVisitor_visitForRule_closure5, E._EvaluateVisitor_visitForRule_closure6, E._EvaluateVisitor_visitForRule_closure7, E._EvaluateVisitor_visitForRule_closure8, E._EvaluateVisitor_visitForRule__closure0, E._EvaluateVisitor_visitForwardRule_closure1, E._EvaluateVisitor_visitForwardRule_closure2, E._EvaluateVisitor__assertConfigurationIsEmpty_closure0, E._EvaluateVisitor_visitIfRule_closure0, E._EvaluateVisitor_visitIfRule__closure0, E._EvaluateVisitor__visitDynamicImport_closure0, E._EvaluateVisitor__visitDynamicImport__closure0, E._EvaluateVisitor_visitIncludeRule_closure2, E._EvaluateVisitor_visitIncludeRule_closure3, E._EvaluateVisitor_visitIncludeRule_closure4, E._EvaluateVisitor_visitIncludeRule__closure0, E._EvaluateVisitor_visitIncludeRule___closure0, E._EvaluateVisitor_visitIncludeRule____closure0, E._EvaluateVisitor_visitMediaRule_closure1, E._EvaluateVisitor_visitMediaRule__closure0, E._EvaluateVisitor_visitMediaRule___closure0, E._EvaluateVisitor_visitMediaRule_closure2, E._EvaluateVisitor__visitMediaQueries_closure0, E._EvaluateVisitor_visitStyleRule_closure6, E._EvaluateVisitor_visitStyleRule_closure7, E._EvaluateVisitor_visitStyleRule_closure8, E._EvaluateVisitor_visitStyleRule_closure9, E._EvaluateVisitor_visitStyleRule_closure10, E._EvaluateVisitor_visitStyleRule_closure11, E._EvaluateVisitor_visitStyleRule__closure0, E._EvaluateVisitor_visitStyleRule_closure12, E._EvaluateVisitor_visitSupportsRule_closure1, E._EvaluateVisitor_visitSupportsRule__closure0, E._EvaluateVisitor_visitSupportsRule_closure2, E._EvaluateVisitor_visitVariableDeclaration_closure2, E._EvaluateVisitor_visitVariableDeclaration_closure3, E._EvaluateVisitor_visitVariableDeclaration_closure4, E._EvaluateVisitor_visitUseRule_closure0, E._EvaluateVisitor_visitWarnRule_closure0, E._EvaluateVisitor_visitWhileRule_closure0, E._EvaluateVisitor_visitWhileRule__closure0, E._EvaluateVisitor_visitBinaryOperationExpression_closure0, E._EvaluateVisitor_visitVariableExpression_closure0, E._EvaluateVisitor_visitListExpression_closure0, E._EvaluateVisitor_visitFunctionExpression_closure1, E._EvaluateVisitor_visitFunctionExpression_closure2, E._EvaluateVisitor__runUserDefinedCallable_closure0, E._EvaluateVisitor__runUserDefinedCallable__closure0, E._EvaluateVisitor__runUserDefinedCallable___closure0, E._EvaluateVisitor__runUserDefinedCallable____closure0, E._EvaluateVisitor__runFunctionCallable_closure0, E._EvaluateVisitor__runBuiltInCallable_closure1, E._EvaluateVisitor__runBuiltInCallable_closure2, E._EvaluateVisitor__evaluateArguments_closure0, E._EvaluateVisitor__evaluateMacroArguments_closure3, E._EvaluateVisitor__evaluateMacroArguments_closure4, E._EvaluateVisitor__evaluateMacroArguments_closure5, E._EvaluateVisitor__evaluateMacroArguments_closure6, E._EvaluateVisitor__addRestMap_closure1, E._EvaluateVisitor__addRestMap_closure2, E._EvaluateVisitor__verifyArguments_closure0, E._EvaluateVisitor_visitStringExpression_closure0, E._EvaluateVisitor_visitCssAtRule_closure1, E._EvaluateVisitor_visitCssAtRule_closure2, E._EvaluateVisitor_visitCssKeyframeBlock_closure1, E._EvaluateVisitor_visitCssKeyframeBlock_closure2, E._EvaluateVisitor_visitCssMediaRule_closure1, E._EvaluateVisitor_visitCssMediaRule__closure0, E._EvaluateVisitor_visitCssMediaRule___closure0, E._EvaluateVisitor_visitCssMediaRule_closure2, E._EvaluateVisitor_visitCssStyleRule_closure1, E._EvaluateVisitor_visitCssStyleRule__closure0, E._EvaluateVisitor_visitCssStyleRule_closure2, E._EvaluateVisitor_visitCssSupportsRule_closure1, E._EvaluateVisitor_visitCssSupportsRule__closure0, E._EvaluateVisitor_visitCssSupportsRule_closure2, E._EvaluateVisitor__performInterpolation_closure0, E._EvaluateVisitor__serialize_closure0, E._EvaluateVisitor__stackTrace_closure0, E._ImportedCssVisitor_visitCssAtRule_closure0, E._ImportedCssVisitor_visitCssMediaRule_closure0, E._ImportedCssVisitor_visitCssStyleRule_closure0, E._ImportedCssVisitor_visitCssSupportsRule_closure0, R._EvaluateVisitor_closure, R._EvaluateVisitor_closure0, R._EvaluateVisitor_closure1, R._EvaluateVisitor_closure2, R._EvaluateVisitor_closure3, R._EvaluateVisitor_closure4, R._EvaluateVisitor_closure5, R._EvaluateVisitor_closure6, R._EvaluateVisitor__closure1, R._EvaluateVisitor_closure7, R._EvaluateVisitor_closure8, R._EvaluateVisitor__closure, R._EvaluateVisitor__closure0, R._EvaluateVisitor_run_closure, R._EvaluateVisitor_runExpression_closure, R._EvaluateVisitor_runExpression__closure, R._EvaluateVisitor_runStatement_closure, R._EvaluateVisitor_runStatement__closure, R._EvaluateVisitor__withWarnCallback_closure, R._EvaluateVisitor__loadModule_closure, R._EvaluateVisitor__loadModule_closure0, R._EvaluateVisitor__execute_closure, R._EvaluateVisitor__combineCss_closure, R._EvaluateVisitor__combineCss_closure0, R._EvaluateVisitor__combineCss_closure1, R._EvaluateVisitor__extendModules_closure, R._EvaluateVisitor__extendModules_closure0, R._EvaluateVisitor__topologicalModules_visitModule, R._EvaluateVisitor_visitAtRootRule_closure, R._EvaluateVisitor_visitAtRootRule_closure0, R._EvaluateVisitor_visitAtRootRule_closure1, R._EvaluateVisitor__scopeForAtRoot_closure, R._EvaluateVisitor__scopeForAtRoot_closure0, R._EvaluateVisitor__scopeForAtRoot_closure1, R._EvaluateVisitor__scopeForAtRoot__closure, R._EvaluateVisitor__scopeForAtRoot_closure2, R._EvaluateVisitor__scopeForAtRoot_closure3, R._EvaluateVisitor__scopeForAtRoot_closure4, R._EvaluateVisitor_visitContentRule_closure, R._EvaluateVisitor_visitDeclaration_closure, R._EvaluateVisitor_visitEachRule_closure, R._EvaluateVisitor_visitEachRule_closure0, R._EvaluateVisitor_visitEachRule_closure1, R._EvaluateVisitor_visitEachRule__closure, R._EvaluateVisitor_visitEachRule___closure, R._EvaluateVisitor_visitExtendRule_closure, R._EvaluateVisitor_visitAtRule_closure, R._EvaluateVisitor_visitAtRule__closure, R._EvaluateVisitor_visitAtRule_closure0, R._EvaluateVisitor_visitForRule_closure, R._EvaluateVisitor_visitForRule_closure0, R._EvaluateVisitor_visitForRule_closure1, R._EvaluateVisitor_visitForRule_closure2, R._EvaluateVisitor_visitForRule_closure3, R._EvaluateVisitor_visitForRule__closure, R._EvaluateVisitor_visitForwardRule_closure, R._EvaluateVisitor_visitForwardRule_closure0, R._EvaluateVisitor__assertConfigurationIsEmpty_closure, R._EvaluateVisitor_visitIfRule_closure, R._EvaluateVisitor_visitIfRule__closure, R._EvaluateVisitor__visitDynamicImport_closure, R._EvaluateVisitor__visitDynamicImport__closure, R._EvaluateVisitor_visitIncludeRule_closure, R._EvaluateVisitor_visitIncludeRule_closure0, R._EvaluateVisitor_visitIncludeRule_closure1, R._EvaluateVisitor_visitIncludeRule__closure, R._EvaluateVisitor_visitIncludeRule___closure, R._EvaluateVisitor_visitIncludeRule____closure, R._EvaluateVisitor_visitMediaRule_closure, R._EvaluateVisitor_visitMediaRule__closure, R._EvaluateVisitor_visitMediaRule___closure, R._EvaluateVisitor_visitMediaRule_closure0, R._EvaluateVisitor__visitMediaQueries_closure, R._EvaluateVisitor_visitStyleRule_closure, R._EvaluateVisitor_visitStyleRule_closure0, R._EvaluateVisitor_visitStyleRule_closure1, R._EvaluateVisitor_visitStyleRule_closure2, R._EvaluateVisitor_visitStyleRule_closure3, R._EvaluateVisitor_visitStyleRule_closure4, R._EvaluateVisitor_visitStyleRule__closure, R._EvaluateVisitor_visitStyleRule_closure5, R._EvaluateVisitor_visitSupportsRule_closure, R._EvaluateVisitor_visitSupportsRule__closure, R._EvaluateVisitor_visitSupportsRule_closure0, R._EvaluateVisitor_visitVariableDeclaration_closure, R._EvaluateVisitor_visitVariableDeclaration_closure0, R._EvaluateVisitor_visitVariableDeclaration_closure1, R._EvaluateVisitor_visitUseRule_closure, R._EvaluateVisitor_visitWarnRule_closure, R._EvaluateVisitor_visitWhileRule_closure, R._EvaluateVisitor_visitWhileRule__closure, R._EvaluateVisitor_visitBinaryOperationExpression_closure, R._EvaluateVisitor_visitVariableExpression_closure, R._EvaluateVisitor_visitListExpression_closure, R._EvaluateVisitor_visitFunctionExpression_closure, R._EvaluateVisitor_visitFunctionExpression_closure0, R._EvaluateVisitor__runUserDefinedCallable_closure, R._EvaluateVisitor__runUserDefinedCallable__closure, R._EvaluateVisitor__runUserDefinedCallable___closure, R._EvaluateVisitor__runUserDefinedCallable____closure, R._EvaluateVisitor__runFunctionCallable_closure, R._EvaluateVisitor__runBuiltInCallable_closure, R._EvaluateVisitor__runBuiltInCallable_closure0, R._EvaluateVisitor__evaluateArguments_closure, R._EvaluateVisitor__evaluateMacroArguments_closure, R._EvaluateVisitor__evaluateMacroArguments_closure0, R._EvaluateVisitor__evaluateMacroArguments_closure1, R._EvaluateVisitor__evaluateMacroArguments_closure2, R._EvaluateVisitor__addRestMap_closure, R._EvaluateVisitor__addRestMap_closure0, R._EvaluateVisitor__verifyArguments_closure, R._EvaluateVisitor_visitStringExpression_closure, R._EvaluateVisitor_visitCssAtRule_closure, R._EvaluateVisitor_visitCssAtRule_closure0, R._EvaluateVisitor_visitCssKeyframeBlock_closure, R._EvaluateVisitor_visitCssKeyframeBlock_closure0, R._EvaluateVisitor_visitCssMediaRule_closure, R._EvaluateVisitor_visitCssMediaRule__closure, R._EvaluateVisitor_visitCssMediaRule___closure, R._EvaluateVisitor_visitCssMediaRule_closure0, R._EvaluateVisitor_visitCssStyleRule_closure, R._EvaluateVisitor_visitCssStyleRule__closure, R._EvaluateVisitor_visitCssStyleRule_closure0, R._EvaluateVisitor_visitCssSupportsRule_closure, R._EvaluateVisitor_visitCssSupportsRule__closure, R._EvaluateVisitor_visitCssSupportsRule_closure0, R._EvaluateVisitor__performInterpolation_closure, R._EvaluateVisitor__serialize_closure, R._EvaluateVisitor__stackTrace_closure, R._ImportedCssVisitor_visitCssAtRule_closure, R._ImportedCssVisitor_visitCssMediaRule_closure, R._ImportedCssVisitor_visitCssStyleRule_closure, R._ImportedCssVisitor_visitCssSupportsRule_closure, N.serialize_closure, N._SerializeVisitor_visitCssComment_closure, N._SerializeVisitor_visitCssAtRule_closure, N._SerializeVisitor_visitCssMediaRule_closure, N._SerializeVisitor_visitCssImport_closure, N._SerializeVisitor_visitCssImport__closure, N._SerializeVisitor_visitCssKeyframeBlock_closure, N._SerializeVisitor_visitCssStyleRule_closure, N._SerializeVisitor_visitCssSupportsRule_closure, N._SerializeVisitor_visitCssDeclaration_closure, N._SerializeVisitor_visitCssDeclaration_closure0, N._SerializeVisitor_visitList_closure, N._SerializeVisitor_visitList_closure0, N._SerializeVisitor_visitList_closure1, N._SerializeVisitor_visitMap_closure, N._SerializeVisitor_visitSelectorList_closure, N._SerializeVisitor__write_closure, N._SerializeVisitor__visitChildren_closure, N.withWarnCallback_closure, T.SingleMapping_SingleMapping$fromEntries_closure, T.SingleMapping_SingleMapping$fromEntries_closure0, T.SingleMapping_SingleMapping$fromEntries_closure1, T.SingleMapping_toJson_closure, T.SingleMapping_toJson_closure0, U.Highlighter_closure, U.Highlighter$__closure, U.Highlighter$___closure, U.Highlighter$__closure0, U.Highlighter__collateLines_closure, U.Highlighter__collateLines_closure0, U.Highlighter__collateLines_closure1, U.Highlighter__collateLines__closure, U.Highlighter_highlight_closure, U.Highlighter_highlight_closure0, U.Highlighter__writeFileStart_closure, U.Highlighter__writeMultilineHighlights_closure, U.Highlighter__writeMultilineHighlights_closure0, U.Highlighter__writeMultilineHighlights_closure1, U.Highlighter__writeMultilineHighlights_closure2, U.Highlighter__writeMultilineHighlights__closure, U.Highlighter__writeMultilineHighlights__closure0, U.Highlighter__writeHighlightedText_closure, U.Highlighter__writeIndicator_closure, U.Highlighter__writeIndicator_closure0, U.Highlighter__writeIndicator_closure1, U.Highlighter__writeSidebar_closure, U._Highlight_closure, U.Chain_Chain$parse_closure, U.Chain_Chain$parse_closure0, U.Chain_Chain$parse_closure1, U.Chain_toTrace_closure, U.Chain_toString_closure0, U.Chain_toString__closure0, U.Chain_toString_closure, U.Chain_toString__closure, A.Frame_Frame$parseVM_closure, A.Frame_Frame$parseV8_closure, A.Frame_Frame$parseV8_closure_parseLocation, A.Frame_Frame$_parseFirefoxEval_closure, A.Frame_Frame$parseFirefox_closure, A.Frame_Frame$parseFriendly_closure, T.LazyTrace_terse_closure, Y.Trace_Trace$from_closure, Y.Trace__parseVM_closure, Y.Trace__parseVM_closure0, Y.Trace$parseV8_closure, Y.Trace$parseV8_closure0, Y.Trace$parseJSCore_closure, Y.Trace$parseJSCore_closure0, Y.Trace$parseFirefox_closure, Y.Trace$parseFirefox_closure0, Y.Trace$parseFriendly_closure, Y.Trace$parseFriendly_closure0, Y.Trace_terse_closure, Y.Trace_foldFrames_closure, Y.Trace_foldFrames_closure0, Y.Trace_toString_closure0, Y.Trace_toString_closure, L._StreamTransformer_bind_closure, L._StreamTransformer_bind__closure, L._StreamTransformer_bind__closure1, L._StreamTransformer_bind__closure0, L._StreamTransformer_bind__closure2, R._debounceAggregate_closure, R._debounceAggregate__closure, R._debounceAggregate_closure0, B.ArgumentDeclaration_verify_closure1, B.ArgumentDeclaration_verify_closure2, S.AsyncBuiltInCallable$mixin_closure0, X._compileStylesheet_closure2, Q.AsyncEnvironment_importForwards_closure3, Q.AsyncEnvironment_importForwards_closure4, Q.AsyncEnvironment_importForwards_closure5, Q.AsyncEnvironment_importForwards_closure6, Q.AsyncEnvironment__getVariableFromGlobalModule_closure0, Q.AsyncEnvironment_setVariable_closure2, Q.AsyncEnvironment_setVariable_closure3, Q.AsyncEnvironment_setVariable_closure4, Q.AsyncEnvironment__getFunctionFromGlobalModule_closure0, Q.AsyncEnvironment__getMixinFromGlobalModule_closure0, Q._EnvironmentModule__EnvironmentModule_closure17, Q._EnvironmentModule__EnvironmentModule_closure18, Q._EnvironmentModule__EnvironmentModule_closure19, Q._EnvironmentModule__EnvironmentModule_closure20, Q._EnvironmentModule__EnvironmentModule_closure21, Q._EnvironmentModule__EnvironmentModule_closure22, E._EvaluateVisitor_closure29, E._EvaluateVisitor_closure30, E._EvaluateVisitor_closure31, E._EvaluateVisitor_closure32, E._EvaluateVisitor_closure33, E._EvaluateVisitor_closure34, E._EvaluateVisitor_closure35, E._EvaluateVisitor_closure36, E._EvaluateVisitor__closure10, E._EvaluateVisitor_closure37, E._EvaluateVisitor_closure38, E._EvaluateVisitor__closure8, E._EvaluateVisitor__closure9, E._EvaluateVisitor_run_closure2, E._EvaluateVisitor__withWarnCallback_closure2, E._EvaluateVisitor__loadModule_closure5, E._EvaluateVisitor__loadModule_closure6, E._EvaluateVisitor__execute_closure2, E._EvaluateVisitor__combineCss_closure8, E._EvaluateVisitor__combineCss_closure9, E._EvaluateVisitor__combineCss_closure10, E._EvaluateVisitor__extendModules_closure5, E._EvaluateVisitor__extendModules_closure6, E._EvaluateVisitor__topologicalModules_visitModule2, E._EvaluateVisitor_visitAtRootRule_closure8, E._EvaluateVisitor_visitAtRootRule_closure9, E._EvaluateVisitor_visitAtRootRule_closure10, E._EvaluateVisitor__scopeForAtRoot_closure17, E._EvaluateVisitor__scopeForAtRoot_closure18, E._EvaluateVisitor__scopeForAtRoot_closure19, E._EvaluateVisitor__scopeForAtRoot__closure2, E._EvaluateVisitor__scopeForAtRoot_closure20, E._EvaluateVisitor__scopeForAtRoot_closure21, E._EvaluateVisitor__scopeForAtRoot_closure22, E._EvaluateVisitor_visitContentRule_closure2, E._EvaluateVisitor_visitDeclaration_closure2, E._EvaluateVisitor_visitEachRule_closure8, E._EvaluateVisitor_visitEachRule_closure9, E._EvaluateVisitor_visitEachRule_closure10, E._EvaluateVisitor_visitEachRule__closure2, E._EvaluateVisitor_visitEachRule___closure2, E._EvaluateVisitor_visitExtendRule_closure2, E._EvaluateVisitor_visitAtRule_closure5, E._EvaluateVisitor_visitAtRule__closure2, E._EvaluateVisitor_visitAtRule_closure6, E._EvaluateVisitor_visitForRule_closure14, E._EvaluateVisitor_visitForRule_closure15, E._EvaluateVisitor_visitForRule_closure16, E._EvaluateVisitor_visitForRule_closure17, E._EvaluateVisitor_visitForRule_closure18, E._EvaluateVisitor_visitForRule__closure2, E._EvaluateVisitor_visitForwardRule_closure5, E._EvaluateVisitor_visitForwardRule_closure6, E._EvaluateVisitor__assertConfigurationIsEmpty_closure2, E._EvaluateVisitor_visitIfRule_closure2, E._EvaluateVisitor_visitIfRule__closure2, E._EvaluateVisitor__visitDynamicImport_closure2, E._EvaluateVisitor__visitDynamicImport__closure2, E._EvaluateVisitor_visitIncludeRule_closure8, E._EvaluateVisitor_visitIncludeRule_closure9, E._EvaluateVisitor_visitIncludeRule_closure10, E._EvaluateVisitor_visitIncludeRule__closure2, E._EvaluateVisitor_visitIncludeRule___closure2, E._EvaluateVisitor_visitIncludeRule____closure2, E._EvaluateVisitor_visitMediaRule_closure5, E._EvaluateVisitor_visitMediaRule__closure2, E._EvaluateVisitor_visitMediaRule___closure2, E._EvaluateVisitor_visitMediaRule_closure6, E._EvaluateVisitor__visitMediaQueries_closure2, E._EvaluateVisitor_visitStyleRule_closure20, E._EvaluateVisitor_visitStyleRule_closure21, E._EvaluateVisitor_visitStyleRule_closure22, E._EvaluateVisitor_visitStyleRule_closure23, E._EvaluateVisitor_visitStyleRule_closure24, E._EvaluateVisitor_visitStyleRule_closure25, E._EvaluateVisitor_visitStyleRule__closure2, E._EvaluateVisitor_visitStyleRule_closure26, E._EvaluateVisitor_visitSupportsRule_closure5, E._EvaluateVisitor_visitSupportsRule__closure2, E._EvaluateVisitor_visitSupportsRule_closure6, E._EvaluateVisitor_visitVariableDeclaration_closure8, E._EvaluateVisitor_visitVariableDeclaration_closure9, E._EvaluateVisitor_visitVariableDeclaration_closure10, E._EvaluateVisitor_visitUseRule_closure2, E._EvaluateVisitor_visitWarnRule_closure2, E._EvaluateVisitor_visitWhileRule_closure2, E._EvaluateVisitor_visitWhileRule__closure2, E._EvaluateVisitor_visitBinaryOperationExpression_closure2, E._EvaluateVisitor_visitVariableExpression_closure2, E._EvaluateVisitor_visitListExpression_closure2, E._EvaluateVisitor_visitFunctionExpression_closure5, E._EvaluateVisitor_visitFunctionExpression_closure6, E._EvaluateVisitor__runUserDefinedCallable_closure2, E._EvaluateVisitor__runUserDefinedCallable__closure2, E._EvaluateVisitor__runUserDefinedCallable___closure2, E._EvaluateVisitor__runUserDefinedCallable____closure2, E._EvaluateVisitor__runFunctionCallable_closure2, E._EvaluateVisitor__runBuiltInCallable_closure5, E._EvaluateVisitor__runBuiltInCallable_closure6, E._EvaluateVisitor__evaluateArguments_closure2, E._EvaluateVisitor__evaluateMacroArguments_closure11, E._EvaluateVisitor__evaluateMacroArguments_closure12, E._EvaluateVisitor__evaluateMacroArguments_closure13, E._EvaluateVisitor__evaluateMacroArguments_closure14, E._EvaluateVisitor__addRestMap_closure5, E._EvaluateVisitor__addRestMap_closure6, E._EvaluateVisitor__verifyArguments_closure2, E._EvaluateVisitor_visitStringExpression_closure2, E._EvaluateVisitor_visitCssAtRule_closure5, E._EvaluateVisitor_visitCssAtRule_closure6, E._EvaluateVisitor_visitCssKeyframeBlock_closure5, E._EvaluateVisitor_visitCssKeyframeBlock_closure6, E._EvaluateVisitor_visitCssMediaRule_closure5, E._EvaluateVisitor_visitCssMediaRule__closure2, E._EvaluateVisitor_visitCssMediaRule___closure2, E._EvaluateVisitor_visitCssMediaRule_closure6, E._EvaluateVisitor_visitCssStyleRule_closure5, E._EvaluateVisitor_visitCssStyleRule__closure2, E._EvaluateVisitor_visitCssStyleRule_closure6, E._EvaluateVisitor_visitCssSupportsRule_closure5, E._EvaluateVisitor_visitCssSupportsRule__closure2, E._EvaluateVisitor_visitCssSupportsRule_closure6, E._EvaluateVisitor__performInterpolation_closure2, E._EvaluateVisitor__serialize_closure2, E._EvaluateVisitor__stackTrace_closure2, E._ImportedCssVisitor_visitCssAtRule_closure2, E._ImportedCssVisitor_visitCssMediaRule_closure2, E._ImportedCssVisitor_visitCssStyleRule_closure2, E._ImportedCssVisitor_visitCssSupportsRule_closure2, O.AsyncImportCache_canonicalize_closure0, O.AsyncImportCache__canonicalize_closure0, O.AsyncImportCache_importCanonical_closure0, O.AsyncImportCache_humanize_closure2, O.AsyncImportCache_humanize_closure3, O.AsyncImportCache_humanize_closure4, V.AtRootQueryParser_parse_closure0, Z.closure263, Z._closure34, Z._closure35, Q.BuiltInCallable$mixin_closure0, K.closure159, K.closure160, K.closure161, K.closure162, K.closure163, K.closure164, K.closure165, K.closure166, K.closure167, K.closure168, K.closure169, K.closure170, K.closure171, K.closure172, K.closure173, K.closure174, K.closure175, K.closure176, K.closure177, K.closure178, K.closure179, K.closure180, K.closure181, K.closure182, K.closure183, K.closure184, K._closure23, K.closure185, K.closure214, K.closure215, K.closure216, K.closure217, K.closure218, K.closure219, K.closure220, K.closure221, K._closure28, K.closure222, K.closure197, K.closure196, K.closure195, K.closure194, K.closure193, K.closure192, K.closure191, K.closure190, K.closure188, K.closure187, K.closure186, K.closure189, K.closure_hexString0, K._updateComponents_getParam0, K._updateComponents_closure0, K._updateComponents_updateValue0, K._updateComponents_updateRgb0, K._functionString_closure0, K._removedColorFunction_closure0, K._removeUnits_closure1, K._removeUnits_closure2, K._parseChannels_closure0, K.closure253, K.closure254, K.closure255, K.closure256, K.closure257, K.closure258, K.closure259, K.closure260, K.closure261, K.closure262, K.SassColor_SassColor$hwb_toRgb0, U._compileStylesheet_closure1, S.ComplexSelector_isInvisible_closure0, X.CompoundSelector_isInvisible_closure0, Q.closure227, V.EachRule_toString_closure0, O.Environment_importForwards_closure3, O.Environment_importForwards_closure4, O.Environment_importForwards_closure5, O.Environment_importForwards_closure6, O.Environment__getVariableFromGlobalModule_closure0, O.Environment_setVariable_closure2, O.Environment_setVariable_closure3, O.Environment_setVariable_closure4, O.Environment__getFunctionFromGlobalModule_closure0, O.Environment__getMixinFromGlobalModule_closure0, O._EnvironmentModule__EnvironmentModule_closure11, O._EnvironmentModule__EnvironmentModule_closure12, O._EnvironmentModule__EnvironmentModule_closure13, O._EnvironmentModule__EnvironmentModule_closure14, O._EnvironmentModule__EnvironmentModule_closure15, O._EnvironmentModule__EnvironmentModule_closure16, R._EvaluateVisitor_closure19, R._EvaluateVisitor_closure20, R._EvaluateVisitor_closure21, R._EvaluateVisitor_closure22, R._EvaluateVisitor_closure23, R._EvaluateVisitor_closure24, R._EvaluateVisitor_closure25, R._EvaluateVisitor_closure26, R._EvaluateVisitor__closure7, R._EvaluateVisitor_closure27, R._EvaluateVisitor_closure28, R._EvaluateVisitor__closure5, R._EvaluateVisitor__closure6, R._EvaluateVisitor_run_closure1, R._EvaluateVisitor__withWarnCallback_closure1, R._EvaluateVisitor__loadModule_closure3, R._EvaluateVisitor__loadModule_closure4, R._EvaluateVisitor__execute_closure1, R._EvaluateVisitor__combineCss_closure5, R._EvaluateVisitor__combineCss_closure6, R._EvaluateVisitor__combineCss_closure7, R._EvaluateVisitor__extendModules_closure3, R._EvaluateVisitor__extendModules_closure4, R._EvaluateVisitor__topologicalModules_visitModule1, R._EvaluateVisitor_visitAtRootRule_closure5, R._EvaluateVisitor_visitAtRootRule_closure6, R._EvaluateVisitor_visitAtRootRule_closure7, R._EvaluateVisitor__scopeForAtRoot_closure11, R._EvaluateVisitor__scopeForAtRoot_closure12, R._EvaluateVisitor__scopeForAtRoot_closure13, R._EvaluateVisitor__scopeForAtRoot__closure1, R._EvaluateVisitor__scopeForAtRoot_closure14, R._EvaluateVisitor__scopeForAtRoot_closure15, R._EvaluateVisitor__scopeForAtRoot_closure16, R._EvaluateVisitor_visitContentRule_closure1, R._EvaluateVisitor_visitDeclaration_closure1, R._EvaluateVisitor_visitEachRule_closure5, R._EvaluateVisitor_visitEachRule_closure6, R._EvaluateVisitor_visitEachRule_closure7, R._EvaluateVisitor_visitEachRule__closure1, R._EvaluateVisitor_visitEachRule___closure1, R._EvaluateVisitor_visitExtendRule_closure1, R._EvaluateVisitor_visitAtRule_closure3, R._EvaluateVisitor_visitAtRule__closure1, R._EvaluateVisitor_visitAtRule_closure4, R._EvaluateVisitor_visitForRule_closure9, R._EvaluateVisitor_visitForRule_closure10, R._EvaluateVisitor_visitForRule_closure11, R._EvaluateVisitor_visitForRule_closure12, R._EvaluateVisitor_visitForRule_closure13, R._EvaluateVisitor_visitForRule__closure1, R._EvaluateVisitor_visitForwardRule_closure3, R._EvaluateVisitor_visitForwardRule_closure4, R._EvaluateVisitor__assertConfigurationIsEmpty_closure1, R._EvaluateVisitor_visitIfRule_closure1, R._EvaluateVisitor_visitIfRule__closure1, R._EvaluateVisitor__visitDynamicImport_closure1, R._EvaluateVisitor__visitDynamicImport__closure1, R._EvaluateVisitor_visitIncludeRule_closure5, R._EvaluateVisitor_visitIncludeRule_closure6, R._EvaluateVisitor_visitIncludeRule_closure7, R._EvaluateVisitor_visitIncludeRule__closure1, R._EvaluateVisitor_visitIncludeRule___closure1, R._EvaluateVisitor_visitIncludeRule____closure1, R._EvaluateVisitor_visitMediaRule_closure3, R._EvaluateVisitor_visitMediaRule__closure1, R._EvaluateVisitor_visitMediaRule___closure1, R._EvaluateVisitor_visitMediaRule_closure4, R._EvaluateVisitor__visitMediaQueries_closure1, R._EvaluateVisitor_visitStyleRule_closure13, R._EvaluateVisitor_visitStyleRule_closure14, R._EvaluateVisitor_visitStyleRule_closure15, R._EvaluateVisitor_visitStyleRule_closure16, R._EvaluateVisitor_visitStyleRule_closure17, R._EvaluateVisitor_visitStyleRule_closure18, R._EvaluateVisitor_visitStyleRule__closure1, R._EvaluateVisitor_visitStyleRule_closure19, R._EvaluateVisitor_visitSupportsRule_closure3, R._EvaluateVisitor_visitSupportsRule__closure1, R._EvaluateVisitor_visitSupportsRule_closure4, R._EvaluateVisitor_visitVariableDeclaration_closure5, R._EvaluateVisitor_visitVariableDeclaration_closure6, R._EvaluateVisitor_visitVariableDeclaration_closure7, R._EvaluateVisitor_visitUseRule_closure1, R._EvaluateVisitor_visitWarnRule_closure1, R._EvaluateVisitor_visitWhileRule_closure1, R._EvaluateVisitor_visitWhileRule__closure1, R._EvaluateVisitor_visitBinaryOperationExpression_closure1, R._EvaluateVisitor_visitVariableExpression_closure1, R._EvaluateVisitor_visitListExpression_closure1, R._EvaluateVisitor_visitFunctionExpression_closure3, R._EvaluateVisitor_visitFunctionExpression_closure4, R._EvaluateVisitor__runUserDefinedCallable_closure1, R._EvaluateVisitor__runUserDefinedCallable__closure1, R._EvaluateVisitor__runUserDefinedCallable___closure1, R._EvaluateVisitor__runUserDefinedCallable____closure1, R._EvaluateVisitor__runFunctionCallable_closure1, R._EvaluateVisitor__runBuiltInCallable_closure3, R._EvaluateVisitor__runBuiltInCallable_closure4, R._EvaluateVisitor__evaluateArguments_closure1, R._EvaluateVisitor__evaluateMacroArguments_closure7, R._EvaluateVisitor__evaluateMacroArguments_closure8, R._EvaluateVisitor__evaluateMacroArguments_closure9, R._EvaluateVisitor__evaluateMacroArguments_closure10, R._EvaluateVisitor__addRestMap_closure3, R._EvaluateVisitor__addRestMap_closure4, R._EvaluateVisitor__verifyArguments_closure1, R._EvaluateVisitor_visitStringExpression_closure1, R._EvaluateVisitor_visitCssAtRule_closure3, R._EvaluateVisitor_visitCssAtRule_closure4, R._EvaluateVisitor_visitCssKeyframeBlock_closure3, R._EvaluateVisitor_visitCssKeyframeBlock_closure4, R._EvaluateVisitor_visitCssMediaRule_closure3, R._EvaluateVisitor_visitCssMediaRule__closure1, R._EvaluateVisitor_visitCssMediaRule___closure1, R._EvaluateVisitor_visitCssMediaRule_closure4, R._EvaluateVisitor_visitCssStyleRule_closure3, R._EvaluateVisitor_visitCssStyleRule__closure1, R._EvaluateVisitor_visitCssStyleRule_closure4, R._EvaluateVisitor_visitCssSupportsRule_closure3, R._EvaluateVisitor_visitCssSupportsRule__closure1, R._EvaluateVisitor_visitCssSupportsRule_closure4, R._EvaluateVisitor__performInterpolation_closure1, R._EvaluateVisitor__serialize_closure1, R._EvaluateVisitor__stackTrace_closure1, R._ImportedCssVisitor_visitCssAtRule_closure1, R._ImportedCssVisitor_visitCssMediaRule_closure1, R._ImportedCssVisitor_visitCssStyleRule_closure1, R._ImportedCssVisitor_visitCssSupportsRule_closure1, F.Extender_extensionsWhereTarget_closure0, F.Extender__registerSelector_closure0, F.Extender_addExtension_closure2, F.Extender_addExtension_closure3, F.Extender_addExtension_closure4, F.Extender__extendExistingExtensions_closure1, F.Extender__extendExistingExtensions_closure2, F.Extender_addExtensions_closure0, F.Extender_addExtensions__closure0, F.Extender_addExtensions___closure1, F.Extender_addExtensions___closure2, F.Extender__extendList_closure0, F.Extender__extendComplex_closure1, F.Extender__extendComplex_closure2, F.Extender__extendComplex__closure1, F.Extender__extendComplex__closure2, F.Extender__extendComplex___closure0, F.Extender__extendCompound_closure5, F.Extender__extendCompound_closure6, F.Extender__extendCompound__closure1, F.Extender__extendCompound__closure2, F.Extender__extendCompound_closure7, F.Extender__extendCompound_closure8, F.Extender__extendCompound_closure9, F.Extender__extendCompound_closure10, F.Extender__extendSimple_withoutPseudo0, F.Extender__extendSimple_closure0, F.Extender__extendPseudo_closure4, F.Extender__extendPseudo_closure5, F.Extender__extendPseudo_closure6, F.Extender__extendPseudo_closure7, F.Extender__extendPseudo_closure8, F.Extender__trim_closure1, F.Extender__trim_closure2, F.Extender_clone_closure0, Y.unifyComplex_closure0, Y._weaveParents_closure6, Y._weaveParents_closure7, Y._weaveParents_closure8, Y._weaveParents__closure4, Y._weaveParents_closure9, Y._weaveParents_closure10, Y._weaveParents__closure3, Y._weaveParents_closure11, Y._weaveParents_closure12, Y._weaveParents__closure2, Y._mustUnify_closure0, Y._mustUnify__closure0, Y.paths_closure0, Y.paths__closure0, Y.paths___closure0, Y._hasRoot_closure0, Y.listIsSuperselector_closure0, Y.listIsSuperselector__closure0, Y._simpleIsSuperselectorOfCompound_closure0, Y._simpleIsSuperselectorOfCompound__closure0, Y._selectorPseudoIsSuperselector_closure6, Y._selectorPseudoIsSuperselector_closure7, Y._selectorPseudoIsSuperselector_closure8, Y._selectorPseudoIsSuperselector_closure9, Y._selectorPseudoIsSuperselector_closure10, Y._selectorPseudoIsSuperselector__closure0, Y._selectorPseudoIsSuperselector___closure1, Y._selectorPseudoIsSuperselector___closure2, Y._selectorPseudoIsSuperselector_closure11, Y._selectorPseudoIsSuperselector_closure12, Y._selectorPseudosNamed_closure0, Y.closure114, N.IDSelector_unify_closure0, V.IfRule_toString_closure0, V.IfClause$__closure0, V.IfClause$___closure0, F.NodeImporter__tryPath_closure, R.ImportCache_canonicalize_closure0, R.ImportCache__canonicalize_closure0, R.ImportCache_importCanonical_closure0, R.ImportCache_humanize_closure2, R.ImportCache_humanize_closure3, R.ImportCache_humanize_closure4, X.Interpolation_toString_closure0, F._realCasePath_helper0, F._realCasePath_helper_closure0, F._realCasePath_helper__closure0, E.KeyframeSelectorParser_parse_closure0, D.ListExpression_toString_closure0, D.closure158, D.closure157, D.closure156, D.closure155, D.closure154, D.closure153, D._closure20, D._closure21, D._closure22, D.closure152, D.closure150, D.closure151, D.SelectorList_isInvisible_closure0, D.SelectorList_asSassList_closure0, D.SelectorList_asSassList__closure0, D.SelectorList_unify_closure0, D.SelectorList_unify__closure0, D.SelectorList_unify___closure0, D.SelectorList_resolveParentSelectors_closure0, D.SelectorList_resolveParentSelectors__closure1, D.SelectorList_resolveParentSelectors__closure2, D.SelectorList__complexContainsParentSelector_closure0, D.SelectorList__complexContainsParentSelector__closure0, D.SelectorList__resolveParentSelectorsCompound_closure2, D.SelectorList__resolveParentSelectorsCompound_closure3, D.SelectorList__resolveParentSelectorsCompound_closure4, D.closure246, D._closure33, D.closure247, D.closure248, D.closure249, D.closure250, D.closure251, D.closure252, D.SassList_isBlank_closure0, A.MapExpression_toString_closure0, A.closure149, A.closure212, A._closure27, A.closure213, A._closure26, A.closure147, A.closure148, A._closure19, A.closure211, A.closure210, A._closure25, A.closure145, A.closure146, A.closure144, A.closure143, A.closure142, A._modify__modifyNestedMap0, A._deepMergeImpl__ensureMutable0, A._deepMergeImpl_closure0, A.closure239, A._closure31, A._closure32, A.closure240, A.closure241, A.closure242, A.closure243, A.closure244, A.closure245, A.SassMap_asList_closure0, K.closure140, K.closure205, K.closure139, K.closure138, K.closure137, K.closure141, K.closure203, K._closure24, K.closure202, K.closure201, K.closure199, K.closure209, K.closure208, K.closure207, K.closure206, K.closure204, K.closure200, K.closure198, K.closure133, K.closure132, K.closure134, K.closure136, K.closure135, K._numberFunction_closure0, F.MediaQueryParser_parse_closure0, Q.closure223, Q.closure224, Q.closure225, Q.closure226, B._readFile_closure0, B.fileExists_closure0, B.dirExists_closure0, B.listDir_closure0, B.listDir__closure1, B.listDir__closure2, B.listDir_closure_list0, B.listDir__list_closure0, B._render_closure, B._render_closure0, B._render_closure1, B._parseFunctions_closure, B._parseFunctions__closure, B._parseFunctions___closure0, B._parseFunctions____closure, B._parseFunctions___closure1, B._parseFunctions__closure0, B._parseFunctions__closure1, B._parseFunctions___closure, B._parseImporter_closure, B._parseImporter__closure, B._parseImporter___closure, B._parseImporter____closure, B._parseImporter___closure0, O.closure238, O._closure29, O._closure30, T.closure232, T.closure233, T.closure234, T.closure235, T.closure236, T.closure237, T._parseNumber_closure, T._parseNumber_closure0, T.SassNumber__coerceOrConvertValue__compatibilityException0, T.SassNumber__coerceOrConvertValue_closure3, T.SassNumber__coerceOrConvertValue_closure4, T.SassNumber__coerceOrConvertValue_closure5, T.SassNumber__coerceOrConvertValue_closure6, T.SassNumber_plus_closure0, T.SassNumber_minus_closure0, T.SassNumber_multiplyUnits_closure3, T.SassNumber_multiplyUnits_closure4, T.SassNumber_multiplyUnits_closure5, T.SassNumber_multiplyUnits_closure6, T.SassNumber__areAnyConvertible_closure0, T.SassNumber__canonicalizeUnitList_closure0, T.SassNumber__canonicalMultiplier_closure0, M.ParentStatement_closure0, M.ParentStatement__closure0, G.Parser__parseIdentifier_closure0, G.Parser_scanIdentChar_matches0, F._PrefixedKeys_iterator_closure0, U.main_printError, U.main_closure, U.SassParser_children_closure0, R._wrapMain_closure, R._wrapMain_closure0, T.closure128, T._closure16, T._closure17, T.closure127, T._closure14, T._closure15, T.__closure0, T.closure126, T.closure125, T.closure124, T.closure131, T.closure130, T._closure18, T.closure129, T.SelectorParser_parse_closure0, T.SelectorParser_parseCompoundSelector_closure0, N.serialize_closure0, N._SerializeVisitor_visitCssComment_closure0, N._SerializeVisitor_visitCssAtRule_closure0, N._SerializeVisitor_visitCssMediaRule_closure0, N._SerializeVisitor_visitCssImport_closure0, N._SerializeVisitor_visitCssImport__closure0, N._SerializeVisitor_visitCssKeyframeBlock_closure0, N._SerializeVisitor_visitCssStyleRule_closure0, N._SerializeVisitor_visitCssSupportsRule_closure0, N._SerializeVisitor_visitCssDeclaration_closure1, N._SerializeVisitor_visitCssDeclaration_closure2, N._SerializeVisitor_visitList_closure2, N._SerializeVisitor_visitList_closure3, N._SerializeVisitor_visitList_closure4, N._SerializeVisitor_visitMap_closure0, N._SerializeVisitor_visitSelectorList_closure0, N._SerializeVisitor__write_closure0, N._SerializeVisitor__visitChildren_closure0, L.SingleUnitSassNumber_multiplyUnits_closure1, L.SingleUnitSassNumber_multiplyUnits_closure2, D.SourceMapBuffer__addEntry_closure0, D.SourceMapBuffer_buildSourceMap_closure0, D.closure123, D.closure122, D.closure118, D.closure117, D.closure116, D.closure115, D.closure121, D.closure120, D.closure119, D.closure228, D.closure229, D.closure230, D.closure231, V.StylesheetParser_parse_closure0, V.StylesheetParser_parse__closure1, V.StylesheetParser_parse__closure2, V.StylesheetParser_parseArgumentDeclaration_closure0, V.StylesheetParser__parseSingleProduction_closure0, V.StylesheetParser_parseSignature_closure, V.StylesheetParser__statement_closure0, V.StylesheetParser_variableDeclarationWithoutNamespace_closure1, V.StylesheetParser_variableDeclarationWithoutNamespace_closure2, V.StylesheetParser__declarationOrBuffer_closure1, V.StylesheetParser__declarationOrBuffer_closure2, V.StylesheetParser__styleRule_closure0, V.StylesheetParser__propertyOrVariableDeclaration_closure1, V.StylesheetParser__propertyOrVariableDeclaration_closure2, V.StylesheetParser__atRootRule_closure1, V.StylesheetParser__atRootRule_closure2, V.StylesheetParser__eachRule_closure0, V.StylesheetParser__functionRule_closure0, V.StylesheetParser__forRule_closure1, V.StylesheetParser__forRule_closure2, V.StylesheetParser__memberList_closure0, V.StylesheetParser__includeRule_closure0, V.StylesheetParser_mediaRule_closure0, V.StylesheetParser__mixinRule_closure0, V.StylesheetParser_mozDocumentRule_closure0, V.StylesheetParser_supportsRule_closure0, V.StylesheetParser__whileRule_closure0, V.StylesheetParser_unknownAtRule_closure0, V.StylesheetParser_expression_resetState0, V.StylesheetParser_expression_resolveOneOperation0, V.StylesheetParser_expression_resolveOperations0, V.StylesheetParser_expression_addSingleExpression0, V.StylesheetParser_expression_addOperator0, V.StylesheetParser_expression_resolveSpaceExpressions0, V.StylesheetParser__expressionUntilComma_closure0, V.StylesheetParser__unicodeRange_closure1, V.StylesheetParser__unicodeRange_closure2, V.StylesheetParser_identifierLike_closure0, V.StylesheetParser__expressionUntilComparison_closure0, V.StylesheetParser__publicIdentifier_closure0, R._UnprefixedKeys_iterator_closure1, R._UnprefixedKeys_iterator_closure2, B.resolveImportPath_closure1, B.resolveImportPath_closure2, B._tryPathAsDirectory_closure0, B._exactlyOne_closure0, B.forwardToString_closure, B.createClass_closure, B.indent_closure0, B.flattenVertically_closure1, B.flattenVertically_closure2, B.longestCommonSubsequence_closure2, B.longestCommonSubsequence_closure3, B.longestCommonSubsequence_closure4, B.longestCommonSubsequence_backtrack0, B.mapAddAll2_closure0, N.withWarnCallback_closure0]);
    _inherit(H.CastList, H._CastListBase);
    _inheritMany(P.Error, [H.LateInitializationErrorImpl, P.TypeError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.RuntimeError, H._Error, P.JsonUnsupportedObjectError, P.AssertionError, P.NullThrownError, P.ArgumentError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError]);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inherit(H.UnmodifiableListBase, P.ListBase);
    _inheritMany(H.UnmodifiableListBase, [H.CodeUnits, P.UnmodifiableListView]);
    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.EmptyIterable, H.LinkedHashMapKeyIterable, P._HashMapKeyIterable, P._MapBaseValueIterable]);
    _inheritMany(H.ListIterable, [H.SubListIterable, H.MappedListIterable, H.ReversedListIterable, P.ListQueue, P._GeneratorIterable]);
    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);
    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.SkipIterator, H.SkipWhileIterator]);
    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);
    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);
    _inherit(H.EfficientLengthFollowedByIterable, H.FollowedByIterable);
    _inheritMany(P.MapView, [P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, K.PathMap]);
    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(H.ConstantMapView, P.UnmodifiableMapView);
    _inherit(H.ConstantStringMap, H.ConstantMap);
    _inherit(H.ConstantProtoMap, H.ConstantStringMap);
    _inherit(H.Instantiation1, H.Instantiation);
    _inherit(H.NullError, P.TypeError);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inherit(P.MapBase, P.MapMixin);
    _inheritMany(P.MapBase, [H.JsLinkedHashMap, P._HashMap, P.UnmodifiableMapBase, Z.MergedMapView, Z.MergedMapView0]);
    _inheritMany(P.IterableBase, [H._AllMatchesIterable, P._SyncStarIterable, O.EmptyUnmodifiableSet, F._PrefixedKeys, R._UnprefixedKeys, F._PrefixedKeys0, R._UnprefixedKeys0]);
    _inherit(H.NativeTypedArray, H.NativeTypedData);
    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(H.NativeTypedArrayOfDouble, [H.NativeFloat32List, H.NativeFloat64List]);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);
    _inherit(H._TypeError, H._Error);
    _inheritMany(P.Stream, [P._StreamImpl, P._ForwardingStream, Y._CompleterStream]);
    _inherit(P._ControllerStream, P._StreamImpl);
    _inherit(P._BroadcastStream, P._ControllerStream);
    _inheritMany(P._BufferingStreamSubscription, [P._ControllerSubscription, P._ForwardingStreamSubscription]);
    _inherit(P._BroadcastSubscription, P._ControllerSubscription);
    _inherit(P._SyncBroadcastStreamController, P._BroadcastStreamController);
    _inherit(P._AsyncCompleter, P._Completer);
    _inheritMany(P._StreamController, [P._AsyncStreamController, P._SyncStreamController]);
    _inherit(P._StreamControllerAddStreamState, P._AddStreamState);
    _inheritMany(P._DelayedEvent, [P._DelayedData, P._DelayedError]);
    _inherit(P._StreamImplEvents, P._PendingEvents);
    _inherit(P._ExpandStream, P._ForwardingStream);
    _inheritMany(P._Zone, [P._CustomZone, P._RootZone]);
    _inheritMany(H.JsLinkedHashMap, [P._LinkedIdentityHashMap, P._LinkedCustomHashMap]);
    _inheritMany(P._SetBase, [P._LinkedHashSet, P._UnmodifiableSet]);
    _inherit(P._LinkedIdentityHashSet, P._LinkedHashSet);
    _inheritMany(P.Codec, [P.Encoding, P.Base64Codec, P.JsonCodec]);
    _inheritMany(P.Encoding, [P.AsciiCodec, P.Utf8Codec]);
    _inheritMany(P.StreamTransformerBase, [P.Converter, L._StreamTransformer]);
    _inheritMany(P.Converter, [P._UnicodeSubsetEncoder, P.Base64Encoder, P.JsonEncoder, P.Utf8Encoder, P.Utf8Decoder]);
    _inherit(P.AsciiEncoder, P._UnicodeSubsetEncoder);
    _inherit(P._BufferCachingBase64Encoder, P._Base64Encoder);
    _inherit(P.ByteConversionSink, P.ChunkedConversionSink);
    _inheritMany(P.ByteConversionSink, [P.ByteConversionSinkBase, P._Utf8StringSinkAdapter, P._Utf8ConversionSink]);
    _inherit(P._Base64EncoderSink, P.ByteConversionSinkBase);
    _inheritMany(P._Base64EncoderSink, [P._AsciiBase64EncoderSink, P._Utf8Base64EncoderSink]);
    _inherit(P.JsonCyclicError, P.JsonUnsupportedObjectError);
    _inherit(P._JsonStringStringifier, P._JsonStringifier);
    _inherit(P.StringConversionSinkBase, P.StringConversionSinkMixin);
    _inheritMany(P.StringConversionSinkBase, [P._StringSinkConversionSink, P._StringAdapterSink]);
    _inherit(P._StringCallbackSink, P._StringSinkConversionSink);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inherit(P._DataUri, P._Uri);
    _inherit(Z.ArgParserException, P.FormatException);
    _inherit(Q.QueueList, Q._QueueList_Object_ListMixin);
    _inherit(Q._CastQueueList, Q.QueueList);
    _inheritMany(M._DelegatingIterableBase, [M.DelegatingIterable, M._MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin]);
    _inherit(M.DelegatingSet, M.DelegatingIterable);
    _inherit(L._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin, M.DelegatingSet);
    _inherit(L.UnmodifiableSetView, L._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin);
    _inherit(M.MapKeySet, M._MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin);
    _inheritMany(X.NodeJsError, [X.JsAssertionError, X.JsRangeError, X.JsReferenceError, X.JsSyntaxError, X.JsTypeError, X.JsSystemError]);
    _inheritMany(Y.Socket, [N.TTYReadStream, N.TTYWriteStream]);
    _inherit(B.InternalStyle, O.Style);
    _inheritMany(B.InternalStyle, [E.PosixStyle, F.UrlStyle, L.WindowsStyle]);
    _inherit(B.CssNode, B.AstNode);
    _inheritMany(B.CssNode, [B.ModifiableCssNode, B.CssParentNode]);
    _inheritMany(B.ModifiableCssNode, [B.ModifiableCssParentNode, R.ModifiableCssComment, L.ModifiableCssDeclaration, F.ModifiableCssImport]);
    _inheritMany(B.ModifiableCssParentNode, [U.ModifiableCssAtRule, U.ModifiableCssKeyframeBlock, G.ModifiableCssMediaRule, X.ModifiableCssStyleRule, V.ModifiableCssStylesheet, B.ModifiableCssSupportsRule]);
    _inherit(V.CssStylesheet, B.CssParentNode);
    _inheritMany(M.ParentStatement, [V.AtRootRule, U.AtRule, M.CallableDeclaration, L.Declaration, V.EachRule, B.ForRule, G.MediaRule, X.StyleRule, V.Stylesheet, B.SupportsRule, G.WhileRule]);
    _inheritMany(M.CallableDeclaration, [Y.ContentBlock, M.FunctionRule, T.MixinRule]);
    _inheritMany(T.Selector, [M.SimpleSelector, S.ComplexSelector, X.CompoundSelector, D.SelectorList]);
    _inheritMany(M.SimpleSelector, [N.AttributeSelector, X.ClassSelector, N.IDSelector, M.ParentSelector, N.PlaceholderSelector, D.PseudoSelector, F.TypeSelector, N.UniversalSelector]);
    _inheritMany(G.SourceSpanException, [E.SassException, G.SourceSpanFormatException, E.SassException0]);
    _inheritMany(E.SassException, [E.MultiSpanSassException, E.SassRuntimeException, E.SassFormatException]);
    _inherit(E.MultiSpanSassRuntimeException, E.MultiSpanSassException);
    _inherit(E.MultiSpanSassScriptException, E.SassScriptException);
    _inherit(A.MergedExtension, S.Extension);
    _inherit(M.Importer, B.AsyncImporter);
    _inherit(F.FilesystemImporter, M.Importer);
    _inheritMany(G.Parser, [V.AtRootQueryParser, V.StylesheetParser, E.KeyframeSelectorParser, F.MediaQueryParser, T.SelectorParser]);
    _inheritMany(V.StylesheetParser, [L.ScssParser, U.SassParser]);
    _inherit(Q.CssParser, L.ScssParser);
    _inheritMany(P.UnmodifiableMapBase, [K.LimitedMapView, F.PrefixedMapView, U.PublicMemberMapView, R.UnprefixedMapView, K.LimitedMapView0, F.PrefixedMapView0, U.PublicMemberMapView0, R.UnprefixedMapView0]);
    _inheritMany(F.Value, [D.SassList, Z.SassBoolean, K.SassColor, F.SassFunction, A.SassMap, O.SassNull, T.SassNumber, D.SassString]);
    _inherit(D.SassArgumentList, D.SassList);
    _inheritMany(T.SassNumber, [S.ComplexSassNumber, L.SingleUnitSassNumber, N.UnitlessSassNumber]);
    _inherit(F._FindDependenciesVisitor, D.RecursiveStatementVisitor);
    _inherit(T.SingleMapping, T.Mapping);
    _inherit(Y.FileLocation, D.SourceLocationMixin);
    _inheritMany(Y.SourceSpanMixin, [Y._FileSpan, V.SourceSpanBase]);
    _inherit(X.SourceSpanWithContext, V.SourceSpanBase);
    _inherit(E.StringScannerException, G.SourceSpanFormatException);
    _inheritMany(X.StringScanner, [Z.LineScanner, S.SpanScanner]);
    _inheritMany(F.Value0, [D.SassList0, Z.SassBoolean0, K.SassColor0, T.SassNumber0, F.SassFunction0, A.SassMap0, O.SassNull0, D.SassString0]);
    _inherit(D.SassArgumentList0, D.SassList0);
    _inheritMany(G.Parser1, [V.AtRootQueryParser0, V.StylesheetParser0, E.KeyframeSelectorParser0, F.MediaQueryParser0, T.SelectorParser0]);
    _inheritMany(M.ParentStatement0, [V.AtRootRule0, U.AtRule0, M.CallableDeclaration0, L.Declaration0, V.EachRule0, B.ForRule0, G.MediaRule0, X.StyleRule0, V.Stylesheet0, B.SupportsRule0, G.WhileRule0]);
    _inherit(B.CssNode0, B.AstNode0);
    _inheritMany(B.CssNode0, [B.ModifiableCssNode0, B.CssParentNode0]);
    _inheritMany(B.ModifiableCssNode0, [B.ModifiableCssParentNode0, R.ModifiableCssComment0, L.ModifiableCssDeclaration0, F.ModifiableCssImport0]);
    _inheritMany(B.ModifiableCssParentNode0, [U.ModifiableCssAtRule0, U.ModifiableCssKeyframeBlock0, G.ModifiableCssMediaRule0, X.ModifiableCssStyleRule0, V.ModifiableCssStylesheet0, B.ModifiableCssSupportsRule0]);
    _inheritMany(T.Selector0, [M.SimpleSelector0, S.ComplexSelector0, X.CompoundSelector0, D.SelectorList0]);
    _inheritMany(M.SimpleSelector0, [N.AttributeSelector0, X.ClassSelector0, N.IDSelector0, M.ParentSelector0, N.PlaceholderSelector0, D.PseudoSelector0, F.TypeSelector0, N.UniversalSelector0]);
    _inheritMany(T.SassNumber0, [S.ComplexSassNumber0, L.SingleUnitSassNumber0, N.UnitlessSassNumber0]);
    _inheritMany(M.CallableDeclaration0, [Y.ContentBlock0, M.FunctionRule0, T.MixinRule0]);
    _inheritMany(V.StylesheetParser0, [L.ScssParser0, U.SassParser0]);
    _inherit(Q.CssParser0, L.ScssParser0);
    _inheritMany(E.SassException0, [E.MultiSpanSassException0, E.SassRuntimeException0, E.SassFormatException0]);
    _inherit(E.MultiSpanSassRuntimeException0, E.MultiSpanSassException0);
    _inherit(E.MultiSpanSassScriptException0, E.SassScriptException0);
    _inherit(M.Importer0, B.AsyncImporter0);
    _inherit(F.FilesystemImporter0, M.Importer0);
    _inherit(A.MergedExtension0, S.Extension0);
    _inherit(V.CssStylesheet0, B.CssParentNode0);
    _mixin(H.UnmodifiableListBase, H.UnmodifiableListMixin);
    _mixin(H.__CastListBase__CastIterableBase_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._AsyncStreamController, P._AsyncStreamControllerDispatch);
    _mixin(P._SyncStreamController, P._SyncStreamControllerDispatch);
    _mixin(P.UnmodifiableMapBase, P._UnmodifiableMapMixin);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);
    _mixin(Q._QueueList_Object_ListMixin, P.ListMixin);
    _mixin(L._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin, L.UnmodifiableSetMixin);
    _mixin(M._MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin, L.UnmodifiableSetMixin);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    getTypeFromName: getGlobalFromName,
    metadata: [],
    types: ["Null()", "~()", "Future<Null>*()", "Value0*(List<Value0*>*)", "String*(String*)", "Value*(List<Value*>*)", "bool*(String*)", "bool*(CssNode*)", "bool*(CssNode0*)", "SassNumber*(List<Value*>*)", "SassNumber0*(List<Value0*>*)", "int*()", "String*()", "Value*()", "bool*(ComplexSelector0*)", "bool*(ComplexSelector*)", "SassString*(List<Value*>*)", "SassString0*(List<Value0*>*)", "bool*(SimpleSelector*)", "bool*(SimpleSelector0*)", "SassBoolean0*(List<Value0*>*)", "Value0*()", "SassBoolean*(List<Value*>*)", "bool*(Object*)", "bool*(int*)", "SassColor*(List<Value*>*)", "bool(Object?)", "SassList0*(List<Value0*>*)", "SassList*(List<Value*>*)", "SassColor0*(List<Value0*>*)", "Future<Value*>*()", "Future<Value0*>*()", "Future<Null>*(Future<~>*()*)", "FileSpan*()", "Null(~()*)", "bool*()", "SassMap*(List<Value*>*)", "SassMap0*(List<Value0*>*)", "bool*(num*,num*)", "int*(num*)", "List<String*>*()", "String*(Object*)", "SelectorList*()", "@(@)", "SelectorList0*()", "Null(Value0*,Value0*)", "Null(Value*,Value*)", "ValueExpression*(Value*)", "ValueExpression0*(Value0*)", "~(Object*)", "num*(num*,num*)", "bool*(PseudoSelector*)", "Statement0*()", "bool*(Value*)", "Frame*(String*)", "bool*(Value0*)", "~(Object,StackTrace)", "Statement*()", "bool*(PseudoSelector0*)", "Stylesheet*()", "Frame*()", "Value*(Statement*)", "ComplexSelector*(List<ComplexSelectorComponent*>*)", "~(Object?)", "Value*(Value*)", "Null([Object*])", "@()", "Declaration*(List<Statement*>*,FileSpan*)", "~(Value*)", "Declaration0*(List<Statement0*>*,FileSpan*)", "Object*()", "ComplexSelector0*(List<ComplexSelectorComponent0*>*)", "~(String*,bool*)", "Value0*(Statement0*)", "Value0*(Value0*)", "Null(_NodeSassColor*,num*)", "Null(String*,Value0*)", "Future<Value0*>*(Statement0*)", "~(Value0*)", "Future<String*>*(@)", "Null(String*,Value*)", "Future<Value*>*(Statement*)", "Null(Module0<Callable0*>*)", "ComplexSelector*(ComplexSelector*)", "String*(int*)", "Map<ComplexSelector0*,Extension0*>*()", "Map<ComplexSelector*,Extension*>*()", "Null(Value0*)", "Iterable<String*>*(Module<AsyncCallable*>*)", "Iterable<ComplexSelector*>*(ComplexSelector*)", "Callable0*()", "bool*(ComplexSelectorComponent*)", "Iterable<String*>*(Module0<Callable0*>*)", "bool*(ComplexSelectorComponent0*)", "bool*(Module<AsyncCallable*>*)", "int*(_NodeSassColor*)", "Null([@])", "List<ComplexSelectorComponent*>*(List<ComplexSelectorComponent*>*)", "Null(List<Value0*>*)", "ComplexSelector0*(ComplexSelector0*)", "List<CssMediaQuery0*>*()", "Null(Module0<AsyncCallable0*>*)", "bool*(Module0<Callable0*>*)", "Null(List<Value*>*)", "Null(@,@)", "AsyncCallable*()", "~(~())", "String*(@)", "AsyncCallable0*()", "Tuple3<Importer*,Uri*,Uri*>*()", "Null(@)", "bool*(Module0<AsyncCallable0*>*)", "Iterable<String*>*(Module0<AsyncCallable0*>*)", "AtRootQuery*()", "List<CssMediaQuery*>*()", "bool*(_Highlight*)", "Null(Value*)", "Null(Module<Callable*>*)", "Callable*()", "Iterable<String*>*(Module<Callable*>*)", "Iterable<ComplexSelector0*>*(ComplexSelector0*)", "Null(Module<AsyncCallable*>*)", "bool*(Module<Callable*>*)", "List<ComplexSelectorComponent0*>*(List<ComplexSelectorComponent0*>*)", "SourceFile*()", "AtRootQuery0*()", "Future<Null>*(List<Value*>*)", "Module<Callable*>*(Module<Callable*>*)", "Callable*(Module<Callable*>*)", "Null([@])*()", "Iterable<ComplexSelectorComponent*>*(List<List<ComplexSelectorComponent*>*>*)", "bool*(Queue<@>*)", "Frame*(Tuple2<String*,AstNode0*>*)", "Null(@,StackTrace*)", "bool*(Import0*)", "bool*(Statement0*)", "Null(String*,ConfiguredValue0*)", "Map<String*,Callable*>*(Module<Callable*>*)", "Future<SassNumber0*>*()", "Future<@>*()", "Module<AsyncCallable*>*(Module<AsyncCallable*>*)", "num*(String*,num*{assertPercent:bool*,checkPercent:bool*})", "num*(num*,num*,num*)", "int*(int*,num*)", "Iterable<ComplexSelectorComponent0*>*(List<List<ComplexSelectorComponent0*>*>*)", "AsyncCallable*(Module<AsyncCallable*>*)", "bool*(ModifiableCssParentNode0*)", "String*(_NodeSassNumber*)", "bool(Object?,Object?)", "int(Object?)", "List<Extender0*>*()", "bool*(@)", "~(Module0<AsyncCallable0*>*)", "List<Extension0*>*()", "~([Future<~>?])", "num*(num*)", "Future<Value0*>*(List<Value0*>*)", "SelectorList*(Value*)", "SelectorList*(SelectorList*,SelectorList*)", "Map<String*,AsyncCallable*>*(Module<AsyncCallable*>*)", "AtRule0*(List<Statement0*>*,FileSpan*)", "Uri*()", "SassFunction0*(List<Value0*>*)", "List<Extension*>*()", "Null(_NodeSassMap*,int*,Object*)", "~(Module<AsyncCallable*>*)", "AsyncCallable0*(Module0<AsyncCallable0*>*)", "int(@,@)", "Module0<AsyncCallable0*>*(Module0<AsyncCallable0*>*)", "Iterable<String*>*()", "Iterable<String*>*(String*)", "Iterable<String*>*(@)", "DateTime*()", "~(String*[~])", "SassNumber0*()", "Uri*/*()", "Future<Null>*(List<Value0*>*)", "Object*(_NodeSassMap*,int*)", "Null(Object?,Object?)", "bool*(Frame*)", "Trace*()", "~(Uint8List,String,int)", "bool*(Statement*)", "String*(Frame*)", "int*(Frame*)", "Trace*(String*)", "~(Module0<Callable0*>*)", "VariableDeclaration*()", "SassNull0*(int*)", "String*(_NodeSassString*)", "bool*(Import*)", "SassNumber*()", "AtRootRule*(List<Statement*>*,FileSpan*)", "~(Module<Callable*>*)", "Map<String*,Callable0*>*(Module0<Callable0*>*)", "Frame*(Tuple2<String*,AstNode*>*)", "Callable0*(Module0<Callable0*>*)", "Module0<Callable0*>*(Module0<Callable0*>*)", "String(String)", "AtRule*(List<Statement*>*,FileSpan*)", "Null(String*,ConfiguredValue*)", "AtRootRule0*(List<Statement0*>*,FileSpan*)", "Future<SassNumber*>*()", "SelectorList0*(SelectorList0*,SelectorList0*)", "SelectorList0*(Value0*)", "bool*(ModifiableCssParentNode*)", "Object*(@)", "Entry*(Entry*)", "List<int*>*(int*)", "String(int)", "List<Extender*>*()", "num*(num*,String*)", "SassFunction*(List<Value*>*)", "~(@)", "Stylesheet0*()", "Map<String*,AsyncCallable0*>*(Module0<AsyncCallable0*>*)", "Future<EvaluateResult*>*()", "Future<Value*>*(List<Value*>*)", "~(String,int)", "SassScriptException*()", "~(String[@])", "Null(Uri*,StylesheetNode*)", "DateTime*(StylesheetNode*)", "int(int,int)", "Future<Value*>*(Value*)", "~(BinaryOperator*)", "~(Expression*{number:bool*})", "WhileRule*(List<Statement*>*,FileSpan*)", "SupportsRule*(List<Statement*>*,FileSpan*)", "MixinRule*(List<Statement*>*,FileSpan*)", "Future<Value*>*(Expression*)", "MediaRule*(List<Statement*>*,FileSpan*)", "Uint8List(int)", "ContentBlock*(List<Statement*>*,FileSpan*)", "ForRule*(List<Statement*>*,FileSpan*)", "FunctionRule*(List<Statement*>*,FileSpan*)", "EachRule*(List<Statement*>*,FileSpan*)", "EvaluateResult*()", "Uint8List(@,@)", "SassString*(SimpleSelector*)", "StyleRule*(List<Statement*>*,FileSpan*)", "Null(Symbol0,@)", "Value*(Expression*)", "~(CssMediaQuery*)", "UseRule*()", "SourceFile*(int*)", "String*(SourceFile*)", "@(String*,@)", "FileSpan*(int*[int*])", "int*(_Line*)", "ArgumentDeclaration*()", "Uri*(_Line*)", "int*(_Highlight*,_Highlight*)", "List<_Line*>*(List<_Highlight*>*)", "SourceSpanWithContext*()", "String*(String*{color:@})", "VariableDeclaration*(VariableDeclaration*)", "List<Frame*>*(Trace*)", "int*(Trace*)", "NumberExpression*()", "String*(Trace*)", "Expression*({bracketList:bool*,singleEquals:bool*,until:bool*()*})", "Statement*({root:bool*})", "Frame*(String*,String*)", "CompoundSelector*()", "bool*(Option*)", "Set<0^>()<Object?>", "Frame*(Frame*)", "Future<~>*()", "String*(Argument0*)", "String*(BuiltInCallable*)", "~(String*)", "List<Module0<AsyncCallable0*>*>*(int*)", "Value0*(Module0<AsyncCallable0*>*)", "Set<0^>()<Object?>", "Null(String*)", "Map<String*,Value0*>*(Module0<AsyncCallable0*>*)", "Map<String*,AstNode0*>*(Module0<AsyncCallable0*>*)", "Set<0^>()<Object?>", "Uri*(Tuple3<Importer*,Uri*,Uri*>*)", "Null(String*,Option*)", "bool*(Tuple3<Importer*,Uri*,Uri*>*)", "bool(@)", "~(@,StackTrace)", "SassNumber*(Value*)", "Future<@>()", "SassMap*(SassMap*[Value*])", "Future<EvaluateResult0*>*()", "SassMap*(Value*)", "~(Object[StackTrace?])", "bool*(List<Value*>*)", "List<Value*>*(Value*)", "String*(Value*)", "Null(~())", "Future<Value0*>*(Value0*)", "_Future<@>(@)", "~(@[StackTrace*])", "Null(Object,StackTrace)", "~([Object?])", "@(String)", "StackTrace()", "Object()", "bool*(Future<~>*)", "Future<Value0*>*(Expression0*)", "Iterable<ComplexSelectorComponent*>*(Iterable<ComplexSelectorComponent*>*)", "List<ComplexSelectorComponent*>*(List<Iterable<ComplexSelectorComponent*>*>*)", "bool*(List<Iterable<ComplexSelectorComponent*>*>*)", "Future<Tuple3<AsyncImporter0*,Uri*,Uri*>*>*()", "Future<Stylesheet0*>*()", "bool*(Tuple3<AsyncImporter0*,Uri*,Uri*>*)", "Uri*(Tuple3<AsyncImporter0*,Uri*,Uri*>*)", "bool*(Queue<List<ComplexSelectorComponent*>*>*)", "List<ComplexSelectorComponent*>*(List<ComplexSelectorComponent*>*,List<ComplexSelectorComponent*>*)", "Null(String,@)", "Null(SimpleSelector*,Set<ModifiableCssValue<SelectorList*>*>*)", "@(@,String)", "Null(Function*,Function*)", "PseudoSelector*(ComplexSelector*)", "String*(Value0*)", "Object*(Value0*)", "List<ComplexSelector*>*(ComplexSelector*)", "num*(_NodeSassColor*)", "List<Extension*>*(PseudoSelector*)", "String*(_NodeSassColor*)", "List<Extension*>*(SimpleSelector*)", "String*(BuiltInCallable0*)", "List<ComplexSelector*>*(List<ComplexSelector*>*)", "List<Module0<Callable0*>*>*(int*)", "Value0*(Module0<Callable0*>*)", "bool*(List<ComplexSelector*>*)", "List<SimpleSelector*>*(Extension*)", "Map<String*,Value0*>*(Module0<Callable0*>*)", "Map<String*,AstNode0*>*(Module0<Callable0*>*)", "List<ComplexSelector*>*(List<Extension*>*)", "ComplexSelector*(Extension*)", "List<ComplexSelectorComponent*>*(ComplexSelector*)", "Iterable<ComplexSelector*>*(List<ComplexSelector*>*)", "EvaluateResult0*()", "List<ComplexSelector*>*(ComplexSelectorComponent*)", "Extension*()", "Null(ComplexSelector*,Extension*)", "Null(SimpleSelector*,Map<ComplexSelector*,Extension*>*)", "Value0*(Expression0*)", "bool*(Extension0*)", "Set<ModifiableCssValue0<SelectorList0*>*>*()", "Set<ModifiableCssValue<SelectorList*>*>*()", "bool*(Extension*)", "Null(SimpleSelector0*,Map<ComplexSelector0*,Extension0*>*)", "Null(ComplexSelector0*,Extension0*)", "Extension0*()", "WatchEvent*(String*)", "List<ComplexSelector0*>*(ComplexSelectorComponent0*)", "Iterable<ComplexSelector0*>*(List<ComplexSelector0*>*)", "List<ComplexSelectorComponent0*>*(ComplexSelector0*)", "Iterable<WatchEvent*>*(List<WatchEvent*>*)", "ComplexSelector0*(Extension0*)", "List<ComplexSelector0*>*(List<Extension0*>*)", "List<SimpleSelector0*>*(Extension0*)", "bool*(List<ComplexSelector0*>*)", "List<ComplexSelector0*>*(List<ComplexSelector0*>*)", "List<Extension0*>*(SimpleSelector0*)", "List<Extension0*>*(PseudoSelector0*)", "List<ComplexSelector0*>*(ComplexSelector0*)", "PseudoSelector0*(ComplexSelector0*)", "Null(SimpleSelector0*,Set<ModifiableCssValue0<SelectorList0*>*>*)", "Future<~>*(String*)", "List<ComplexSelectorComponent0*>*(List<ComplexSelectorComponent0*>*,List<ComplexSelectorComponent0*>*)", "bool*(Queue<List<ComplexSelectorComponent0*>*>*)", "ArgParser*()", "bool*(List<Iterable<ComplexSelectorComponent0*>*>*)", "List<ComplexSelectorComponent0*>*(List<Iterable<ComplexSelectorComponent0*>*>*)", "Iterable<ComplexSelectorComponent0*>*(Iterable<ComplexSelectorComponent0*>*)", "bool*(String*,String*)", "String*(IfClause0*)", "Map<String*,AstNode*>*(Module<Callable*>*)", "Map<String*,Value*>*(Module<Callable*>*)", "Tuple3<Importer0*,Uri*,Uri*>*()", "Value*(Module<Callable*>*)", "bool*(Tuple3<Importer0*,Uri*,Uri*>*)", "Uri*(Tuple3<Importer0*,Uri*,Uri*>*)", "String*(Expression0*)", "int*(String*)", "List<Value0*>*(Value0*)", "bool*(List<Value0*>*)", "SassList0*(ComplexSelector0*)", "SassString0*(ComplexSelectorComponent0*)", "List<Module<Callable*>*>*(int*)", "Uri*(Tuple3<AsyncImporter*,Uri*,Uri*>*)", "SimpleSelector0*(SimpleSelector0*)", "Null(_NodeSassList*,int*[bool*,SassList0*])", "bool*(Tuple3<AsyncImporter*,Uri*,Uri*>*)", "Object*(_NodeSassList*,int*)", "Null(_NodeSassList*,int*,Object*)", "bool*(_NodeSassList*)", "Null(_NodeSassList*,bool*)", "int*(_NodeSassList*)", "String*(_NodeSassList*)", "String*(Tuple2<Expression0*,Expression0*>*)", "SassMap0*(Value0*)", "SassMap0*(SassMap0*[Value0*])", "Null(_NodeSassMap*,int*[SassMap0*])", "SassNumber0*(int*)", "Future<Stylesheet*>*()", "int*(_NodeSassMap*)", "Future<Tuple3<AsyncImporter*,Uri*,Uri*>*>*()", "String*(_NodeSassMap*)", "SassNumber0*(Value0*)", "Null(RenderResult*)", "Null(Object*,StackTrace*)", "Null(Object*,Object*)", "Map<String*,AstNode*>*(Module<AsyncCallable*>*)", "~([Object*])", "JSFunction0*(JSFunction0*)", "Object*(Object*,String*,String*[Object*])", "Null(Object*)", "Null(_NodeSassNumber*,num*[String*,SassNumber0*])", "num*(_NodeSassNumber*)", "Null(_NodeSassNumber*,num*)", "Map<String*,Value*>*(Module<AsyncCallable*>*)", "Null(_NodeSassNumber*,String*)", "SassScriptException0*()", "~(String*,StackTrace*)", "@(StackTrace)", "Value*(Module<AsyncCallable*>*)", "List<Module<AsyncCallable*>*>*(int*)", "SassString0*(SimpleSelector0*)", "CompoundSelector0*()", "~(CssMediaQuery0*)", "SimpleSelector*(SimpleSelector*)", "Null(_NodeSassString*,String*[SassString0*])", "SassString*(ComplexSelectorComponent*)", "Null(_NodeSassString*,String*)", "Statement0*({root:bool*})", "Null(@,StackTrace)", "NumberExpression0*()", "VariableDeclaration0*(VariableDeclaration0*)", "ArgumentDeclaration0*()", "Tuple2<String*,ArgumentDeclaration0*>*()", "VariableDeclaration0*()", "SassList*(ComplexSelector*)", "StyleRule0*(List<Statement0*>*,FileSpan*)", "@(Object)", "EachRule0*(List<Statement0*>*,FileSpan*)", "FunctionRule0*(List<Statement0*>*,FileSpan*)", "ForRule0*(List<Statement0*>*,FileSpan*)", "ContentBlock0*(List<Statement0*>*,FileSpan*)", "MediaRule0*(List<Statement0*>*,FileSpan*)", "MixinRule0*(List<Statement0*>*,FileSpan*)", "_Future<@>?()", "SupportsRule0*(List<Statement0*>*,FileSpan*)", "WhileRule0*(List<Statement0*>*,FileSpan*)", "~(Expression0*{number:bool*})", "~(BinaryOperator0*)", "Null(String*,Function*)", "String*(IfClause*)", "Null(int,@)", "~(Zone?,ZoneDelegate?,Zone,Object,StackTrace)", "0^(Zone?,ZoneDelegate?,Zone,0^())<Object?>", "0^(Zone?,ZoneDelegate?,Zone,0^(1^),1^)<Object?Object?>", "0^(Zone?,ZoneDelegate?,Zone,0^(1^,2^),1^,2^)<Object?Object?Object?>", "0^()(Zone,ZoneDelegate,Zone,0^())<Object?>", "0^(1^)(Zone,ZoneDelegate,Zone,0^(1^))<Object?Object?>", "0^(1^,2^)(Zone,ZoneDelegate,Zone,0^(1^,2^))<Object?Object?Object?>", "AsyncError?(Zone,ZoneDelegate,Zone,Object,StackTrace?)", "~(Zone?,ZoneDelegate?,Zone,~())", "Timer(Zone,ZoneDelegate,Zone,Duration,~())", "Timer(Zone,ZoneDelegate,Zone,Duration,~(Timer))", "~(Zone,ZoneDelegate,Zone,String)", "~(String)", "Zone(Zone?,ZoneDelegate?,Zone,ZoneSpecification?,Map<Object?,Object?>?)", "String*(Tuple2<Expression*,Expression*>*)", "String*(Expression*)", "0^(0^,0^)<num>", "~(Object*,StackTrace*,EventSink<0^*>*)<Object*>", "List<0^*>*(0^*,List<0^*>*)<Object*>", "~(RenderOptions*,~(Object*,RenderResult*)*)", "RenderResult*(RenderOptions*)", "Future<~>*(List<String*>*)", "String*(Argument*)", "Null(_NodeSassColor*,num*[num*,num*,num*,SassColor0*])"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: typeof Symbol == "function" && typeof Symbol() == "symbol" ? Symbol("$ti") : "$ti"
  };
  H._Universe_addRules(init.typeUniverse, JSON.parse('{"_Exports":"JavaScriptObject","Util":"JavaScriptObject","NodeJsError":"JavaScriptObject","JsAssertionError":"JavaScriptObject","JsRangeError":"JavaScriptObject","JsReferenceError":"JavaScriptObject","JsSyntaxError":"JavaScriptObject","JsTypeError":"JavaScriptObject","JsSystemError":"JavaScriptObject","JsError":"JavaScriptObject","Promise":"JavaScriptObject","Date":"JavaScriptObject","Atomics":"JavaScriptObject","Exports":"JavaScriptObject","JSFunction0":"JavaScriptObject","RenderContext":"JavaScriptObject","RenderContextOptions":"JavaScriptObject","RenderOptions":"JavaScriptObject","RenderResult":"JavaScriptObject","RenderResultStats":"JavaScriptObject","Types":"JavaScriptObject","_PropertyDescriptor0":"JavaScriptObject","ConsoleModule":"JavaScriptObject","Console":"JavaScriptObject","Modules":"JavaScriptObject","Module1":"JavaScriptObject","Process":"JavaScriptObject","EventEmitter":"JavaScriptObject","Readable":"JavaScriptObject","Writable":"JavaScriptObject","NetServer":"JavaScriptObject","FSWatcher":"JavaScriptObject","Duplex":"JavaScriptObject","ReadStream":"JavaScriptObject","WriteStream":"JavaScriptObject","Transform":"JavaScriptObject","Socket":"JavaScriptObject","TTYReadStream":"JavaScriptObject","TTYWriteStream":"JavaScriptObject","CPUUsage":"JavaScriptObject","Release":"JavaScriptObject","BufferModule":"JavaScriptObject","BufferConstants":"JavaScriptObject","Buffer":"JavaScriptObject","Immediate":"JavaScriptObject","Timeout":"JavaScriptObject","FiberClass":"JavaScriptObject","Fiber":"JavaScriptObject","_NodeSassColor":"JavaScriptObject","_NodeSassList":"JavaScriptObject","_NodeSassMap":"JavaScriptObject","_NodeSassNumber":"JavaScriptObject","_NodeSassString":"JavaScriptObject","StreamModule":"JavaScriptObject","WritableOptions":"JavaScriptObject","ReadableOptions":"JavaScriptObject","Net":"JavaScriptObject","NetAddress":"JavaScriptObject","TTY":"JavaScriptObject","FS":"JavaScriptObject","FSConstants":"JavaScriptObject","ReadStreamOptions":"JavaScriptObject","WriteStreamOptions":"JavaScriptObject","Stats":"JavaScriptObject","Chokidar":"JavaScriptObject","ChokidarOptions":"JavaScriptObject","ChokidarWatcher":"JavaScriptObject","Chokidar0":"JavaScriptObject","ChokidarOptions0":"JavaScriptObject","ChokidarWatcher0":"JavaScriptObject","NodeImporterResult0":"JavaScriptObject","Stdin":"JavaScriptObject","Stdout":"JavaScriptObject","ReadlineModule":"JavaScriptObject","ReadlineOptions":"JavaScriptObject","ReadlineInterface":"JavaScriptObject","JSFunction":"JavaScriptObject","NodeImporterResult":"JavaScriptObject","_PropertyDescriptor":"JavaScriptObject","PlainJavaScriptObject":"JavaScriptObject","UnknownJavaScriptObject":"JavaScriptObject","JavaScriptFunction":"JavaScriptObject","JSBool":{"bool":[]},"JSNull":{"Null":[]},"JavaScriptObject":{"Function":[],"JsSystemError":[],"_NodeSassColor":[],"JSFunction0":[],"NodeImporterResult0":[],"_NodeSassList":[],"_NodeSassMap":[],"_NodeSassNumber":[],"RenderOptions":[],"RenderResult":[],"_NodeSassString":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"]},"JSDouble":{"double":[],"num":[],"Comparable":["num"]},"JSString":{"String":[],"Comparable":["String"]},"_CastIterableBase":{"Iterable":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListMixin.E":"2"},"CastSet":{"Set":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"CastQueue":{"Queue":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"LateInitializationErrorImpl":{"Error":[]},"CodeUnits":{"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListIterable.E":"2","Iterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"FollowedByIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthFollowedByIterable":{"FollowedByIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"UnmodifiableListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"ConstantProtoMap":{"ConstantStringMap":["1","2"],"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"Instantiation":{"Function":[]},"Instantiation1":{"Function":[]},"NullError":{"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"NativeTypedArrayOfInt":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"NativeFloat32List":{"NativeTypedArrayOfDouble":[],"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"],"ListMixin.E":"double"},"NativeFloat64List":{"NativeTypedArrayOfDouble":[],"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"],"ListMixin.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"_Error":{"Error":[]},"_TypeError":{"Error":[]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"_BroadcastStream":{"_ControllerStream":["1"],"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_BroadcastSubscription":{"_ControllerSubscription":["1"],"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_BufferingStreamSubscription.T":"1"},"_BroadcastStreamController":{"EventSink":["1"]},"_SyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"EventSink":["1"]},"_AsyncCompleter":{"_Completer":["1"]},"_Future":{"Future":["1"]},"_StreamController":{"EventSink":["1"]},"_AsyncStreamController":{"_StreamController":["1"],"EventSink":["1"]},"_SyncStreamController":{"_StreamController":["1"],"EventSink":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_BufferingStreamSubscription.T":"1"},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_BufferingStreamSubscription.T":"1"},"_StreamImpl":{"Stream":["1"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_ForwardingStream":{"Stream":["2"]},"_ForwardingStreamSubscription":{"_BufferingStreamSubscription":["2"],"StreamSubscription":["2"],"_BufferingStreamSubscription.T":"2"},"_ExpandStream":{"_ForwardingStream":["1","2"],"Stream":["2"],"Stream.T":"2"},"AsyncError":{"Error":[]},"_ZoneSpecification":{"ZoneSpecification":[]},"_ZoneDelegate":{"ZoneDelegate":[]},"_Zone":{"Zone":[]},"_CustomZone":{"Zone":[]},"_RootZone":{"Zone":[]},"Queue":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"_HashMap":{"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedIdentityHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_LinkedCustomHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_LinkedHashSet":{"_SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_LinkedIdentityHashSet":{"_LinkedHashSet":["1"],"_SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"UnmodifiableListView":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"IterableBase":{"Iterable":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"UnmodifiableMapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"_MapBaseValueIterable":{"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"Map":["1","2"]},"ListQueue":{"ListIterable":["1"],"Queue":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"_SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_UnmodifiableSet":{"_SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"AsciiCodec":{"Codec":["String","List<int>"]},"_UnicodeSubsetEncoder":{"Converter":["String","List<int>"]},"AsciiEncoder":{"Converter":["String","List<int>"]},"Base64Codec":{"Codec":["List<int>","String"]},"Base64Encoder":{"Converter":["List<int>","String"]},"Encoding":{"Codec":["String","List<int>"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"]},"JsonEncoder":{"Converter":["Object?","String"]},"StringConversionSinkBase":{"StringConversionSink":[]},"StringConversionSinkMixin":{"StringConversionSink":[]},"_StringSinkConversionSink":{"StringConversionSink":[]},"_StringCallbackSink":{"StringConversionSink":[]},"_StringAdapterSink":{"StringConversionSink":[]},"Utf8Codec":{"Codec":["String","List<int>"]},"Utf8Encoder":{"Converter":["String","List<int>"]},"Utf8Decoder":{"Converter":["List<int>","String"]},"double":{"num":[],"Comparable":["num"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"String":{"Comparable":["String"]},"DateTime":{"Comparable":["DateTime"]},"Duration":{"Comparable":["Duration"]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"RangeError":[],"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_GeneratorIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"_StringStackTrace":{"StackTrace":[]},"Runes":{"Iterable":["int"],"Iterable.E":"int"},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"ArgParserException":{"FormatException":[],"Exception":[]},"ErrorResult":{"Result":["Null"]},"ValueResult":{"Result":["1*"]},"_CompleterStream":{"Stream":["1*"],"Stream.T":"1*"},"_NextRequest":{"_EventRequest":["1*"]},"EmptyUnmodifiableSet":{"Set":["1*"],"EfficientLengthIterable":["1*"],"Iterable":["1*"],"Iterable.E":"1*"},"QueueList":{"ListMixin":["1*"],"List":["1*"],"Queue":["1*"],"EfficientLengthIterable":["1*"],"Iterable":["1*"],"ListMixin.E":"1*","QueueList.E":"1"},"_CastQueueList":{"QueueList":["2*"],"ListMixin":["2*"],"List":["2*"],"Queue":["2*"],"EfficientLengthIterable":["2*"],"Iterable":["2*"],"ListMixin.E":"2*","QueueList.E":"2*"},"UnmodifiableSetView":{"DelegatingSet":["1*"],"Set":["1*"],"EfficientLengthIterable":["1*"],"Iterable":["1*"],"DelegatingSet.E":"1*"},"_DelegatingIterableBase":{"Iterable":["1*"]},"DelegatingIterable":{"Iterable":["1*"]},"DelegatingSet":{"Set":["1*"],"EfficientLengthIterable":["1*"],"Iterable":["1*"],"DelegatingSet.E":"1"},"MapKeySet":{"Set":["1*"],"EfficientLengthIterable":["1*"],"Iterable":["1*"]},"PathException":{"Exception":[]},"PathMap":{"Map":["String*","1*"]},"ModifiableCssAtRule":{"ModifiableCssParentNode":[],"CssAtRule":[],"ModifiableCssNode":[],"CssParentNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssComment":{"ModifiableCssNode":[],"CssComment":[],"CssNode":[],"AstNode":[]},"ModifiableCssDeclaration":{"ModifiableCssNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssImport":{"ModifiableCssNode":[],"CssImport":[],"CssNode":[],"AstNode":[]},"ModifiableCssKeyframeBlock":{"ModifiableCssParentNode":[],"ModifiableCssNode":[],"CssParentNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssMediaRule":{"ModifiableCssParentNode":[],"CssMediaRule":[],"ModifiableCssNode":[],"CssParentNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssNode":{"CssNode":[],"AstNode":[]},"ModifiableCssParentNode":{"ModifiableCssNode":[],"CssParentNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssStyleRule":{"ModifiableCssParentNode":[],"CssStyleRule":[],"ModifiableCssNode":[],"CssParentNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssStylesheet":{"ModifiableCssParentNode":[],"CssStylesheet":[],"ModifiableCssNode":[],"CssParentNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssSupportsRule":{"ModifiableCssParentNode":[],"CssSupportsRule":[],"ModifiableCssNode":[],"CssParentNode":[],"CssNode":[],"AstNode":[]},"ModifiableCssValue":{"CssValue":["1*"],"AstNode":[]},"CssNode":{"AstNode":[]},"CssParentNode":{"CssNode":[],"AstNode":[]},"CssStylesheet":{"CssParentNode":[],"CssNode":[],"AstNode":[]},"CssValue":{"AstNode":[]},"_FakeAstNode":{"AstNode":[]},"Argument":{"AstNode":[]},"ArgumentDeclaration":{"AstNode":[]},"ArgumentInvocation":{"AstNode":[]},"ConfiguredVariable":{"AstNode":[]},"BinaryOperationExpression":{"Expression":[],"AstNode":[]},"BooleanExpression":{"Expression":[],"AstNode":[]},"ColorExpression":{"Expression":[],"AstNode":[]},"FunctionExpression":{"Expression":[],"AstNode":[]},"IfExpression":{"Expression":[],"AstNode":[]},"ListExpression":{"Expression":[],"AstNode":[]},"MapExpression":{"Expression":[],"AstNode":[]},"NullExpression":{"Expression":[],"AstNode":[]},"NumberExpression":{"Expression":[],"AstNode":[]},"ParenthesizedExpression":{"Expression":[],"AstNode":[]},"SelectorExpression":{"Expression":[],"AstNode":[]},"StringExpression":{"Expression":[],"AstNode":[]},"UnaryOperationExpression":{"Expression":[],"AstNode":[]},"ValueE