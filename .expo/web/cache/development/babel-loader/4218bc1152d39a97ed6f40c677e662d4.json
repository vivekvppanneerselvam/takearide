{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = _interopRequireWildcard(require(\"react-native\"));\n\nvar _cardview = _interopRequireDefault(require(\"./cardview\"));\n\nvar _ccinput = _interopRequireDefault(require(\"./ccinput\"));\n\nvar _connecttostate = require(\"./connecttostate\");\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\src\\\\modules\\\\payment\\\\component\\\\creditcardinput.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar s = _reactNative.StyleSheet.create({\n  container: {\n    alignItems: \"center\"\n  },\n  form: {\n    marginTop: 20\n  },\n  inputContainer: {\n    marginLeft: 20\n  },\n  inputLabel: {\n    fontWeight: \"bold\"\n  },\n  input: {\n    height: 40\n  }\n});\n\nvar CVC_INPUT_WIDTH = 70;\nvar EXPIRY_INPUT_WIDTH = CVC_INPUT_WIDTH;\nvar CARD_NUMBER_INPUT_WIDTH_OFFSET = 40;\nvar CARD_NUMBER_INPUT_WIDTH = _reactNative.Dimensions.get(\"window\").width - EXPIRY_INPUT_WIDTH - CARD_NUMBER_INPUT_WIDTH_OFFSET;\nvar NAME_INPUT_WIDTH = CARD_NUMBER_INPUT_WIDTH;\nvar PREVIOUS_FIELD_OFFSET = 40;\nvar POSTAL_CODE_INPUT_WIDTH = 120;\n\nvar CreditCardInput = function (_Component) {\n  (0, _inherits2.default)(CreditCardInput, _Component);\n\n  var _super = _createSuper(CreditCardInput);\n\n  function CreditCardInput() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CreditCardInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.componentDidMount = function () {\n      return _this._focus(_this.props.focused);\n    };\n\n    _this.componentWillReceiveProps = function (newProps) {\n      if (_this.props.focused !== newProps.focused) _this._focus(newProps.focused);\n    };\n\n    _this._focus = function (field) {\n      if (!field) return;\n\n      var scrollResponder = _this.refs.Form.getScrollResponder();\n\n      var nodeHandle = _reactNative.default.findNodeHandle(_this.refs[field]);\n\n      _reactNative.NativeModules.UIManager.measureLayoutRelativeToParent(nodeHandle, function (e) {\n        throw e;\n      }, function (x) {\n        scrollResponder.scrollTo({\n          x: Math.max(x - PREVIOUS_FIELD_OFFSET, 0),\n          animated: true\n        });\n\n        _this.refs[field].focus();\n      });\n    };\n\n    _this._inputProps = function (field) {\n      var _this$props = _this.props,\n          inputStyle = _this$props.inputStyle,\n          labelStyle = _this$props.labelStyle,\n          validColor = _this$props.validColor,\n          invalidColor = _this$props.invalidColor,\n          placeholderColor = _this$props.placeholderColor,\n          placeholders = _this$props.placeholders,\n          labels = _this$props.labels,\n          values = _this$props.values,\n          status = _this$props.status,\n          onFocus = _this$props.onFocus,\n          onChange = _this$props.onChange,\n          onBecomeEmpty = _this$props.onBecomeEmpty,\n          onBecomeValid = _this$props.onBecomeValid,\n          additionalInputsProps = _this$props.additionalInputsProps;\n      return {\n        inputStyle: [s.input, inputStyle],\n        labelStyle: [s.inputLabel, labelStyle],\n        validColor: validColor,\n        invalidColor: invalidColor,\n        placeholderColor: placeholderColor,\n        ref: field,\n        field: field,\n        label: labels[field],\n        placeholder: placeholders[field],\n        value: values[field],\n        status: status[field],\n        onFocus: onFocus,\n        onChange: onChange,\n        onBecomeEmpty: onBecomeEmpty,\n        onBecomeValid: onBecomeValid,\n        additionalInputProps: additionalInputsProps[field]\n      };\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(CreditCardInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          cardImageFront = _this$props2.cardImageFront,\n          cardImageBack = _this$props2.cardImageBack,\n          inputContainerStyle = _this$props2.inputContainerStyle,\n          _this$props2$values = _this$props2.values,\n          number = _this$props2$values.number,\n          expiry = _this$props2$values.expiry,\n          cvc = _this$props2$values.cvc,\n          name = _this$props2$values.name,\n          type = _this$props2$values.type,\n          focused = _this$props2.focused,\n          allowScroll = _this$props2.allowScroll,\n          requiresName = _this$props2.requiresName,\n          requiresCVC = _this$props2.requiresCVC,\n          requiresPostalCode = _this$props2.requiresPostalCode,\n          cardScale = _this$props2.cardScale,\n          cardFontFamily = _this$props2.cardFontFamily,\n          cardBrandIcons = _this$props2.cardBrandIcons;\n      return _react.default.createElement(_reactNative.View, {\n        style: s.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_cardview.default, {\n        focused: focused,\n        brand: type,\n        scale: cardScale,\n        fontFamily: cardFontFamily,\n        imageFront: cardImageFront,\n        imageBack: cardImageBack,\n        customIcons: cardBrandIcons,\n        name: requiresName ? name : \" \",\n        number: number,\n        expiry: expiry,\n        cvc: cvc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.ScrollView, {\n        ref: \"Form\",\n        horizontal: true,\n        keyboardShouldPersistTaps: \"always\",\n        scrollEnabled: allowScroll,\n        showsHorizontalScrollIndicator: false,\n        style: s.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_ccinput.default, (0, _extends2.default)({}, this._inputProps(\"number\"), {\n        keyboardType: \"numeric\",\n        containerStyle: [s.inputContainer, inputContainerStyle, {\n          width: CARD_NUMBER_INPUT_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      })), _react.default.createElement(_ccinput.default, (0, _extends2.default)({}, this._inputProps(\"expiry\"), {\n        keyboardType: \"numeric\",\n        containerStyle: [s.inputContainer, inputContainerStyle, {\n          width: EXPIRY_INPUT_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      })), requiresCVC && _react.default.createElement(_ccinput.default, (0, _extends2.default)({}, this._inputProps(\"cvc\"), {\n        keyboardType: \"numeric\",\n        containerStyle: [s.inputContainer, inputContainerStyle, {\n          width: CVC_INPUT_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      })), requiresName && _react.default.createElement(_ccinput.default, (0, _extends2.default)({}, this._inputProps(\"name\"), {\n        containerStyle: [s.inputContainer, inputContainerStyle, {\n          width: NAME_INPUT_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      })), requiresPostalCode && _react.default.createElement(_ccinput.default, (0, _extends2.default)({}, this._inputProps(\"postalCode\"), {\n        keyboardType: \"numeric\",\n        containerStyle: [s.inputContainer, inputContainerStyle, {\n          width: POSTAL_CODE_INPUT_WIDTH\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n  return CreditCardInput;\n}(_react.Component);\n\nexports.default = CreditCardInput;\nCreditCardInput.propTypes = _objectSpread({}, _connecttostate.InjectedProps, {\n  labels: _propTypes.default.object,\n  placeholders: _propTypes.default.object,\n  labelStyle: _reactNative.Text.propTypes.style,\n  inputStyle: _reactNative.Text.propTypes.style,\n  inputContainerStyle: _reactNative.ViewPropTypes.style,\n  validColor: _propTypes.default.string,\n  invalidColor: _propTypes.default.string,\n  placeholderColor: _propTypes.default.string,\n  cardImageFront: _propTypes.default.number,\n  cardImageBack: _propTypes.default.number,\n  cardScale: _propTypes.default.number,\n  cardFontFamily: _propTypes.default.string,\n  cardBrandIcons: _propTypes.default.object,\n  allowScroll: _propTypes.default.bool,\n  additionalInputsProps: _propTypes.default.objectOf(_propTypes.default.shape(_reactNative.TextInput.propTypes))\n});\nCreditCardInput.defaultProps = {\n  cardViewSize: {},\n  labels: {\n    name: \"CARDHOLDER'S NAME\",\n    number: \"CARD NUMBER\",\n    expiry: \"EXPIRY\",\n    cvc: \"CVC/CCV\",\n    postalCode: \"POSTAL CODE\"\n  },\n  placeholders: {\n    name: \"Full Name\",\n    number: \"1234 5678 1234 5678\",\n    expiry: \"MM/YY\",\n    cvc: \"CVC\",\n    postalCode: \"34567\"\n  },\n  inputContainerStyle: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"black\"\n  },\n  validColor: \"\",\n  invalidColor: \"red\",\n  placeholderColor: \"gray\",\n  allowScroll: false,\n  additionalInputsProps: {}\n};","map":{"version":3,"sources":["D:/WS/reactws/takearide/src/modules/payment/component/creditcardinput.js"],"names":["s","StyleSheet","create","container","alignItems","form","marginTop","inputContainer","marginLeft","inputLabel","fontWeight","input","height","CVC_INPUT_WIDTH","EXPIRY_INPUT_WIDTH","CARD_NUMBER_INPUT_WIDTH_OFFSET","CARD_NUMBER_INPUT_WIDTH","Dimensions","get","width","NAME_INPUT_WIDTH","PREVIOUS_FIELD_OFFSET","POSTAL_CODE_INPUT_WIDTH","CreditCardInput","componentDidMount","_focus","props","focused","componentWillReceiveProps","newProps","field","scrollResponder","refs","Form","getScrollResponder","nodeHandle","ReactNative","findNodeHandle","NativeModules","UIManager","measureLayoutRelativeToParent","e","x","scrollTo","Math","max","animated","focus","_inputProps","inputStyle","labelStyle","validColor","invalidColor","placeholderColor","placeholders","labels","values","status","onFocus","onChange","onBecomeEmpty","onBecomeValid","additionalInputsProps","ref","label","placeholder","value","additionalInputProps","cardImageFront","cardImageBack","inputContainerStyle","number","expiry","cvc","name","type","allowScroll","requiresName","requiresCVC","requiresPostalCode","cardScale","cardFontFamily","cardBrandIcons","Component","propTypes","InjectedProps","PropTypes","object","Text","style","ViewPropTypes","string","bool","objectOf","shape","TextInput","defaultProps","cardViewSize","postalCode","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactNative, {\r\n  NativeModules,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Dimensions,\r\n  TextInput,\r\n  ViewPropTypes,\r\n} from \"react-native\";\r\n\r\nimport CreditCard from \"./cardview\";\r\nimport CCInput from \"./ccinput\";\r\nimport { InjectedProps } from \"./connecttostate\";\r\n\r\nconst s = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    marginTop: 20,\r\n  },\r\n  inputContainer: {\r\n    marginLeft: 20,\r\n  },\r\n  inputLabel: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n  },\r\n});\r\n\r\nconst CVC_INPUT_WIDTH = 70;\r\nconst EXPIRY_INPUT_WIDTH = CVC_INPUT_WIDTH;\r\nconst CARD_NUMBER_INPUT_WIDTH_OFFSET = 40;\r\nconst CARD_NUMBER_INPUT_WIDTH = Dimensions.get(\"window\").width - EXPIRY_INPUT_WIDTH - CARD_NUMBER_INPUT_WIDTH_OFFSET;\r\nconst NAME_INPUT_WIDTH = CARD_NUMBER_INPUT_WIDTH;\r\nconst PREVIOUS_FIELD_OFFSET = 40;\r\nconst POSTAL_CODE_INPUT_WIDTH = 120;\r\n\r\n/* eslint react/prop-types: 0 */ // https://github.com/yannickcr/eslint-plugin-react/issues/106\r\nexport default class CreditCardInput extends Component {\r\n  static propTypes = {\r\n    ...InjectedProps,\r\n    labels: PropTypes.object,\r\n    placeholders: PropTypes.object,\r\n\r\n    labelStyle: Text.propTypes.style,\r\n    inputStyle: Text.propTypes.style,\r\n    inputContainerStyle: ViewPropTypes.style,\r\n\r\n    validColor: PropTypes.string,\r\n    invalidColor: PropTypes.string,\r\n    placeholderColor: PropTypes.string,\r\n\r\n    cardImageFront: PropTypes.number,\r\n    cardImageBack: PropTypes.number,\r\n    cardScale: PropTypes.number,\r\n    cardFontFamily: PropTypes.string,\r\n    cardBrandIcons: PropTypes.object,\r\n\r\n    allowScroll: PropTypes.bool,\r\n\r\n    additionalInputsProps: PropTypes.objectOf(PropTypes.shape(TextInput.propTypes)),\r\n  };\r\n\r\n  static defaultProps = {\r\n    cardViewSize: {},\r\n    labels: {\r\n      name: \"CARDHOLDER'S NAME\",\r\n      number: \"CARD NUMBER\",\r\n      expiry: \"EXPIRY\",\r\n      cvc: \"CVC/CCV\",\r\n      postalCode: \"POSTAL CODE\",\r\n    },\r\n    placeholders: {\r\n      name: \"Full Name\",\r\n      number: \"1234 5678 1234 5678\",\r\n      expiry: \"MM/YY\",\r\n      cvc: \"CVC\",\r\n      postalCode: \"34567\",\r\n    },\r\n    inputContainerStyle: {\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: \"black\",\r\n    },\r\n    validColor: \"\",\r\n    invalidColor: \"red\",\r\n    placeholderColor: \"gray\",\r\n    allowScroll: false,\r\n    additionalInputsProps: {},\r\n  };\r\n\r\n  componentDidMount = () => this._focus(this.props.focused);\r\n\r\n  componentWillReceiveProps = newProps => {\r\n    if (this.props.focused !== newProps.focused) this._focus(newProps.focused);\r\n  };\r\n\r\n  _focus = field => {\r\n    if (!field) return;\r\n\r\n    const scrollResponder = this.refs.Form.getScrollResponder();\r\n    const nodeHandle = ReactNative.findNodeHandle(this.refs[field]);\r\n\r\n    NativeModules.UIManager.measureLayoutRelativeToParent(nodeHandle,\r\n      e => { throw e; },\r\n      x => {\r\n        scrollResponder.scrollTo({ x: Math.max(x - PREVIOUS_FIELD_OFFSET, 0), animated: true });\r\n        this.refs[field].focus();\r\n      });\r\n  }\r\n\r\n  _inputProps = field => {\r\n    const {\r\n      inputStyle, labelStyle, validColor, invalidColor, placeholderColor,\r\n      placeholders, labels, values, status,\r\n      onFocus, onChange, onBecomeEmpty, onBecomeValid,\r\n      additionalInputsProps,\r\n    } = this.props;\r\n\r\n    return {\r\n      inputStyle: [s.input, inputStyle],\r\n      labelStyle: [s.inputLabel, labelStyle],\r\n      validColor, invalidColor, placeholderColor,\r\n      ref: field, field,\r\n\r\n      label: labels[field],\r\n      placeholder: placeholders[field],\r\n      value: values[field],\r\n      status: status[field],\r\n\r\n      onFocus, onChange, onBecomeEmpty, onBecomeValid,\r\n\r\n      additionalInputProps: additionalInputsProps[field],\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      cardImageFront, cardImageBack, inputContainerStyle,\r\n      values: { number, expiry, cvc, name, type }, focused,\r\n      allowScroll, requiresName, requiresCVC, requiresPostalCode,\r\n      cardScale, cardFontFamily, cardBrandIcons,\r\n    } = this.props;\r\n\r\n    return (\r\n      <View style={s.container}>\r\n        <CreditCard focused={focused}\r\n          brand={type}\r\n          scale={cardScale}\r\n          fontFamily={cardFontFamily}\r\n          imageFront={cardImageFront}\r\n          imageBack={cardImageBack}\r\n          customIcons={cardBrandIcons}\r\n          name={requiresName ? name : \" \"}\r\n          number={number}\r\n          expiry={expiry}\r\n          cvc={cvc} />\r\n        <ScrollView ref=\"Form\"\r\n          horizontal\r\n          keyboardShouldPersistTaps=\"always\"\r\n          scrollEnabled={allowScroll}\r\n          showsHorizontalScrollIndicator={false}\r\n          style={s.form}>\r\n          <CCInput {...this._inputProps(\"number\")}\r\n            keyboardType=\"numeric\"\r\n            containerStyle={[s.inputContainer, inputContainerStyle, { width: CARD_NUMBER_INPUT_WIDTH }]} />\r\n          <CCInput {...this._inputProps(\"expiry\")}\r\n            keyboardType=\"numeric\"\r\n            containerStyle={[s.inputContainer, inputContainerStyle, { width: EXPIRY_INPUT_WIDTH }]} />\r\n          { requiresCVC &&\r\n            <CCInput {...this._inputProps(\"cvc\")}\r\n              keyboardType=\"numeric\"\r\n              containerStyle={[s.inputContainer, inputContainerStyle, { width: CVC_INPUT_WIDTH }]} /> }\r\n          { requiresName &&\r\n            <CCInput {...this._inputProps(\"name\")}\r\n              containerStyle={[s.inputContainer, inputContainerStyle, { width: NAME_INPUT_WIDTH }]} /> }\r\n          { requiresPostalCode &&\r\n            <CCInput {...this._inputProps(\"postalCode\")}\r\n              keyboardType=\"numeric\"\r\n              containerStyle={[s.inputContainer, inputContainerStyle, { width: POSTAL_CODE_INPUT_WIDTH }]} /> }\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"script"}