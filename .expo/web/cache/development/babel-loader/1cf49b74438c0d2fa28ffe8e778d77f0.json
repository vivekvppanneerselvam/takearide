{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useStateGetters;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction useStateGetters() {\n  var stateGetters = React.useRef({});\n  var getStateForRoute = React.useCallback(function (routeKey) {\n    var getter = stateGetters.current[routeKey];\n    return getter === undefined ? undefined : getter();\n  }, [stateGetters]);\n  var addStateGetter = React.useCallback(function (key, getter) {\n    stateGetters.current[key] = getter;\n    return function () {\n      stateGetters.current[key] = undefined;\n    };\n  }, []);\n  return {\n    getStateForRoute: getStateForRoute,\n    addStateGetter: addStateGetter\n  };\n}","map":{"version":3,"sources":["useStateGetters.tsx"],"names":["stateGetters","React","getStateForRoute","routeKey","getter","addStateGetter"],"mappings":";;;;;AAAA;;;;;;AAOe,SAAA,eAAA,GAA2B;AACxC,MAAMA,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,EAAqBA,CAArB;AAIA,MAAMC,gBAAgB,GAAG,KAAK,CAAL,WAAA,CACtBC,UAAAA,QAAD,EAAsB;AACpB,QAAMC,MAAM,GAAGJ,YAAY,CAAZA,OAAAA,CAAf,QAAeA,CAAf;AACA,WAAOI,MAAM,KAANA,SAAAA,GAAAA,SAAAA,GAAmCA,MAA1C,EAAA;AAHqB,GAAA,EAKvB,CALF,YAKE,CALuB,CAAzB;AAQA,MAAMC,cAAc,GAAG,KAAK,CAAL,WAAA,CACrB,UAAA,GAAA,EAAA,MAAA,EAA+C;AAC7CL,IAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,IAAAA,MAAAA;AAEA,WAAO,YAAM;AACXA,MAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,IAAAA,SAAAA;AADF,KAAA;AAJmB,GAAA,EAAvB,EAAuB,CAAvB;AAWA,SAAO;AACLE,IAAAA,gBADK,EACLA,gBADK;AAELG,IAAAA,cAAAA,EAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\nimport type { NavigatorStateGetter } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef<\n    Record<string, NavigatorStateGetter | undefined>\n  >({});\n\n  const getStateForRoute = React.useCallback(\n    (routeKey: string) => {\n      const getter = stateGetters.current[routeKey];\n      return getter === undefined ? undefined : getter();\n    },\n    [stateGetters]\n  );\n\n  const addStateGetter = React.useCallback(\n    (key: string, getter: NavigatorStateGetter) => {\n      stateGetters.current[key] = getter;\n\n      return () => {\n        stateGetters.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    getStateForRoute,\n    addStateGetter,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}