{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.MapTrack = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _reactNativeMaps = _interopRequireDefault(require(\"react-native-maps\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\src\\\\modules\\\\trackdriver\\\\components\\\\maptrack.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar width = _reactNative.Dimensions.get(\"window\").width;\n\nvar MapTrack = function MapTrack(_ref) {\n  var region = _ref.region,\n      driverLocation = _ref.driverLocation,\n      showCarMaker = _ref.showCarMaker,\n      selectedAddress = _ref.selectedAddress,\n      carMarker = _ref.carMarker;\n\n  var _ref2 = selectedAddress || {},\n      selectedPickUp = _ref2.selectedPickUp,\n      selectedDropOff = _ref2.selectedDropOff;\n\n  return _react.default.createElement(_nativeBase.View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, _react.default.createElement(_reactNativeMaps.default, {\n    provider: _reactNativeMaps.default.PROVIDER_GOOGLE,\n    style: styles.map,\n    region: region,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, selectedPickUp && _react.default.createElement(_reactNativeMaps.default.Marker, {\n    coordinate: {\n      latitude: selectedPickUp.latitude,\n      longitude: selectedPickUp.longitude\n    },\n    pinColor: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }\n  }), selectedDropOff && _react.default.createElement(_reactNativeMaps.default.Marker, {\n    coordinate: {\n      latitude: selectedDropOff.latitude,\n      longitude: selectedDropOff.longitude\n    },\n    pinColor: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }), showCarMaker && _react.default.createElement(_reactNativeMaps.default.Marker, {\n    coordinate: {\n      latitude: driverLocation.coordinate.coordinates[1],\n      longitude: driverLocation.coordinate.coordinates[0]\n    },\n    image: carMarker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  })));\n};\n\nexports.MapTrack = MapTrack;\nvar _default = MapTrack;\nexports.default = _default;\nvar styles = {\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  map: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject),\n  inputWrapper: {\n    top: 0,\n    position: \"absolute\",\n    backgroundColor: \"#fff\",\n    width: width\n  },\n  inputSearch: {\n    backgroundColor: \"#fff\"\n  }\n};","map":{"version":3,"sources":["D:/WS/reactws/takearide/src/modules/trackdriver/components/maptrack.js"],"names":["width","Dimensions","get","MapTrack","region","driverLocation","showCarMaker","selectedAddress","carMarker","selectedPickUp","selectedDropOff","styles","container","MapView","PROVIDER_GOOGLE","map","latitude","longitude","coordinate","coordinates","flex","justifyContent","alignItems","StyleSheet","absoluteFillObject","inputWrapper","top","position","backgroundColor","inputSearch"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAIA,KAAK,GAAGC,wBAAWC,GAAX,CAAe,QAAf,EAAyBF,KAArC;;AAEO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,OAMnB;AAAA,MALHC,MAKG,QALHA,MAKG;AAAA,MAJHC,cAIG,QAJHA,cAIG;AAAA,MAHHC,YAGG,QAHHA,YAGG;AAAA,MAFHC,eAEG,QAFHA,eAEG;AAAA,MADHC,SACG,QADHA,SACG;;AAAA,cAEwCD,eAAe,IAAI,EAF3D;AAAA,MAEIE,cAFJ,SAEIA,cAFJ;AAAA,MAEoBC,eAFpB,SAEoBA,eAFpB;;AAIJ,SACC,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,6BAAC,wBAAD;AACC,IAAA,QAAQ,EAAEC,yBAAQC,eADnB;AAEC,IAAA,KAAK,EAAEH,MAAM,CAACI,GAFf;AAGC,IAAA,MAAM,EAAEX,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGK,cAAc,IACf,6BAAC,wBAAD,CAAS,MAAT;AACC,IAAA,UAAU,EAAE;AAACO,MAAAA,QAAQ,EAACP,cAAc,CAACO,QAAzB;AAAmCC,MAAAA,SAAS,EAACR,cAAc,CAACQ;AAA5D,KADb;AAEC,IAAA,QAAQ,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaGP,eAAe,IAChB,6BAAC,wBAAD,CAAS,MAAT;AACC,IAAA,UAAU,EAAE;AAACM,MAAAA,QAAQ,EAACN,eAAe,CAACM,QAA1B;AAAoCC,MAAAA,SAAS,EAACP,eAAe,CAACO;AAA9D,KADb;AAEC,IAAA,QAAQ,EAAC,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAoBGX,YAAY,IACb,6BAAC,wBAAD,CAAS,MAAT;AACC,IAAA,UAAU,EAAE;AAACU,MAAAA,QAAQ,EAACX,cAAc,CAACa,UAAf,CAA0BC,WAA1B,CAAsC,CAAtC,CAAV;AAAoDF,MAAAA,SAAS,EAACZ,cAAc,CAACa,UAAf,CAA0BC,WAA1B,CAAsC,CAAtC;AAA9D,KADb;AAEC,IAAA,KAAK,EAAEX,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADD,CADD;AAkCA,CA5CM;;;eA8CQL,Q;;AAKf,IAAMQ,MAAM,GAAG;AACXC,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADA;AAMXP,EAAAA,GAAG,oBACIQ,wBAAWC,kBADf,CANQ;AASXC,EAAAA,YAAY,EAAC;AACTC,IAAAA,GAAG,EAAC,CADK;AAETC,IAAAA,QAAQ,EAAC,UAFA;AAGTC,IAAAA,eAAe,EAAC,MAHP;AAIT5B,IAAAA,KAAK,EAACA;AAJG,GATF;AAeX6B,EAAAA,WAAW,EAAC;AACRD,IAAAA,eAAe,EAAC;AADR;AAfD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { View } from \"native-base\";\r\nimport MapView from \"react-native-maps\";\r\nimport { StyleSheet, Dimensions } from \"react-native\";\r\nvar width = Dimensions.get(\"window\").width; //full width\r\n\r\nexport const MapTrack = ({ \r\n\t\tregion,\r\n\t\tdriverLocation,\r\n\t\tshowCarMaker,\r\n\t\tselectedAddress,\r\n\t\tcarMarker\r\n\t})=>{\r\n\r\n\tconst { selectedPickUp, selectedDropOff } = selectedAddress || {};\r\n\r\n\treturn(\r\n\t\t<View style={styles.container}>\r\n\t\t\t<MapView\r\n\t\t\t\tprovider={MapView.PROVIDER_GOOGLE}\r\n\t\t\t\tstyle={styles.map}\r\n\t\t\t\tregion={region}\r\n\t\t\t>\r\n\r\n\t\t\t\t{ selectedPickUp &&\r\n\t\t\t\t\t<MapView.Marker\r\n\t\t\t\t\t\tcoordinate={{latitude:selectedPickUp.latitude, longitude:selectedPickUp.longitude}}\r\n\t\t\t\t\t\tpinColor=\"green\"\r\n\r\n\t\t\t\t\t/>\t\r\n\t\t\t\t}\r\n\t\t\t\t{ selectedDropOff &&\r\n\t\t\t\t\t<MapView.Marker\r\n\t\t\t\t\t\tcoordinate={{latitude:selectedDropOff.latitude, longitude:selectedDropOff.longitude}}\r\n\t\t\t\t\t\tpinColor=\"blue\"\r\n\r\n\t\t\t\t\t/>\t\r\n\t\t\t\t}\r\n\t\t\t\t{ showCarMaker &&\r\n\t\t\t\t\t<MapView.Marker\r\n\t\t\t\t\t\tcoordinate={{latitude:driverLocation.coordinate.coordinates[1], longitude:driverLocation.coordinate.coordinates[0]}}\r\n\t\t\t\t\t\timage={carMarker}\r\n\r\n\t\t\t\t\t/>\t\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t</MapView>\r\n\t\t</View>\r\n\t)\r\n}\r\n\r\nexport default MapTrack;\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    map: {\r\n        ...StyleSheet.absoluteFillObject\r\n    },\r\n    inputWrapper:{\r\n        top:0,\r\n        position:\"absolute\",\r\n        backgroundColor:\"#fff\",\r\n        width:width\r\n    },\r\n    inputSearch:{\r\n        backgroundColor:\"#fff\"\r\n    }\r\n};"]},"metadata":{},"sourceType":"script"}