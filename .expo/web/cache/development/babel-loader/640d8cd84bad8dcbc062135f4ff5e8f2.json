{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _immutable = require(\"immutable\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _action = require(\"./action\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\src\\\\modules\\\\signup\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignUp(props) {\n  var _useState = (0, _react.useState)({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onClickListener = function onClickListener(viewId) {\n    if (viewId == \"signup\") {\n      var obj = {\n        name: state.name,\n        email: state.email,\n        password: state.password\n      };\n      console.log(obj);\n      props.insertUser(obj);\n    } else _reactNative.Alert.alert(\"Alert\", \"Button pressed \" + viewId);\n  };\n\n  (0, _react.useEffect)(function () {\n    if (!props.insert_user_loading) {\n      if (!props.insert_user.toJS().error) {\n        alert(\"sucessfully inserted the record\");\n      } else {\n        alert(JSON.stringify(props.insert_user.toJS().data));\n      }\n    }\n  }, [props.insert_user_loading]);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputs,\n    placeholder: \"Full name\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setState(function (prevState) {\n        prevState['name'] = value;\n        return _objectSpread({}, prevState);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/color/40/000000/circled-user-male-skin-type-3.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setState(function (prevState) {\n        prevState['email'] = value;\n        return _objectSpread({}, prevState);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/flat_round/40/000000/secured-letter.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setState(function (prevState) {\n        prevState['password'] = value;\n        return _objectSpread({}, prevState);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/color/40/000000/password.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputs,\n    placeholder: \"Confirm Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setState(function (prevState) {\n        prevState['confirmPassword'] = value;\n        return _objectSpread({}, prevState);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/color/40/000000/password.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.btnByRegister,\n    onPress: function onPress() {\n      return onClickListener('restore_password');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.textByRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"By registering on this App you confirm that you have read and accept our policy\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: function onPress() {\n      return onClickListener('signup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: function onPress() {\n      return onClickListener('register');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.btnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Have an account?\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insert_user_loading: state.SignUpReducer.getIn(['insert_user', 'loading'], true),\n    insert_user: state.SignUpReducer.getIn(['insert_user'], (0, _immutable.Map)())\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, {\n  insertUser: _action.insertUser\n})(SignUp);\n\nexports.default = _default;\nvar resizeMode = 'center';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#00b5ec'\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  btnByRegister: {\n    height: 15,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 20,\n    width: 300,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: \"#FF4DFF\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: 'white'\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: resizeMode,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  },\n  textByRegister: {\n    color: \"white\",\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  }\n});","map":{"version":3,"sources":["D:/WS/reactws/takearide/src/modules/signup/index.js"],"names":["SignUp","props","name","email","password","confirmPassword","state","setState","onClickListener","viewId","obj","console","log","insertUser","Alert","alert","insert_user_loading","insert_user","toJS","error","JSON","stringify","data","styles","container","inputContainer","inputs","value","prevState","inputIcon","uri","btnByRegister","textByRegister","buttonContainer","loginButton","loginText","btnText","mapStateToProps","SignUpReducer","getIn","resizeMode","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","marginRight","marginVertical","color","bgImage","position","fontWeight","textShadowColor","textShadowOffset","textShadowRadius","textAlign"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Map, List } from 'immutable'\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    Button,\r\n    TouchableOpacity,\r\n    Image,\r\n    Alert\r\n} from 'react-native';\r\nimport { insertUser } from './action'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction SignUp(props) {\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n\r\n    const onClickListener = (viewId) => {\r\n        if (viewId == \"signup\") {\r\n            let obj = {\r\n                name: state.name,\r\n                email: state.email,\r\n                password: state.password\r\n            }\r\n            console.log(obj)\r\n            props.insertUser(obj);\r\n        } else\r\n            Alert.alert(\"Alert\", \"Button pressed \" + viewId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!props.insert_user_loading) {\r\n            if (!props.insert_user.toJS().error) {\r\n                alert(\"sucessfully inserted the record\")\r\n            } else {\r\n                alert(JSON.stringify(props.insert_user.toJS().data))\r\n            }\r\n        }\r\n    }, [props.insert_user_loading])\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput style={styles.inputs}\r\n                    placeholder=\"Full name\"\r\n                    underlineColorAndroid='transparent'\r\n                    onChangeText={(value) => setState((prevState) => { prevState['name'] = value; return ({ ...prevState }) })} />\r\n                <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/color/40/000000/circled-user-male-skin-type-3.png' }} />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput style={styles.inputs}\r\n                    placeholder=\"Email\"\r\n                    keyboardType=\"email-address\"\r\n                    underlineColorAndroid='transparent'\r\n                    onChangeText={(value) => setState((prevState) => { prevState['email'] = value; return ({ ...prevState }) })} />\r\n                <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/flat_round/40/000000/secured-letter.png' }} />\r\n            </View>\r\n\r\n            <View style={styles.inputContainer}>\r\n                <TextInput style={styles.inputs}\r\n                    placeholder=\"Password\"\r\n                    secureTextEntry={true}\r\n                    underlineColorAndroid='transparent'\r\n                    onChangeText={(value) => setState((prevState) => { prevState['password'] = value; return ({ ...prevState }) })} />\r\n                <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/color/40/000000/password.png' }} />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput style={styles.inputs}\r\n                    placeholder=\"Confirm Password\"\r\n                    secureTextEntry={true}\r\n                    underlineColorAndroid='transparent'\r\n                    onChangeText={(value) => setState((prevState) => { prevState['confirmPassword'] = value; return ({ ...prevState }) })} />\r\n                <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/color/40/000000/password.png' }} />\r\n            </View>\r\n\r\n            <TouchableOpacity style={styles.btnByRegister} onPress={() => onClickListener('restore_password')}>\r\n                <Text style={styles.textByRegister}>By registering on this App you confirm that you have read and accept our policy</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={[styles.buttonContainer, styles.loginButton]} onPress={() => onClickListener('signup')}>\r\n                <Text style={styles.loginText}>Sign Up</Text>\r\n            </TouchableOpacity>\r\n\r\n\r\n            <TouchableOpacity style={styles.buttonContainer} onPress={() => onClickListener('register')}>\r\n                <Text style={styles.btnText}>Have an account?</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        insert_user_loading: state.SignUpReducer.getIn(['insert_user', 'loading'], true),\r\n        insert_user: state.SignUpReducer.getIn(['insert_user'], Map())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { insertUser })(SignUp)\r\nconst resizeMode = 'center';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#00b5ec',\r\n    },\r\n    inputContainer: {\r\n        borderBottomColor: '#F5FCFF',\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 30,\r\n        borderBottomWidth: 1,\r\n        width: 300,\r\n        height: 45,\r\n        marginBottom: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n\r\n        elevation: 5,\r\n    },\r\n    inputs: {\r\n        height: 45,\r\n        marginLeft: 16,\r\n        borderBottomColor: '#FFFFFF',\r\n        flex: 1,\r\n    },\r\n    inputIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        marginRight: 15,\r\n        justifyContent: 'center'\r\n    },\r\n    buttonContainer: {\r\n        height: 45,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        width: 300,\r\n        borderRadius: 30,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    btnByRegister: {\r\n        height: 15,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 20,\r\n        width: 300,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    loginButton: {\r\n        backgroundColor: \"#FF4DFF\",\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    loginText: {\r\n        color: 'white',\r\n    },\r\n    bgImage: {\r\n        flex: 1,\r\n        resizeMode,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n    },\r\n    btnText: {\r\n        color: \"white\",\r\n        fontWeight: 'bold',\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 10\r\n    },\r\n    textByRegister: {\r\n        color: \"white\",\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 10\r\n    }\r\n});  \r\n"]},"metadata":{},"sourceType":"script"}