{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requestLocationPermission = requestLocationPermission;\nexports.getCurrentLocation = getCurrentLocation;\nexports.getInputData = getInputData;\nexports.toggleSearchResultModal = toggleSearchResultModal;\nexports.getAddressPredictions = getAddressPredictions;\nexports.getSelectedAddress = getSelectedAddress;\nexports.getRoutePoints = getRoutePoints;\nexports.bookCar = bookCar;\nexports.getNearByDrivers = getNearByDrivers;\nexports.HomeReducer = HomeReducer;\nexports.geocodeLocationByCoords = exports.geocodeLocationByName = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _reactAddonsUpdate = _interopRequireDefault(require(\"react-addons-update\"));\n\nvar _constants = _interopRequireDefault(require(\"./constants\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _request = _interopRequireDefault(require(\"../../util/request\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _farecalculator = _interopRequireDefault(require(\"../../util/farecalculator.js\"));\n\nvar _geolocation = _interopRequireDefault(require(\"@react-native-community/geolocation\"));\n\nvar _reactNativeGeocoding = _interopRequireDefault(require(\"react-native-geocoding\"));\n\nvar _serverCall = _interopRequireDefault(require(\"../../serverCall\"));\n\nvar GET_CURRENT_LOCATION = _constants.default.GET_CURRENT_LOCATION,\n    GET_INPUT = _constants.default.GET_INPUT,\n    TOGGLE_SEARCH_RESULT = _constants.default.TOGGLE_SEARCH_RESULT,\n    GET_ADDRESS_PREDICTIONS = _constants.default.GET_ADDRESS_PREDICTIONS,\n    GET_SELECTED_ADDRESS = _constants.default.GET_SELECTED_ADDRESS,\n    GET_DISTANCE_MATRIX = _constants.default.GET_DISTANCE_MATRIX,\n    GET_FARE = _constants.default.GET_FARE,\n    BOOK_CAR = _constants.default.BOOK_CAR,\n    GET_NEARBY_DRIVERS = _constants.default.GET_NEARBY_DRIVERS,\n    ROUTE_POINTS = _constants.default.ROUTE_POINTS;\n\nvar _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE_DELTA = 0.0922;\nvar LONGITUDE_DELTA = ASPECT_RATIO * LATITUDE_DELTA;\nvar bingMapsKey = \"Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-\";\n\nfunction requestLocationPermission() {\n  var granted;\n  return _regenerator.default.async(function requestLocationPermission$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n            'title': 'Example App',\n            'message': 'Example App access to your location '\n          }));\n\n        case 3:\n          granted = _context.sent;\n\n          if (granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED) {\n            console.log(\"You can use the location\");\n            getCurrentLocation();\n          } else {\n            console.log(\"location permission denied\");\n            alert(\"Location permission denied\");\n          }\n\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.warn(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\n\nfunction getCurrentLocation() {\n  return function (dispatch) {\n    _geolocation.default.getCurrentPosition(function (position) {\n      console.log('position', position);\n      dispatch({\n        type: GET_CURRENT_LOCATION,\n        payload: position\n      });\n    }, function (error) {\n      return console.log(\"Error\", error.message);\n    });\n  };\n}\n\nvar geocodeLocationByName = function geocodeLocationByName(locationName) {\n  return new Promise(function (resolve, reject) {\n    _reactNativeGeocoding.default.from(locationName).then(function (json) {\n      var addressComponent = json.results[0].address_components[0];\n      resolve(addressComponent);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\n\nexports.geocodeLocationByName = geocodeLocationByName;\n\nvar geocodeLocationByCoords = function geocodeLocationByCoords(lat, long) {\n  return new Promise(function (resolve, reject) {\n    _reactNativeGeocoding.default.from(lat, long).then(function (json) {\n      var addressComponent = json.results[0].address_components[0];\n      resolve(addressComponent);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\n\nexports.geocodeLocationByCoords = geocodeLocationByCoords;\n\nfunction getInputData(payload) {\n  return {\n    type: GET_INPUT,\n    payload: payload\n  };\n}\n\nfunction toggleSearchResultModal(payload) {\n  return {\n    type: TOGGLE_SEARCH_RESULT,\n    payload: payload\n  };\n}\n\nfunction getAddressPredictions() {\n  return function (dispatch, store) {\n    dispatch({\n      type: GET_ADDRESS_PREDICTIONS,\n      payload: []\n    });\n    var userInput = store().home.resultTypes.pickUp ? store().home.inputData.pickUp : store().home.inputData.dropOff;\n\n    _request.default.get(\"https://dev.virtualearth.net/REST/v1/Locations\").query({\n      query: userInput,\n      include: \"queryParse\",\n      maxRes: 5,\n      key: \"Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-\",\n      output: \"json\"\n    }).finish(function (error, res) {\n      if (!error) {\n        dispatch({\n          type: GET_ADDRESS_PREDICTIONS,\n          payload: res.body.resourceSets[0].resources\n        });\n      } else {\n        console.log(\"GET_ADDRESS_PREDICTIONS_ERROR\", error);\n      }\n    });\n  };\n}\n\nfunction getSelectedAddress(payload) {\n  var dummyNumbers = {\n    baseFare: 0.4,\n    timeRate: 0.14,\n    distanceRate: 0.97,\n    surge: 1\n  };\n  return function (dispatch, store) {\n    dispatch({\n      type: GET_SELECTED_ADDRESS,\n      payload: payload\n    });\n\n    if (store().home.selectedAddress.selectedPickUp && store().home.selectedAddress.selectedDropOff) {\n      _request.default.get(\"https://dev.virtualearth.net/REST/v1/Routes/DistanceMatrix\").query({\n        origins: store().home.selectedAddress.selectedPickUp.latitude + \",\" + store().home.selectedAddress.selectedPickUp.longitude,\n        destinations: store().home.selectedAddress.selectedDropOff.latitude + \",\" + store().home.selectedAddress.selectedDropOff.longitude,\n        travelMode: \"driving\",\n        key: \"Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-\"\n      }).finish(function (error, res) {\n        dispatch({\n          type: GET_DISTANCE_MATRIX,\n          payload: res.body.resourceSets[0].resources[0].results[0]\n        });\n      });\n    }\n\n    setTimeout(function () {\n      if (store().home.selectedAddress.selectedPickUp && store().home.selectedAddress.selectedDropOff) {\n        var fare = (0, _farecalculator.default)(dummyNumbers.baseFare, dummyNumbers.timeRate, store().home.distanceMatrix.travelDuration, dummyNumbers.distanceRate, store().home.distanceMatrix.travelDistance, dummyNumbers.surge);\n        dispatch({\n          type: GET_FARE,\n          payload: fare\n        });\n      }\n    }, 2000);\n  };\n}\n\nfunction getRoutePoints(origin, destination) {\n  console.log(\"-----getRoutePoints-----\");\n  var routeUrl = \"https://dev.virtualearth.net/REST/V1/Routes/Driving?wp.0=\" + origin + \"&wp.1=\" + destination + \"&key=\" + bingMapsKey;\n  console.log(\"URL -- >>\" + routeUrl);\n  return function (dispatch, store) {\n    _axios.default.get(routeUrl).then(function (res) {\n      console.log(\"hahaha\", res.data);\n      var cortemp = routesDecode(res);\n      var length = cortemp.length - 1;\n      var tempMARKERS = [];\n      tempMARKERS.push(cortemp[0]);\n      tempMARKERS.push(cortemp[length]);\n      console.log(\"tempMARKERS : \" + JSON.stringify(tempMARKERS));\n      var obj = {\n        coords: cortemp,\n        MARKERS: tempMARKERS,\n        destMarker: cortemp[length],\n        startMarker: cortemp[0]\n      };\n      dispatch({\n        type: ROUTE_POINTS,\n        data: obj,\n        loading: false\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}\n\nfunction bookCar() {\n  return function (dispatch, store) {\n    var userId = store().LoginReducer.userName;\n    var nearByDrivers = store().home.nearByDrivers;\n    var nearByDriver = nearByDrivers[Math.floor(Math.random() * nearByDrivers.length)];\n    var payload = {\n      data: {\n        userId: userId,\n        pickUp: {\n          address: store().home.selectedAddress.selectedPickUp.address,\n          name: store().home.selectedAddress.selectedPickUp.name,\n          latitude: store().home.selectedAddress.selectedPickUp.latitude,\n          longitude: store().home.selectedAddress.selectedPickUp.longitude\n        },\n        dropOff: {\n          address: store().home.selectedAddress.selectedDropOff.address,\n          name: store().home.selectedAddress.selectedDropOff.name,\n          latitude: store().home.selectedAddress.selectedDropOff.latitude,\n          longitude: store().home.selectedAddress.selectedDropOff.longitude\n        },\n        fare: store().home.fare,\n        status: \"pending\"\n      },\n      nearByDriver: {\n        socketId: nearByDriver.socketId,\n        driverId: nearByDriver.driverId,\n        latitude: nearByDriver.coordinate.coordinates[1],\n        longitude: nearByDriver.coordinate.coordinates[0]\n      }\n    };\n    (0, _serverCall.default)({\n      method: 'POST',\n      url: \"/api/bookings\",\n      data: payload\n    }).then(function (res) {\n      dispatch({\n        type: BOOK_CAR,\n        payload: res.body\n      });\n    }).catch(function (error) {\n      console.log('BOOK_CAR error', error);\n    });\n  };\n}\n\nfunction getNearByDrivers(region) {\n  console.log('getNearByDrivers', region);\n  return function (dispatch, store) {\n    (0, _serverCall.default)({\n      method: 'GET',\n      url: \"/api/driverLocation?latitude=\" + region.latitude + \"&longitude=\" + region.longitude\n    }).then(function (res) {\n      console.log('GET_NEARBY_DRIVERS', res.body);\n      dispatch({\n        type: GET_NEARBY_DRIVERS,\n        payload: res.body\n      });\n    }).catch(function (error) {\n      console.log('GET_NEARBY_DRIVERS error', error);\n    });\n  };\n}\n\nfunction handleGetCurrentLocation(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    region: {\n      latitude: {\n        $set: action.payload.coords.latitude\n      },\n      longitude: {\n        $set: action.payload.coords.longitude\n      },\n      latitudeDelta: {\n        $set: LATITUDE_DELTA\n      },\n      longitudeDelta: {\n        $set: LONGITUDE_DELTA\n      }\n    }\n  });\n}\n\nfunction handleGetInputDate(state, action) {\n  var _action$payload = action.payload,\n      key = _action$payload.key,\n      value = _action$payload.value;\n  return (0, _reactAddonsUpdate.default)(state, {\n    inputData: (0, _defineProperty2.default)({}, key, {\n      $set: value\n    })\n  });\n}\n\nfunction handleToggleSearchResult(state, action) {\n  if (action.payload === \"pickUp\") {\n    return (0, _reactAddonsUpdate.default)(state, {\n      resultTypes: {\n        pickUp: {\n          $set: true\n        },\n        dropOff: {\n          $set: false\n        }\n      },\n      predictions: {\n        $set: {}\n      }\n    });\n  }\n\n  if (action.payload === \"dropOff\") {\n    return (0, _reactAddonsUpdate.default)(state, {\n      resultTypes: {\n        pickUp: {\n          $set: false\n        },\n        dropOff: {\n          $set: true\n        }\n      },\n      predictions: {\n        $set: {}\n      }\n    });\n  }\n}\n\nfunction handleGetAddressPredictions(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    predictions: {\n      $set: action.payload\n    }\n  });\n}\n\nfunction handleGetSelectedAddress(state, action) {\n  var selectedTitle = state.resultTypes.pickUp ? \"selectedPickUp\" : \"selectedDropOff\";\n  return (0, _reactAddonsUpdate.default)(state, {\n    selectedAddress: (0, _defineProperty2.default)({}, selectedTitle, {\n      $set: action.payload\n    }),\n    resultTypes: {\n      pickUp: {\n        $set: false\n      },\n      dropOff: {\n        $set: false\n      }\n    }\n  });\n}\n\nfunction handleGetDitanceMatrix(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    distanceMatrix: {\n      $set: action.payload\n    }\n  });\n}\n\nfunction handleGetFare(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    fare: {\n      $set: action.payload\n    }\n  });\n}\n\nfunction handleBookCar(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    booking: {\n      $set: action.payload\n    }\n  });\n}\n\nfunction handleGetNearbyDrivers(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    nearByDrivers: {\n      $set: action.payload\n    }\n  });\n}\n\nfunction handleBookingConfirmed(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    booking: {\n      $set: action.payload\n    }\n  });\n}\n\nfunction handleRoutePoints(state, action) {\n  return (0, _reactAddonsUpdate.default)(state, {\n    route_points: {\n      $set: action.data\n    }\n  });\n}\n\nvar ACTION_HANDLERS = {\n  GET_CURRENT_LOCATION: handleGetCurrentLocation,\n  GET_INPUT: handleGetInputDate,\n  TOGGLE_SEARCH_RESULT: handleToggleSearchResult,\n  GET_ADDRESS_PREDICTIONS: handleGetAddressPredictions,\n  GET_SELECTED_ADDRESS: handleGetSelectedAddress,\n  GET_DISTANCE_MATRIX: handleGetDitanceMatrix,\n  GET_FARE: handleGetFare,\n  BOOK_CAR: handleBookCar,\n  GET_NEARBY_DRIVERS: handleGetNearbyDrivers,\n  BOOKING_CONFIRMED: handleBookingConfirmed,\n  ROUTE_POINTS: handleRoutePoints\n};\nvar initialState = {\n  region: {},\n  inputData: {},\n  resultTypes: {},\n  selectedAddress: {}\n};\n\nfunction HomeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var handler = ACTION_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}\n\nfunction routesDecode(res) {\n  console.log(\"hehehe\", res.data);\n  var arr = [];\n  var s = res.data.resourceSets[0].resources[0].routeLegs[0].actualStart['coordinates'];\n  arr.push({\n    latitude: s[0],\n    longitude: s[1]\n  });\n  var dest = res.data.resourceSets[0].resources[0].routeLegs[0].itineraryItems.map(function (item) {\n    var t = item.maneuverPoint['coordinates'];\n    return {\n      latitude: t[0],\n      longitude: t[1]\n    };\n  });\n  return arr.concat(dest);\n}","map":{"version":3,"sources":["D:/WS/reactws/takearide/src/modules/home/action.js"],"names":["GET_CURRENT_LOCATION","constants","GET_INPUT","TOGGLE_SEARCH_RESULT","GET_ADDRESS_PREDICTIONS","GET_SELECTED_ADDRESS","GET_DISTANCE_MATRIX","GET_FARE","BOOK_CAR","GET_NEARBY_DRIVERS","ROUTE_POINTS","Dimensions","get","width","height","ASPECT_RATIO","LATITUDE_DELTA","LONGITUDE_DELTA","bingMapsKey","requestLocationPermission","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","granted","RESULTS","GRANTED","console","log","getCurrentLocation","alert","warn","dispatch","Geolocation","getCurrentPosition","position","type","payload","error","message","geocodeLocationByName","locationName","Promise","resolve","reject","Geocoder","from","then","json","addressComponent","results","address_components","catch","geocodeLocationByCoords","lat","long","getInputData","toggleSearchResultModal","getAddressPredictions","store","userInput","home","resultTypes","pickUp","inputData","dropOff","query","include","maxRes","key","output","finish","res","body","resourceSets","resources","getSelectedAddress","dummyNumbers","baseFare","timeRate","distanceRate","surge","selectedAddress","selectedPickUp","selectedDropOff","origins","latitude","longitude","destinations","travelMode","setTimeout","fare","distanceMatrix","travelDuration","travelDistance","getRoutePoints","origin","destination","routeUrl","axios","data","cortemp","routesDecode","length","tempMARKERS","push","JSON","stringify","obj","coords","MARKERS","destMarker","startMarker","loading","err","bookCar","userId","LoginReducer","userName","nearByDrivers","nearByDriver","Math","floor","random","address","name","status","socketId","driverId","coordinate","coordinates","method","url","getNearByDrivers","region","handleGetCurrentLocation","state","action","$set","latitudeDelta","longitudeDelta","handleGetInputDate","value","handleToggleSearchResult","predictions","handleGetAddressPredictions","handleGetSelectedAddress","selectedTitle","handleGetDitanceMatrix","handleGetFare","handleBookCar","booking","handleGetNearbyDrivers","handleBookingConfirmed","handleRoutePoints","route_points","ACTION_HANDLERS","BOOKING_CONFIRMED","initialState","HomeReducer","handler","arr","s","routeLegs","actualStart","dest","itineraryItems","map","item","t","maneuverPoint","concat"],"mappings":"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","sourcesContent":["import update from \"react-addons-update\";\r\nimport constants from \"./constants\";\r\nimport { Dimensions } from \"react-native\"\r\nimport request from \"../../util/request\";\r\nimport axios from 'axios'\r\nimport calculateFare from \"../../util/farecalculator.js\";\r\nimport Geolocation from '@react-native-community/geolocation';\r\nimport Geocoder from 'react-native-geocoding';\r\nimport { PermissionsAndroid } from 'react-native';\r\nimport serverCall from '../../serverCall'\r\n\r\n//--------------------\r\n//Constants\r\n//--------------------\r\nconst {\r\n\tGET_CURRENT_LOCATION,\r\n\tGET_INPUT,\r\n\tTOGGLE_SEARCH_RESULT,\r\n\tGET_ADDRESS_PREDICTIONS,\r\n\tGET_SELECTED_ADDRESS,\r\n\tGET_DISTANCE_MATRIX,\r\n\tGET_FARE,\r\n\tBOOK_CAR,\r\n\tGET_NEARBY_DRIVERS,\r\n\tROUTE_POINTS\r\n} = constants;\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nconst ASPECT_RATIO = width / height;\r\n\r\nconst LATITUDE_DELTA = 0.0922;\r\nconst LONGITUDE_DELTA = ASPECT_RATIO * LATITUDE_DELTA\r\nlet bingMapsKey = \"Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-\"\r\n\r\n\r\n//--------------------\r\n//Actions\r\n//--------------------\r\n\r\nexport async function requestLocationPermission() {\r\n\ttry {\r\n\t\tconst granted = await PermissionsAndroid.request(\r\n\t\t\tPermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\r\n\t\t\t{\r\n\t\t\t\t'title': 'Example App',\r\n\t\t\t\t'message': 'Example App access to your location '\r\n\t\t\t}\r\n\t\t)\r\n\t\tif (granted === PermissionsAndroid.RESULTS.GRANTED) {\r\n\t\t\tconsole.log(\"You can use the location\")\r\n\t\t\tgetCurrentLocation()\r\n\t\t} else {\r\n\t\t\tconsole.log(\"location permission denied\")\r\n\t\t\talert(\"Location permission denied\");\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.warn(err)\r\n\t}\r\n}\r\n\r\nexport function getCurrentLocation() {\r\n\treturn (dispatch) => {\r\n\t\tGeolocation.getCurrentPosition(\r\n\t\t\t(position) => {\r\n\t\t\t\tconsole.log('position', position)\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: GET_CURRENT_LOCATION,\r\n\t\t\t\t\tpayload: position\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t(error) => console.log(\"Error\", error.message)\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport const geocodeLocationByName = (locationName) => {\r\n\treturn new Promise(\r\n\t\t(resolve, reject) => {\r\n\t\t\tGeocoder.from(locationName)\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tconst addressComponent = json.results[0].address_components[0];\r\n\t\t\t\t\tresolve(addressComponent);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => reject(error));\r\n\t\t}\r\n\t);\r\n}\r\n\r\nexport const geocodeLocationByCoords = (lat, long) => {\r\n\treturn new Promise(\r\n\t\t(resolve, reject) => {\r\n\t\t\tGeocoder.from(lat, long)\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tconst addressComponent = json.results[0].address_components[0];\r\n\t\t\t\t\tresolve(addressComponent);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => reject(error));\r\n\t\t}\r\n\t);\r\n}\r\n\r\n//GET USER INPUT\r\n\r\nexport function getInputData(payload) {\r\n\treturn {\r\n\t\ttype: GET_INPUT,\r\n\t\tpayload\r\n\t}\r\n}\r\n//toggle search result modal\r\nexport function toggleSearchResultModal(payload) {\r\n\treturn {\r\n\t\ttype: TOGGLE_SEARCH_RESULT,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\n\r\n//GET ADRESSES FROM GOOGLE PLACE\r\n\r\nexport function getAddressPredictions() {\r\n\treturn (dispatch, store) => {\r\n\t\tdispatch({ type: GET_ADDRESS_PREDICTIONS, payload: [] });\r\n\t\tlet userInput = store().home.resultTypes.pickUp ? store().home.inputData.pickUp : store().home.inputData.dropOff;\r\n\t\t/* axios.get(\"https://dev.virtualearth.net/REST/v1/Locations?query=\"+\r\n\t\t\t\"chennai,IN&include=queryParse&maxRes=5&key=Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-\"+\r\n\t\t\t\"&output=json\").then((res)=>{\r\n\t\t\t\tconsole.log(\"res\",res)\r\n\t\t\t}).catch((error)=>{\r\n\t\t\t\tconsole.log(\"error\",error) \r\n\t\t\t})*/\r\n\t\trequest.get(\"https://dev.virtualearth.net/REST/v1/Locations\").query({\r\n\t\t\tquery: userInput,\r\n\t\t\tinclude: \"queryParse\",\r\n\t\t\tmaxRes: 5,\r\n\t\t\tkey: \"Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-\",\r\n\t\t\toutput: \"json\"\r\n\t\t})\r\n\t\t\t.finish((error, res) => {\r\n\t\t\t\tif (!error) {\r\n\t\t\t\t\t//console.log(res.body.resourceSets[0].resources)\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: GET_ADDRESS_PREDICTIONS,\r\n\t\t\t\t\t\tpayload: res.body.resourceSets[0].resources\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"GET_ADDRESS_PREDICTIONS_ERROR\", error)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t};\r\n}\r\n\r\n\r\n//get selected address\r\n\r\nexport function getSelectedAddress(payload) {\r\n\tconst dummyNumbers = {\r\n\t\tbaseFare: 0.4,\r\n\t\ttimeRate: 0.14,\r\n\t\tdistanceRate: 0.97,\r\n\t\tsurge: 1\r\n\t}\r\n\treturn (dispatch, store) => {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SELECTED_ADDRESS,\r\n\t\t\tpayload: payload\r\n\t\t})\r\n\t\t//Get the distance and time\r\n\t\tif (store().home.selectedAddress.selectedPickUp && store().home.selectedAddress.selectedDropOff) {\r\n\t\t\trequest.get(\"https://dev.virtualearth.net/REST/v1/Routes/DistanceMatrix\")\r\n\t\t\t\t.query({\r\n\t\t\t\t\torigins: store().home.selectedAddress.selectedPickUp.latitude + \",\" + store().home.selectedAddress.selectedPickUp.longitude,\r\n\t\t\t\t\tdestinations: store().home.selectedAddress.selectedDropOff.latitude + \",\" + store().home.selectedAddress.selectedDropOff.longitude,\r\n\t\t\t\t\ttravelMode: \"driving\",\r\n\t\t\t\t\tkey: \"Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-\"\r\n\t\t\t\t})\r\n\t\t\t\t.finish((error, res) => {\r\n\t\t\t\t\t//console.log('GET_DISTANCE_MATRIX',res.body)\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: GET_DISTANCE_MATRIX,\r\n\t\t\t\t\t\tpayload: res.body.resourceSets[0].resources[0].results[0]\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t}\r\n\t\tsetTimeout(function () {\r\n\t\t\tif (store().home.selectedAddress.selectedPickUp && store().home.selectedAddress.selectedDropOff) {\r\n\t\t\t\tconst fare = calculateFare(\r\n\t\t\t\t\tdummyNumbers.baseFare,\r\n\t\t\t\t\tdummyNumbers.timeRate,\r\n\t\t\t\t\tstore().home.distanceMatrix.travelDuration,\r\n\t\t\t\t\tdummyNumbers.distanceRate,\r\n\t\t\t\t\tstore().home.distanceMatrix.travelDistance,\r\n\t\t\t\t\tdummyNumbers.surge,\r\n\t\t\t\t);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: GET_FARE,\r\n\t\t\t\t\tpayload: fare\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}, 2000)\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n* This method will give you JSON response with all location points between 2 location\r\n*/\r\nexport function getRoutePoints(origin, destination) {\r\n\tconsole.log(\"-----getRoutePoints-----\")\r\n\tvar routeUrl = \"https://dev.virtualearth.net/REST/V1/Routes/Driving?wp.0=\" + origin + \"&wp.1=\" + destination + \"&key=\" + bingMapsKey\r\n\tconsole.log(\"URL -- >>\" + routeUrl);\r\n\treturn (dispatch, store) => {\r\n\t\t//dispatch({ type: ROUTE_POINTS_LOADING, loading: true })\r\n\t\taxios.get(routeUrl).then((res) => {\r\n\t\t\tconsole.log(\"hahaha\", res.data)\r\n\t\t\t//var cortemp = decode(responseJson.routes[0].overview_polyline.points) // definition below;\r\n\t\t\tvar cortemp = routesDecode(res)\r\n\t\t\tvar length = cortemp.length - 1;\r\n\t\t\tvar tempMARKERS = [];\r\n\t\t\ttempMARKERS.push(cortemp[0]);   //start origin        \r\n\t\t\ttempMARKERS.push(cortemp[length]); //only destination adding\r\n\t\t\tconsole.log(\"tempMARKERS : \" + JSON.stringify(tempMARKERS));\r\n\t\t\tlet obj = {\r\n\t\t\t\tcoords: cortemp,\r\n\t\t\t\tMARKERS: tempMARKERS,\r\n\t\t\t\tdestMarker: cortemp[length],\r\n\t\t\t\tstartMarker: cortemp[0],\r\n\r\n\t\t\t}\r\n\t\t\tdispatch({ type: ROUTE_POINTS, data: obj, loading: false });\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\n\r\n//BOOK CAR\r\n\r\nexport function bookCar() {\r\n\treturn (dispatch, store) => {\r\n\t\tconst userId = store().LoginReducer.userName\r\n\t\tconst nearByDrivers = store().home.nearByDrivers;\r\n\t\tconst nearByDriver = nearByDrivers[Math.floor(Math.random() * nearByDrivers.length)];\r\n\t\tconst payload = {\r\n\t\t\tdata: {\r\n\t\t\t\tuserId: userId,\r\n\t\t\t\tpickUp: {\r\n\t\t\t\t\taddress: store().home.selectedAddress.selectedPickUp.address,\r\n\t\t\t\t\tname: store().home.selectedAddress.selectedPickUp.name,\r\n\t\t\t\t\tlatitude: store().home.selectedAddress.selectedPickUp.latitude,\r\n\t\t\t\t\tlongitude: store().home.selectedAddress.selectedPickUp.longitude\r\n\t\t\t\t},\r\n\t\t\t\tdropOff: {\r\n\t\t\t\t\taddress: store().home.selectedAddress.selectedDropOff.address,\r\n\t\t\t\t\tname: store().home.selectedAddress.selectedDropOff.name,\r\n\t\t\t\t\tlatitude: store().home.selectedAddress.selectedDropOff.latitude,\r\n\t\t\t\t\tlongitude: store().home.selectedAddress.selectedDropOff.longitude\r\n\t\t\t\t},\r\n\t\t\t\tfare: store().home.fare,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t},\r\n\t\t\tnearByDriver: {\r\n\t\t\t\tsocketId: nearByDriver.socketId,\r\n\t\t\t\tdriverId: nearByDriver.driverId,\r\n\t\t\t\tlatitude: nearByDriver.coordinate.coordinates[1],\r\n\t\t\t\tlongitude: nearByDriver.coordinate.coordinates[0]\r\n\t\t\t}\r\n\t\t};\r\n\t\tserverCall({ method: 'POST', url: `/api/bookings`, data: payload })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tdispatch({ type: BOOK_CAR, payload: res.body });\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tconsole.log('BOOK_CAR error', error)\r\n\t\t\t});\r\n\t};\r\n}\r\n\r\n//get nearby drivers\r\n\r\nexport function getNearByDrivers(region) {\r\n\tconsole.log('getNearByDrivers', region)\r\n\treturn (dispatch, store) => {\r\n\t\t/* request.get(\"http://takearideapp.herokuapp.com/api/driverLocation\")\r\n\t\t\t.query({\r\n\t\t\t\tlatitude: region.latitude,\r\n\t\t\t\tlongitude: region.longitude\r\n\t\t\t})\r\n\t\t\t.finish((error, res) => {\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tconsole.log('GET_NEARBY_DRIVERS', res.body)\r\n\t\t\t\t\tdispatch({ type: GET_NEARBY_DRIVERS, payload: res.body });\r\n\t\t\t\t}\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.log('GET_NEARBY_DRIVERS error', error)\r\n\t\t\t\t}\r\n\t\t\t}); */\r\n\t\tserverCall({ method: 'GET', url: `/api/driverLocation?latitude=${region.latitude}&longitude=${region.longitude}` }).then(res => {\r\n\t\t\tconsole.log('GET_NEARBY_DRIVERS', res.body)\r\n\t\t\tdispatch({ type: GET_NEARBY_DRIVERS, payload: res.body });\r\n\t\t}).catch(error => {\r\n\t\t\tconsole.log('GET_NEARBY_DRIVERS error', error);\r\n\t\t})\r\n\t};\r\n}\r\n//--------------------\r\n//Action Handlers\r\n//--------------------\r\nfunction handleGetCurrentLocation(state, action) {\r\n\r\n\treturn update(state, {\r\n\t\tregion: {\r\n\t\t\tlatitude: {\r\n\t\t\t\t$set: action.payload.coords.latitude\r\n\t\t\t},\r\n\t\t\tlongitude: {\r\n\t\t\t\t$set: action.payload.coords.longitude\r\n\t\t\t},\r\n\t\t\tlatitudeDelta: {\r\n\t\t\t\t$set: LATITUDE_DELTA\r\n\t\t\t},\r\n\t\t\tlongitudeDelta: {\r\n\t\t\t\t$set: LONGITUDE_DELTA\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction handleGetInputDate(state, action) {\r\n\tconst { key, value } = action.payload;\r\n\treturn update(state, {\r\n\t\tinputData: {\r\n\t\t\t[key]: {\r\n\t\t\t\t$set: value\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction handleToggleSearchResult(state, action) {\r\n\tif (action.payload === \"pickUp\") {\r\n\t\treturn update(state, {\r\n\t\t\tresultTypes: {\r\n\t\t\t\tpickUp: {\r\n\t\t\t\t\t$set: true,\r\n\t\t\t\t},\r\n\t\t\t\tdropOff: {\r\n\t\t\t\t\t$set: false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpredictions: {\r\n\t\t\t\t$set: {}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\tif (action.payload === \"dropOff\") {\r\n\t\treturn update(state, {\r\n\t\t\tresultTypes: {\r\n\t\t\t\tpickUp: {\r\n\t\t\t\t\t$set: false,\r\n\t\t\t\t},\r\n\t\t\t\tdropOff: {\r\n\t\t\t\t\t$set: true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpredictions: {\r\n\t\t\t\t$set: {}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction handleGetAddressPredictions(state, action) {\r\n\treturn update(state, {\r\n\t\tpredictions: {\r\n\t\t\t$set: action.payload\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction handleGetSelectedAddress(state, action) {\r\n\tlet selectedTitle = state.resultTypes.pickUp ? \"selectedPickUp\" : \"selectedDropOff\"\r\n\treturn update(state, {\r\n\t\tselectedAddress: {\r\n\t\t\t[selectedTitle]: {\r\n\t\t\t\t$set: action.payload\r\n\t\t\t}\r\n\t\t},\r\n\t\tresultTypes: {\r\n\t\t\tpickUp: {\r\n\t\t\t\t$set: false\r\n\t\t\t},\r\n\t\t\tdropOff: {\r\n\t\t\t\t$set: false\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction handleGetDitanceMatrix(state, action) {\r\n\treturn update(state, {\r\n\t\tdistanceMatrix: {\r\n\t\t\t$set: action.payload\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction handleGetFare(state, action) {\r\n\treturn update(state, {\r\n\t\tfare: {\r\n\t\t\t$set: action.payload\r\n\t\t}\r\n\t})\r\n}\r\n\r\n//handle book car\r\n\r\nfunction handleBookCar(state, action) {\r\n\treturn update(state, {\r\n\t\tbooking: {\r\n\t\t\t$set: action.payload\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\n//handle get nearby drivers\r\nfunction handleGetNearbyDrivers(state, action) {\r\n\treturn update(state, {\r\n\t\tnearByDrivers: {\r\n\t\t\t$set: action.payload\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\nfunction handleBookingConfirmed(state, action) {\r\n\treturn update(state, {\r\n\t\tbooking: {\r\n\t\t\t$set: action.payload\r\n\t\t}\r\n\t});\r\n\r\n}\r\n\r\nfunction handleRoutePoints(state, action) {\r\n\treturn update(state, {\r\n\t\troute_points: {\r\n\t\t\t$set: action.data\r\n\t\t}\r\n\t});\r\n}\r\n\r\nconst ACTION_HANDLERS = {\r\n\tGET_CURRENT_LOCATION: handleGetCurrentLocation,\r\n\tGET_INPUT: handleGetInputDate,\r\n\tTOGGLE_SEARCH_RESULT: handleToggleSearchResult,\r\n\tGET_ADDRESS_PREDICTIONS: handleGetAddressPredictions,\r\n\tGET_SELECTED_ADDRESS: handleGetSelectedAddress,\r\n\tGET_DISTANCE_MATRIX: handleGetDitanceMatrix,\r\n\tGET_FARE: handleGetFare,\r\n\tBOOK_CAR: handleBookCar,\r\n\tGET_NEARBY_DRIVERS: handleGetNearbyDrivers,\r\n\tBOOKING_CONFIRMED: handleBookingConfirmed,\r\n\tROUTE_POINTS: handleRoutePoints\r\n\r\n\r\n}\r\nconst initialState = {\r\n\tregion: {},\r\n\tinputData: {},\r\n\tresultTypes: {},\r\n\tselectedAddress: {}\r\n\r\n\r\n};\r\n\r\nexport function HomeReducer(state = initialState, action) {\r\n\tconst handler = ACTION_HANDLERS[action.type];\r\n\r\n\treturn handler ? handler(state, action) : state;\r\n}\r\n\r\nfunction routesDecode(res) {\r\n\tconsole.log(\"hehehe\", res.data)\r\n\tlet arr = []\r\n\tlet s = res.data.resourceSets[0].resources[0].routeLegs[0].actualStart['coordinates'];\r\n\tarr.push({\r\n\t\tlatitude: s[0],\r\n\t\tlongitude: s[1]\r\n\t})\r\n\tlet dest = res.data.resourceSets[0].resources[0].routeLegs[0].itineraryItems.map(item => {\r\n\t\tlet t = item.maneuverPoint['coordinates']\r\n\t\treturn {\r\n\t\t\tlatitude: t[0],\r\n\t\t\tlongitude: t[1]\r\n\t\t}\r\n\t})\r\n\treturn arr.concat(dest)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"script"}