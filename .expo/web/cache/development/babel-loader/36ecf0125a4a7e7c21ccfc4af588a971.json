{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _action = require(\"../action\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\src\\\\modules\\\\home\\\\components\\\\searchresults.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar width = _reactNative.Dimensions.get(\"window\").width;\n\nfunction SearchResults(props) {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      predictions = _useState2[0],\n      setPredictions = _useState2[1];\n\n  function handleSelectedAddress(place) {\n    var obj = {\n      name: place.name,\n      address: place.address.formattedAddress,\n      latitude: place.point.coordinates[0],\n      longitude: place.point.coordinates[1]\n    };\n    props.getSelectedAddress(obj);\n  }\n\n  return _react.default.createElement(_nativeBase.View, {\n    style: styles.searchResultsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_nativeBase.List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, props.predictions.map(function (item) {\n    return _react.default.createElement(_nativeBase.View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }\n    }, _react.default.createElement(_nativeBase.ListItem, {\n      onPress: function onPress() {\n        return handleSelectedAddress(item);\n      },\n      button: true,\n      avatar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, _react.default.createElement(_nativeBase.Left, {\n      style: styles.leftContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, _react.default.createElement(_MaterialIcons.default, {\n      style: styles.leftIcon,\n      name: \"location-on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    })), _react.default.createElement(_nativeBase.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.primaryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, item.name), _react.default.createElement(_reactNative.Text, {\n      style: styles.secondaryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, item.address.formattedAddress))));\n  })));\n}\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    predictions: state.home.predictions || []\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, {\n  getSelectedAddress: _action.getSelectedAddress\n})(SearchResults);\n\nexports.default = _default;\nvar styles = {\n  searchResultsWrapper: {\n    top: 160,\n    position: \"absolute\",\n    width: width,\n    height: 1000,\n    backgroundColor: \"#fff\",\n    opacity: 0.9\n  },\n  primaryText: {\n    fontWeight: \"bold\",\n    color: \"#373737\"\n  },\n  secondaryText: {\n    fontStyle: \"italic\",\n    color: \"#7D7D7D\"\n  },\n  leftContainer: {\n    flexWrap: \"wrap\",\n    alignItems: \"flex-start\",\n    borderLeftColor: \"#7D7D7D\"\n  },\n  leftIcon: {\n    fontSize: 20,\n    color: \"#7D7D7D\"\n  },\n  distance: {\n    fontSize: 12\n  }\n};","map":{"version":3,"sources":["D:/WS/reactws/takearide/src/modules/home/components/searchresults.js"],"names":["width","Dimensions","get","SearchResults","props","predictions","setPredictions","handleSelectedAddress","place","obj","name","address","formattedAddress","latitude","point","coordinates","longitude","getSelectedAddress","styles","searchResultsWrapper","map","item","leftContainer","leftIcon","primaryText","secondaryText","mapStateToProps","state","home","top","position","height","backgroundColor","opacity","fontWeight","color","fontStyle","flexWrap","alignItems","borderLeftColor","fontSize","distance"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Text, Dimensions } from \"react-native\";\r\nimport { View, List, ListItem, Left, Body } from \"native-base\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\nimport { getSelectedAddress } from \"../action\"\r\nimport { connect } from \"react-redux\";\r\nvar width = Dimensions.get(\"window\").width; //full width\r\n\r\nfunction SearchResults(props) {\r\n    const [predictions, setPredictions] = useState([])\r\n    /* useEffect(() => {\r\n        if (props.predictions) {\r\n            setPredictions(props.predictions)\r\n        }\r\n    }, [props.predictions]) */\r\n\r\n    function handleSelectedAddress(place) {\r\n        let obj = {\r\n            name: place.name,\r\n            address: place.address.formattedAddress,\r\n            latitude: place.point.coordinates[0],\r\n            longitude: place.point.coordinates[1]\r\n        }\r\n        props.getSelectedAddress(obj)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.searchResultsWrapper} >\r\n            <List>\r\n                {props.predictions.map((item) => {\r\n                    return <View>\r\n                        <ListItem onPress={() => handleSelectedAddress(item)} button avatar>\r\n                            <Left style={styles.leftContainer}>\r\n                                <Icon style={styles.leftIcon} name=\"location-on\" />\r\n                            </Left>\r\n                            <Body>\r\n                                <Text style={styles.primaryText}>{item.name}</Text>\r\n                                <Text style={styles.secondaryText}>{item.address.formattedAddress}</Text>\r\n                            </Body>\r\n                        </ListItem>\r\n                    </View>\r\n                })}\r\n            </List>\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        predictions: state.home.predictions || [],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSelectedAddress })(SearchResults);\r\n\r\n\r\nconst styles = {\r\n    searchResultsWrapper: {\r\n        top: 160,\r\n        position: \"absolute\",\r\n        width: width,\r\n        height: 1000,\r\n        backgroundColor: \"#fff\",\r\n        opacity: 0.9\r\n    },\r\n    primaryText: {\r\n        fontWeight: \"bold\",\r\n        color: \"#373737\"\r\n    },\r\n    secondaryText: {\r\n        fontStyle: \"italic\",\r\n        color: \"#7D7D7D\",\r\n    },\r\n    leftContainer: {\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"flex-start\",\r\n        borderLeftColor: \"#7D7D7D\",\r\n    },\r\n    leftIcon: {\r\n        fontSize: 20,\r\n        color: \"#7D7D7D\",\r\n    },\r\n    distance: {\r\n        fontSize: 12,\r\n    }\r\n};"]},"metadata":{},"sourceType":"script"}