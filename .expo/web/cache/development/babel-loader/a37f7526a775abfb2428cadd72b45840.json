{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar Geolocation = {\n  setRNConfiguration: function setRNConfiguration() {\n    throw new Error('method not supported by the browser');\n  },\n  requestAuthorization: function requestAuthorization() {\n    throw new Error('method not supported by the browser');\n  },\n  getCurrentPosition: function getCurrentPosition(success, error, options) {\n    return _regenerator.default.async(function getCurrentPosition$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof success !== 'function')) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('success callback must be a function');\n\n          case 4:\n            if (!(!navigator || !navigator.geolocation)) {\n              _context.next = 7;\n              break;\n            }\n\n            console.error('Navigator is undefined');\n            return _context.abrupt(\"return\");\n\n          case 7:\n            navigator.geolocation.getCurrentPosition(success, error, options);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  },\n  watchPosition: function watchPosition(success, error, options) {\n    if (typeof success !== 'function') {\n      throw new Error('success callback must be a function');\n    } else if (!navigator || !navigator.geolocation) {\n      console.error('Navigator is undefined');\n      return;\n    }\n\n    navigator.geolocation.watchPosition(success, error, options);\n  },\n  clearWatch: function clearWatch(watchID) {\n    if (!navigator || !navigator.geolocation) {\n      console.error('Navigator is undefined');\n      return;\n    }\n\n    navigator.geolocation.clearWatch(watchID);\n  },\n  stopObserving: function stopObserving() {\n    throw new Error('method not supported by the browser');\n  }\n};\nmodule.exports = Geolocation;","map":{"version":3,"sources":["implementation.js"],"names":["Geolocation","setRNConfiguration","requestAuthorization","getCurrentPosition","navigator","console","watchPosition","clearWatch","stopObserving","module"],"mappings":";;;;AAgBA,IAAMA,WAAW,GAAG;AAClBC,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,GAAW;AAC7B,UAAM,IAAA,KAAA,CAAN,qCAAM,CAAN;AAFgB,GAAA;AAIlBC,EAAAA,oBAAoB,EAAE,SAAA,oBAAA,GAAW;AAC/B,UAAM,IAAA,KAAA,CAAN,qCAAM,CAAN;AALgB,GAAA;AAOlBC,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA;AAAA,WAAA,YAAA,CAAA,OAAA,CAAA,KAAA,CAAA,SAAA,mBAAA,CAAA,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,eAAA,CAAA;AAAA,gBAAA,EAKd,OAAA,OAAA,KALc,UAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;AAAA;;AAAA,kBAMV,IAAA,KAAA,CANU,qCAMV,CANU;;AAAA,eAAA,CAAA;AAAA,gBAAA,EAOP,CAAA,SAAA,IAAc,CAACC,SAAS,CAPjB,WAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;AAQhBC;;AAAAA,YAAAA,OAAO,CAAPA,KAAAA,CAAAA,wBAAAA;AARgB,mBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA;;AAAA,eAAA,CAAA;AAWlBD,YAAAA,SAAS,CAATA,WAAAA,CAAAA,kBAAAA,CAAAA,OAAAA,EAAAA,KAAAA,EAAAA,OAAAA;;AAXkB,eAAA,CAAA;AAAA,eAAA,KAAA;AAAA,mBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,CAAA;AAPF,GAAA;AAoBlBE,EAAAA,aAAa,EAAE,SAAA,aAAA,CAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAIb;AACA,QAAI,OAAA,OAAA,KAAJ,UAAA,EAAmC;AACjC,YAAM,IAAA,KAAA,CAAN,qCAAM,CAAN;AADF,KAAA,MAEO,IAAI,CAAA,SAAA,IAAc,CAACF,SAAS,CAA5B,WAAA,EAA0C;AAC/CC,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,wBAAAA;AACA;AAEFD;;AAAAA,IAAAA,SAAS,CAATA,WAAAA,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,KAAAA,EAAAA,OAAAA;AA/BgB,GAAA;AAiClBG,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,OAAA,EAA0B;AACpC,QAAI,CAAA,SAAA,IAAc,CAACH,SAAS,CAA5B,WAAA,EAA0C;AACxCC,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,wBAAAA;AACA;AAEFD;;AAAAA,IAAAA,SAAS,CAATA,WAAAA,CAAAA,UAAAA,CAAAA,OAAAA;AAtCgB,GAAA;AAwClBI,EAAAA,aAAa,EAAE,SAAA,aAAA,GAAW;AACxB,UAAM,IAAA,KAAA,CAAN,qCAAM,CAAN;AAzCJ;AAAoB,CAApB;AA4CAC,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\ntype GeoOptions = {\n  timeout?: number,\n  maximumAge?: number,\n  enableHighAccuracy?: boolean,\n};\n\nconst Geolocation = {\n  setRNConfiguration: function() {\n    throw new Error('method not supported by the browser');\n  },\n  requestAuthorization: function() {\n    throw new Error('method not supported by the browser');\n  },\n  getCurrentPosition: async function(\n    success: Function,\n    error?: Function,\n    options?: GeoOptions,\n  ) {\n    if (typeof success !== 'function') {\n      throw new Error('success callback must be a function');\n    } else if (!navigator || !navigator.geolocation) {\n      console.error('Navigator is undefined');\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(success, error, options);\n  },\n  watchPosition: function(\n    success: Function,\n    error?: Function,\n    options?: GeoOptions,\n  ) {\n    if (typeof success !== 'function') {\n      throw new Error('success callback must be a function');\n    } else if (!navigator || !navigator.geolocation) {\n      console.error('Navigator is undefined');\n      return;\n    }\n    navigator.geolocation.watchPosition(success, error, options);\n  },\n  clearWatch: function(watchID: number) {\n    if (!navigator || !navigator.geolocation) {\n      console.error('Navigator is undefined');\n      return;\n    }\n    navigator.geolocation.clearWatch(watchID);\n  },\n  stopObserving: function() {\n    throw new Error('method not supported by the browser');\n  },\n};\nmodule.exports = Geolocation;\n"]},"metadata":{},"sourceType":"script"}