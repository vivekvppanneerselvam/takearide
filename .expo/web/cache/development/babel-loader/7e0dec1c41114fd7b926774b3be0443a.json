{"ast":null,"code":"var Utils = require('./utils');\n\nvar internals = {\n  delimiter: '&',\n  depth: 5,\n  arrayLimit: 20,\n  parameterLimit: 1000,\n  strictNullHandling: false,\n  plainObjects: false,\n  allowPrototypes: false,\n  allowDots: false\n};\n\ninternals.parseValues = function (str, options) {\n  var obj = {};\n  var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n  for (var i = 0, il = parts.length; i < il; ++i) {\n    var part = parts[i];\n    var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n    var key, val;\n\n    if (pos === -1) {\n      key = Utils.decode(part);\n      val = options.strictNullHandling ? null : '';\n    } else {\n      key = Utils.decode(part.slice(0, pos));\n      val = Utils.decode(part.slice(pos + 1));\n    }\n\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      obj[key] = [].concat(obj[key]).concat(val);\n    } else {\n      obj[key] = val;\n    }\n  }\n\n  return obj;\n};\n\ninternals.parseObject = function (chain, val, options) {\n  if (!chain.length) {\n    return val;\n  }\n\n  var root = chain.shift();\n  var obj;\n\n  if (root === '[]') {\n    obj = [];\n    obj = obj.concat(internals.parseObject(chain, val, options));\n  } else {\n    obj = options.plainObjects ? Object.create(null) : {};\n    var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n    var index = parseInt(cleanRoot, 10);\n    var indexString = '' + index;\n\n    if (!isNaN(index) && root !== cleanRoot && indexString === cleanRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {\n      obj = [];\n      obj[index] = internals.parseObject(chain, val, options);\n    } else {\n      obj[cleanRoot] = internals.parseObject(chain, val, options);\n    }\n  }\n\n  return obj;\n};\n\ninternals.parseKeys = function (key, val, options) {\n  if (!key) {\n    return;\n  }\n\n  if (options.allowDots) {\n    key = key.replace(/\\.([^\\.\\[]+)/g, '[$1]');\n  }\n\n  var parent = /^([^\\[\\]]*)/;\n  var child = /(\\[[^\\[\\]]*\\])/g;\n  var segment = parent.exec(key);\n  var keys = [];\n\n  if (segment[1]) {\n    if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1])) {\n      if (!options.allowPrototypes) {\n        return;\n      }\n    }\n\n    keys.push(segment[1]);\n  }\n\n  var i = 0;\n\n  while ((segment = child.exec(key)) !== null && i < options.depth) {\n    ++i;\n\n    if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1].replace(/\\[|\\]/g, ''))) {\n      if (!options.allowPrototypes) {\n        continue;\n      }\n    }\n\n    keys.push(segment[1]);\n  }\n\n  if (segment) {\n    keys.push('[' + key.slice(segment.index) + ']');\n  }\n\n  return internals.parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, options) {\n  options = options || {};\n  options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;\n  options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;\n  options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;\n  options.parseArrays = options.parseArrays !== false;\n  options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : internals.allowDots;\n  options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;\n  options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;\n  options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;\n  options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;\n\n  if (str === '' || str === null || typeof str === 'undefined') {\n    return options.plainObjects ? Object.create(null) : {};\n  }\n\n  var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;\n  var obj = options.plainObjects ? Object.create(null) : {};\n  var keys = Object.keys(tempObj);\n\n  for (var i = 0, il = keys.length; i < il; ++i) {\n    var key = keys[i];\n    var newObj = internals.parseKeys(key, tempObj[key], options);\n    obj = Utils.merge(obj, newObj, options);\n  }\n\n  return Utils.compact(obj);\n};","map":{"version":3,"sources":["D:/WS/reactws/takearide/node_modules/react-native-google-places-autocomplete/node_modules/qs/lib/parse.js"],"names":["Utils","require","internals","delimiter","depth","arrayLimit","parameterLimit","strictNullHandling","plainObjects","allowPrototypes","allowDots","parseValues","str","options","obj","parts","split","Infinity","undefined","i","il","length","part","pos","indexOf","key","val","decode","slice","Object","prototype","hasOwnProperty","call","concat","parseObject","chain","root","shift","create","cleanRoot","index","parseInt","indexString","isNaN","parseArrays","parseKeys","replace","parent","child","segment","exec","keys","push","module","exports","isRegExp","tempObj","newObj","merge","compact"],"mappings":"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","sourcesContent":["// Load modules\n\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {\n    delimiter: '&',\n    depth: 5,\n    arrayLimit: 20,\n    parameterLimit: 1000,\n    strictNullHandling: false,\n    plainObjects: false,\n    allowPrototypes: false,\n    allowDots: false\n};\n\n\ninternals.parseValues = function (str, options) {\n\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0, il = parts.length; i < il; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = Utils.decode(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = Utils.decode(part.slice(0, pos));\n            val = Utils.decode(part.slice(pos + 1));\n        }\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\n\ninternals.parseObject = function (chain, val, options) {\n\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(internals.parseObject(chain, val, options));\n    }\n    else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n        var index = parseInt(cleanRoot, 10);\n        var indexString = '' + index;\n        if (!isNaN(index) &&\n            root !== cleanRoot &&\n            indexString === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays &&\n             index <= options.arrayLimit)) {\n\n            obj = [];\n            obj[index] = internals.parseObject(chain, val, options);\n        }\n        else {\n            obj[cleanRoot] = internals.parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\n\ninternals.parseKeys = function (key, val, options) {\n\n    if (!key) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n\n    if (options.allowDots) {\n        key = key.replace(/\\.([^\\.\\[]+)/g, '[$1]');\n    }\n\n    // The regex chunks\n\n    var parent = /^([^\\[\\]]*)/;\n    var child = /(\\[[^\\[\\]]*\\])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects &&\n            Object.prototype.hasOwnProperty(segment[1])) {\n\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n\n        ++i;\n        if (!options.plainObjects &&\n            Object.prototype.hasOwnProperty(segment[1].replace(/\\[|\\]/g, ''))) {\n\n            if (!options.allowPrototypes) {\n                continue;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return internals.parseObject(keys, val, options);\n};\n\n\nmodule.exports = function (str, options) {\n\n    options = options || {};\n    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : internals.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;\n\n    if (str === '' ||\n        str === null ||\n        typeof str === 'undefined') {\n\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0, il = keys.length; i < il; ++i) {\n        var key = keys[i];\n        var newObj = internals.parseKeys(key, tempObj[key], options);\n        obj = Utils.merge(obj, newObj, options);\n    }\n\n    return Utils.compact(obj);\n};\n"]},"metadata":{},"sourceType":"script"}