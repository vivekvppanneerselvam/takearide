{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createIconButtonComponent;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _isString = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _omit = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"./react-native\");\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\node_modules\\\\react-native-star-rating\\\\node_modules\\\\react-native-vector-icons\\\\lib\\\\icon-button.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8\n  },\n  touchable: {\n    overflow: 'hidden'\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent'\n  }\n});\n\nvar IOS7_BLUE = '#007AFF';\n\nfunction createIconButtonComponent(Icon) {\n  var _class, _temp;\n\n  return _temp = _class = function (_PureComponent) {\n    (0, _inherits2.default)(IconButton, _PureComponent);\n\n    var _super = _createSuper(IconButton);\n\n    function IconButton() {\n      (0, _classCallCheck2.default)(this, IconButton);\n      return _super.apply(this, arguments);\n    }\n\n    (0, _createClass2.default)(IconButton, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            style = _this$props.style,\n            iconStyle = _this$props.iconStyle,\n            children = _this$props.children,\n            restProps = (0, _objectWithoutProperties2.default)(_this$props, [\"style\", \"iconStyle\", \"children\"]);\n        var iconProps = (0, _pick.default)(restProps, Object.keys(_reactNative.Text.propTypes), 'style', 'name', 'size', 'color');\n        var touchableProps = (0, _pick.default)(restProps, Object.keys(_reactNative.TouchableHighlight.propTypes));\n        var props = (0, _omit.default)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');\n        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n        var colorStyle = (0, _pick.default)(this.props, 'color');\n        var blockStyle = (0, _pick.default)(this.props, 'backgroundColor', 'borderRadius');\n        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({\n          style: [styles.touchable, blockStyle]\n        }, touchableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }\n        }), _react.default.createElement(_reactNative.View, (0, _extends2.default)({\n          style: [styles.container, blockStyle, style]\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        }), _react.default.createElement(Icon, (0, _extends2.default)({}, iconProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        })), (0, _isString.default)(children) ? _react.default.createElement(_reactNative.Text, {\n          style: [styles.text, colorStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }, children) : children));\n      }\n    }]);\n    return IconButton;\n  }(_react.PureComponent), _class.propTypes = {\n    backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    borderRadius: _propTypes.default.number,\n    color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    size: _propTypes.default.number,\n    iconStyle: _propTypes.default.any,\n    style: _propTypes.default.any,\n    children: _propTypes.default.node\n  }, _class.defaultProps = {\n    backgroundColor: IOS7_BLUE,\n    borderRadius: 5,\n    color: 'white',\n    size: 20\n  }, _temp;\n}","map":{"version":3,"sources":["D:/WS/reactws/takearide/node_modules/react-native-star-rating/node_modules/react-native-vector-icons/lib/icon-button.js"],"names":["styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","IOS7_BLUE","createIconButtonComponent","Icon","props","style","iconStyle","children","restProps","iconProps","Object","keys","Text","propTypes","touchableProps","TouchableHighlight","colorStyle","blockStyle","PureComponent","PropTypes","oneOfType","string","number","borderRadius","color","size","any","node","defaultProps"],"mappings":"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","sourcesContent":["import isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from './react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        Object.keys(Text.propTypes),\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(\n        restProps,\n        Object.keys(TouchableHighlight.propTypes)\n      );\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {isString(children) ? (\n              <Text style={[styles.text, colorStyle]}>{children}</Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}