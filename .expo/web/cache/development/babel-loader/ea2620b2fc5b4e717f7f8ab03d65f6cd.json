{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SearchBox = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\n\nvar _reactNativeGooglePlacesAutocomplete = require(\"react-native-google-places-autocomplete\");\n\nvar _action = require(\"../action\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\src\\\\modules\\\\home\\\\components\\\\searchbox.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar width = _reactNative.Dimensions.get(\"window\").width;\n\nvar SearchBox = function SearchBox(props) {\n  var _ref = props.selectedAddress || {},\n      selectedPickUp = _ref.selectedPickUp,\n      selectedDropOff = _ref.selectedDropOff;\n\n  var handleInput = function handleInput(key, val) {\n    console.log('handleInput', val);\n    props.toggleSearchResultModal(key);\n    props.getInputData({\n      key: key,\n      value: val\n    });\n    props.getAddressPredictions();\n  };\n\n  (0, _react.useEffect)(function () {}, []);\n  return _react.default.createElement(_nativeBase.View, {\n    style: styles.searchBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, _react.default.createElement(_nativeBase.View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"PICK UP\"), _react.default.createElement(_nativeBase.InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_FontAwesome.default, {\n    name: \"search\",\n    size: 15,\n    color: \"#FF5E3A\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }), _react.default.createElement(_nativeBase.Input, {\n    style: styles.inputSearch,\n    placeholder: \"Choose pick-up location\",\n    onChangeText: function onChangeText(e) {\n      return handleInput(\"pickUp\", e);\n    },\n    value: selectedPickUp && selectedPickUp.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }))), _react.default.createElement(_nativeBase.View, {\n    style: styles.secondInputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"DROP-OFF\"), _react.default.createElement(_nativeBase.InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_FontAwesome.default, {\n    name: \"search\",\n    size: 15,\n    color: \"#FF5E3A\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }), _react.default.createElement(_nativeBase.Input, {\n    style: styles.inputSearch,\n    placeholder: \"Choose drop-off location\",\n    onChangeText: function onChangeText(e) {\n      return handleInput(\"dropOff\", e);\n    },\n    value: selectedDropOff && selectedDropOff.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexports.SearchBox = SearchBox;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedAddress: state.home.selectedAddress || {}\n  };\n};\n\nvar mapActionCreators = {\n  getInputData: _action.getInputData,\n  toggleSearchResultModal: _action.toggleSearchResultModal,\n  getAddressPredictions: _action.getAddressPredictions,\n  getSelectedAddress: _action.getSelectedAddress\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapActionCreators)(SearchBox);\n\nexports.default = _default;\nvar styles = {\n  searchBox: {\n    top: 0,\n    position: \"absolute\",\n    width: width\n  },\n  inputWrapper: {\n    marginLeft: 15,\n    marginRight: 10,\n    marginTop: 10,\n    marginBottom: 3,\n    backgroundColor: \"#fff\",\n    opacity: 0.9,\n    borderRadius: 0\n  },\n  secondInputWrapper: {\n    marginLeft: 15,\n    marginRight: 10,\n    marginTop: 0,\n    backgroundColor: \"#fff\",\n    opacity: 0.9,\n    borderRadius: 0\n  },\n  inputSearch: {\n    fontSize: 14\n  },\n  label: {\n    fontSize: 8,\n    fontStyle: \"italic\",\n    marginLeft: 10,\n    marginTop: 0,\n    marginBottom: 0\n  },\n  searchTextBox: {\n    textInputContainer: {\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderTopWidth: 0,\n      borderRadius: 0,\n      borderBottomWidth: 0\n    },\n    textInput: {\n      marginLeft: 0,\n      marginRight: 0,\n      height: 38,\n      color: '#5d5d5d',\n      fontSize: 16,\n      borderRadius: 0\n    },\n    predefinedPlacesDescription: {\n      color: '#1faadb'\n    },\n    description: {\n      fontWeight: 'bold'\n    },\n    listView: {\n      color: 'black',\n      zIndex: 16\n    }\n  }\n};\n{}","map":{"version":3,"sources":["D:/WS/reactws/takearide/src/modules/home/components/searchbox.js"],"names":["width","Dimensions","get","SearchBox","props","selectedAddress","selectedPickUp","selectedDropOff","handleInput","key","val","console","log","toggleSearchResultModal","getInputData","value","getAddressPredictions","styles","searchBox","inputWrapper","label","inputSearch","e","name","secondInputWrapper","mapStateToProps","state","home","mapActionCreators","getSelectedAddress","top","position","marginLeft","marginRight","marginTop","marginBottom","backgroundColor","opacity","borderRadius","fontSize","fontStyle","searchTextBox","textInputContainer","borderTopWidth","borderBottomWidth","textInput","height","color","predefinedPlacesDescription","description","fontWeight","listView","zIndex"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Text, Dimensions } from \"react-native\";\r\nimport { View, InputGroup, Input } from \"native-base\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\n\r\nvar width = Dimensions.get(\"window\").width; //full width\r\nimport {\r\n\tgetInputData,\r\n\ttoggleSearchResultModal,\r\n\tgetAddressPredictions,\r\n\tgetSelectedAddress\r\n} from \"../action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const SearchBox = (props) => {\r\n\tconst { selectedPickUp, selectedDropOff } = props.selectedAddress || {};\r\n\tconst handleInput = (key, val) => {\r\n\t\tconsole.log('handleInput', val)\r\n\t\tprops.toggleSearchResultModal(key)\r\n\t\tprops.getInputData({\r\n\t\t\tkey,\r\n\t\t\tvalue: val\r\n\t\t});\r\n\t\t//props.getSelectedAddress(val)\r\n\t\tprops.getAddressPredictions();\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\t//props.getAddressPredictions()\r\n\t},[])\r\n\r\n\treturn (\r\n\t\t<View style={styles.searchBox}>\r\n\t\t\t<View style={styles.inputWrapper}>\r\n\t\t\t\t<Text style={styles.label}>PICK UP</Text>\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<Icon name=\"search\" size={15} color=\"#FF5E3A\" />\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\t//onFocus={() => props.toggleSearchResultModal(\"pickUp\")}\r\n\t\t\t\t\t\tstyle={styles.inputSearch}\r\n\t\t\t\t\t\tplaceholder=\"Choose pick-up location\"\r\n\t\t\t\t\t\tonChangeText={(e)=> handleInput(\"pickUp\", e)}\r\n\t\t\t\t\t\tvalue={selectedPickUp && selectedPickUp.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</View>\r\n\t\t\t<View style={styles.secondInputWrapper}>\r\n\t\t\t\t<Text style={styles.label}>DROP-OFF</Text>\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<Icon name=\"search\" size={15} color=\"#FF5E3A\" />\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\t//onFocus={() => toggleSearchResultModal(\"dropOff\")}\r\n\t\t\t\t\t\tstyle={styles.inputSearch}\r\n\t\t\t\t\t\tplaceholder=\"Choose drop-off location\"\r\n\t\t\t\t\t\tonChangeText={(e)=> handleInput(\"dropOff\", e)}\r\n\t\t\t\t\t\tvalue={selectedDropOff && selectedDropOff.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</View> \r\n\t\t</View>\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tselectedAddress: state.home.selectedAddress || {},\r\n\t}\r\n}\r\n\r\nconst mapActionCreators = {\r\n\tgetInputData,\r\n\ttoggleSearchResultModal,\r\n\tgetAddressPredictions,\r\n\tgetSelectedAddress\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionCreators)(SearchBox)\r\n\r\nconst styles = {\r\n\tsearchBox: {\r\n\t\ttop: 0,\r\n\t\tposition: \"absolute\",\r\n\t\twidth: width\r\n\t},\r\n\tinputWrapper: {\r\n\t\tmarginLeft: 15,\r\n\t\tmarginRight: 10,\r\n\t\tmarginTop: 10,\r\n\t\tmarginBottom: 3,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\topacity: 0.9,\r\n\t\tborderRadius: 0\t\t\r\n\t},\r\n\tsecondInputWrapper: {\r\n\t\tmarginLeft: 15,\r\n\t\tmarginRight: 10,\r\n\t\tmarginTop: 0,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\topacity: 0.9,\r\n\t\tborderRadius: 0\r\n\t},\r\n\tinputSearch: {\r\n\t\tfontSize: 14\r\n\t},\r\n\tlabel: {\r\n\t\tfontSize: 8,\r\n\t\tfontStyle: \"italic\",\r\n\t\tmarginLeft: 10,\r\n\t\tmarginTop: 0,\r\n\t\tmarginBottom: 0\r\n\t},\r\n\tsearchTextBox: {\r\n\t\ttextInputContainer: {\r\n\t\t\tbackgroundColor: 'rgba(0,0,0,0)',\r\n\t\t\tborderTopWidth: 0,\r\n\t\t\tborderRadius: 0,\r\n\t\t\tborderBottomWidth: 0\r\n\t\t},\r\n\t\ttextInput: {\r\n\t\t\tmarginLeft: 0,\r\n\t\t\tmarginRight: 0,\r\n\t\t\theight: 38,\r\n\t\t\tcolor: '#5d5d5d',\r\n\t\t\tfontSize: 16,\r\n\t\t\tborderRadius: 0\r\n\t\t},\r\n\t\tpredefinedPlacesDescription: {\r\n\t\t\tcolor: '#1faadb'\r\n\t\t},\r\n\t\tdescription: {\r\n\t\t\tfontWeight: 'bold',\r\n\t\t},\r\n\t\tlistView: {\r\n\t\t\tcolor: 'black', //To see where exactly the list is\r\n\t\t\tzIndex: 16 //To popover the component outwards\r\n\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n\r\n{/* <View style={styles.searchBox}>\r\n\t\t\t<View style={styles.inputWrapper}>\r\n\t\t\t\t<GooglePlacesAutocomplete\r\n\t\t\t\t\tplaceholder='Choose Pick Up Location'\r\n\t\t\t\t\tstyles={styles.searchTextBox}\r\n\t\t\t\t\tminLength={2} // minimum length of text to search\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\treturnKeyType={'search'} // Can be left out for default return key \r\n\t\t\t\t\tlistViewDisplayed={false}    // true/false/undefined\r\n\t\t\t\t\tcurrentLocation={true}\r\n\t\t\t\t\tcurrentLocationLabel=\"Your location\"\r\n\t\t\t\t\tfetchDetails={true}\r\n\t\t\t\t\tvalue={selectedPickUp}\r\n\t\t\t\t\tonPress={(data, details) => { // 'details' is provided when fetchDetails = true\r\n\t\t\t\t\t\thandleInput('pickUp', {\r\n\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\taddress: data.vicinity,\r\n\t\t\t\t\t\t\tlatitude: details.geometry.location.lat,\r\n\t\t\t\t\t\t\tlongitude: details.geometry.location.lng\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t//props.notifyChange(details.geometry.location);\r\n\t\t\t\t\t\t//alert('adf',data);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttextInputProps={{\r\n\t\t\t\t\t\tonChangeText: (text) => {\r\n\t\t\t\t\t\t\t//console.log('location',text)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tquery={{\r\n\t\t\t\t\t\tkey: 'AIzaSyBZrbcOPXXQzy4Q6V51IW5Bm0LVokkXP6o',\r\n\t\t\t\t\t\tlanguage: 'en'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tnearbyPlacesAPI='GooglePlacesSearch'\r\n\t\t\t\t\tdebounce={300}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t<View style={styles.secondInputWrapper}>\r\n\t\t\t\t<GooglePlacesAutocomplete\r\n\t\t\t\t\tplaceholder='Choose Drop Off Location'\r\n\t\t\t\t\tstyles={styles.searchTextBox}\r\n\t\t\t\t\tminLength={2} // minimum length of text to search\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\treturnKeyType={'search'} // Can be left out for default return key \r\n\t\t\t\t\tlistViewDisplayed={false}    // true/false/undefined\r\n\t\t\t\t\tfetchDetails={true}\r\n\t\t\t\t\tvalue={selectedDropOff}\r\n\t\t\t\t\tonPress={(data, details = null) => { // 'details' is provided when fetchDetails = true\r\n\t\t\t\t\t\thandleInput('dropOff', {\r\n\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\taddress: data.vicinity,\r\n\t\t\t\t\t\t\tlatitude: details.geometry.location.lat,\r\n\t\t\t\t\t\t\tlongitude: details.geometry.location.lng\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t//props.notifyChange(details.geometry.location);\t\t\t\t\t\t\t\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tquery={{\r\n\t\t\t\t\t\tkey: 'AIzaSyBZrbcOPXXQzy4Q6V51IW5Bm0LVokkXP6o',\r\n\t\t\t\t\t\tlanguage: 'en'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tnearbyPlacesAPI='GooglePlacesSearch'\r\n\t\t\t\t\tdebounce={300}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</View> */}"]},"metadata":{},"sourceType":"script"}