{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.MapContainer = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _searchbox = _interopRequireDefault(require(\"./searchbox\"));\n\nvar _searchresults = _interopRequireDefault(require(\"./searchresults\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNativeMapsDirections = _interopRequireDefault(require(\"react-native-maps-directions\"));\n\nvar _action = require(\"../action\");\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\src\\\\modules\\\\home\\\\components\\\\mapcontainer.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar MapContainer = function MapContainer(props) {\n  var _ref = props.selectedAddress || {},\n      selectedPickUp = _ref.selectedPickUp,\n      selectedDropOff = _ref.selectedDropOff;\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      regions = _useState2[0],\n      setRegions = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isSearchResult = _useState4[0],\n      setIsSearchResult = _useState4[1];\n\n  var getCoordsFromName = function getCoordsFromName(loc) {\n    console.log(\"location\", location);\n    setRegions({\n      latitude: loc.lat,\n      longitude: loc.lng,\n      latitudeDelta: 0.003,\n      longitudeDelta: 0.003\n    });\n  };\n\n  var _useState5 = (0, _react.useState)({\n    MARKERS: null,\n    origin: '22.9962,72.5996',\n    destination: '23.0134,72.5624',\n    destMarker: '',\n    startMarker: '',\n    imageloaded: false\n  }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      state = _useState6[0],\n      setState = _useState6[1];\n\n  (0, _react.useEffect)(function () {\n    props.getRoutePoints(state.origin, state.destination);\n  }, []);\n  (0, _react.useEffect)(function () {\n    if (selectedPickUp && selectedDropOff) {\n      var origin = selectedPickUp.latitude + ',' + selectedPickUp.longitude,\n          destination = selectedDropOff.latitude + ',' + selectedDropOff.longitude;\n      props.getRoutePoints(origin, destination);\n    }\n  }, [props.selectedAddress]);\n  (0, _react.useEffect)(function () {\n    if (props.resultTypes.pickUp || props.resultTypes.dropOff) {\n      console.log(\"props.resultTypes.pickUp\", props.resultTypes.pickUp);\n    }\n  }, [props.resultTypes]);\n  (0, _react.useEffect)(function () {\n    if (props.route_points) {\n      setState(props.route_points);\n    }\n  }, [props.route_points]);\n\n  function decode(t, e) {\n    for (var n, o, u = 0, l = 0, r = 0, d = [], h = 0, i = 0, a = null, c = Math.pow(10, e || 5); u < t.length;) {\n      a = null, h = 0, i = 0;\n\n      do {\n        a = t.charCodeAt(u++) - 63, i |= (31 & a) << h, h += 5;\n      } while (a >= 32);\n\n      n = 1 & i ? ~(i >> 1) : i >> 1, h = i = 0;\n\n      do {\n        a = t.charCodeAt(u++) - 63, i |= (31 & a) << h, h += 5;\n      } while (a >= 32);\n\n      o = 1 & i ? ~(i >> 1) : i >> 1, l += n, r += o, d.push([l / c, r / c]);\n    }\n\n    return d = d.map(function (t) {\n      return {\n        latitude: t[0],\n        longitude: t[1]\n      };\n    });\n  }\n\n  function forceUpdateMap() {\n    console.log(\"-----forceUpdateMap------\");\n    setState(function (prevState) {\n      prevState.imageloaded = true;\n      return _objectSpread({}, prevState);\n    });\n  }\n\n  function fitAllMarkers() {\n    var temMark = state.MARKERS;\n    console.log(\"------fitAllMarkers------\");\n    setState(function (prevState) {\n      prevState.loading = false;\n      return _objectSpread({}, prevState);\n    });\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }\n  }, _react.default.createElement(_reactNativeMaps.default, {\n    showsUserLocation: true,\n    provider: _reactNativeMaps.default.PROVIDER_GOOGLE,\n    style: styles.map,\n    initialRegion: props.region,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }\n  }, selectedPickUp && _react.default.createElement(_reactNativeMaps.Marker, {\n    coordinate: {\n      latitude: selectedPickUp.latitude,\n      longitude: selectedPickUp.longitude\n    },\n    pinColor: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }), selectedDropOff && _react.default.createElement(_reactNativeMaps.Marker, {\n    coordinate: {\n      latitude: selectedDropOff.latitude,\n      longitude: selectedDropOff.longitude\n    },\n    pinColor: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 6\n    }\n  }), props.nearByDrivers && props.nearByDrivers.map(function (marker, index) {\n    return _react.default.createElement(_reactNativeMaps.Marker, {\n      key: index,\n      coordinate: {\n        latitude: marker.coordinate.coordinates[1],\n        longitude: marker.coordinate.coordinates[0]\n      },\n      image: props.carMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    });\n  }), selectedPickUp && selectedDropOff && _react.default.createElement(_reactNativeMapsDirections.default, {\n    origin: {\n      latitude: selectedPickUp.latitude,\n      longitude: selectedPickUp.longitude\n    },\n    destination: {\n      latitude: selectedDropOff.latitude,\n      longitude: selectedDropOff.longitude\n    },\n    apikey: 'Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-',\n    strokeWidth: 3,\n    strokeColor: \"hotpink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 45\n    }\n  }), selectedPickUp && selectedDropOff && _react.default.createElement(_reactNativeMaps.default.Polyline, {\n    coordinates: state.coords,\n    strokeWidth: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 45\n    }\n  })), _react.default.createElement(_searchbox.default, {\n    notifyChange: function notifyChange(loc) {\n      return getCoordsFromName(loc);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }\n  }), (props.resultTypes.pickUp || props.resultTypes.dropOff) && _react.default.createElement(_searchresults.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }));\n};\n\nexports.MapContainer = MapContainer;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedAddress: state.home.selectedAddress || {},\n    nearByDrivers: state.home.nearByDrivers || [],\n    resultTypes: state.home.resultTypes || {},\n    predictions: state.home.predictions || [],\n    route_points: state.home.route_points || {}\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, {\n  getSelectedAddress: _action.getSelectedAddress,\n  getRoutePoints: _action.getRoutePoints\n})(MapContainer);\n\nexports.default = _default;\nvar styles = {\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  map: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject)\n};","map":{"version":3,"sources":["D:/WS/reactws/takearide/src/modules/home/components/mapcontainer.js"],"names":["MapContainer","props","selectedAddress","selectedPickUp","selectedDropOff","regions","setRegions","isSearchResult","setIsSearchResult","getCoordsFromName","loc","console","log","location","latitude","lat","longitude","lng","latitudeDelta","longitudeDelta","MARKERS","origin","destination","destMarker","startMarker","imageloaded","state","setState","getRoutePoints","resultTypes","pickUp","dropOff","route_points","decode","t","e","n","o","u","l","r","d","h","i","a","c","Math","pow","length","charCodeAt","push","map","forceUpdateMap","prevState","fitAllMarkers","temMark","loading","styles","container","MapView","PROVIDER_GOOGLE","region","nearByDrivers","marker","index","coordinate","coordinates","carMarker","coords","mapStateToProps","home","predictions","getSelectedAddress","flex","justifyContent","alignItems","StyleSheet","absoluteFillObject"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,aAEMA,KAAK,CAACC,eAAN,IAAyB,EAF/B;AAAA,MAE9BC,cAF8B,QAE9BA,cAF8B;AAAA,MAEdC,eAFc,QAEdA,eAFc;;AAAA,kBAGR,qBAAS,EAAT,CAHQ;AAAA;AAAA,MAG/BC,OAH+B;AAAA,MAGtBC,UAHsB;;AAAA,mBAIM,qBAAS,KAAT,CAJN;AAAA;AAAA,MAI/BC,cAJ+B;AAAA,MAIfC,iBAJe;;AAKtC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAxB;AACAP,IAAAA,UAAU,CAAC;AACVQ,MAAAA,QAAQ,EAAEJ,GAAG,CAACK,GADJ;AAEVC,MAAAA,SAAS,EAAEN,GAAG,CAACO,GAFL;AAGVC,MAAAA,aAAa,EAAE,KAHL;AAIVC,MAAAA,cAAc,EAAE;AAJN,KAAD,CAAV;AAMA,GARD;;AALsC,mBAcZ,qBAAS;AAClCC,IAAAA,OAAO,EAAE,IADyB;AAElCC,IAAAA,MAAM,EAAE,iBAF0B;AAGlCC,IAAAA,WAAW,EAAE,iBAHqB;AAIlCC,IAAAA,UAAU,EAAE,EAJsB;AAKlCC,IAAAA,WAAW,EAAE,EALqB;AAMlCC,IAAAA,WAAW,EAAE;AANqB,GAAT,CAdY;AAAA;AAAA,MAc/BC,KAd+B;AAAA,MAcxBC,QAdwB;;AAuBtC,wBAAU,YAAM;AACf1B,IAAAA,KAAK,CAAC2B,cAAN,CAAqBF,KAAK,CAACL,MAA3B,EAAmCK,KAAK,CAACJ,WAAzC;AACA,GAFD,EAEG,EAFH;AAIA,wBAAU,YAAM;AACf,QAAInB,cAAc,IAAIC,eAAtB,EAAuC;AACtC,UAAIiB,MAAM,GAAGlB,cAAc,CAACW,QAAf,GAA0B,GAA1B,GAAgCX,cAAc,CAACa,SAA5D;AAAA,UAAuEM,WAAW,GAAGlB,eAAe,CAACU,QAAhB,GAA2B,GAA3B,GAAiCV,eAAe,CAACY,SAAtI;AACAf,MAAAA,KAAK,CAAC2B,cAAN,CAAqBP,MAArB,EAA6BC,WAA7B;AACA;AACD,GALD,EAKG,CAACrB,KAAK,CAACC,eAAP,CALH;AAOA,wBAAU,YAAM;AACf,QAAKD,KAAK,CAAC4B,WAAN,CAAkBC,MAAlB,IAA4B7B,KAAK,CAAC4B,WAAN,CAAkBE,OAAnD,EAA6D;AAE5DpB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCX,KAAK,CAAC4B,WAAN,CAAkBC,MAA1D;AACA;AACD,GALD,EAKG,CAAC7B,KAAK,CAAC4B,WAAP,CALH;AAQA,wBAAU,YAAM;AACf,QAAI5B,KAAK,CAAC+B,YAAV,EAAwB;AACvBL,MAAAA,QAAQ,CAAC1B,KAAK,CAAC+B,YAAP,CAAR;AACA;AACD,GAJD,EAIG,CAAC/B,KAAK,CAAC+B,YAAP,CAJH;;AAWA,WAASC,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACrB,SAAK,IAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAC,GAAG,CAAd,EAAiBC,CAAC,GAAG,CAArB,EAAwBC,CAAC,GAAG,CAA5B,EAA+BC,CAAC,GAAG,EAAnC,EAAuCC,CAAC,GAAG,CAA3C,EAA8CC,CAAC,GAAG,CAAlD,EAAqDC,CAAC,GAAG,IAAzD,EAA+DC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaZ,CAAC,IAAI,CAAlB,CAAxE,EAA8FG,CAAC,GAAGJ,CAAC,CAACc,MAApG,GAA6G;AAC5GJ,MAAAA,CAAC,GAAG,IAAJ,EAAUF,CAAC,GAAG,CAAd,EAAiBC,CAAC,GAAG,CAArB;;AACA;AAAGC,QAAAA,CAAC,GAAGV,CAAC,CAACe,UAAF,CAAaX,CAAC,EAAd,IAAoB,EAAxB,EAA4BK,CAAC,IAAI,CAAC,KAAKC,CAAN,KAAYF,CAA7C,EAAgDA,CAAC,IAAI,CAArD;AAAH,eAAkEE,CAAC,IAAI,EAAvE;;AACAR,MAAAA,CAAC,GAAG,IAAIO,CAAJ,GAAQ,EAAEA,CAAC,IAAI,CAAP,CAAR,GAAoBA,CAAC,IAAI,CAA7B,EAAgCD,CAAC,GAAGC,CAAC,GAAG,CAAxC;;AACA;AAAGC,QAAAA,CAAC,GAAGV,CAAC,CAACe,UAAF,CAAaX,CAAC,EAAd,IAAoB,EAAxB,EAA4BK,CAAC,IAAI,CAAC,KAAKC,CAAN,KAAYF,CAA7C,EAAgDA,CAAC,IAAI,CAArD;AAAH,eAAkEE,CAAC,IAAI,EAAvE;;AACAP,MAAAA,CAAC,GAAG,IAAIM,CAAJ,GAAQ,EAAEA,CAAC,IAAI,CAAP,CAAR,GAAoBA,CAAC,IAAI,CAA7B,EAAgCJ,CAAC,IAAIH,CAArC,EAAwCI,CAAC,IAAIH,CAA7C,EAAgDI,CAAC,CAACS,IAAF,CAAO,CAACX,CAAC,GAAGM,CAAL,EAAQL,CAAC,GAAGK,CAAZ,CAAP,CAAhD;AACA;;AACD,WAAOJ,CAAC,GAAGA,CAAC,CAACU,GAAF,CAAM,UAAUjB,CAAV,EAAa;AAC7B,aAAO;AACNpB,QAAAA,QAAQ,EAAEoB,CAAC,CAAC,CAAD,CADL;AAENlB,QAAAA,SAAS,EAAEkB,CAAC,CAAC,CAAD;AAFN,OAAP;AAIA,KALU,CAAX;AAMA;;AAKD,WAASkB,cAAT,GAA0B;AACzBzC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAe,IAAAA,QAAQ,CAAC,UAAA0B,SAAS,EAAI;AACrBA,MAAAA,SAAS,CAAC5B,WAAV,GAAwB,IAAxB;AACA,+BAAa4B,SAAb;AACA,KAHO,CAAR;AAIA;;AAKD,WAASC,aAAT,GAAyB;AACxB,QAAMC,OAAO,GAAG7B,KAAK,CAACN,OAAtB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAe,IAAAA,QAAQ,CAAC,UAAA0B,SAAS,EAAI;AACrBA,MAAAA,SAAS,CAACG,OAAV,GAAoB,KAApB;AACA,+BAAaH,SAAb;AACA,KAHO,CAAR;AAcA;;AACD,SACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,6BAAC,wBAAD;AACC,IAAA,iBAAiB,MADlB;AAEC,IAAA,QAAQ,EAAEC,yBAAQC,eAFnB;AAGC,IAAA,KAAK,EAAEH,MAAM,CAACN,GAHf;AAIC,IAAA,aAAa,EAAElD,KAAK,CAAC4D,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME1D,cAAc,IACd,6BAAC,uBAAD;AACC,IAAA,UAAU,EAAE;AAAEW,MAAAA,QAAQ,EAAEX,cAAc,CAACW,QAA3B;AAAqCE,MAAAA,SAAS,EAAEb,cAAc,CAACa;AAA/D,KADb;AAEC,IAAA,QAAQ,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaEZ,eAAe,IACf,6BAAC,uBAAD;AACC,IAAA,UAAU,EAAE;AAAEU,MAAAA,QAAQ,EAAEV,eAAe,CAACU,QAA5B;AAAsCE,MAAAA,SAAS,EAAEZ,eAAe,CAACY;AAAjE,KADb;AAEC,IAAA,QAAQ,EAAC,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAsBEf,KAAK,CAAC6D,aAAN,IAAuB7D,KAAK,CAAC6D,aAAN,CAAoBX,GAApB,CAAwB,UAACY,MAAD,EAASC,KAAT;AAAA,WAC9C,6BAAC,uBAAD;AACC,MAAA,GAAG,EAAEA,KADN;AAEC,MAAA,UAAU,EAAE;AAAElD,QAAAA,QAAQ,EAAEiD,MAAM,CAACE,UAAP,CAAkBC,WAAlB,CAA8B,CAA9B,CAAZ;AAA8ClD,QAAAA,SAAS,EAAE+C,MAAM,CAACE,UAAP,CAAkBC,WAAlB,CAA8B,CAA9B;AAAzD,OAFb;AAGC,MAAA,KAAK,EAAEjE,KAAK,CAACkE,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD8C;AAAA,GAAxB,CAtBzB,EA8BGhE,cAAc,IAAIC,eAAnB,IAAuC,6BAAC,kCAAD;AACvC,IAAA,MAAM,EAAE;AAAEU,MAAAA,QAAQ,EAAEX,cAAc,CAACW,QAA3B;AAAqCE,MAAAA,SAAS,EAAEb,cAAc,CAACa;AAA/D,KAD+B;AAEvC,IAAA,WAAW,EAAE;AAAEF,MAAAA,QAAQ,EAAEV,eAAe,CAACU,QAA5B;AAAsCE,MAAAA,SAAS,EAAEZ,eAAe,CAACY;AAAjE,KAF0B;AAGvC,IAAA,MAAM,EAAE,kEAH+B;AAIvC,IAAA,WAAW,EAAE,CAJ0B;AAKvC,IAAA,WAAW,EAAC,SAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BzC,EAuCGb,cAAc,IAAIC,eAAnB,IAAuC,6BAAE,wBAAF,CAAU,QAAV;AACvC,IAAA,WAAW,EAAEsB,KAAK,CAAC0C,MADoB;AAEvC,IAAA,WAAW,EAAE,CAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCzC,CADD,EA6CC,6BAAC,kBAAD;AAAW,IAAA,YAAY,EAAE,sBAAC1D,GAAD;AAAA,aAASD,iBAAiB,CAACC,GAAD,CAA1B;AAAA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CD,EA8CE,CAACT,KAAK,CAAC4B,WAAN,CAAkBC,MAAlB,IAA4B7B,KAAK,CAAC4B,WAAN,CAAkBE,OAA/C,KACA,6BAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CF,CADD;AAoDA,CAzJM;;;;AA2JP,IAAMsC,eAAe,GAAG,SAAlBA,eAAkB,CAAC3C,KAAD,EAAW;AAClC,SAAO;AACNxB,IAAAA,eAAe,EAAEwB,KAAK,CAAC4C,IAAN,CAAWpE,eAAX,IAA8B,EADzC;AAEN4D,IAAAA,aAAa,EAAEpC,KAAK,CAAC4C,IAAN,CAAWR,aAAX,IAA4B,EAFrC;AAGNjC,IAAAA,WAAW,EAAEH,KAAK,CAAC4C,IAAN,CAAWzC,WAAX,IAA0B,EAHjC;AAIN0C,IAAAA,WAAW,EAAE7C,KAAK,CAAC4C,IAAN,CAAWC,WAAX,IAA0B,EAJjC;AAKNvC,IAAAA,YAAY,EAAEN,KAAK,CAAC4C,IAAN,CAAWtC,YAAX,IAA2B;AALnC,GAAP;AAOA,CARD;;eAUe,yBAAQqC,eAAR,EAAyB;AAAEG,EAAAA,kBAAkB,EAAlBA,0BAAF;AAAsB5C,EAAAA,cAAc,EAAdA;AAAtB,CAAzB,EAAiE5B,YAAjE,C;;;AAGf,IAAMyD,MAAM,GAAG;AACdC,EAAAA,SAAS,EAAE;AACVe,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,cAAc,EAAE,QAFN;AAGVC,IAAAA,UAAU,EAAE;AAHF,GADG;AAMdxB,EAAAA,GAAG,oBACCyB,wBAAWC,kBADZ;AANW,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport SearchBox from \"./searchbox\";\r\nimport SearchResults from \"./searchresults\";\r\nimport { connect } from \"react-redux\";\r\nimport MapViewDirections from 'react-native-maps-directions';\r\nimport { getSelectedAddress, getRoutePoints } from \"../action\"\r\n\r\n\r\nexport const MapContainer = (props) => {\r\n\r\n\tconst { selectedPickUp, selectedDropOff } = props.selectedAddress || {};\r\n\tconst [regions, setRegions] = useState({})\r\n\tconst [isSearchResult, setIsSearchResult] = useState(false)\r\n\tconst getCoordsFromName = (loc) => {\r\n\t\tconsole.log(\"location\", location)\r\n\t\tsetRegions({\r\n\t\t\tlatitude: loc.lat,\r\n\t\t\tlongitude: loc.lng,\r\n\t\t\tlatitudeDelta: 0.003,\r\n\t\t\tlongitudeDelta: 0.003\r\n\t\t});\r\n\t}\r\n\tconst [state, setState] = useState({\r\n\t\tMARKERS: null,\r\n\t\torigin: '22.9962,72.5996',\r\n\t\tdestination: '23.0134,72.5624',\r\n\t\tdestMarker: '',\r\n\t\tstartMarker: '',\r\n\t\timageloaded: false,\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.getRoutePoints(state.origin, state.destination);\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedPickUp && selectedDropOff) {\r\n\t\t\tlet origin = selectedPickUp.latitude + ',' + selectedPickUp.longitude, destination = selectedDropOff.latitude + ',' + selectedDropOff.longitude\r\n\t\t\tprops.getRoutePoints(origin, destination);\r\n\t\t}\r\n\t}, [props.selectedAddress])\r\n\r\n\tuseEffect(() => {\r\n\t\tif ((props.resultTypes.pickUp || props.resultTypes.dropOff)) {\r\n\t\t\t//setIsSearchResult(true)\r\n\t\t\tconsole.log(\"props.resultTypes.pickUp\", props.resultTypes.pickUp)\r\n\t\t}\r\n\t}, [props.resultTypes])\r\n\t//console.log(\"props.resultTypes.pickUp\",props.resultTypes.pickUp)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.route_points) {\r\n\t\t\tsetState(props.route_points)\r\n\t\t}\r\n\t}, [props.route_points])\r\n\r\n\r\n\t/**\r\n\t * This method will transforms something like this geocFltrhVvDsEtA}ApSsVrDaEvAcBSYOS_@... to an array of coordinates\r\n\t */\r\n\r\n\tfunction decode(t, e) {\r\n\t\tfor (var n, o, u = 0, l = 0, r = 0, d = [], h = 0, i = 0, a = null, c = Math.pow(10, e || 5); u < t.length;) {\r\n\t\t\ta = null, h = 0, i = 0;\r\n\t\t\tdo a = t.charCodeAt(u++) - 63, i |= (31 & a) << h, h += 5; while (a >= 32);\r\n\t\t\tn = 1 & i ? ~(i >> 1) : i >> 1, h = i = 0;\r\n\t\t\tdo a = t.charCodeAt(u++) - 63, i |= (31 & a) << h, h += 5; while (a >= 32);\r\n\t\t\to = 1 & i ? ~(i >> 1) : i >> 1, l += n, r += o, d.push([l / c, r / c])\r\n\t\t}\r\n\t\treturn d = d.map(function (t) {\r\n\t\t\treturn {\r\n\t\t\t\tlatitude: t[0],\r\n\t\t\t\tlongitude: t[1]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * After loading custome image of marker it will render map and refresh map will image\r\n\t */\r\n\tfunction forceUpdateMap() {\r\n\t\tconsole.log(\"-----forceUpdateMap------\")\r\n\t\tsetState(prevState => {\r\n\t\t\tprevState.imageloaded = true\r\n\t\t\treturn ({ ...prevState })\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * This method will fit all markers point into single screen \r\n\t */\r\n\tfunction fitAllMarkers() {\r\n\t\tconst temMark = state.MARKERS;\r\n\t\tconsole.log(\"------fitAllMarkers------\")\r\n\t\tsetState(prevState => {\r\n\t\t\tprevState.loading = false\r\n\t\t\treturn ({ ...prevState })\r\n\t\t});\r\n\t\t/* if (this.mapRef == null) {\r\n\t\t\tconsole.log(\"map is null\")\r\n\t\t} else {\r\n\t\t\t//option:1  \r\n\t\t\tconsole.log(\"temMark : \" + JSON.stringify(temMark));\r\n\t\t\tthis.mapRef.fitToCoordinates(temMark, {\r\n\t\t\t\tedgePadding: DEFAULT_PADDING,\r\n\t\t\t\tanimated: false,\r\n\t\t\t});\r\n\t\t} */\r\n\t}\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<MapView\r\n\t\t\t\tshowsUserLocation\r\n\t\t\t\tprovider={MapView.PROVIDER_GOOGLE}\r\n\t\t\t\tstyle={styles.map}\r\n\t\t\t\tinitialRegion={props.region}\r\n\t\t\t>\r\n\t\t\t\t{selectedPickUp &&\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tcoordinate={{ latitude: selectedPickUp.latitude, longitude: selectedPickUp.longitude }}\r\n\t\t\t\t\t\tpinColor=\"green\"\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{selectedDropOff &&\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tcoordinate={{ latitude: selectedDropOff.latitude, longitude: selectedDropOff.longitude }}\r\n\t\t\t\t\t\tpinColor=\"blue\"\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.nearByDrivers && props.nearByDrivers.map((marker, index) =>\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tcoordinate={{ latitude: marker.coordinate.coordinates[1], longitude: marker.coordinate.coordinates[0] }}\r\n\t\t\t\t\t\t\timage={props.carMarker}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t{(selectedPickUp && selectedDropOff) && <MapViewDirections\r\n\t\t\t\t\torigin={{ latitude: selectedPickUp.latitude, longitude: selectedPickUp.longitude }}\r\n\t\t\t\t\tdestination={{ latitude: selectedDropOff.latitude, longitude: selectedDropOff.longitude }}\r\n\t\t\t\t\tapikey={'Ajfr4PZQDQEuJgGWbAD39XbfQsYbc0zrpKY8B2aYzFxfs0h7dkvF-oGJyV0HS-H-'}\r\n\t\t\t\t\tstrokeWidth={3}\r\n\t\t\t\t\tstrokeColor=\"hotpink\"\r\n\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{/*used to drae line on rout point of locations*/}\r\n\t\t\t\t{(selectedPickUp && selectedDropOff) && < MapView.Polyline\r\n\t\t\t\t\tcoordinates={state.coords}\r\n\t\t\t\t\tstrokeWidth={2}\r\n\t\t\t\t/>}\r\n\t\t\t</MapView>\r\n\t\t\t<SearchBox notifyChange={(loc) => getCoordsFromName(loc)} />\r\n\t\t\t{(props.resultTypes.pickUp || props.resultTypes.dropOff) &&\r\n\t\t\t\t<SearchResults />\r\n\t\t\t}\r\n\t\t</View>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tselectedAddress: state.home.selectedAddress || {},\r\n\t\tnearByDrivers: state.home.nearByDrivers || [],\r\n\t\tresultTypes: state.home.resultTypes || {},\r\n\t\tpredictions: state.home.predictions || [],\r\n\t\troute_points: state.home.route_points || {}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSelectedAddress, getRoutePoints })(MapContainer);\r\n\r\n\r\nconst styles = {\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\"\r\n\t},\r\n\tmap: {\r\n\t\t...StyleSheet.absoluteFillObject\r\n\t}\r\n}"]},"metadata":{},"sourceType":"script"}