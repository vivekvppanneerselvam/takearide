{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _geolocation = _interopRequireDefault(require(\"@react-native-community/geolocation\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\takearide\\\\node_modules\\\\react-native-google-places-autocomplete\\\\GooglePlacesAutocomplete.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar navigator = {\n  geolocation: _geolocation.default\n};\n\nvar WINDOW = _reactNative.Dimensions.get('window');\n\nvar defaultStyles = {\n  container: {\n    flex: 1\n  },\n  textInputContainer: {\n    backgroundColor: '#C9C9CE',\n    height: 44,\n    borderTopColor: '#7e7e7e',\n    borderBottomColor: '#b5b5b5',\n    borderTopWidth: 1 / _reactNative.PixelRatio.get(),\n    borderBottomWidth: 1 / _reactNative.PixelRatio.get(),\n    flexDirection: 'row'\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 28,\n    borderRadius: 5,\n    paddingTop: 4.5,\n    paddingBottom: 4.5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginTop: 7.5,\n    marginLeft: 8,\n    marginRight: 8,\n    fontSize: 15,\n    flex: 1\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  powered: {},\n  listView: {},\n  row: {\n    padding: 13,\n    height: 44,\n    flexDirection: 'row'\n  },\n  separator: {\n    height: _reactNative.StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc'\n  },\n  description: {},\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20\n  },\n  androidLoader: {\n    marginRight: -15\n  }\n};\n\nvar GooglePlacesAutocomplete = function (_Component) {\n  (0, _inherits2.default)(GooglePlacesAutocomplete, _Component);\n\n  var _super = _createSuper(GooglePlacesAutocomplete);\n\n  function GooglePlacesAutocomplete(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, GooglePlacesAutocomplete);\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this._results = [];\n    _this._requests = [];\n\n    _this.getInitialState = function () {\n      return {\n        text: _this.props.getDefaultValue(),\n        dataSource: _this.buildRowsFromResults([]),\n        listViewDisplayed: _this.props.listViewDisplayed === 'auto' ? false : _this.props.listViewDisplayed\n      };\n    };\n\n    _this.setAddressText = function (address) {\n      return _this.setState({\n        text: address\n      });\n    };\n\n    _this.getAddressText = function () {\n      return _this.state.text;\n    };\n\n    _this.buildRowsFromResults = function (results) {\n      var res = [];\n\n      if (results.length === 0 || _this.props.predefinedPlacesAlwaysVisible === true) {\n        res = (0, _toConsumableArray2.default)(_this.props.predefinedPlaces);\n\n        if (_this.props.currentLocation === true) {\n          res.unshift({\n            description: _this.props.currentLocationLabel,\n            isCurrentLocation: true\n          });\n        }\n      }\n\n      res = res.map(function (place) {\n        return _objectSpread({}, place, {\n          isPredefinedPlace: true\n        });\n      });\n      return [].concat((0, _toConsumableArray2.default)(res), (0, _toConsumableArray2.default)(results));\n    };\n\n    _this._abortRequests = function () {\n      _this._requests.map(function (i) {\n        return i.abort();\n      });\n\n      _this._requests = [];\n    };\n\n    _this.triggerFocus = function () {\n      if (_this.refs.textInput) _this.refs.textInput.focus();\n    };\n\n    _this.triggerBlur = function () {\n      if (_this.refs.textInput) _this.refs.textInput.blur();\n    };\n\n    _this.getCurrentLocation = function () {\n      var options = {\n        enableHighAccuracy: false,\n        timeout: 20000,\n        maximumAge: 1000\n      };\n\n      if (_this.props.enableHighAccuracyLocation && _reactNative.Platform.OS === 'android') {\n        options = {\n          enableHighAccuracy: true,\n          timeout: 20000\n        };\n      }\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        if (_this.props.nearbyPlacesAPI === 'None') {\n          var currentLocation = {\n            description: _this.props.currentLocationLabel,\n            geometry: {\n              location: {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              }\n            }\n          };\n\n          _this._disableRowLoaders();\n\n          _this.props.onPress(currentLocation, currentLocation);\n        } else {\n          _this._requestNearby(position.coords.latitude, position.coords.longitude);\n        }\n      }, function (error) {\n        _this._disableRowLoaders();\n\n        alert(error.message);\n      }, options);\n    };\n\n    _this._onPress = function (rowData) {\n      if (rowData.isPredefinedPlace !== true && _this.props.fetchDetails === true) {\n        if (rowData.isLoading === true) {\n          return;\n        }\n\n        _reactNative.Keyboard.dismiss();\n\n        _this._abortRequests();\n\n        _this._enableRowLoader(rowData);\n\n        var request = new XMLHttpRequest();\n\n        _this._requests.push(request);\n\n        request.timeout = _this.props.timeout;\n        request.ontimeout = _this.props.onTimeout;\n\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) return;\n\n          if (request.status === 200) {\n            var responseJSON = JSON.parse(request.responseText);\n\n            if (responseJSON.status === 'OK') {\n              if (_this._isMounted === true) {\n                var details = responseJSON.result;\n\n                _this._disableRowLoaders();\n\n                _this._onBlur();\n\n                _this.setState({\n                  text: _this._renderDescription(rowData)\n                });\n\n                delete rowData.isLoading;\n\n                _this.props.onPress(rowData, details);\n              }\n            } else {\n              _this._disableRowLoaders();\n\n              if (_this.props.autoFillOnNotFound) {\n                _this.setState({\n                  text: _this._renderDescription(rowData)\n                });\n\n                delete rowData.isLoading;\n              }\n\n              if (!_this.props.onNotFound) {\n                console.warn('google places autocomplete: ' + responseJSON.status);\n              } else {\n                _this.props.onNotFound(responseJSON);\n              }\n            }\n          } else {\n            _this._disableRowLoaders();\n\n            if (!_this.props.onFail) {\n              console.warn('google places autocomplete: request could not be completed or has been aborted');\n            } else {\n              _this.props.onFail('request could not be completed or has been aborted');\n            }\n          }\n        };\n\n        request.open('GET', 'https://maps.googleapis.com/maps/api/place/details/json?' + _qs.default.stringify(_objectSpread({\n          key: _this.props.query.key,\n          placeid: rowData.place_id,\n          language: _this.props.query.language\n        }, _this.props.GooglePlacesDetailsQuery)));\n\n        if (_this.props.query.origin !== null) {\n          request.setRequestHeader('Referer', _this.props.query.origin);\n        }\n\n        request.send();\n      } else if (rowData.isCurrentLocation === true) {\n        _this._enableRowLoader(rowData);\n\n        _this.setState({\n          text: _this._renderDescription(rowData)\n        });\n\n        _this.triggerBlur();\n\n        delete rowData.isLoading;\n\n        _this.getCurrentLocation();\n      } else {\n        _this.setState({\n          text: _this._renderDescription(rowData)\n        });\n\n        _this._onBlur();\n\n        delete rowData.isLoading;\n\n        var predefinedPlace = _this._getPredefinedPlace(rowData);\n\n        _this.props.onPress(predefinedPlace, predefinedPlace);\n      }\n    };\n\n    _this._enableRowLoader = function (rowData) {\n      var rows = _this.buildRowsFromResults(_this._results);\n\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].place_id === rowData.place_id || rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true) {\n          rows[i].isLoading = true;\n\n          _this.setState({\n            dataSource: rows\n          });\n\n          break;\n        }\n      }\n    };\n\n    _this._disableRowLoaders = function () {\n      if (_this._isMounted === true) {\n        for (var i = 0; i < _this._results.length; i++) {\n          if (_this._results[i].isLoading === true) {\n            _this._results[i].isLoading = false;\n          }\n        }\n\n        _this.setState({\n          dataSource: _this.buildRowsFromResults(_this._results)\n        });\n      }\n    };\n\n    _this._getPredefinedPlace = function (rowData) {\n      if (rowData.isPredefinedPlace !== true) {\n        return rowData;\n      }\n\n      for (var i = 0; i < _this.props.predefinedPlaces.length; i++) {\n        if (_this.props.predefinedPlaces[i].description === rowData.description) {\n          return _this.props.predefinedPlaces[i];\n        }\n      }\n\n      return rowData;\n    };\n\n    _this._filterResultsByTypes = function (unfilteredResults, types) {\n      if (types.length === 0) return unfilteredResults;\n      var results = [];\n\n      for (var i = 0; i < unfilteredResults.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < types.length; j++) {\n          if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n            found = true;\n            break;\n          }\n        }\n\n        if (found === true) {\n          results.push(unfilteredResults[i]);\n        }\n      }\n\n      return results;\n    };\n\n    _this._requestNearby = function (latitude, longitude) {\n      _this._abortRequests();\n\n      if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n        var request = new XMLHttpRequest();\n\n        _this._requests.push(request);\n\n        request.timeout = _this.props.timeout;\n        request.ontimeout = _this.props.onTimeout;\n\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          if (request.status === 200) {\n            var responseJSON = JSON.parse(request.responseText);\n\n            _this._disableRowLoaders();\n\n            if (typeof responseJSON.results !== 'undefined') {\n              if (_this._isMounted === true) {\n                var results = [];\n\n                if (_this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n                  results = _this._filterResultsByTypes(responseJSON.results, _this.props.filterReverseGeocodingByTypes);\n                } else {\n                  results = responseJSON.results;\n                }\n\n                _this.setState({\n                  dataSource: _this.buildRowsFromResults(results)\n                });\n              }\n            }\n\n            if (typeof responseJSON.error_message !== 'undefined') {\n              if (!_this.props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n                _this.props.onFail(responseJSON.error_message);\n              }\n            }\n          } else {}\n        };\n\n        var url = '';\n\n        if (_this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n          url = 'https://maps.googleapis.com/maps/api/geocode/json?' + _qs.default.stringify(_objectSpread({\n            latlng: latitude + ',' + longitude,\n            key: _this.props.query.key\n          }, _this.props.GoogleReverseGeocodingQuery));\n        } else {\n          url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?' + _qs.default.stringify(_objectSpread({\n            location: latitude + ',' + longitude,\n            key: _this.props.query.key\n          }, _this.props.GooglePlacesSearchQuery));\n        }\n\n        request.open('GET', url);\n\n        if (_this.props.query.origin !== null) {\n          request.setRequestHeader('Referer', _this.props.query.origin);\n        }\n\n        request.send();\n      } else {\n        _this._results = [];\n\n        _this.setState({\n          dataSource: _this.buildRowsFromResults([])\n        });\n      }\n    };\n\n    _this._request = function (text) {\n      _this._abortRequests();\n\n      if (text.length >= _this.props.minLength) {\n        var request = new XMLHttpRequest();\n\n        _this._requests.push(request);\n\n        request.timeout = _this.props.timeout;\n        request.ontimeout = _this.props.onTimeout;\n\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          if (request.status === 200) {\n            var responseJSON = JSON.parse(request.responseText);\n\n            if (typeof responseJSON.predictions !== 'undefined') {\n              if (_this._isMounted === true) {\n                var results = _this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding' ? _this._filterResultsByTypes(responseJSON.predictions, _this.props.filterReverseGeocodingByTypes) : responseJSON.predictions;\n                _this._results = results;\n\n                _this.setState({\n                  dataSource: _this.buildRowsFromResults(results)\n                });\n              }\n            }\n\n            if (typeof responseJSON.error_message !== 'undefined') {\n              if (!_this.props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n                _this.props.onFail(responseJSON.error_message);\n              }\n            }\n          } else {}\n        };\n\n        if (_this.props.preProcess) {\n          text = _this.props.preProcess(text);\n        }\n\n        request.open('GET', 'https://maps.googleapis.com/maps/api/place/autocomplete/json?&input=' + encodeURIComponent(text) + '&' + _qs.default.stringify(_this.props.query));\n\n        if (_this.props.query.origin !== null) {\n          request.setRequestHeader('Referer', _this.props.query.origin);\n        }\n\n        request.send();\n      } else {\n        _this._results = [];\n\n        _this.setState({\n          dataSource: _this.buildRowsFromResults([])\n        });\n      }\n    };\n\n    _this._onChangeText = function (text) {\n      _this._request(text);\n\n      _this.setState({\n        text: text,\n        listViewDisplayed: _this._isMounted || _this.props.autoFocus\n      });\n    };\n\n    _this._handleChangeText = function (text) {\n      _this._onChangeText(text);\n\n      var onChangeText = _this.props && _this.props.textInputProps && _this.props.textInputProps.onChangeText;\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n    };\n\n    _this._renderRowData = function (rowData) {\n      if (_this.props.renderRow) {\n        return _this.props.renderRow(rowData);\n      }\n\n      return _react.default.createElement(_reactNative.Text, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.description, _this.props.styles.description, rowData.isPredefinedPlace ? _this.props.styles.predefinedPlacesDescription : {}],\n        numberOfLines: _this.props.numberOfLines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 7\n        }\n      }, _this._renderDescription(rowData));\n    };\n\n    _this._renderDescription = function (rowData) {\n      if (_this.props.renderDescription) {\n        return _this.props.renderDescription(rowData);\n      }\n\n      return rowData.description || rowData.formatted_address || rowData.name;\n    };\n\n    _this._renderLoader = function (rowData) {\n      if (rowData.isLoading === true) {\n        return _react.default.createElement(_reactNative.View, {\n          style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.loader, _this.props.styles.loader],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 9\n          }\n        }, _this._getRowLoader());\n      }\n\n      return null;\n    };\n\n    _this._renderRow = function () {\n      var rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var sectionID = arguments.length > 1 ? arguments[1] : undefined;\n      var rowID = arguments.length > 2 ? arguments[2] : undefined;\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: {\n          flex: 1\n        },\n        scrollEnabled: _this.props.isRowScrollable,\n        keyboardShouldPersistTaps: _this.props.keyboardShouldPersistTaps,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: {\n          width: WINDOW.width\n        },\n        onPress: function onPress() {\n          return _this._onPress(rowData);\n        },\n        underlayColor: _this.props.listUnderlayColor || \"#c8c7cc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.row, _this.props.styles.row, rowData.isPredefinedPlace ? _this.props.styles.specialItemRow : {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }\n      }, _this._renderLoader(rowData), _this._renderRowData(rowData))));\n    };\n\n    _this._renderSeparator = function (sectionID, rowID) {\n      if (rowID == _this.state.dataSource.length - 1) {\n        return null;\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        key: sectionID + \"-\" + rowID,\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.separator, _this.props.styles.separator],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._onBlur = function () {\n      _this.triggerBlur();\n\n      _this.setState({\n        listViewDisplayed: false\n      });\n    };\n\n    _this._onFocus = function () {\n      return _this.setState({\n        listViewDisplayed: true\n      });\n    };\n\n    _this._renderPoweredLogo = function () {\n      if (!_this._shouldShowPoweredLogo()) {\n        return null;\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, _this.props.styles.poweredContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.powered, _this.props.styles.powered],\n        resizeMode: \"contain\",\n        source: require('./images/powered_by_google_on_white.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this._shouldShowPoweredLogo = function () {\n      if (!_this.props.enablePoweredByContainer || _this.state.dataSource.length == 0) {\n        return false;\n      }\n\n      for (var i = 0; i < _this.state.dataSource.length; i++) {\n        var row = _this.state.dataSource[i];\n\n        if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    _this._renderLeftButton = function () {\n      if (_this.props.renderLeftButton) {\n        return _this.props.renderLeftButton();\n      }\n    };\n\n    _this._renderRightButton = function () {\n      if (_this.props.renderRightButton) {\n        return _this.props.renderRightButton();\n      }\n    };\n\n    _this._getFlatList = function () {\n      var keyGenerator = function keyGenerator() {\n        return Math.random().toString(36).substr(2, 10);\n      };\n\n      if ((_this.state.text !== '' || _this.props.predefinedPlaces.length || _this.props.currentLocation === true) && _this.state.listViewDisplayed === true) {\n        return _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({\n          scrollEnabled: !_this.props.disableScroll,\n          style: [_this.props.suppressDefaultStyles ? {} : defaultStyles.listView, _this.props.styles.listView],\n          data: _this.state.dataSource,\n          keyExtractor: keyGenerator,\n          extraData: [_this.state.dataSource, _this.props],\n          ItemSeparatorComponent: _this._renderSeparator,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _this._renderRow(item);\n          },\n          ListHeaderComponent: _this.props.renderHeaderComponent && _this.props.renderHeaderComponent(_this.state.text),\n          ListFooterComponent: _this._renderPoweredLogo\n        }, _this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return null;\n    };\n\n    _this.state = _this.getInitialState.call((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(GooglePlacesAutocomplete, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this._request = this.props.debounce ? (0, _lodash.default)(this._request, this.props.debounce) : this._request;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._handleChangeText(this.state.text);\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var listViewDisplayed = true;\n\n      if (nextProps.listViewDisplayed !== 'auto') {\n        listViewDisplayed = nextProps.listViewDisplayed;\n      }\n\n      if (typeof nextProps.text !== \"undefined\" && this.state.text !== nextProps.text) {\n        this.setState({\n          listViewDisplayed: listViewDisplayed\n        }, this._handleChangeText(nextProps.text));\n      } else {\n        this.setState({\n          listViewDisplayed: listViewDisplayed\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._abortRequests();\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"clearText\",\n    value: function clearText() {\n      this.setState({\n        text: \"\"\n      });\n    }\n  }, {\n    key: \"_getRowLoader\",\n    value: function _getRowLoader() {\n      return _react.default.createElement(_reactNative.ActivityIndicator, {\n        animating: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$textInput = this.props.textInputProps,\n          onFocus = _this$props$textInput.onFocus,\n          clearButtonMode = _this$props$textInput.clearButtonMode,\n          InputComp = _this$props$textInput.InputComp,\n          userProps = (0, _objectWithoutProperties2.default)(_this$props$textInput, [\"onFocus\", \"clearButtonMode\", \"InputComp\"]);\n      var TextInputComp = !!InputComp ? InputComp : _reactNative.TextInput;\n      return _react.default.createElement(_reactNative.View, {\n        style: [this.props.suppressDefaultStyles ? {} : defaultStyles.container, this.props.styles.container],\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 7\n        }\n      }, !this.props.textInputHide && _react.default.createElement(_reactNative.View, {\n        style: [this.props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, this.props.styles.textInputContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }\n      }, this._renderLeftButton(), _react.default.createElement(TextInputComp, (0, _extends2.default)({\n        ref: \"textInput\",\n        editable: this.props.editable,\n        returnKeyType: this.props.returnKeyType,\n        keyboardAppearance: this.props.keyboardAppearance,\n        autoFocus: this.props.autoFocus,\n        style: [this.props.suppressDefaultStyles ? {} : defaultStyles.textInput, this.props.styles.textInput],\n        value: this.state.text,\n        placeholder: this.props.placeholder,\n        onSubmitEditing: this.props.onSubmitEditing,\n        placeholderTextColor: this.props.placeholderTextColor,\n        onFocus: onFocus ? function () {\n          _this2._onFocus();\n\n          onFocus();\n        } : this._onFocus,\n        onBlur: this._onBlur,\n        underlineColorAndroid: this.props.underlineColorAndroid,\n        clearButtonMode: clearButtonMode ? clearButtonMode : \"while-editing\"\n      }, userProps, {\n        onChangeText: this._handleChangeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }\n      })), this._renderRightButton()), this._getFlatList(), this.props.children);\n    }\n  }]);\n  return GooglePlacesAutocomplete;\n}(_react.Component);\n\nexports.default = GooglePlacesAutocomplete;\nGooglePlacesAutocomplete.propTypes = {\n  placeholder: _propTypes.default.string,\n  placeholderTextColor: _propTypes.default.string,\n  underlineColorAndroid: _propTypes.default.string,\n  returnKeyType: _propTypes.default.string,\n  keyboardAppearance: _propTypes.default.oneOf(['default', 'light', 'dark']),\n  onPress: _propTypes.default.func,\n  onNotFound: _propTypes.default.func,\n  onFail: _propTypes.default.func,\n  minLength: _propTypes.default.number,\n  fetchDetails: _propTypes.default.bool,\n  autoFocus: _propTypes.default.bool,\n  autoFillOnNotFound: _propTypes.default.bool,\n  getDefaultValue: _propTypes.default.func,\n  timeout: _propTypes.default.number,\n  onTimeout: _propTypes.default.func,\n  query: _propTypes.default.object,\n  GoogleReverseGeocodingQuery: _propTypes.default.object,\n  GooglePlacesSearchQuery: _propTypes.default.object,\n  GooglePlacesDetailsQuery: _propTypes.default.object,\n  styles: _propTypes.default.object,\n  textInputProps: _propTypes.default.object,\n  enablePoweredByContainer: _propTypes.default.bool,\n  predefinedPlaces: _propTypes.default.array,\n  currentLocation: _propTypes.default.bool,\n  currentLocationLabel: _propTypes.default.string,\n  nearbyPlacesAPI: _propTypes.default.string,\n  enableHighAccuracyLocation: _propTypes.default.bool,\n  filterReverseGeocodingByTypes: _propTypes.default.array,\n  predefinedPlacesAlwaysVisible: _propTypes.default.bool,\n  enableEmptySections: _propTypes.default.bool,\n  renderDescription: _propTypes.default.func,\n  renderRow: _propTypes.default.func,\n  renderLeftButton: _propTypes.default.func,\n  renderRightButton: _propTypes.default.func,\n  listUnderlayColor: _propTypes.default.string,\n  debounce: _propTypes.default.number,\n  isRowScrollable: _propTypes.default.bool,\n  text: _propTypes.default.string,\n  textInputHide: _propTypes.default.bool,\n  suppressDefaultStyles: _propTypes.default.bool,\n  numberOfLines: _propTypes.default.number,\n  onSubmitEditing: _propTypes.default.func,\n  editable: _propTypes.default.bool\n};\nGooglePlacesAutocomplete.defaultProps = {\n  placeholder: 'Search',\n  placeholderTextColor: '#A8A8A8',\n  isRowScrollable: true,\n  underlineColorAndroid: 'transparent',\n  returnKeyType: 'default',\n  keyboardAppearance: 'default',\n  onPress: function onPress() {},\n  onNotFound: function onNotFound() {},\n  onFail: function onFail() {},\n  minLength: 0,\n  fetchDetails: false,\n  autoFocus: false,\n  autoFillOnNotFound: false,\n  keyboardShouldPersistTaps: 'always',\n  getDefaultValue: function getDefaultValue() {\n    return '';\n  },\n  timeout: 20000,\n  onTimeout: function onTimeout() {\n    return console.warn('google places autocomplete: request timeout');\n  },\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode'\n  },\n  GoogleReverseGeocodingQuery: {},\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  styles: {},\n  textInputProps: {},\n  enablePoweredByContainer: true,\n  predefinedPlaces: [],\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  enableHighAccuracyLocation: true,\n  filterReverseGeocodingByTypes: [],\n  predefinedPlacesAlwaysVisible: false,\n  enableEmptySections: true,\n  listViewDisplayed: 'auto',\n  debounce: 0,\n  textInputHide: false,\n  suppressDefaultStyles: false,\n  numberOfLines: 1,\n  onSubmitEditing: function onSubmitEditing() {},\n  editable: true\n};\n\nvar create = function create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _react.default.createClass({\n    render: function render() {\n      return _react.default.createElement(GooglePlacesAutocomplete, (0, _extends2.default)({\n        ref: \"GooglePlacesAutocomplete\"\n      }, options, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 9\n        }\n      }));\n    }\n  });\n};\n\nmodule.exports = {\n  GooglePlacesAutocomplete: GooglePlacesAutocomplete,\n  create: create\n};","map":{"version":3,"sources":["D:/WS/reactws/takearide/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js"],"names":["navigator","geolocation","Geolocation","WINDOW","Dimensions","get","defaultStyles","container","flex","textInputContainer","backgroundColor","height","borderTopColor","borderBottomColor","borderTopWidth","PixelRatio","borderBottomWidth","flexDirection","textInput","borderRadius","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginLeft","marginRight","fontSize","poweredContainer","justifyContent","alignItems","powered","listView","row","padding","separator","StyleSheet","hairlineWidth","description","loader","androidLoader","GooglePlacesAutocomplete","props","_isMounted","_results","_requests","getInitialState","text","getDefaultValue","dataSource","buildRowsFromResults","listViewDisplayed","setAddressText","address","setState","getAddressText","state","results","res","length","predefinedPlacesAlwaysVisible","predefinedPlaces","currentLocation","unshift","currentLocationLabel","isCurrentLocation","map","place","isPredefinedPlace","_abortRequests","i","abort","triggerFocus","refs","focus","triggerBlur","blur","getCurrentLocation","options","enableHighAccuracy","timeout","maximumAge","enableHighAccuracyLocation","Platform","OS","getCurrentPosition","position","nearbyPlacesAPI","geometry","location","lat","coords","latitude","lng","longitude","_disableRowLoaders","onPress","_requestNearby","error","alert","message","_onPress","rowData","fetchDetails","isLoading","Keyboard","dismiss","_enableRowLoader","request","XMLHttpRequest","push","ontimeout","onTimeout","onreadystatechange","readyState","status","responseJSON","JSON","parse","responseText","details","result","_onBlur","_renderDescription","autoFillOnNotFound","onNotFound","console","warn","onFail","open","Qs","stringify","key","query","placeid","place_id","language","GooglePlacesDetailsQuery","origin","setRequestHeader","send","predefinedPlace","_getPredefinedPlace","rows","_filterResultsByTypes","unfilteredResults","types","found","j","indexOf","undefined","filterReverseGeocodingByTypes","error_message","url","latlng","GoogleReverseGeocodingQuery","GooglePlacesSearchQuery","_request","minLength","predictions","preProcess","encodeURIComponent","_onChangeText","autoFocus","_handleChangeText","onChangeText","textInputProps","_renderRowData","renderRow","suppressDefaultStyles","styles","predefinedPlacesDescription","numberOfLines","renderDescription","formatted_address","name","_renderLoader","_getRowLoader","_renderRow","sectionID","rowID","isRowScrollable","keyboardShouldPersistTaps","width","listUnderlayColor","specialItemRow","_renderSeparator","_onFocus","_renderPoweredLogo","_shouldShowPoweredLogo","require","enablePoweredByContainer","hasOwnProperty","_renderLeftButton","renderLeftButton","_renderRightButton","renderRightButton","_getFlatList","keyGenerator","Math","random","toString","substr","disableScroll","item","renderHeaderComponent","call","debounce","nextProps","onFocus","clearButtonMode","InputComp","userProps","TextInputComp","TextInput","textInputHide","editable","returnKeyType","keyboardAppearance","placeholder","onSubmitEditing","placeholderTextColor","underlineColorAndroid","children","Component","propTypes","PropTypes","string","oneOf","func","number","bool","object","array","enableEmptySections","defaultProps","rankby","type","create","React","createClass","render","module","exports"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Geolocation from '@react-native-community/geolocation';\nconst navigator ={\n\tgeolocation:Geolocation\n}\nimport {\n  TextInput,\n  View,\n  FlatList,\n  ScrollView,\n  Image,\n  Text,\n  StyleSheet,\n  Dimensions,\n  TouchableHighlight,\n  Platform,\n  ActivityIndicator,\n  PixelRatio,\n  Keyboard\n} from 'react-native';\nimport Qs from 'qs';\nimport debounce from 'lodash.debounce';\n\nconst WINDOW = Dimensions.get('window');\n\nconst defaultStyles = {\n  container: {\n    flex: 1,\n  },\n  textInputContainer: {\n    backgroundColor: '#C9C9CE',\n    height: 44,\n    borderTopColor: '#7e7e7e',\n    borderBottomColor: '#b5b5b5',\n    borderTopWidth: 1 / PixelRatio.get(),\n    borderBottomWidth: 1 / PixelRatio.get(),\n    flexDirection: 'row',\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 28,\n    borderRadius: 5,\n    paddingTop: 4.5,\n    paddingBottom: 4.5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginTop: 7.5,\n    marginLeft: 8,\n    marginRight: 8,\n    fontSize: 15,\n    flex: 1\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF',\n  },\n  powered: {},\n  listView: {},\n  row: {\n    padding: 13,\n    height: 44,\n    flexDirection: 'row',\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc',\n  },\n  description: {},\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20,\n  },\n  androidLoader: {\n    marginRight: -15,\n  },\n};\n\nexport default class GooglePlacesAutocomplete extends Component {\n  _isMounted = false;\n  _results = [];\n  _requests = [];\n\n  constructor (props) {\n    super(props);\n    this.state = this.getInitialState.call(this);\n  }\n\n  getInitialState = () => ({\n    text: this.props.getDefaultValue(),\n    dataSource: this.buildRowsFromResults([]),\n    listViewDisplayed: this.props.listViewDisplayed === 'auto' ? false : this.props.listViewDisplayed,\n  })\n\n  setAddressText = address => this.setState({ text: address })\n\n  getAddressText = () => this.state.text\n\n  buildRowsFromResults = (results) => {\n    let res = [];\n\n    if (results.length === 0 || this.props.predefinedPlacesAlwaysVisible === true) {\n      res = [...this.props.predefinedPlaces];\n\n      if (this.props.currentLocation === true) {\n        res.unshift({\n          description: this.props.currentLocationLabel,\n          isCurrentLocation: true,\n        });\n      }\n    }\n\n    res = res.map(place => ({\n      ...place,\n      isPredefinedPlace: true\n    }));\n\n    return [...res, ...results];\n  }\n\n  UNSAFE_componentWillMount() {\n    this._request = this.props.debounce\n      ? debounce(this._request, this.props.debounce)\n      : this._request;\n  }\n\n  componentDidMount() {\n    // This will load the default value's search results after the view has\n    // been rendered\n    this._handleChangeText(this.state.text);\n    this._isMounted = true;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    let listViewDisplayed = true;\n\n    if (nextProps.listViewDisplayed !== 'auto') {\n      listViewDisplayed = nextProps.listViewDisplayed;\n    }\n\n    if (typeof (nextProps.text) !== \"undefined\" && this.state.text !== nextProps.text) {\n      this.setState({\n          listViewDisplayed: listViewDisplayed\n        },\n        this._handleChangeText(nextProps.text));\n    } else {\n      this.setState({\n        listViewDisplayed: listViewDisplayed\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._abortRequests();\n    this._isMounted = false;\n  }\n\n  _abortRequests = () => {\n    this._requests.map(i => i.abort());\n    this._requests = [];\n  }\n\n  /**\n   * This method is exposed to parent components to focus on textInput manually.\n   * @public\n   */\n  triggerFocus = () => {\n    if (this.refs.textInput) this.refs.textInput.focus();\n  }\n\n  /**\n   * This method is exposed to parent components to blur textInput manually.\n   * @public\n   */\n  triggerBlur = () => {\n    if (this.refs.textInput) this.refs.textInput.blur();\n  }\n\n  getCurrentLocation = () => {\n    let options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000\n    };\n\n    if (this.props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000\n      }\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        if (this.props.nearbyPlacesAPI === 'None') {\n          let currentLocation = {\n            description: this.props.currentLocationLabel,\n            geometry: {\n              location: {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              }\n            }\n          };\n\n          this._disableRowLoaders();\n          this.props.onPress(currentLocation, currentLocation);\n        } else {\n          this._requestNearby(position.coords.latitude, position.coords.longitude);\n        }\n      },\n      (error) => {\n        this._disableRowLoaders();\n        alert(error.message);\n      },\n      options\n    );\n  }\n\n  _onPress = (rowData) => {\n    if (rowData.isPredefinedPlace !== true && this.props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        // already requesting\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      this._abortRequests();\n\n      // display loader\n      this._enableRowLoader(rowData);\n\n      // fetch details\n      const request = new XMLHttpRequest();\n      this._requests.push(request);\n      request.timeout = this.props.timeout;\n      request.ontimeout = this.props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            if (this._isMounted === true) {\n              const details = responseJSON.result;\n              this._disableRowLoaders();\n              this._onBlur();\n\n              this.setState({\n                text: this._renderDescription( rowData ),\n              });\n\n              delete rowData.isLoading;\n              this.props.onPress(rowData, details);\n            }\n          } else {\n            this._disableRowLoaders();\n\n            if (this.props.autoFillOnNotFound) {\n              this.setState({\n                text: this._renderDescription(rowData)\n              });\n              delete rowData.isLoading;\n            }\n\n            if (!this.props.onNotFound) {\n              console.warn('google places autocomplete: ' + responseJSON.status);\n            } else {\n              this.props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          this._disableRowLoaders();\n\n          if (!this.props.onFail) {\n            console.warn(\n              'google places autocomplete: request could not be completed or has been aborted'\n            );\n          } else {\n            this.props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      request.open('GET', 'https://maps.googleapis.com/maps/api/place/details/json?' + Qs.stringify({\n        key: this.props.query.key,\n        placeid: rowData.place_id,\n        language: this.props.query.language,\n        ...this.props.GooglePlacesDetailsQuery,\n      }));\n\n      if (this.props.query.origin !== null) {\n        request.setRequestHeader('Referer', this.props.query.origin)\n      }\n\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      // display loader\n      this._enableRowLoader(rowData);\n\n      this.setState({\n        text: this._renderDescription( rowData ),\n      });\n\n      this.triggerBlur(); // hide keyboard but not the results\n      delete rowData.isLoading;\n      this.getCurrentLocation();\n\n    } else {\n      this.setState({\n        text: this._renderDescription( rowData ),\n      });\n\n      this._onBlur();\n      delete rowData.isLoading;\n      let predefinedPlace = this._getPredefinedPlace(rowData);\n\n      // sending predefinedPlace as details for predefined places\n      this.props.onPress(predefinedPlace, predefinedPlace);\n    }\n  }\n\n  _enableRowLoader = (rowData) => {\n    let rows = this.buildRowsFromResults(this._results);\n    for (let i = 0; i < rows.length; i++) {\n      if ((rows[i].place_id === rowData.place_id) || (rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true)) {\n        rows[i].isLoading = true;\n        this.setState({\n          dataSource: rows,\n        });\n        break;\n      }\n    }\n  }\n\n  _disableRowLoaders = () => {\n    if (this._isMounted === true) {\n      for (let i = 0; i < this._results.length; i++) {\n        if (this._results[i].isLoading === true) {\n          this._results[i].isLoading = false;\n        }\n      }\n\n      this.setState({\n        dataSource: this.buildRowsFromResults(this._results),\n      });\n    }\n  }\n\n  _getPredefinedPlace = (rowData) => {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (let i = 0; i < this.props.predefinedPlaces.length; i++) {\n      if (this.props.predefinedPlaces[i].description === rowData.description) {\n        return this.props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  }\n\n  _filterResultsByTypes = (unfilteredResults, types) => {\n    if (types.length === 0) return unfilteredResults;\n\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      let found = false;\n\n      for (let j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  }\n\n  _requestNearby = (latitude, longitude) => {\n    this._abortRequests();\n\n    if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n      const request = new XMLHttpRequest();\n      this._requests.push(request);\n      request.timeout = this.props.timeout;\n      request.ontimeout = this.props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          this._disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            if (this._isMounted === true) {\n              var results = [];\n              if (this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n                results = this._filterResultsByTypes(responseJSON.results, this.props.filterReverseGeocodingByTypes);\n              } else {\n                results = responseJSON.results;\n              }\n\n              this.setState({\n                dataSource: this.buildRowsFromResults(results),\n              });\n            }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n              if(!this.props.onFail)\n                console.warn('google places autocomplete: ' + responseJSON.error_message);\n              else{\n                this.props.onFail(responseJSON.error_message)\n              }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      let url = '';\n      if (this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        // your key must be allowed to use Google Maps Geocoding API\n        url = 'https://maps.googleapis.com/maps/api/geocode/json?' + Qs.stringify({\n          latlng: latitude + ',' + longitude,\n          key: this.props.query.key,\n          ...this.props.GoogleReverseGeocodingQuery,\n        });\n      } else {\n        url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?' + Qs.stringify({\n          location: latitude + ',' + longitude,\n          key: this.props.query.key,\n          ...this.props.GooglePlacesSearchQuery,\n        });\n      }\n\n      request.open('GET', url);\n      if (this.props.query.origin !== null) {\n         request.setRequestHeader('Referer', this.props.query.origin)\n      }\n\n      request.send();\n    } else {\n      this._results = [];\n      this.setState({\n        dataSource: this.buildRowsFromResults([]),\n      });\n    }\n  }\n\n  _request = (text) => {\n    this._abortRequests();\n    if (text.length >= this.props.minLength) {\n      const request = new XMLHttpRequest();\n      this._requests.push(request);\n      request.timeout = this.props.timeout;\n      request.ontimeout = this.props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            if (this._isMounted === true) {\n              const results = this.props.nearbyPlacesAPI === 'GoogleReverseGeocoding'\n                ? this._filterResultsByTypes(responseJSON.predictions, this.props.filterReverseGeocodingByTypes)\n                : responseJSON.predictions;\n\n              this._results = results;\n              this.setState({\n                dataSource: this.buildRowsFromResults(results),\n              });\n            }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if(!this.props.onFail)\n              console.warn('google places autocomplete: ' + responseJSON.error_message);\n            else{\n              this.props.onFail(responseJSON.error_message)\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n      if (this.props.preProcess) {\n        text = this.props.preProcess(text);\n      }\n      request.open('GET', 'https://maps.googleapis.com/maps/api/place/autocomplete/json?&input=' + encodeURIComponent(text) + '&' + Qs.stringify(this.props.query));\n      if (this.props.query.origin !== null) {\n         request.setRequestHeader('Referer', this.props.query.origin)\n      }\n\n      request.send();\n    } else {\n      this._results = [];\n      this.setState({\n        dataSource: this.buildRowsFromResults([]),\n      });\n    }\n  }\n  \n  clearText(){\n    this.setState({\n      text: \"\"\n    })\n  }\n\n  _onChangeText = (text) => {\n    this._request(text);\n\n    this.setState({\n      text: text,\n      listViewDisplayed: this._isMounted || this.props.autoFocus,\n    });\n  }\n\n  _handleChangeText = (text) => {\n    this._onChangeText(text);\n\n    const onChangeText = this.props\n      && this.props.textInputProps\n      && this.props.textInputProps.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  _getRowLoader() {\n    return (\n      <ActivityIndicator\n        animating={true}\n        size=\"small\"\n      />\n    );\n  }\n\n  _renderRowData = (rowData) => {\n    if (this.props.renderRow) {\n      return this.props.renderRow(rowData);\n    }\n\n    return (\n      <Text style={[this.props.suppressDefaultStyles ? {} : defaultStyles.description, this.props.styles.description, rowData.isPredefinedPlace ? this.props.styles.predefinedPlacesDescription : {}]}\n        numberOfLines={this.props.numberOfLines}\n      >\n        {this._renderDescription(rowData)}\n      </Text>\n    );\n  }\n\n  _renderDescription = (rowData) => {\n    if (this.props.renderDescription) {\n      return this.props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  }\n\n  _renderLoader = (rowData) => {\n    if (rowData.isLoading === true) {\n      return (\n        <View style={[this.props.suppressDefaultStyles ? {} : defaultStyles.loader, this.props.styles.loader]}>\n          {this._getRowLoader()}\n        </View>\n      );\n    }\n\n    return null;\n  }\n\n  _renderRow = (rowData = {}, sectionID, rowID) => {\n    return (\n      <ScrollView\n        style={{ flex: 1 }}\n        scrollEnabled={this.props.isRowScrollable}\n        keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}>\n        <TouchableHighlight\n          style={{ width: WINDOW.width }}\n          onPress={() => this._onPress(rowData)}\n          underlayColor={this.props.listUnderlayColor || \"#c8c7cc\"}\n        >\n          <View style={[this.props.suppressDefaultStyles ? {} : defaultStyles.row, this.props.styles.row, rowData.isPredefinedPlace ? this.props.styles.specialItemRow : {}]}>\n            {this._renderLoader(rowData)}\n            {this._renderRowData(rowData)}\n          </View>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  }\n\n  _renderSeparator = (sectionID, rowID) => {\n    if (rowID == this.state.dataSource.length - 1) {\n      return null\n    }\n\n    return (\n      <View\n        key={ `${sectionID}-${rowID}` }\n        style={[this.props.suppressDefaultStyles ? {} : defaultStyles.separator, this.props.styles.separator]} />\n    );\n  }\n\n  _onBlur = () => {\n    this.triggerBlur();\n\n    this.setState({\n      listViewDisplayed: false\n    });\n  }\n\n  _onFocus = () => this.setState({ listViewDisplayed: true })\n\n  _renderPoweredLogo = () => {\n    if (!this._shouldShowPoweredLogo()) {\n      return null\n    }\n\n    return (\n      <View\n        style={[this.props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, this.props.styles.poweredContainer]}\n      >\n        <Image\n          style={[this.props.suppressDefaultStyles ? {} : defaultStyles.powered, this.props.styles.powered]}\n          resizeMode='contain'\n          source={require('./images/powered_by_google_on_white.png')}\n        />\n      </View>\n    );\n  }\n\n  _shouldShowPoweredLogo = () => {\n    if (!this.props.enablePoweredByContainer || this.state.dataSource.length == 0) {\n      return false\n    }\n\n    for (let i = 0; i < this.state.dataSource.length; i++) {\n      let row = this.state.dataSource[i];\n\n      if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  _renderLeftButton = () => {\n    if (this.props.renderLeftButton) {\n      return this.props.renderLeftButton()\n    }\n  }\n\n  _renderRightButton = () => {\n    if (this.props.renderRightButton) {\n      return this.props.renderRightButton()\n    }\n  }\n\n  _getFlatList = () => {\n    const keyGenerator = () => (\n      Math.random().toString(36).substr(2, 10)\n    );\n\n    if ((this.state.text !== '' || this.props.predefinedPlaces.length || this.props.currentLocation === true) && this.state.listViewDisplayed === true) {\n      return (\n        <FlatList\n          scrollEnabled={!this.props.disableScroll}\n          style={[this.props.suppressDefaultStyles ? {} : defaultStyles.listView, this.props.styles.listView]}\n          data={this.state.dataSource}\n          keyExtractor={keyGenerator}\n          extraData={[this.state.dataSource, this.props]}\n          ItemSeparatorComponent={this._renderSeparator}\n          renderItem={({ item }) => this._renderRow(item)}\n          ListHeaderComponent={this.props.renderHeaderComponent && this.props.renderHeaderComponent(this.state.text)}\n          ListFooterComponent={this._renderPoweredLogo}\n          {...this.props}\n        />\n      );\n    }\n\n    return null;\n  }\n  render() {\n    let {\n      onFocus,\n      clearButtonMode,\n      InputComp,\n      ...userProps\n    } = this.props.textInputProps;\n    const TextInputComp = !!InputComp ? InputComp : TextInput;\n    return (\n      <View\n        style={[this.props.suppressDefaultStyles ? {} : defaultStyles.container, this.props.styles.container]}\n        pointerEvents=\"box-none\"\n      >\n        {!this.props.textInputHide &&\n          <View\n            style={[this.props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, this.props.styles.textInputContainer]}\n          >\n            {this._renderLeftButton()}\n            <TextInputComp\n              ref=\"textInput\"\n              editable={this.props.editable}\n              returnKeyType={this.props.returnKeyType}\n              keyboardAppearance={this.props.keyboardAppearance}\n              autoFocus={this.props.autoFocus}\n              style={[this.props.suppressDefaultStyles ? {} : defaultStyles.textInput, this.props.styles.textInput]}\n              value={this.state.text}\n              placeholder={this.props.placeholder}\n              onSubmitEditing={this.props.onSubmitEditing}\n              placeholderTextColor={this.props.placeholderTextColor}\n              onFocus={onFocus ? () => {this._onFocus(); onFocus()} : this._onFocus}\n              onBlur={this._onBlur}\n              underlineColorAndroid={this.props.underlineColorAndroid}\n              clearButtonMode={\n                clearButtonMode ? clearButtonMode : \"while-editing\"\n              }\n              { ...userProps }\n              onChangeText={this._handleChangeText}\n            />\n            {this._renderRightButton()}\n          </View>\n        }\n        {this._getFlatList()}\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nGooglePlacesAutocomplete.propTypes = {\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  underlineColorAndroid: PropTypes.string,\n  returnKeyType: PropTypes.string,\n  keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),\n  onPress: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onFail: PropTypes.func,\n  minLength: PropTypes.number,\n  fetchDetails: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  autoFillOnNotFound: PropTypes.bool,\n  getDefaultValue: PropTypes.func,\n  timeout: PropTypes.number,\n  onTimeout: PropTypes.func,\n  query: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  styles: PropTypes.object,\n  textInputProps: PropTypes.object,\n  enablePoweredByContainer: PropTypes.bool,\n  predefinedPlaces: PropTypes.array,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  nearbyPlacesAPI: PropTypes.string,\n  enableHighAccuracyLocation: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  enableEmptySections: PropTypes.bool,\n  renderDescription: PropTypes.func,\n  renderRow: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  debounce: PropTypes.number,\n  isRowScrollable: PropTypes.bool,\n  text: PropTypes.string,\n  textInputHide: PropTypes.bool,\n  suppressDefaultStyles: PropTypes.bool,\n  numberOfLines: PropTypes.number,\n  onSubmitEditing: PropTypes.func,\n  editable: PropTypes.bool\n}\nGooglePlacesAutocomplete.defaultProps = {\n  placeholder: 'Search',\n  placeholderTextColor: '#A8A8A8',\n  isRowScrollable: true,\n  underlineColorAndroid: 'transparent',\n  returnKeyType: 'default',\n  keyboardAppearance: 'default',\n  onPress: () => {},\n  onNotFound: () => {},\n  onFail: () => {},\n  minLength: 0,\n  fetchDetails: false,\n  autoFocus: false,\n  autoFillOnNotFound: false,\n  keyboardShouldPersistTaps: 'always',\n  getDefaultValue: () => '',\n  timeout: 20000,\n  onTimeout: () => console.warn('google places autocomplete: request timeout'),\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode',\n  },\n  GoogleReverseGeocodingQuery: {},\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  styles: {},\n  textInputProps: {},\n  enablePoweredByContainer: true,\n  predefinedPlaces: [],\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  enableHighAccuracyLocation: true,\n  filterReverseGeocodingByTypes: [],\n  predefinedPlacesAlwaysVisible: false,\n  enableEmptySections: true,\n  listViewDisplayed: 'auto',\n  debounce: 0,\n  textInputHide: false,\n  suppressDefaultStyles: false,\n  numberOfLines: 1,\n  onSubmitEditing: () => {},\n  editable: true\n}\n\n// this function is still present in the library to be retrocompatible with version < 1.1.0\nconst create = function create(options = {}) {\n  return React.createClass({\n    render() {\n      return (\n        <GooglePlacesAutocomplete\n          ref=\"GooglePlacesAutocomplete\"\n          {...options}\n        />\n      );\n    },\n  });\n};\n\nmodule.exports = {\n  GooglePlacesAutocomplete,\n  create\n};\n"]},"metadata":{},"sourceType":"script"}